<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="1174"><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (4 samples, 0.34%)</title><rect x="0.0000%" y="869" width="0.3407%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="879.50"></text></g><g><title>[[heap]] (5 samples, 0.43%)</title><rect x="0.0000%" y="885" width="0.4259%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="895.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1 samples, 0.09%)</title><rect x="0.3407%" y="869" width="0.0852%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="1"/><text x="0.5907%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (5 samples, 0.43%)</title><rect x="0.4259%" y="869" width="0.4259%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="5"/><text x="0.6759%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (5 samples, 0.43%)</title><rect x="0.4259%" y="853" width="0.4259%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="5"/><text x="0.6759%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.43%)</title><rect x="0.4259%" y="837" width="0.4259%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="5"/><text x="0.6759%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.43%)</title><rect x="0.4259%" y="821" width="0.4259%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="5"/><text x="0.6759%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.26%)</title><rect x="0.8518%" y="869" width="0.2555%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="3"/><text x="1.1018%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="1.0221%" y="853" width="0.0852%" height="15" fill="rgb(218,30,26)" fg:x="12" fg:w="1"/><text x="1.2721%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="1.0221%" y="837" width="0.0852%" height="15" fill="rgb(220,122,19)" fg:x="12" fg:w="1"/><text x="1.2721%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.09%)</title><rect x="1.0221%" y="821" width="0.0852%" height="15" fill="rgb(250,228,42)" fg:x="12" fg:w="1"/><text x="1.2721%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.19%)</title><rect x="1.1073%" y="869" width="1.1925%" height="15" fill="rgb(240,193,28)" fg:x="13" fg:w="14"/><text x="1.3573%" y="879.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="2.2998%" y="869" width="0.1704%" height="15" fill="rgb(216,20,37)" fg:x="27" fg:w="2"/><text x="2.5498%" y="879.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="2.4702%" y="869" width="0.0852%" height="15" fill="rgb(206,188,39)" fg:x="29" fg:w="1"/><text x="2.7202%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.51%)</title><rect x="2.5554%" y="869" width="0.5111%" height="15" fill="rgb(217,207,13)" fg:x="30" fg:w="6"/><text x="2.8054%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.26%)</title><rect x="2.8109%" y="853" width="0.2555%" height="15" fill="rgb(231,73,38)" fg:x="33" fg:w="3"/><text x="3.0609%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.26%)</title><rect x="2.8109%" y="837" width="0.2555%" height="15" fill="rgb(225,20,46)" fg:x="33" fg:w="3"/><text x="3.0609%" y="847.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.26%)</title><rect x="2.8109%" y="821" width="0.2555%" height="15" fill="rgb(210,31,41)" fg:x="33" fg:w="3"/><text x="3.0609%" y="831.50"></text></g><g><title>[anon] (32 samples, 2.73%)</title><rect x="0.4259%" y="885" width="2.7257%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="32"/><text x="0.6759%" y="895.50">[a..</text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 0.09%)</title><rect x="3.0664%" y="869" width="0.0852%" height="15" fill="rgb(226,26,5)" fg:x="36" fg:w="1"/><text x="3.3164%" y="879.50"></text></g><g><title>lab4::checksum::Checksum::update (1 samples, 0.09%)</title><rect x="3.1516%" y="869" width="0.0852%" height="15" fill="rgb(249,33,26)" fg:x="37" fg:w="1"/><text x="3.4016%" y="879.50"></text></g><g><title>hex::decode (1 samples, 0.09%)</title><rect x="3.1516%" y="853" width="0.0852%" height="15" fill="rgb(235,183,28)" fg:x="37" fg:w="1"/><text x="3.4016%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (1 samples, 0.09%)</title><rect x="3.1516%" y="837" width="0.0852%" height="15" fill="rgb(221,5,38)" fg:x="37" fg:w="1"/><text x="3.4016%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="3.1516%" y="821" width="0.0852%" height="15" fill="rgb(247,18,42)" fg:x="37" fg:w="1"/><text x="3.4016%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="3.1516%" y="805" width="0.0852%" height="15" fill="rgb(241,131,45)" fg:x="37" fg:w="1"/><text x="3.4016%" y="815.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.09%)</title><rect x="3.1516%" y="789" width="0.0852%" height="15" fill="rgb(249,31,29)" fg:x="37" fg:w="1"/><text x="3.4016%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.09%)</title><rect x="3.1516%" y="773" width="0.0852%" height="15" fill="rgb(225,111,53)" fg:x="37" fg:w="1"/><text x="3.4016%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="3.1516%" y="757" width="0.0852%" height="15" fill="rgb(238,160,17)" fg:x="37" fg:w="1"/><text x="3.4016%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="3.1516%" y="741" width="0.0852%" height="15" fill="rgb(214,148,48)" fg:x="37" fg:w="1"/><text x="3.4016%" y="751.50"></text></g><g><title>[lab4] (2 samples, 0.17%)</title><rect x="3.1516%" y="885" width="0.1704%" height="15" fill="rgb(232,36,49)" fg:x="37" fg:w="2"/><text x="3.4016%" y="895.50"></text></g><g><title>lab4::student::access_or_write (1 samples, 0.09%)</title><rect x="3.2368%" y="869" width="0.0852%" height="15" fill="rgb(209,103,24)" fg:x="38" fg:w="1"/><text x="3.4868%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="3.4923%" y="869" width="0.0852%" height="15" fill="rgb(229,88,8)" fg:x="41" fg:w="1"/><text x="3.7423%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.26%)</title><rect x="3.5775%" y="869" width="0.2555%" height="15" fill="rgb(213,181,19)" fg:x="42" fg:w="3"/><text x="3.8275%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="3.6627%" y="853" width="0.1704%" height="15" fill="rgb(254,191,54)" fg:x="43" fg:w="2"/><text x="3.9127%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="3.7479%" y="837" width="0.0852%" height="15" fill="rgb(241,83,37)" fg:x="44" fg:w="1"/><text x="3.9979%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.09%)</title><rect x="3.7479%" y="821" width="0.0852%" height="15" fill="rgb(233,36,39)" fg:x="44" fg:w="1"/><text x="3.9979%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="3.8330%" y="869" width="0.0852%" height="15" fill="rgb(226,3,54)" fg:x="45" fg:w="1"/><text x="4.0830%" y="879.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="3.9182%" y="869" width="0.0852%" height="15" fill="rgb(245,192,40)" fg:x="46" fg:w="1"/><text x="4.1682%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="4.0034%" y="869" width="0.2555%" height="15" fill="rgb(238,167,29)" fg:x="47" fg:w="3"/><text x="4.2534%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="4.0034%" y="853" width="0.2555%" height="15" fill="rgb(232,182,51)" fg:x="47" fg:w="3"/><text x="4.2534%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="4.0034%" y="837" width="0.2555%" height="15" fill="rgb(231,60,39)" fg:x="47" fg:w="3"/><text x="4.2534%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="4.0034%" y="821" width="0.2555%" height="15" fill="rgb(208,69,12)" fg:x="47" fg:w="3"/><text x="4.2534%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="4.0034%" y="805" width="0.2555%" height="15" fill="rgb(235,93,37)" fg:x="47" fg:w="3"/><text x="4.2534%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="4.0034%" y="789" width="0.2555%" height="15" fill="rgb(213,116,39)" fg:x="47" fg:w="3"/><text x="4.2534%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="4.0034%" y="773" width="0.2555%" height="15" fill="rgb(222,207,29)" fg:x="47" fg:w="3"/><text x="4.2534%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="4.0034%" y="757" width="0.2555%" height="15" fill="rgb(206,96,30)" fg:x="47" fg:w="3"/><text x="4.2534%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="4.0034%" y="741" width="0.2555%" height="15" fill="rgb(218,138,4)" fg:x="47" fg:w="3"/><text x="4.2534%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="4.0034%" y="725" width="0.2555%" height="15" fill="rgb(250,191,14)" fg:x="47" fg:w="3"/><text x="4.2534%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="4.1738%" y="709" width="0.0852%" height="15" fill="rgb(239,60,40)" fg:x="49" fg:w="1"/><text x="4.4238%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="4.1738%" y="693" width="0.0852%" height="15" fill="rgb(206,27,48)" fg:x="49" fg:w="1"/><text x="4.4238%" y="703.50"></text></g><g><title>_int_malloc (2 samples, 0.17%)</title><rect x="4.2589%" y="869" width="0.1704%" height="15" fill="rgb(225,35,8)" fg:x="50" fg:w="2"/><text x="4.5089%" y="879.50"></text></g><g><title>_int_realloc (1 samples, 0.09%)</title><rect x="4.4293%" y="869" width="0.0852%" height="15" fill="rgb(250,213,24)" fg:x="52" fg:w="1"/><text x="4.6793%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.09%)</title><rect x="4.5145%" y="869" width="0.0852%" height="15" fill="rgb(247,123,22)" fg:x="53" fg:w="1"/><text x="4.7645%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="4.5145%" y="853" width="0.0852%" height="15" fill="rgb(231,138,38)" fg:x="53" fg:w="1"/><text x="4.7645%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.09%)</title><rect x="4.5145%" y="837" width="0.0852%" height="15" fill="rgb(231,145,46)" fg:x="53" fg:w="1"/><text x="4.7645%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.09%)</title><rect x="4.5145%" y="821" width="0.0852%" height="15" fill="rgb(251,118,11)" fg:x="53" fg:w="1"/><text x="4.7645%" y="831.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (7 samples, 0.60%)</title><rect x="4.5997%" y="869" width="0.5963%" height="15" fill="rgb(217,147,25)" fg:x="54" fg:w="7"/><text x="4.8497%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (7 samples, 0.60%)</title><rect x="5.1959%" y="869" width="0.5963%" height="15" fill="rgb(247,81,37)" fg:x="61" fg:w="7"/><text x="5.4459%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (3 samples, 0.26%)</title><rect x="5.7922%" y="869" width="0.2555%" height="15" fill="rgb(209,12,38)" fg:x="68" fg:w="3"/><text x="6.0422%" y="879.50"></text></g><g><title>lab4::student::Student::build_idea (1 samples, 0.09%)</title><rect x="6.0477%" y="869" width="0.0852%" height="15" fill="rgb(227,1,9)" fg:x="71" fg:w="1"/><text x="6.2977%" y="879.50"></text></g><g><title>[unknown] (34 samples, 2.90%)</title><rect x="3.3220%" y="885" width="2.8961%" height="15" fill="rgb(248,47,43)" fg:x="39" fg:w="34"/><text x="3.5720%" y="895.50">[u..</text></g><g><title>std::io::default_read_to_end (1 samples, 0.09%)</title><rect x="6.1329%" y="869" width="0.0852%" height="15" fill="rgb(221,10,30)" fg:x="72" fg:w="1"/><text x="6.3829%" y="879.50"></text></g><g><title>[unknown] (23 samples, 1.96%)</title><rect x="6.2181%" y="869" width="1.9591%" height="15" fill="rgb(210,229,1)" fg:x="73" fg:w="23"/><text x="6.4681%" y="879.50">[..</text></g><g><title>[unknown] (23 samples, 1.96%)</title><rect x="6.2181%" y="853" width="1.9591%" height="15" fill="rgb(222,148,37)" fg:x="73" fg:w="23"/><text x="6.4681%" y="863.50">[..</text></g><g><title>[unknown] (22 samples, 1.87%)</title><rect x="6.3032%" y="837" width="1.8739%" height="15" fill="rgb(234,67,33)" fg:x="74" fg:w="22"/><text x="6.5532%" y="847.50">[..</text></g><g><title>[unknown] (21 samples, 1.79%)</title><rect x="6.3884%" y="821" width="1.7888%" height="15" fill="rgb(247,98,35)" fg:x="75" fg:w="21"/><text x="6.6384%" y="831.50">[..</text></g><g><title>[unknown] (21 samples, 1.79%)</title><rect x="6.3884%" y="805" width="1.7888%" height="15" fill="rgb(247,138,52)" fg:x="75" fg:w="21"/><text x="6.6384%" y="815.50">[..</text></g><g><title>[unknown] (21 samples, 1.79%)</title><rect x="6.3884%" y="789" width="1.7888%" height="15" fill="rgb(213,79,30)" fg:x="75" fg:w="21"/><text x="6.6384%" y="799.50">[..</text></g><g><title>[unknown] (21 samples, 1.79%)</title><rect x="6.3884%" y="773" width="1.7888%" height="15" fill="rgb(246,177,23)" fg:x="75" fg:w="21"/><text x="6.6384%" y="783.50">[..</text></g><g><title>[unknown] (21 samples, 1.79%)</title><rect x="6.3884%" y="757" width="1.7888%" height="15" fill="rgb(230,62,27)" fg:x="75" fg:w="21"/><text x="6.6384%" y="767.50">[..</text></g><g><title>lab4::checksum::Checksum::update (1 samples, 0.09%)</title><rect x="8.1772%" y="645" width="0.0852%" height="15" fill="rgb(216,154,8)" fg:x="96" fg:w="1"/><text x="8.4272%" y="655.50"></text></g><g><title>hex::decode (1 samples, 0.09%)</title><rect x="8.1772%" y="629" width="0.0852%" height="15" fill="rgb(244,35,45)" fg:x="96" fg:w="1"/><text x="8.4272%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (1 samples, 0.09%)</title><rect x="8.1772%" y="613" width="0.0852%" height="15" fill="rgb(251,115,12)" fg:x="96" fg:w="1"/><text x="8.4272%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="8.1772%" y="597" width="0.0852%" height="15" fill="rgb(240,54,50)" fg:x="96" fg:w="1"/><text x="8.4272%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="8.1772%" y="581" width="0.0852%" height="15" fill="rgb(233,84,52)" fg:x="96" fg:w="1"/><text x="8.4272%" y="591.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.09%)</title><rect x="8.1772%" y="565" width="0.0852%" height="15" fill="rgb(207,117,47)" fg:x="96" fg:w="1"/><text x="8.4272%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.09%)</title><rect x="8.1772%" y="549" width="0.0852%" height="15" fill="rgb(249,43,39)" fg:x="96" fg:w="1"/><text x="8.4272%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="8.1772%" y="533" width="0.0852%" height="15" fill="rgb(209,38,44)" fg:x="96" fg:w="1"/><text x="8.4272%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="8.1772%" y="517" width="0.0852%" height="15" fill="rgb(236,212,23)" fg:x="96" fg:w="1"/><text x="8.4272%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="8.1772%" y="501" width="0.0852%" height="15" fill="rgb(242,79,21)" fg:x="96" fg:w="1"/><text x="8.4272%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="8.1772%" y="485" width="0.0852%" height="15" fill="rgb(211,96,35)" fg:x="96" fg:w="1"/><text x="8.4272%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="8.1772%" y="469" width="0.0852%" height="15" fill="rgb(253,215,40)" fg:x="96" fg:w="1"/><text x="8.4272%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.09%)</title><rect x="8.1772%" y="453" width="0.0852%" height="15" fill="rgb(211,81,21)" fg:x="96" fg:w="1"/><text x="8.4272%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="8.1772%" y="437" width="0.0852%" height="15" fill="rgb(208,190,38)" fg:x="96" fg:w="1"/><text x="8.4272%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="8.1772%" y="421" width="0.0852%" height="15" fill="rgb(235,213,38)" fg:x="96" fg:w="1"/><text x="8.4272%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.09%)</title><rect x="8.1772%" y="405" width="0.0852%" height="15" fill="rgb(237,122,38)" fg:x="96" fg:w="1"/><text x="8.4272%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="8.1772%" y="389" width="0.0852%" height="15" fill="rgb(244,218,35)" fg:x="96" fg:w="1"/><text x="8.4272%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="8.1772%" y="373" width="0.0852%" height="15" fill="rgb(240,68,47)" fg:x="96" fg:w="1"/><text x="8.4272%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.09%)</title><rect x="8.1772%" y="357" width="0.0852%" height="15" fill="rgb(210,16,53)" fg:x="96" fg:w="1"/><text x="8.4272%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.09%)</title><rect x="8.1772%" y="341" width="0.0852%" height="15" fill="rgb(235,124,12)" fg:x="96" fg:w="1"/><text x="8.4272%" y="351.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.09%)</title><rect x="8.1772%" y="325" width="0.0852%" height="15" fill="rgb(224,169,11)" fg:x="96" fg:w="1"/><text x="8.4272%" y="335.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.09%)</title><rect x="8.1772%" y="309" width="0.0852%" height="15" fill="rgb(250,166,2)" fg:x="96" fg:w="1"/><text x="8.4272%" y="319.50"></text></g><g><title>_int_realloc (1 samples, 0.09%)</title><rect x="8.1772%" y="293" width="0.0852%" height="15" fill="rgb(242,216,29)" fg:x="96" fg:w="1"/><text x="8.4272%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (1 samples, 0.09%)</title><rect x="8.2624%" y="613" width="0.0852%" height="15" fill="rgb(230,116,27)" fg:x="97" fg:w="1"/><text x="8.5124%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (1 samples, 0.09%)</title><rect x="8.2624%" y="597" width="0.0852%" height="15" fill="rgb(228,99,48)" fg:x="97" fg:w="1"/><text x="8.5124%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (1 samples, 0.09%)</title><rect x="8.2624%" y="581" width="0.0852%" height="15" fill="rgb(253,11,6)" fg:x="97" fg:w="1"/><text x="8.5124%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (1 samples, 0.09%)</title><rect x="8.2624%" y="565" width="0.0852%" height="15" fill="rgb(247,143,39)" fg:x="97" fg:w="1"/><text x="8.5124%" y="575.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="8.2624%" y="549" width="0.0852%" height="15" fill="rgb(236,97,10)" fg:x="97" fg:w="1"/><text x="8.5124%" y="559.50"></text></g><g><title>__close (1 samples, 0.09%)</title><rect x="8.2624%" y="533" width="0.0852%" height="15" fill="rgb(233,208,19)" fg:x="97" fg:w="1"/><text x="8.5124%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.2624%" y="517" width="0.0852%" height="15" fill="rgb(216,164,2)" fg:x="97" fg:w="1"/><text x="8.5124%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.2624%" y="501" width="0.0852%" height="15" fill="rgb(220,129,5)" fg:x="97" fg:w="1"/><text x="8.5124%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="8.2624%" y="485" width="0.0852%" height="15" fill="rgb(242,17,10)" fg:x="97" fg:w="1"/><text x="8.5124%" y="495.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (8 samples, 0.68%)</title><rect x="8.1772%" y="661" width="0.6814%" height="15" fill="rgb(242,107,0)" fg:x="96" fg:w="8"/><text x="8.4272%" y="671.50"></text></g><g><title>std::fs::read_to_string (7 samples, 0.60%)</title><rect x="8.2624%" y="645" width="0.5963%" height="15" fill="rgb(251,28,31)" fg:x="97" fg:w="7"/><text x="8.5124%" y="655.50"></text></g><g><title>std::fs::read_to_string::inner (7 samples, 0.60%)</title><rect x="8.2624%" y="629" width="0.5963%" height="15" fill="rgb(233,223,10)" fg:x="97" fg:w="7"/><text x="8.5124%" y="639.50"></text></g><g><title>std::fs::File::open (6 samples, 0.51%)</title><rect x="8.3475%" y="613" width="0.5111%" height="15" fill="rgb(215,21,27)" fg:x="98" fg:w="6"/><text x="8.5975%" y="623.50"></text></g><g><title>std::fs::OpenOptions::open (6 samples, 0.51%)</title><rect x="8.3475%" y="597" width="0.5111%" height="15" fill="rgb(232,23,21)" fg:x="98" fg:w="6"/><text x="8.5975%" y="607.50"></text></g><g><title>std::fs::OpenOptions::_open (6 samples, 0.51%)</title><rect x="8.3475%" y="581" width="0.5111%" height="15" fill="rgb(244,5,23)" fg:x="98" fg:w="6"/><text x="8.5975%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::open (6 samples, 0.51%)</title><rect x="8.3475%" y="565" width="0.5111%" height="15" fill="rgb(226,81,46)" fg:x="98" fg:w="6"/><text x="8.5975%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (6 samples, 0.51%)</title><rect x="8.3475%" y="549" width="0.5111%" height="15" fill="rgb(247,70,30)" fg:x="98" fg:w="6"/><text x="8.5975%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (6 samples, 0.51%)</title><rect x="8.3475%" y="533" width="0.5111%" height="15" fill="rgb(212,68,19)" fg:x="98" fg:w="6"/><text x="8.5975%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (6 samples, 0.51%)</title><rect x="8.3475%" y="517" width="0.5111%" height="15" fill="rgb(240,187,13)" fg:x="98" fg:w="6"/><text x="8.5975%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::open_c (6 samples, 0.51%)</title><rect x="8.3475%" y="501" width="0.5111%" height="15" fill="rgb(223,113,26)" fg:x="98" fg:w="6"/><text x="8.5975%" y="511.50"></text></g><g><title>std::sys::unix::cvt_r (6 samples, 0.51%)</title><rect x="8.3475%" y="485" width="0.5111%" height="15" fill="rgb(206,192,2)" fg:x="98" fg:w="6"/><text x="8.5975%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (6 samples, 0.51%)</title><rect x="8.3475%" y="469" width="0.5111%" height="15" fill="rgb(241,108,4)" fg:x="98" fg:w="6"/><text x="8.5975%" y="479.50"></text></g><g><title>__libc_open64 (6 samples, 0.51%)</title><rect x="8.3475%" y="453" width="0.5111%" height="15" fill="rgb(247,173,49)" fg:x="98" fg:w="6"/><text x="8.5975%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="437" width="0.5111%" height="15" fill="rgb(224,114,35)" fg:x="98" fg:w="6"/><text x="8.5975%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="421" width="0.5111%" height="15" fill="rgb(245,159,27)" fg:x="98" fg:w="6"/><text x="8.5975%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="405" width="0.5111%" height="15" fill="rgb(245,172,44)" fg:x="98" fg:w="6"/><text x="8.5975%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="389" width="0.5111%" height="15" fill="rgb(236,23,11)" fg:x="98" fg:w="6"/><text x="8.5975%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="373" width="0.5111%" height="15" fill="rgb(205,117,38)" fg:x="98" fg:w="6"/><text x="8.5975%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="357" width="0.5111%" height="15" fill="rgb(237,72,25)" fg:x="98" fg:w="6"/><text x="8.5975%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="341" width="0.5111%" height="15" fill="rgb(244,70,9)" fg:x="98" fg:w="6"/><text x="8.5975%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="325" width="0.5111%" height="15" fill="rgb(217,125,39)" fg:x="98" fg:w="6"/><text x="8.5975%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="309" width="0.5111%" height="15" fill="rgb(235,36,10)" fg:x="98" fg:w="6"/><text x="8.5975%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="293" width="0.5111%" height="15" fill="rgb(251,123,47)" fg:x="98" fg:w="6"/><text x="8.5975%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="277" width="0.5111%" height="15" fill="rgb(221,13,13)" fg:x="98" fg:w="6"/><text x="8.5975%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="261" width="0.5111%" height="15" fill="rgb(238,131,9)" fg:x="98" fg:w="6"/><text x="8.5975%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="245" width="0.5111%" height="15" fill="rgb(211,50,8)" fg:x="98" fg:w="6"/><text x="8.5975%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="229" width="0.5111%" height="15" fill="rgb(245,182,24)" fg:x="98" fg:w="6"/><text x="8.5975%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="213" width="0.5111%" height="15" fill="rgb(242,14,37)" fg:x="98" fg:w="6"/><text x="8.5975%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="197" width="0.5111%" height="15" fill="rgb(246,228,12)" fg:x="98" fg:w="6"/><text x="8.5975%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="181" width="0.5111%" height="15" fill="rgb(213,55,15)" fg:x="98" fg:w="6"/><text x="8.5975%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="165" width="0.5111%" height="15" fill="rgb(209,9,3)" fg:x="98" fg:w="6"/><text x="8.5975%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="149" width="0.5111%" height="15" fill="rgb(230,59,30)" fg:x="98" fg:w="6"/><text x="8.5975%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="8.3475%" y="133" width="0.5111%" height="15" fill="rgb(209,121,21)" fg:x="98" fg:w="6"/><text x="8.5975%" y="143.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="8.4327%" y="117" width="0.4259%" height="15" fill="rgb(220,109,13)" fg:x="99" fg:w="5"/><text x="8.6827%" y="127.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="8.4327%" y="101" width="0.4259%" height="15" fill="rgb(232,18,1)" fg:x="99" fg:w="5"/><text x="8.6827%" y="111.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="8.4327%" y="85" width="0.4259%" height="15" fill="rgb(215,41,42)" fg:x="99" fg:w="5"/><text x="8.6827%" y="95.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="8.4327%" y="69" width="0.4259%" height="15" fill="rgb(224,123,36)" fg:x="99" fg:w="5"/><text x="8.6827%" y="79.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="8.4327%" y="53" width="0.4259%" height="15" fill="rgb(240,125,3)" fg:x="99" fg:w="5"/><text x="8.6827%" y="63.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="8.4327%" y="37" width="0.4259%" height="15" fill="rgb(205,98,50)" fg:x="99" fg:w="5"/><text x="8.6827%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="8.8586%" y="565" width="0.1704%" height="15" fill="rgb(205,185,37)" fg:x="104" fg:w="2"/><text x="9.1086%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="8.8586%" y="549" width="0.1704%" height="15" fill="rgb(238,207,15)" fg:x="104" fg:w="2"/><text x="9.1086%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="8.8586%" y="533" width="0.1704%" height="15" fill="rgb(213,199,42)" fg:x="104" fg:w="2"/><text x="9.1086%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="8.8586%" y="517" width="0.1704%" height="15" fill="rgb(235,201,11)" fg:x="104" fg:w="2"/><text x="9.1086%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="8.8586%" y="501" width="0.1704%" height="15" fill="rgb(207,46,11)" fg:x="104" fg:w="2"/><text x="9.1086%" y="511.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="8.8586%" y="485" width="0.1704%" height="15" fill="rgb(241,35,35)" fg:x="104" fg:w="2"/><text x="9.1086%" y="495.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="8.8586%" y="469" width="0.1704%" height="15" fill="rgb(243,32,47)" fg:x="104" fg:w="2"/><text x="9.1086%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.34%)</title><rect x="8.8586%" y="645" width="0.3407%" height="15" fill="rgb(247,202,23)" fg:x="104" fg:w="4"/><text x="9.1086%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.34%)</title><rect x="8.8586%" y="629" width="0.3407%" height="15" fill="rgb(219,102,11)" fg:x="104" fg:w="4"/><text x="9.1086%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.34%)</title><rect x="8.8586%" y="613" width="0.3407%" height="15" fill="rgb(243,110,44)" fg:x="104" fg:w="4"/><text x="9.1086%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.34%)</title><rect x="8.8586%" y="597" width="0.3407%" height="15" fill="rgb(222,74,54)" fg:x="104" fg:w="4"/><text x="9.1086%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.34%)</title><rect x="8.8586%" y="581" width="0.3407%" height="15" fill="rgb(216,99,12)" fg:x="104" fg:w="4"/><text x="9.1086%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.17%)</title><rect x="9.0290%" y="565" width="0.1704%" height="15" fill="rgb(226,22,26)" fg:x="106" fg:w="2"/><text x="9.2790%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.17%)</title><rect x="9.0290%" y="549" width="0.1704%" height="15" fill="rgb(217,163,10)" fg:x="106" fg:w="2"/><text x="9.2790%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.17%)</title><rect x="9.0290%" y="533" width="0.1704%" height="15" fill="rgb(213,25,53)" fg:x="106" fg:w="2"/><text x="9.2790%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="9.1993%" y="645" width="0.0852%" height="15" fill="rgb(252,105,26)" fg:x="108" fg:w="1"/><text x="9.4493%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="9.1993%" y="629" width="0.0852%" height="15" fill="rgb(220,39,43)" fg:x="108" fg:w="1"/><text x="9.4493%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="9.1993%" y="613" width="0.0852%" height="15" fill="rgb(229,68,48)" fg:x="108" fg:w="1"/><text x="9.4493%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="9.1993%" y="597" width="0.0852%" height="15" fill="rgb(252,8,32)" fg:x="108" fg:w="1"/><text x="9.4493%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="9.1993%" y="581" width="0.0852%" height="15" fill="rgb(223,20,43)" fg:x="108" fg:w="1"/><text x="9.4493%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.09%)</title><rect x="9.1993%" y="565" width="0.0852%" height="15" fill="rgb(229,81,49)" fg:x="108" fg:w="1"/><text x="9.4493%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="9.1993%" y="549" width="0.0852%" height="15" fill="rgb(236,28,36)" fg:x="108" fg:w="1"/><text x="9.4493%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.09%)</title><rect x="9.1993%" y="533" width="0.0852%" height="15" fill="rgb(249,185,26)" fg:x="108" fg:w="1"/><text x="9.4493%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.09%)</title><rect x="9.1993%" y="517" width="0.0852%" height="15" fill="rgb(249,174,33)" fg:x="108" fg:w="1"/><text x="9.4493%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.09%)</title><rect x="9.1993%" y="501" width="0.0852%" height="15" fill="rgb(233,201,37)" fg:x="108" fg:w="1"/><text x="9.4493%" y="511.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.09%)</title><rect x="9.1993%" y="485" width="0.0852%" height="15" fill="rgb(221,78,26)" fg:x="108" fg:w="1"/><text x="9.4493%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.09%)</title><rect x="9.1993%" y="469" width="0.0852%" height="15" fill="rgb(250,127,30)" fg:x="108" fg:w="1"/><text x="9.4493%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.09%)</title><rect x="9.1993%" y="453" width="0.0852%" height="15" fill="rgb(230,49,44)" fg:x="108" fg:w="1"/><text x="9.4493%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.09%)</title><rect x="9.1993%" y="437" width="0.0852%" height="15" fill="rgb(229,67,23)" fg:x="108" fg:w="1"/><text x="9.4493%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.09%)</title><rect x="9.1993%" y="421" width="0.0852%" height="15" fill="rgb(249,83,47)" fg:x="108" fg:w="1"/><text x="9.4493%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.09%)</title><rect x="9.1993%" y="405" width="0.0852%" height="15" fill="rgb(215,43,3)" fg:x="108" fg:w="1"/><text x="9.4493%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="9.1993%" y="389" width="0.0852%" height="15" fill="rgb(238,154,13)" fg:x="108" fg:w="1"/><text x="9.4493%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="9.1993%" y="373" width="0.0852%" height="15" fill="rgb(219,56,2)" fg:x="108" fg:w="1"/><text x="9.4493%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="9.1993%" y="357" width="0.0852%" height="15" fill="rgb(233,0,4)" fg:x="108" fg:w="1"/><text x="9.4493%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="9.1993%" y="341" width="0.0852%" height="15" fill="rgb(235,30,7)" fg:x="108" fg:w="1"/><text x="9.4493%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="9.1993%" y="325" width="0.0852%" height="15" fill="rgb(250,79,13)" fg:x="108" fg:w="1"/><text x="9.4493%" y="335.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="9.1993%" y="309" width="0.0852%" height="15" fill="rgb(211,146,34)" fg:x="108" fg:w="1"/><text x="9.4493%" y="319.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="9.1993%" y="293" width="0.0852%" height="15" fill="rgb(228,22,38)" fg:x="108" fg:w="1"/><text x="9.4493%" y="303.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="9.1993%" y="277" width="0.0852%" height="15" fill="rgb(235,168,5)" fg:x="108" fg:w="1"/><text x="9.4493%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (11 samples, 0.94%)</title><rect x="9.2845%" y="645" width="0.9370%" height="15" fill="rgb(221,155,16)" fg:x="109" fg:w="11"/><text x="9.5345%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.94%)</title><rect x="9.2845%" y="629" width="0.9370%" height="15" fill="rgb(215,215,53)" fg:x="109" fg:w="11"/><text x="9.5345%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (11 samples, 0.94%)</title><rect x="9.2845%" y="613" width="0.9370%" height="15" fill="rgb(223,4,10)" fg:x="109" fg:w="11"/><text x="9.5345%" y="623.50"></text></g><g><title>syscall (11 samples, 0.94%)</title><rect x="9.2845%" y="597" width="0.9370%" height="15" fill="rgb(234,103,6)" fg:x="109" fg:w="11"/><text x="9.5345%" y="607.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="581" width="0.9370%" height="15" fill="rgb(227,97,0)" fg:x="109" fg:w="11"/><text x="9.5345%" y="591.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="565" width="0.9370%" height="15" fill="rgb(234,150,53)" fg:x="109" fg:w="11"/><text x="9.5345%" y="575.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="549" width="0.9370%" height="15" fill="rgb(228,201,54)" fg:x="109" fg:w="11"/><text x="9.5345%" y="559.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="533" width="0.9370%" height="15" fill="rgb(222,22,37)" fg:x="109" fg:w="11"/><text x="9.5345%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="517" width="0.9370%" height="15" fill="rgb(237,53,32)" fg:x="109" fg:w="11"/><text x="9.5345%" y="527.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="501" width="0.9370%" height="15" fill="rgb(233,25,53)" fg:x="109" fg:w="11"/><text x="9.5345%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="485" width="0.9370%" height="15" fill="rgb(210,40,34)" fg:x="109" fg:w="11"/><text x="9.5345%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="469" width="0.9370%" height="15" fill="rgb(241,220,44)" fg:x="109" fg:w="11"/><text x="9.5345%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="453" width="0.9370%" height="15" fill="rgb(235,28,35)" fg:x="109" fg:w="11"/><text x="9.5345%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="437" width="0.9370%" height="15" fill="rgb(210,56,17)" fg:x="109" fg:w="11"/><text x="9.5345%" y="447.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="421" width="0.9370%" height="15" fill="rgb(224,130,29)" fg:x="109" fg:w="11"/><text x="9.5345%" y="431.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="9.2845%" y="405" width="0.9370%" height="15" fill="rgb(235,212,8)" fg:x="109" fg:w="11"/><text x="9.5345%" y="415.50"></text></g><g><title>malloc_consolidate (3 samples, 0.26%)</title><rect x="10.3918%" y="485" width="0.2555%" height="15" fill="rgb(223,33,50)" fg:x="122" fg:w="3"/><text x="10.6418%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6474%" y="469" width="0.0852%" height="15" fill="rgb(219,149,13)" fg:x="125" fg:w="1"/><text x="10.8974%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6474%" y="453" width="0.0852%" height="15" fill="rgb(250,156,29)" fg:x="125" fg:w="1"/><text x="10.8974%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6474%" y="437" width="0.0852%" height="15" fill="rgb(216,193,19)" fg:x="125" fg:w="1"/><text x="10.8974%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6474%" y="421" width="0.0852%" height="15" fill="rgb(216,135,14)" fg:x="125" fg:w="1"/><text x="10.8974%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6474%" y="405" width="0.0852%" height="15" fill="rgb(241,47,5)" fg:x="125" fg:w="1"/><text x="10.8974%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6474%" y="389" width="0.0852%" height="15" fill="rgb(233,42,35)" fg:x="125" fg:w="1"/><text x="10.8974%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6474%" y="373" width="0.0852%" height="15" fill="rgb(231,13,6)" fg:x="125" fg:w="1"/><text x="10.8974%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6474%" y="357" width="0.0852%" height="15" fill="rgb(207,181,40)" fg:x="125" fg:w="1"/><text x="10.8974%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6474%" y="341" width="0.0852%" height="15" fill="rgb(254,173,49)" fg:x="125" fg:w="1"/><text x="10.8974%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6474%" y="325" width="0.0852%" height="15" fill="rgb(221,1,38)" fg:x="125" fg:w="1"/><text x="10.8974%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.6474%" y="309" width="0.0852%" height="15" fill="rgb(206,124,46)" fg:x="125" fg:w="1"/><text x="10.8974%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.51%)</title><rect x="10.3918%" y="597" width="0.5111%" height="15" fill="rgb(249,21,11)" fg:x="122" fg:w="6"/><text x="10.6418%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.51%)</title><rect x="10.3918%" y="581" width="0.5111%" height="15" fill="rgb(222,201,40)" fg:x="122" fg:w="6"/><text x="10.6418%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.51%)</title><rect x="10.3918%" y="565" width="0.5111%" height="15" fill="rgb(235,61,29)" fg:x="122" fg:w="6"/><text x="10.6418%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.51%)</title><rect x="10.3918%" y="549" width="0.5111%" height="15" fill="rgb(219,207,3)" fg:x="122" fg:w="6"/><text x="10.6418%" y="559.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.51%)</title><rect x="10.3918%" y="533" width="0.5111%" height="15" fill="rgb(222,56,46)" fg:x="122" fg:w="6"/><text x="10.6418%" y="543.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.51%)</title><rect x="10.3918%" y="517" width="0.5111%" height="15" fill="rgb(239,76,54)" fg:x="122" fg:w="6"/><text x="10.6418%" y="527.50"></text></g><g><title>_int_malloc (6 samples, 0.51%)</title><rect x="10.3918%" y="501" width="0.5111%" height="15" fill="rgb(231,124,27)" fg:x="122" fg:w="6"/><text x="10.6418%" y="511.50"></text></g><g><title>sysmalloc (3 samples, 0.26%)</title><rect x="10.6474%" y="485" width="0.2555%" height="15" fill="rgb(249,195,6)" fg:x="125" fg:w="3"/><text x="10.8974%" y="495.50"></text></g><g><title>__GI___mprotect (2 samples, 0.17%)</title><rect x="10.7325%" y="469" width="0.1704%" height="15" fill="rgb(237,174,47)" fg:x="126" fg:w="2"/><text x="10.9825%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="10.7325%" y="453" width="0.1704%" height="15" fill="rgb(206,201,31)" fg:x="126" fg:w="2"/><text x="10.9825%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="10.7325%" y="437" width="0.1704%" height="15" fill="rgb(231,57,52)" fg:x="126" fg:w="2"/><text x="10.9825%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="10.7325%" y="421" width="0.1704%" height="15" fill="rgb(248,177,22)" fg:x="126" fg:w="2"/><text x="10.9825%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="10.7325%" y="405" width="0.1704%" height="15" fill="rgb(215,211,37)" fg:x="126" fg:w="2"/><text x="10.9825%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="10.7325%" y="389" width="0.1704%" height="15" fill="rgb(241,128,51)" fg:x="126" fg:w="2"/><text x="10.9825%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.8177%" y="373" width="0.0852%" height="15" fill="rgb(227,165,31)" fg:x="127" fg:w="1"/><text x="11.0677%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="10.8177%" y="357" width="0.0852%" height="15" fill="rgb(228,167,24)" fg:x="127" fg:w="1"/><text x="11.0677%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt;&gt; (6 samples, 0.51%)</title><rect x="10.9029%" y="597" width="0.5111%" height="15" fill="rgb(228,143,12)" fg:x="128" fg:w="6"/><text x="11.1529%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (6 samples, 0.51%)</title><rect x="10.9029%" y="581" width="0.5111%" height="15" fill="rgb(249,149,8)" fg:x="128" fg:w="6"/><text x="11.1529%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.51%)</title><rect x="10.9029%" y="565" width="0.5111%" height="15" fill="rgb(243,35,44)" fg:x="128" fg:w="6"/><text x="11.1529%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.51%)</title><rect x="10.9029%" y="549" width="0.5111%" height="15" fill="rgb(246,89,9)" fg:x="128" fg:w="6"/><text x="11.1529%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.51%)</title><rect x="10.9029%" y="533" width="0.5111%" height="15" fill="rgb(233,213,13)" fg:x="128" fg:w="6"/><text x="11.1529%" y="543.50"></text></g><g><title>_int_free (6 samples, 0.51%)</title><rect x="10.9029%" y="517" width="0.5111%" height="15" fill="rgb(233,141,41)" fg:x="128" fg:w="6"/><text x="11.1529%" y="527.50"></text></g><g><title>__lll_lock_wait_private (6 samples, 0.51%)</title><rect x="10.9029%" y="501" width="0.5111%" height="15" fill="rgb(239,167,4)" fg:x="128" fg:w="6"/><text x="11.1529%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="10.9029%" y="485" width="0.5111%" height="15" fill="rgb(209,217,16)" fg:x="128" fg:w="6"/><text x="11.1529%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="10.9029%" y="469" width="0.5111%" height="15" fill="rgb(219,88,35)" fg:x="128" fg:w="6"/><text x="11.1529%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="10.9029%" y="453" width="0.5111%" height="15" fill="rgb(220,193,23)" fg:x="128" fg:w="6"/><text x="11.1529%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="10.9029%" y="437" width="0.5111%" height="15" fill="rgb(230,90,52)" fg:x="128" fg:w="6"/><text x="11.1529%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="10.9029%" y="421" width="0.5111%" height="15" fill="rgb(252,106,19)" fg:x="128" fg:w="6"/><text x="11.1529%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="10.9029%" y="405" width="0.5111%" height="15" fill="rgb(206,74,20)" fg:x="128" fg:w="6"/><text x="11.1529%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="10.9029%" y="389" width="0.5111%" height="15" fill="rgb(230,138,44)" fg:x="128" fg:w="6"/><text x="11.1529%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="10.9029%" y="373" width="0.5111%" height="15" fill="rgb(235,182,43)" fg:x="128" fg:w="6"/><text x="11.1529%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="10.9029%" y="357" width="0.5111%" height="15" fill="rgb(242,16,51)" fg:x="128" fg:w="6"/><text x="11.1529%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="10.9029%" y="341" width="0.5111%" height="15" fill="rgb(248,9,4)" fg:x="128" fg:w="6"/><text x="11.1529%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="10.9029%" y="325" width="0.5111%" height="15" fill="rgb(210,31,22)" fg:x="128" fg:w="6"/><text x="11.1529%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="10.9881%" y="309" width="0.4259%" height="15" fill="rgb(239,54,39)" fg:x="129" fg:w="5"/><text x="11.2381%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="10.9881%" y="293" width="0.4259%" height="15" fill="rgb(230,99,41)" fg:x="129" fg:w="5"/><text x="11.2381%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="10.9881%" y="277" width="0.4259%" height="15" fill="rgb(253,106,12)" fg:x="129" fg:w="5"/><text x="11.2381%" y="287.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (16 samples, 1.36%)</title><rect x="11.4140%" y="597" width="1.3629%" height="15" fill="rgb(213,46,41)" fg:x="134" fg:w="16"/><text x="11.6640%" y="607.50"></text></g><g><title>__GI___sched_yield (16 samples, 1.36%)</title><rect x="11.4140%" y="581" width="1.3629%" height="15" fill="rgb(215,133,35)" fg:x="134" fg:w="16"/><text x="11.6640%" y="591.50"></text></g><g><title>[unknown] (16 samples, 1.36%)</title><rect x="11.4140%" y="565" width="1.3629%" height="15" fill="rgb(213,28,5)" fg:x="134" fg:w="16"/><text x="11.6640%" y="575.50"></text></g><g><title>[unknown] (15 samples, 1.28%)</title><rect x="11.4991%" y="549" width="1.2777%" height="15" fill="rgb(215,77,49)" fg:x="135" fg:w="15"/><text x="11.7491%" y="559.50"></text></g><g><title>[unknown] (15 samples, 1.28%)</title><rect x="11.4991%" y="533" width="1.2777%" height="15" fill="rgb(248,100,22)" fg:x="135" fg:w="15"/><text x="11.7491%" y="543.50"></text></g><g><title>[unknown] (15 samples, 1.28%)</title><rect x="11.4991%" y="517" width="1.2777%" height="15" fill="rgb(208,67,9)" fg:x="135" fg:w="15"/><text x="11.7491%" y="527.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="11.6695%" y="501" width="1.1073%" height="15" fill="rgb(219,133,21)" fg:x="137" fg:w="13"/><text x="11.9195%" y="511.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="11.6695%" y="485" width="1.1073%" height="15" fill="rgb(246,46,29)" fg:x="137" fg:w="13"/><text x="11.9195%" y="495.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="11.6695%" y="469" width="1.1073%" height="15" fill="rgb(246,185,52)" fg:x="137" fg:w="13"/><text x="11.9195%" y="479.50"></text></g><g><title>[unknown] (12 samples, 1.02%)</title><rect x="11.7547%" y="453" width="1.0221%" height="15" fill="rgb(252,136,11)" fg:x="138" fg:w="12"/><text x="12.0047%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="11.8399%" y="437" width="0.9370%" height="15" fill="rgb(219,138,53)" fg:x="139" fg:w="11"/><text x="12.0899%" y="447.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="11.8399%" y="421" width="0.9370%" height="15" fill="rgb(211,51,23)" fg:x="139" fg:w="11"/><text x="12.0899%" y="431.50"></text></g><g><title>[unknown] (10 samples, 0.85%)</title><rect x="11.9250%" y="405" width="0.8518%" height="15" fill="rgb(247,221,28)" fg:x="140" fg:w="10"/><text x="12.1750%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.85%)</title><rect x="11.9250%" y="389" width="0.8518%" height="15" fill="rgb(251,222,45)" fg:x="140" fg:w="10"/><text x="12.1750%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 1.53%)</title><rect x="12.7768%" y="581" width="1.5332%" height="15" fill="rgb(217,162,53)" fg:x="150" fg:w="18"/><text x="13.0268%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (18 samples, 1.53%)</title><rect x="12.7768%" y="565" width="1.5332%" height="15" fill="rgb(229,93,14)" fg:x="150" fg:w="18"/><text x="13.0268%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (18 samples, 1.53%)</title><rect x="12.7768%" y="549" width="1.5332%" height="15" fill="rgb(209,67,49)" fg:x="150" fg:w="18"/><text x="13.0268%" y="559.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (79 samples, 6.73%)</title><rect x="10.3066%" y="613" width="6.7291%" height="15" fill="rgb(213,87,29)" fg:x="121" fg:w="79"/><text x="10.5566%" y="623.50">crossbeam..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (50 samples, 4.26%)</title><rect x="12.7768%" y="597" width="4.2589%" height="15" fill="rgb(205,151,52)" fg:x="150" fg:w="50"/><text x="13.0268%" y="607.50">cross..</text></g><g><title>core::sync::atomic::spin_loop_hint (32 samples, 2.73%)</title><rect x="14.3101%" y="581" width="2.7257%" height="15" fill="rgb(253,215,39)" fg:x="168" fg:w="32"/><text x="14.5601%" y="591.50">co..</text></g><g><title>core::hint::spin_loop (32 samples, 2.73%)</title><rect x="14.3101%" y="565" width="2.7257%" height="15" fill="rgb(221,220,41)" fg:x="168" fg:w="32"/><text x="14.5601%" y="575.50">co..</text></g><g><title>core::core_arch::x86::sse2::_mm_pause (32 samples, 2.73%)</title><rect x="14.3101%" y="549" width="2.7257%" height="15" fill="rgb(218,133,21)" fg:x="168" fg:w="32"/><text x="14.5601%" y="559.50">co..</text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (81 samples, 6.90%)</title><rect x="10.2215%" y="645" width="6.8995%" height="15" fill="rgb(221,193,43)" fg:x="120" fg:w="81"/><text x="10.4715%" y="655.50">crossbeam..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (80 samples, 6.81%)</title><rect x="10.3066%" y="629" width="6.8143%" height="15" fill="rgb(240,128,52)" fg:x="121" fg:w="80"/><text x="10.5566%" y="639.50">crossbeam..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (1 samples, 0.09%)</title><rect x="17.0358%" y="613" width="0.0852%" height="15" fill="rgb(253,114,12)" fg:x="200" fg:w="1"/><text x="17.2858%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.09%)</title><rect x="17.0358%" y="597" width="0.0852%" height="15" fill="rgb(215,223,47)" fg:x="200" fg:w="1"/><text x="17.2858%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.09%)</title><rect x="17.0358%" y="581" width="0.0852%" height="15" fill="rgb(248,225,23)" fg:x="200" fg:w="1"/><text x="17.2858%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.09%)</title><rect x="17.3765%" y="629" width="0.0852%" height="15" fill="rgb(250,108,0)" fg:x="204" fg:w="1"/><text x="17.6265%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.09%)</title><rect x="17.3765%" y="613" width="0.0852%" height="15" fill="rgb(228,208,7)" fg:x="204" fg:w="1"/><text x="17.6265%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.09%)</title><rect x="17.3765%" y="597" width="0.0852%" height="15" fill="rgb(244,45,10)" fg:x="204" fg:w="1"/><text x="17.6265%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.34%)</title><rect x="17.4617%" y="629" width="0.3407%" height="15" fill="rgb(207,125,25)" fg:x="205" fg:w="4"/><text x="17.7117%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.34%)</title><rect x="17.4617%" y="613" width="0.3407%" height="15" fill="rgb(210,195,18)" fg:x="205" fg:w="4"/><text x="17.7117%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.34%)</title><rect x="17.4617%" y="597" width="0.3407%" height="15" fill="rgb(249,80,12)" fg:x="205" fg:w="4"/><text x="17.7117%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.34%)</title><rect x="17.4617%" y="581" width="0.3407%" height="15" fill="rgb(221,65,9)" fg:x="205" fg:w="4"/><text x="17.7117%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.34%)</title><rect x="17.4617%" y="565" width="0.3407%" height="15" fill="rgb(235,49,36)" fg:x="205" fg:w="4"/><text x="17.7117%" y="575.50"></text></g><g><title>_int_free (4 samples, 0.34%)</title><rect x="17.4617%" y="549" width="0.3407%" height="15" fill="rgb(225,32,20)" fg:x="205" fg:w="4"/><text x="17.7117%" y="559.50"></text></g><g><title>__GI___libc_free (4 samples, 0.34%)</title><rect x="17.8024%" y="517" width="0.3407%" height="15" fill="rgb(215,141,46)" fg:x="209" fg:w="4"/><text x="18.0524%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (5 samples, 0.43%)</title><rect x="17.8024%" y="629" width="0.4259%" height="15" fill="rgb(250,160,47)" fg:x="209" fg:w="5"/><text x="18.0524%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.43%)</title><rect x="17.8024%" y="613" width="0.4259%" height="15" fill="rgb(216,222,40)" fg:x="209" fg:w="5"/><text x="18.0524%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.43%)</title><rect x="17.8024%" y="597" width="0.4259%" height="15" fill="rgb(234,217,39)" fg:x="209" fg:w="5"/><text x="18.0524%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.43%)</title><rect x="17.8024%" y="581" width="0.4259%" height="15" fill="rgb(207,178,40)" fg:x="209" fg:w="5"/><text x="18.0524%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.43%)</title><rect x="17.8024%" y="565" width="0.4259%" height="15" fill="rgb(221,136,13)" fg:x="209" fg:w="5"/><text x="18.0524%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.43%)</title><rect x="17.8024%" y="549" width="0.4259%" height="15" fill="rgb(249,199,10)" fg:x="209" fg:w="5"/><text x="18.0524%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.43%)</title><rect x="17.8024%" y="533" width="0.4259%" height="15" fill="rgb(249,222,13)" fg:x="209" fg:w="5"/><text x="18.0524%" y="543.50"></text></g><g><title>__rust_dealloc (1 samples, 0.09%)</title><rect x="18.1431%" y="517" width="0.0852%" height="15" fill="rgb(244,185,38)" fg:x="213" fg:w="1"/><text x="18.3931%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="20.1022%" y="293" width="0.5111%" height="15" fill="rgb(236,202,9)" fg:x="236" fg:w="6"/><text x="20.3522%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="20.1022%" y="277" width="0.5111%" height="15" fill="rgb(250,229,37)" fg:x="236" fg:w="6"/><text x="20.3522%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="20.1022%" y="261" width="0.5111%" height="15" fill="rgb(206,174,23)" fg:x="236" fg:w="6"/><text x="20.3522%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="20.1022%" y="245" width="0.5111%" height="15" fill="rgb(211,33,43)" fg:x="236" fg:w="6"/><text x="20.3522%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="20.1022%" y="229" width="0.5111%" height="15" fill="rgb(245,58,50)" fg:x="236" fg:w="6"/><text x="20.3522%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="20.1874%" y="213" width="0.4259%" height="15" fill="rgb(244,68,36)" fg:x="237" fg:w="5"/><text x="20.4374%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="20.1874%" y="197" width="0.4259%" height="15" fill="rgb(232,229,15)" fg:x="237" fg:w="5"/><text x="20.4374%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="20.1874%" y="181" width="0.4259%" height="15" fill="rgb(254,30,23)" fg:x="237" fg:w="5"/><text x="20.4374%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="20.1874%" y="165" width="0.4259%" height="15" fill="rgb(235,160,14)" fg:x="237" fg:w="5"/><text x="20.4374%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="20.1874%" y="149" width="0.4259%" height="15" fill="rgb(212,155,44)" fg:x="237" fg:w="5"/><text x="20.4374%" y="159.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="20.1874%" y="133" width="0.4259%" height="15" fill="rgb(226,2,50)" fg:x="237" fg:w="5"/><text x="20.4374%" y="143.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="20.1874%" y="117" width="0.4259%" height="15" fill="rgb(234,177,6)" fg:x="237" fg:w="5"/><text x="20.4374%" y="127.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="20.1874%" y="101" width="0.4259%" height="15" fill="rgb(217,24,9)" fg:x="237" fg:w="5"/><text x="20.4374%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (56 samples, 4.77%)</title><rect x="18.9949%" y="341" width="4.7700%" height="15" fill="rgb(220,13,46)" fg:x="223" fg:w="56"/><text x="19.2449%" y="351.50">&lt;core:..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (49 samples, 4.17%)</title><rect x="19.5911%" y="325" width="4.1738%" height="15" fill="rgb(239,221,27)" fg:x="230" fg:w="49"/><text x="19.8411%" y="335.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (49 samples, 4.17%)</title><rect x="19.5911%" y="309" width="4.1738%" height="15" fill="rgb(222,198,25)" fg:x="230" fg:w="49"/><text x="19.8411%" y="319.50">&lt;allo..</text></g><g><title>hex::val (37 samples, 3.15%)</title><rect x="20.6133%" y="293" width="3.1516%" height="15" fill="rgb(211,99,13)" fg:x="242" fg:w="37"/><text x="20.8633%" y="303.50">hex..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 5.45%)</title><rect x="18.9949%" y="437" width="5.4514%" height="15" fill="rgb(232,111,31)" fg:x="223" fg:w="64"/><text x="19.2449%" y="447.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (64 samples, 5.45%)</title><rect x="18.9949%" y="421" width="5.4514%" height="15" fill="rgb(245,82,37)" fg:x="223" fg:w="64"/><text x="19.2449%" y="431.50">core::i..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64 samples, 5.45%)</title><rect x="18.9949%" y="405" width="5.4514%" height="15" fill="rgb(227,149,46)" fg:x="223" fg:w="64"/><text x="19.2449%" y="415.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64 samples, 5.45%)</title><rect x="18.9949%" y="389" width="5.4514%" height="15" fill="rgb(218,36,50)" fg:x="223" fg:w="64"/><text x="19.2449%" y="399.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (64 samples, 5.45%)</title><rect x="18.9949%" y="373" width="5.4514%" height="15" fill="rgb(226,80,48)" fg:x="223" fg:w="64"/><text x="19.2449%" y="383.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (64 samples, 5.45%)</title><rect x="18.9949%" y="357" width="5.4514%" height="15" fill="rgb(238,224,15)" fg:x="223" fg:w="64"/><text x="19.2449%" y="367.50">core::i..</text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.68%)</title><rect x="23.7649%" y="341" width="0.6814%" height="15" fill="rgb(241,136,10)" fg:x="279" fg:w="8"/><text x="24.0149%" y="351.50"></text></g><g><title>core::cmp::min (3 samples, 0.26%)</title><rect x="24.1908%" y="325" width="0.2555%" height="15" fill="rgb(208,32,45)" fg:x="284" fg:w="3"/><text x="24.4408%" y="335.50"></text></g><g><title>core::cmp::Ord::min (3 samples, 0.26%)</title><rect x="24.1908%" y="309" width="0.2555%" height="15" fill="rgb(207,135,9)" fg:x="284" fg:w="3"/><text x="24.4408%" y="319.50"></text></g><g><title>core::cmp::min_by (3 samples, 0.26%)</title><rect x="24.1908%" y="293" width="0.2555%" height="15" fill="rgb(206,86,44)" fg:x="284" fg:w="3"/><text x="24.4408%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.34%)</title><rect x="24.4463%" y="437" width="0.3407%" height="15" fill="rgb(245,177,15)" fg:x="287" fg:w="4"/><text x="24.6963%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="25.2981%" y="293" width="0.0852%" height="15" fill="rgb(206,64,50)" fg:x="297" fg:w="1"/><text x="25.5481%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="25.2981%" y="277" width="0.0852%" height="15" fill="rgb(234,36,40)" fg:x="297" fg:w="1"/><text x="25.5481%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="25.2981%" y="261" width="0.0852%" height="15" fill="rgb(213,64,8)" fg:x="297" fg:w="1"/><text x="25.5481%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="25.2981%" y="245" width="0.0852%" height="15" fill="rgb(210,75,36)" fg:x="297" fg:w="1"/><text x="25.5481%" y="255.50"></text></g><g><title>__GI___libc_realloc (14 samples, 1.19%)</title><rect x="25.0426%" y="309" width="1.1925%" height="15" fill="rgb(229,88,21)" fg:x="294" fg:w="14"/><text x="25.2926%" y="319.50"></text></g><g><title>_int_realloc (10 samples, 0.85%)</title><rect x="25.3833%" y="293" width="0.8518%" height="15" fill="rgb(252,204,47)" fg:x="298" fg:w="10"/><text x="25.6333%" y="303.50"></text></g><g><title>_int_malloc (4 samples, 0.34%)</title><rect x="25.8944%" y="277" width="0.3407%" height="15" fill="rgb(208,77,27)" fg:x="304" fg:w="4"/><text x="26.1444%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 1.45%)</title><rect x="24.8722%" y="357" width="1.4480%" height="15" fill="rgb(221,76,26)" fg:x="292" fg:w="17"/><text x="25.1222%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 1.45%)</title><rect x="24.8722%" y="341" width="1.4480%" height="15" fill="rgb(225,139,18)" fg:x="292" fg:w="17"/><text x="25.1222%" y="351.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 1.28%)</title><rect x="25.0426%" y="325" width="1.2777%" height="15" fill="rgb(230,137,11)" fg:x="294" fg:w="15"/><text x="25.2926%" y="335.50"></text></g><g><title>__rust_realloc (1 samples, 0.09%)</title><rect x="26.2351%" y="309" width="0.0852%" height="15" fill="rgb(212,28,1)" fg:x="308" fg:w="1"/><text x="26.4851%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 1.70%)</title><rect x="24.7871%" y="373" width="1.7036%" height="15" fill="rgb(248,164,17)" fg:x="291" fg:w="20"/><text x="25.0371%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.17%)</title><rect x="26.3203%" y="357" width="0.1704%" height="15" fill="rgb(222,171,42)" fg:x="309" fg:w="2"/><text x="26.5703%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 1.79%)</title><rect x="24.7871%" y="437" width="1.7888%" height="15" fill="rgb(243,84,45)" fg:x="291" fg:w="21"/><text x="25.0371%" y="447.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 1.79%)</title><rect x="24.7871%" y="421" width="1.7888%" height="15" fill="rgb(252,49,23)" fg:x="291" fg:w="21"/><text x="25.0371%" y="431.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 1.79%)</title><rect x="24.7871%" y="405" width="1.7888%" height="15" fill="rgb(215,19,7)" fg:x="291" fg:w="21"/><text x="25.0371%" y="415.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 1.79%)</title><rect x="24.7871%" y="389" width="1.7888%" height="15" fill="rgb(238,81,41)" fg:x="291" fg:w="21"/><text x="25.0371%" y="399.50">a..</text></g><g><title>core::cmp::max (1 samples, 0.09%)</title><rect x="26.4906%" y="373" width="0.0852%" height="15" fill="rgb(210,199,37)" fg:x="311" fg:w="1"/><text x="26.7406%" y="383.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.09%)</title><rect x="26.4906%" y="357" width="0.0852%" height="15" fill="rgb(244,192,49)" fg:x="311" fg:w="1"/><text x="26.7406%" y="367.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.09%)</title><rect x="26.4906%" y="341" width="0.0852%" height="15" fill="rgb(226,211,11)" fg:x="311" fg:w="1"/><text x="26.7406%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.09%)</title><rect x="26.5758%" y="437" width="0.0852%" height="15" fill="rgb(236,162,54)" fg:x="312" fg:w="1"/><text x="26.8258%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (107 samples, 9.11%)</title><rect x="18.3135%" y="469" width="9.1141%" height="15" fill="rgb(220,229,9)" fg:x="215" fg:w="107"/><text x="18.5635%" y="479.50">&lt;alloc::vec::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (107 samples, 9.11%)</title><rect x="18.3135%" y="453" width="9.1141%" height="15" fill="rgb(250,87,22)" fg:x="215" fg:w="107"/><text x="18.5635%" y="463.50">alloc::vec::V..</text></g><g><title>core::ptr::write (9 samples, 0.77%)</title><rect x="26.6610%" y="437" width="0.7666%" height="15" fill="rgb(239,43,17)" fg:x="313" fg:w="9"/><text x="26.9110%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.26%)</title><rect x="27.4276%" y="469" width="0.2555%" height="15" fill="rgb(231,177,25)" fg:x="322" fg:w="3"/><text x="27.6776%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.26%)</title><rect x="27.4276%" y="453" width="0.2555%" height="15" fill="rgb(219,179,1)" fg:x="322" fg:w="3"/><text x="27.6776%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.26%)</title><rect x="27.4276%" y="437" width="0.2555%" height="15" fill="rgb(238,219,53)" fg:x="322" fg:w="3"/><text x="27.6776%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.17%)</title><rect x="27.5128%" y="421" width="0.1704%" height="15" fill="rgb(232,167,36)" fg:x="323" fg:w="2"/><text x="27.7628%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.17%)</title><rect x="27.5128%" y="405" width="0.1704%" height="15" fill="rgb(244,19,51)" fg:x="323" fg:w="2"/><text x="27.7628%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.17%)</title><rect x="27.5128%" y="389" width="0.1704%" height="15" fill="rgb(224,6,22)" fg:x="323" fg:w="2"/><text x="27.7628%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (2 samples, 0.17%)</title><rect x="27.5128%" y="373" width="0.1704%" height="15" fill="rgb(224,145,5)" fg:x="323" fg:w="2"/><text x="27.7628%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.17%)</title><rect x="27.5128%" y="357" width="0.1704%" height="15" fill="rgb(234,130,49)" fg:x="323" fg:w="2"/><text x="27.7628%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (2 samples, 0.17%)</title><rect x="27.5128%" y="341" width="0.1704%" height="15" fill="rgb(254,6,2)" fg:x="323" fg:w="2"/><text x="27.7628%" y="351.50"></text></g><g><title>hex::val (1 samples, 0.09%)</title><rect x="27.5980%" y="325" width="0.0852%" height="15" fill="rgb(208,96,46)" fg:x="324" fg:w="1"/><text x="27.8480%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (128 samples, 10.90%)</title><rect x="18.2283%" y="549" width="10.9029%" height="15" fill="rgb(239,3,39)" fg:x="214" fg:w="128"/><text x="18.4783%" y="559.50">&lt;core::result::R..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (128 samples, 10.90%)</title><rect x="18.2283%" y="533" width="10.9029%" height="15" fill="rgb(233,210,1)" fg:x="214" fg:w="128"/><text x="18.4783%" y="543.50">core::iter::trai..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (128 samples, 10.90%)</title><rect x="18.2283%" y="517" width="10.9029%" height="15" fill="rgb(244,137,37)" fg:x="214" fg:w="128"/><text x="18.4783%" y="527.50">&lt;alloc::vec::Vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (128 samples, 10.90%)</title><rect x="18.2283%" y="501" width="10.9029%" height="15" fill="rgb(240,136,2)" fg:x="214" fg:w="128"/><text x="18.4783%" y="511.50">&lt;alloc::vec::Vec..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (128 samples, 10.90%)</title><rect x="18.2283%" y="485" width="10.9029%" height="15" fill="rgb(239,18,37)" fg:x="214" fg:w="128"/><text x="18.4783%" y="495.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (17 samples, 1.45%)</title><rect x="27.6831%" y="469" width="1.4480%" height="15" fill="rgb(218,185,22)" fg:x="325" fg:w="17"/><text x="27.9331%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 1.45%)</title><rect x="27.6831%" y="453" width="1.4480%" height="15" fill="rgb(225,218,4)" fg:x="325" fg:w="17"/><text x="27.9331%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 1.45%)</title><rect x="27.6831%" y="437" width="1.4480%" height="15" fill="rgb(230,182,32)" fg:x="325" fg:w="17"/><text x="27.9331%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 1.45%)</title><rect x="27.6831%" y="421" width="1.4480%" height="15" fill="rgb(242,56,43)" fg:x="325" fg:w="17"/><text x="27.9331%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 1.45%)</title><rect x="27.6831%" y="405" width="1.4480%" height="15" fill="rgb(233,99,24)" fg:x="325" fg:w="17"/><text x="27.9331%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 1.45%)</title><rect x="27.6831%" y="389" width="1.4480%" height="15" fill="rgb(234,209,42)" fg:x="325" fg:w="17"/><text x="27.9331%" y="399.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 1.45%)</title><rect x="27.6831%" y="373" width="1.4480%" height="15" fill="rgb(227,7,12)" fg:x="325" fg:w="17"/><text x="27.9331%" y="383.50"></text></g><g><title>__GI___libc_malloc (17 samples, 1.45%)</title><rect x="27.6831%" y="357" width="1.4480%" height="15" fill="rgb(245,203,43)" fg:x="325" fg:w="17"/><text x="27.9331%" y="367.50"></text></g><g><title>_int_malloc (10 samples, 0.85%)</title><rect x="28.2794%" y="341" width="0.8518%" height="15" fill="rgb(238,205,33)" fg:x="332" fg:w="10"/><text x="28.5294%" y="351.50"></text></g><g><title>unlink_chunk.isra.0 (2 samples, 0.17%)</title><rect x="28.9608%" y="325" width="0.1704%" height="15" fill="rgb(231,56,7)" fg:x="340" fg:w="2"/><text x="29.2108%" y="335.50"></text></g><g><title>hex::decode (133 samples, 11.33%)</title><rect x="18.2283%" y="629" width="11.3288%" height="15" fill="rgb(244,186,29)" fg:x="214" fg:w="133"/><text x="18.4783%" y="639.50">hex::decode</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (133 samples, 11.33%)</title><rect x="18.2283%" y="613" width="11.3288%" height="15" fill="rgb(234,111,31)" fg:x="214" fg:w="133"/><text x="18.4783%" y="623.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (133 samples, 11.33%)</title><rect x="18.2283%" y="597" width="11.3288%" height="15" fill="rgb(241,149,10)" fg:x="214" fg:w="133"/><text x="18.4783%" y="607.50">core::iter::trait..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (133 samples, 11.33%)</title><rect x="18.2283%" y="581" width="11.3288%" height="15" fill="rgb(249,206,44)" fg:x="214" fg:w="133"/><text x="18.4783%" y="591.50">&lt;core::result::Re..</text></g><g><title>core::iter::adapters::try_process (133 samples, 11.33%)</title><rect x="18.2283%" y="565" width="11.3288%" height="15" fill="rgb(251,153,30)" fg:x="214" fg:w="133"/><text x="18.4783%" y="575.50">core::iter::adapt..</text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="549" width="0.4259%" height="15" fill="rgb(239,152,38)" fg:x="342" fg:w="5"/><text x="29.3812%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="533" width="0.4259%" height="15" fill="rgb(249,139,47)" fg:x="342" fg:w="5"/><text x="29.3812%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="517" width="0.4259%" height="15" fill="rgb(244,64,35)" fg:x="342" fg:w="5"/><text x="29.3812%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="501" width="0.4259%" height="15" fill="rgb(216,46,15)" fg:x="342" fg:w="5"/><text x="29.3812%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="485" width="0.4259%" height="15" fill="rgb(250,74,19)" fg:x="342" fg:w="5"/><text x="29.3812%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="469" width="0.4259%" height="15" fill="rgb(249,42,33)" fg:x="342" fg:w="5"/><text x="29.3812%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="453" width="0.4259%" height="15" fill="rgb(242,149,17)" fg:x="342" fg:w="5"/><text x="29.3812%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="437" width="0.4259%" height="15" fill="rgb(244,29,21)" fg:x="342" fg:w="5"/><text x="29.3812%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="421" width="0.4259%" height="15" fill="rgb(220,130,37)" fg:x="342" fg:w="5"/><text x="29.3812%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="405" width="0.4259%" height="15" fill="rgb(211,67,2)" fg:x="342" fg:w="5"/><text x="29.3812%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="389" width="0.4259%" height="15" fill="rgb(235,68,52)" fg:x="342" fg:w="5"/><text x="29.3812%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="373" width="0.4259%" height="15" fill="rgb(246,142,3)" fg:x="342" fg:w="5"/><text x="29.3812%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="29.1312%" y="357" width="0.4259%" height="15" fill="rgb(241,25,7)" fg:x="342" fg:w="5"/><text x="29.3812%" y="367.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.17%)</title><rect x="29.8126%" y="437" width="0.1704%" height="15" fill="rgb(242,119,39)" fg:x="350" fg:w="2"/><text x="30.0626%" y="447.50"></text></g><g><title>alloc::string::String::reserve (4 samples, 0.34%)</title><rect x="29.7274%" y="533" width="0.3407%" height="15" fill="rgb(241,98,45)" fg:x="349" fg:w="4"/><text x="29.9774%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.34%)</title><rect x="29.7274%" y="517" width="0.3407%" height="15" fill="rgb(254,28,30)" fg:x="349" fg:w="4"/><text x="29.9774%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.34%)</title><rect x="29.7274%" y="501" width="0.3407%" height="15" fill="rgb(241,142,54)" fg:x="349" fg:w="4"/><text x="29.9774%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.34%)</title><rect x="29.7274%" y="485" width="0.3407%" height="15" fill="rgb(222,85,15)" fg:x="349" fg:w="4"/><text x="29.9774%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.34%)</title><rect x="29.7274%" y="469" width="0.3407%" height="15" fill="rgb(210,85,47)" fg:x="349" fg:w="4"/><text x="29.9774%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.34%)</title><rect x="29.7274%" y="453" width="0.3407%" height="15" fill="rgb(224,206,25)" fg:x="349" fg:w="4"/><text x="29.9774%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.09%)</title><rect x="29.9830%" y="437" width="0.0852%" height="15" fill="rgb(243,201,19)" fg:x="352" fg:w="1"/><text x="30.2330%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.34%)</title><rect x="30.1533%" y="469" width="0.3407%" height="15" fill="rgb(236,59,4)" fg:x="354" fg:w="4"/><text x="30.4033%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.51%)</title><rect x="30.1533%" y="485" width="0.5111%" height="15" fill="rgb(254,179,45)" fg:x="354" fg:w="6"/><text x="30.4033%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.17%)</title><rect x="30.4940%" y="469" width="0.1704%" height="15" fill="rgb(226,14,10)" fg:x="358" fg:w="2"/><text x="30.7440%" y="479.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (1 samples, 0.09%)</title><rect x="30.5792%" y="453" width="0.0852%" height="15" fill="rgb(244,27,41)" fg:x="359" fg:w="1"/><text x="30.8292%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.60%)</title><rect x="30.6644%" y="485" width="0.5963%" height="15" fill="rgb(235,35,32)" fg:x="360" fg:w="7"/><text x="30.9144%" y="495.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (7 samples, 0.60%)</title><rect x="30.6644%" y="469" width="0.5963%" height="15" fill="rgb(218,68,31)" fg:x="360" fg:w="7"/><text x="30.9144%" y="479.50"></text></g><g><title>core::ptr::read (3 samples, 0.26%)</title><rect x="31.2606%" y="453" width="0.2555%" height="15" fill="rgb(207,120,37)" fg:x="367" fg:w="3"/><text x="31.5106%" y="463.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.70%)</title><rect x="30.0681%" y="501" width="1.7036%" height="15" fill="rgb(227,98,0)" fg:x="353" fg:w="20"/><text x="30.3181%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (6 samples, 0.51%)</title><rect x="31.2606%" y="485" width="0.5111%" height="15" fill="rgb(207,7,3)" fg:x="367" fg:w="6"/><text x="31.5106%" y="495.50"></text></g><g><title>core::mem::replace (6 samples, 0.51%)</title><rect x="31.2606%" y="469" width="0.5111%" height="15" fill="rgb(206,98,19)" fg:x="367" fg:w="6"/><text x="31.5106%" y="479.50"></text></g><g><title>core::ptr::write (3 samples, 0.26%)</title><rect x="31.5162%" y="453" width="0.2555%" height="15" fill="rgb(217,5,26)" fg:x="370" fg:w="3"/><text x="31.7662%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.09%)</title><rect x="32.2828%" y="437" width="0.0852%" height="15" fill="rgb(235,190,38)" fg:x="379" fg:w="1"/><text x="32.5328%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.09%)</title><rect x="32.2828%" y="421" width="0.0852%" height="15" fill="rgb(247,86,24)" fg:x="379" fg:w="1"/><text x="32.5328%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 1.11%)</title><rect x="31.7717%" y="453" width="1.1073%" height="15" fill="rgb(205,101,16)" fg:x="373" fg:w="13"/><text x="32.0217%" y="463.50"></text></g><g><title>core::ptr::write (6 samples, 0.51%)</title><rect x="32.3680%" y="437" width="0.5111%" height="15" fill="rgb(246,168,33)" fg:x="380" fg:w="6"/><text x="32.6180%" y="447.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (42 samples, 3.58%)</title><rect x="29.5571%" y="613" width="3.5775%" height="15" fill="rgb(231,114,1)" fg:x="347" fg:w="42"/><text x="29.8071%" y="623.50">&lt;T a..</text></g><g><title>hex::encode_to_iter (42 samples, 3.58%)</title><rect x="29.5571%" y="597" width="3.5775%" height="15" fill="rgb(207,184,53)" fg:x="347" fg:w="42"/><text x="29.8071%" y="607.50">hex:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (42 samples, 3.58%)</title><rect x="29.5571%" y="581" width="3.5775%" height="15" fill="rgb(224,95,51)" fg:x="347" fg:w="42"/><text x="29.8071%" y="591.50">core..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (42 samples, 3.58%)</title><rect x="29.5571%" y="565" width="3.5775%" height="15" fill="rgb(212,188,45)" fg:x="347" fg:w="42"/><text x="29.8071%" y="575.50">&lt;all..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (40 samples, 3.41%)</title><rect x="29.7274%" y="549" width="3.4072%" height="15" fill="rgb(223,154,38)" fg:x="349" fg:w="40"/><text x="29.9774%" y="559.50">&lt;al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (36 samples, 3.07%)</title><rect x="30.0681%" y="533" width="3.0664%" height="15" fill="rgb(251,22,52)" fg:x="353" fg:w="36"/><text x="30.3181%" y="543.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (36 samples, 3.07%)</title><rect x="30.0681%" y="517" width="3.0664%" height="15" fill="rgb(229,209,22)" fg:x="353" fg:w="36"/><text x="30.3181%" y="527.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (16 samples, 1.36%)</title><rect x="31.7717%" y="501" width="1.3629%" height="15" fill="rgb(234,138,34)" fg:x="373" fg:w="16"/><text x="32.0217%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (16 samples, 1.36%)</title><rect x="31.7717%" y="485" width="1.3629%" height="15" fill="rgb(212,95,11)" fg:x="373" fg:w="16"/><text x="32.0217%" y="495.50"></text></g><g><title>alloc::string::String::push (16 samples, 1.36%)</title><rect x="31.7717%" y="469" width="1.3629%" height="15" fill="rgb(240,179,47)" fg:x="373" fg:w="16"/><text x="32.0217%" y="479.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (3 samples, 0.26%)</title><rect x="32.8790%" y="453" width="0.2555%" height="15" fill="rgb(240,163,11)" fg:x="386" fg:w="3"/><text x="33.1290%" y="463.50"></text></g><g><title>core::char::methods::len_utf8 (3 samples, 0.26%)</title><rect x="32.8790%" y="437" width="0.2555%" height="15" fill="rgb(236,37,12)" fg:x="386" fg:w="3"/><text x="33.1290%" y="447.50"></text></g><g><title>lab4::checksum::Checksum::update (190 samples, 16.18%)</title><rect x="17.1210%" y="645" width="16.1840%" height="15" fill="rgb(232,164,16)" fg:x="201" fg:w="190"/><text x="17.3710%" y="655.50">lab4::checksum::Checksum:..</text></g><g><title>hex::encode (44 samples, 3.75%)</title><rect x="29.5571%" y="629" width="3.7479%" height="15" fill="rgb(244,205,15)" fg:x="347" fg:w="44"/><text x="29.8071%" y="639.50">hex:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.17%)</title><rect x="33.1346%" y="613" width="0.1704%" height="15" fill="rgb(223,117,47)" fg:x="389" fg:w="2"/><text x="33.3846%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.17%)</title><rect x="33.1346%" y="597" width="0.1704%" height="15" fill="rgb(244,107,35)" fg:x="389" fg:w="2"/><text x="33.3846%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="33.1346%" y="581" width="0.1704%" height="15" fill="rgb(205,140,8)" fg:x="389" fg:w="2"/><text x="33.3846%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.17%)</title><rect x="33.1346%" y="565" width="0.1704%" height="15" fill="rgb(228,84,46)" fg:x="389" fg:w="2"/><text x="33.3846%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.17%)</title><rect x="33.1346%" y="549" width="0.1704%" height="15" fill="rgb(254,188,9)" fg:x="389" fg:w="2"/><text x="33.3846%" y="559.50"></text></g><g><title>_int_free (2 samples, 0.17%)</title><rect x="33.1346%" y="533" width="0.1704%" height="15" fill="rgb(206,112,54)" fg:x="389" fg:w="2"/><text x="33.3846%" y="543.50"></text></g><g><title>&lt;lab4::checksum::Checksum as core::clone::Clone&gt;::clone (2 samples, 0.17%)</title><rect x="33.3049%" y="629" width="0.1704%" height="15" fill="rgb(216,84,49)" fg:x="391" fg:w="2"/><text x="33.5549%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="33.3901%" y="613" width="0.0852%" height="15" fill="rgb(214,194,35)" fg:x="392" fg:w="1"/><text x="33.6401%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.09%)</title><rect x="33.3901%" y="597" width="0.0852%" height="15" fill="rgb(249,28,3)" fg:x="392" fg:w="1"/><text x="33.6401%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.09%)</title><rect x="33.3901%" y="581" width="0.0852%" height="15" fill="rgb(222,56,52)" fg:x="392" fg:w="1"/><text x="33.6401%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.09%)</title><rect x="33.3901%" y="565" width="0.0852%" height="15" fill="rgb(245,217,50)" fg:x="392" fg:w="1"/><text x="33.6401%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.09%)</title><rect x="33.3901%" y="549" width="0.0852%" height="15" fill="rgb(213,201,24)" fg:x="392" fg:w="1"/><text x="33.6401%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="33.3901%" y="533" width="0.0852%" height="15" fill="rgb(248,116,28)" fg:x="392" fg:w="1"/><text x="33.6401%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="33.3901%" y="517" width="0.0852%" height="15" fill="rgb(219,72,43)" fg:x="392" fg:w="1"/><text x="33.6401%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="33.3901%" y="501" width="0.0852%" height="15" fill="rgb(209,138,14)" fg:x="392" fg:w="1"/><text x="33.6401%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="33.3901%" y="485" width="0.0852%" height="15" fill="rgb(222,18,33)" fg:x="392" fg:w="1"/><text x="33.6401%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="33.3901%" y="469" width="0.0852%" height="15" fill="rgb(213,199,7)" fg:x="392" fg:w="1"/><text x="33.6401%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="33.3901%" y="453" width="0.0852%" height="15" fill="rgb(250,110,10)" fg:x="392" fg:w="1"/><text x="33.6401%" y="463.50"></text></g><g><title>core::ptr::read_volatile (1 samples, 0.09%)</title><rect x="33.3901%" y="437" width="0.0852%" height="15" fill="rgb(248,123,6)" fg:x="392" fg:w="1"/><text x="33.6401%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,lab4::checksum::Checksum&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="33.4753%" y="629" width="0.0852%" height="15" fill="rgb(206,91,31)" fg:x="393" fg:w="1"/><text x="33.7253%" y="639.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="33.4753%" y="613" width="0.0852%" height="15" fill="rgb(211,154,13)" fg:x="393" fg:w="1"/><text x="33.7253%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (1 samples, 0.09%)</title><rect x="33.4753%" y="597" width="0.0852%" height="15" fill="rgb(225,148,7)" fg:x="393" fg:w="1"/><text x="33.7253%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.09%)</title><rect x="33.4753%" y="581" width="0.0852%" height="15" fill="rgb(220,160,43)" fg:x="393" fg:w="1"/><text x="33.7253%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.09%)</title><rect x="33.4753%" y="565" width="0.0852%" height="15" fill="rgb(213,52,39)" fg:x="393" fg:w="1"/><text x="33.7253%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.09%)</title><rect x="33.6457%" y="437" width="0.0852%" height="15" fill="rgb(243,137,7)" fg:x="395" fg:w="1"/><text x="33.8957%" y="447.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.17%)</title><rect x="33.6457%" y="581" width="0.1704%" height="15" fill="rgb(230,79,13)" fg:x="395" fg:w="2"/><text x="33.8957%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.17%)</title><rect x="33.6457%" y="565" width="0.1704%" height="15" fill="rgb(247,105,23)" fg:x="395" fg:w="2"/><text x="33.8957%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.17%)</title><rect x="33.6457%" y="549" width="0.1704%" height="15" fill="rgb(223,179,41)" fg:x="395" fg:w="2"/><text x="33.8957%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.17%)</title><rect x="33.6457%" y="533" width="0.1704%" height="15" fill="rgb(218,9,34)" fg:x="395" fg:w="2"/><text x="33.8957%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.17%)</title><rect x="33.6457%" y="517" width="0.1704%" height="15" fill="rgb(222,106,8)" fg:x="395" fg:w="2"/><text x="33.8957%" y="527.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.17%)</title><rect x="33.6457%" y="501" width="0.1704%" height="15" fill="rgb(211,220,0)" fg:x="395" fg:w="2"/><text x="33.8957%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.17%)</title><rect x="33.6457%" y="485" width="0.1704%" height="15" fill="rgb(229,52,16)" fg:x="395" fg:w="2"/><text x="33.8957%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.17%)</title><rect x="33.6457%" y="469" width="0.1704%" height="15" fill="rgb(212,155,18)" fg:x="395" fg:w="2"/><text x="33.8957%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.17%)</title><rect x="33.6457%" y="453" width="0.1704%" height="15" fill="rgb(242,21,14)" fg:x="395" fg:w="2"/><text x="33.8957%" y="463.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.09%)</title><rect x="33.7308%" y="437" width="0.0852%" height="15" fill="rgb(222,19,48)" fg:x="396" fg:w="1"/><text x="33.9808%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.34%)</title><rect x="33.5605%" y="629" width="0.3407%" height="15" fill="rgb(232,45,27)" fg:x="394" fg:w="4"/><text x="33.8105%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.34%)</title><rect x="33.5605%" y="613" width="0.3407%" height="15" fill="rgb(249,103,42)" fg:x="394" fg:w="4"/><text x="33.8105%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.34%)</title><rect x="33.5605%" y="597" width="0.3407%" height="15" fill="rgb(246,81,33)" fg:x="394" fg:w="4"/><text x="33.8105%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.09%)</title><rect x="33.8160%" y="581" width="0.0852%" height="15" fill="rgb(252,33,42)" fg:x="397" fg:w="1"/><text x="34.0660%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.09%)</title><rect x="33.8160%" y="565" width="0.0852%" height="15" fill="rgb(209,212,41)" fg:x="397" fg:w="1"/><text x="34.0660%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.09%)</title><rect x="33.8160%" y="549" width="0.0852%" height="15" fill="rgb(207,154,6)" fg:x="397" fg:w="1"/><text x="34.0660%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.09%)</title><rect x="33.8160%" y="533" width="0.0852%" height="15" fill="rgb(223,64,47)" fg:x="397" fg:w="1"/><text x="34.0660%" y="543.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.09%)</title><rect x="33.8160%" y="517" width="0.0852%" height="15" fill="rgb(211,161,38)" fg:x="397" fg:w="1"/><text x="34.0660%" y="527.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.09%)</title><rect x="33.8160%" y="501" width="0.0852%" height="15" fill="rgb(219,138,40)" fg:x="397" fg:w="1"/><text x="34.0660%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.09%)</title><rect x="33.8160%" y="485" width="0.0852%" height="15" fill="rgb(241,228,46)" fg:x="397" fg:w="1"/><text x="34.0660%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.09%)</title><rect x="33.8160%" y="469" width="0.0852%" height="15" fill="rgb(223,209,38)" fg:x="397" fg:w="1"/><text x="34.0660%" y="479.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.09%)</title><rect x="33.8160%" y="453" width="0.0852%" height="15" fill="rgb(236,164,45)" fg:x="397" fg:w="1"/><text x="34.0660%" y="463.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.09%)</title><rect x="33.8160%" y="437" width="0.0852%" height="15" fill="rgb(231,15,5)" fg:x="397" fg:w="1"/><text x="34.0660%" y="447.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.09%)</title><rect x="33.8160%" y="421" width="0.0852%" height="15" fill="rgb(252,35,15)" fg:x="397" fg:w="1"/><text x="34.0660%" y="431.50"></text></g><g><title>lab4::package::access_or_write (8 samples, 0.68%)</title><rect x="33.3049%" y="645" width="0.6814%" height="15" fill="rgb(248,181,18)" fg:x="391" fg:w="8"/><text x="33.5549%" y="655.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.09%)</title><rect x="33.9012%" y="629" width="0.0852%" height="15" fill="rgb(233,39,42)" fg:x="398" fg:w="1"/><text x="34.1512%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (1 samples, 0.09%)</title><rect x="33.9012%" y="613" width="0.0852%" height="15" fill="rgb(238,110,33)" fg:x="398" fg:w="1"/><text x="34.1512%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_contended (1 samples, 0.09%)</title><rect x="33.9012%" y="597" width="0.0852%" height="15" fill="rgb(233,195,10)" fg:x="398" fg:w="1"/><text x="34.1512%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (1 samples, 0.09%)</title><rect x="33.9012%" y="581" width="0.0852%" height="15" fill="rgb(254,105,3)" fg:x="398" fg:w="1"/><text x="34.1512%" y="591.50"></text></g><g><title>syscall (1 samples, 0.09%)</title><rect x="33.9012%" y="565" width="0.0852%" height="15" fill="rgb(221,225,9)" fg:x="398" fg:w="1"/><text x="34.1512%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9012%" y="549" width="0.0852%" height="15" fill="rgb(224,227,45)" fg:x="398" fg:w="1"/><text x="34.1512%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9012%" y="533" width="0.0852%" height="15" fill="rgb(229,198,43)" fg:x="398" fg:w="1"/><text x="34.1512%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9012%" y="517" width="0.0852%" height="15" fill="rgb(206,209,35)" fg:x="398" fg:w="1"/><text x="34.1512%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9012%" y="501" width="0.0852%" height="15" fill="rgb(245,195,53)" fg:x="398" fg:w="1"/><text x="34.1512%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9012%" y="485" width="0.0852%" height="15" fill="rgb(240,92,26)" fg:x="398" fg:w="1"/><text x="34.1512%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9012%" y="469" width="0.0852%" height="15" fill="rgb(207,40,23)" fg:x="398" fg:w="1"/><text x="34.1512%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9012%" y="453" width="0.0852%" height="15" fill="rgb(223,111,35)" fg:x="398" fg:w="1"/><text x="34.1512%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9012%" y="437" width="0.0852%" height="15" fill="rgb(229,147,28)" fg:x="398" fg:w="1"/><text x="34.1512%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9012%" y="421" width="0.0852%" height="15" fill="rgb(211,29,28)" fg:x="398" fg:w="1"/><text x="34.1512%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9012%" y="405" width="0.0852%" height="15" fill="rgb(228,72,33)" fg:x="398" fg:w="1"/><text x="34.1512%" y="415.50"></text></g><g><title>alloc::string::String::with_capacity (1 samples, 0.09%)</title><rect x="33.9864%" y="613" width="0.0852%" height="15" fill="rgb(205,214,31)" fg:x="399" fg:w="1"/><text x="34.2364%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.09%)</title><rect x="33.9864%" y="597" width="0.0852%" height="15" fill="rgb(224,111,15)" fg:x="399" fg:w="1"/><text x="34.2364%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="33.9864%" y="581" width="0.0852%" height="15" fill="rgb(253,21,26)" fg:x="399" fg:w="1"/><text x="34.2364%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="33.9864%" y="565" width="0.0852%" height="15" fill="rgb(245,139,43)" fg:x="399" fg:w="1"/><text x="34.2364%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="33.9864%" y="549" width="0.0852%" height="15" fill="rgb(252,170,7)" fg:x="399" fg:w="1"/><text x="34.2364%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="33.9864%" y="533" width="0.0852%" height="15" fill="rgb(231,118,14)" fg:x="399" fg:w="1"/><text x="34.2364%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="33.9864%" y="517" width="0.0852%" height="15" fill="rgb(238,83,0)" fg:x="399" fg:w="1"/><text x="34.2364%" y="527.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="33.9864%" y="501" width="0.0852%" height="15" fill="rgb(221,39,39)" fg:x="399" fg:w="1"/><text x="34.2364%" y="511.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="33.9864%" y="485" width="0.0852%" height="15" fill="rgb(222,119,46)" fg:x="399" fg:w="1"/><text x="34.2364%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="33.9864%" y="469" width="0.0852%" height="15" fill="rgb(222,165,49)" fg:x="399" fg:w="1"/><text x="34.2364%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="453" width="0.0852%" height="15" fill="rgb(219,113,52)" fg:x="399" fg:w="1"/><text x="34.2364%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="437" width="0.0852%" height="15" fill="rgb(214,7,15)" fg:x="399" fg:w="1"/><text x="34.2364%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="421" width="0.0852%" height="15" fill="rgb(235,32,4)" fg:x="399" fg:w="1"/><text x="34.2364%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="405" width="0.0852%" height="15" fill="rgb(238,90,54)" fg:x="399" fg:w="1"/><text x="34.2364%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="389" width="0.0852%" height="15" fill="rgb(213,208,19)" fg:x="399" fg:w="1"/><text x="34.2364%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="373" width="0.0852%" height="15" fill="rgb(233,156,4)" fg:x="399" fg:w="1"/><text x="34.2364%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="357" width="0.0852%" height="15" fill="rgb(207,194,5)" fg:x="399" fg:w="1"/><text x="34.2364%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="341" width="0.0852%" height="15" fill="rgb(206,111,30)" fg:x="399" fg:w="1"/><text x="34.2364%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="325" width="0.0852%" height="15" fill="rgb(243,70,54)" fg:x="399" fg:w="1"/><text x="34.2364%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="309" width="0.0852%" height="15" fill="rgb(242,28,8)" fg:x="399" fg:w="1"/><text x="34.2364%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="293" width="0.0852%" height="15" fill="rgb(219,106,18)" fg:x="399" fg:w="1"/><text x="34.2364%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="277" width="0.0852%" height="15" fill="rgb(244,222,10)" fg:x="399" fg:w="1"/><text x="34.2364%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="261" width="0.0852%" height="15" fill="rgb(236,179,52)" fg:x="399" fg:w="1"/><text x="34.2364%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="33.9864%" y="245" width="0.0852%" height="15" fill="rgb(213,23,39)" fg:x="399" fg:w="1"/><text x="34.2364%" y="255.50"></text></g><g><title>std::fs::read_to_string (14 samples, 1.19%)</title><rect x="33.9864%" y="645" width="1.1925%" height="15" fill="rgb(238,48,10)" fg:x="399" fg:w="14"/><text x="34.2364%" y="655.50"></text></g><g><title>std::fs::read_to_string::inner (14 samples, 1.19%)</title><rect x="33.9864%" y="629" width="1.1925%" height="15" fill="rgb(251,196,23)" fg:x="399" fg:w="14"/><text x="34.2364%" y="639.50"></text></g><g><title>std::fs::File::open (13 samples, 1.11%)</title><rect x="34.0716%" y="613" width="1.1073%" height="15" fill="rgb(250,152,24)" fg:x="400" fg:w="13"/><text x="34.3216%" y="623.50"></text></g><g><title>std::fs::OpenOptions::open (13 samples, 1.11%)</title><rect x="34.0716%" y="597" width="1.1073%" height="15" fill="rgb(209,150,17)" fg:x="400" fg:w="13"/><text x="34.3216%" y="607.50"></text></g><g><title>std::fs::OpenOptions::_open (13 samples, 1.11%)</title><rect x="34.0716%" y="581" width="1.1073%" height="15" fill="rgb(234,202,34)" fg:x="400" fg:w="13"/><text x="34.3216%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::open (13 samples, 1.11%)</title><rect x="34.0716%" y="565" width="1.1073%" height="15" fill="rgb(253,148,53)" fg:x="400" fg:w="13"/><text x="34.3216%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (13 samples, 1.11%)</title><rect x="34.0716%" y="549" width="1.1073%" height="15" fill="rgb(218,129,16)" fg:x="400" fg:w="13"/><text x="34.3216%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (13 samples, 1.11%)</title><rect x="34.0716%" y="533" width="1.1073%" height="15" fill="rgb(216,85,19)" fg:x="400" fg:w="13"/><text x="34.3216%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (13 samples, 1.11%)</title><rect x="34.0716%" y="517" width="1.1073%" height="15" fill="rgb(235,228,7)" fg:x="400" fg:w="13"/><text x="34.3216%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::open_c (13 samples, 1.11%)</title><rect x="34.0716%" y="501" width="1.1073%" height="15" fill="rgb(245,175,0)" fg:x="400" fg:w="13"/><text x="34.3216%" y="511.50"></text></g><g><title>std::sys::unix::cvt_r (13 samples, 1.11%)</title><rect x="34.0716%" y="485" width="1.1073%" height="15" fill="rgb(208,168,36)" fg:x="400" fg:w="13"/><text x="34.3216%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (13 samples, 1.11%)</title><rect x="34.0716%" y="469" width="1.1073%" height="15" fill="rgb(246,171,24)" fg:x="400" fg:w="13"/><text x="34.3216%" y="479.50"></text></g><g><title>__libc_open64 (13 samples, 1.11%)</title><rect x="34.0716%" y="453" width="1.1073%" height="15" fill="rgb(215,142,24)" fg:x="400" fg:w="13"/><text x="34.3216%" y="463.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="437" width="1.1073%" height="15" fill="rgb(250,187,7)" fg:x="400" fg:w="13"/><text x="34.3216%" y="447.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="421" width="1.1073%" height="15" fill="rgb(228,66,33)" fg:x="400" fg:w="13"/><text x="34.3216%" y="431.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="405" width="1.1073%" height="15" fill="rgb(234,215,21)" fg:x="400" fg:w="13"/><text x="34.3216%" y="415.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="389" width="1.1073%" height="15" fill="rgb(222,191,20)" fg:x="400" fg:w="13"/><text x="34.3216%" y="399.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="373" width="1.1073%" height="15" fill="rgb(245,79,54)" fg:x="400" fg:w="13"/><text x="34.3216%" y="383.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="357" width="1.1073%" height="15" fill="rgb(240,10,37)" fg:x="400" fg:w="13"/><text x="34.3216%" y="367.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="341" width="1.1073%" height="15" fill="rgb(214,192,32)" fg:x="400" fg:w="13"/><text x="34.3216%" y="351.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="325" width="1.1073%" height="15" fill="rgb(209,36,54)" fg:x="400" fg:w="13"/><text x="34.3216%" y="335.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="309" width="1.1073%" height="15" fill="rgb(220,10,11)" fg:x="400" fg:w="13"/><text x="34.3216%" y="319.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="293" width="1.1073%" height="15" fill="rgb(221,106,17)" fg:x="400" fg:w="13"/><text x="34.3216%" y="303.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="277" width="1.1073%" height="15" fill="rgb(251,142,44)" fg:x="400" fg:w="13"/><text x="34.3216%" y="287.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="261" width="1.1073%" height="15" fill="rgb(238,13,15)" fg:x="400" fg:w="13"/><text x="34.3216%" y="271.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="245" width="1.1073%" height="15" fill="rgb(208,107,27)" fg:x="400" fg:w="13"/><text x="34.3216%" y="255.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="34.0716%" y="229" width="1.1073%" height="15" fill="rgb(205,136,37)" fg:x="400" fg:w="13"/><text x="34.3216%" y="239.50"></text></g><g><title>[unknown] (12 samples, 1.02%)</title><rect x="34.1567%" y="213" width="1.0221%" height="15" fill="rgb(250,205,27)" fg:x="401" fg:w="12"/><text x="34.4067%" y="223.50"></text></g><g><title>[unknown] (12 samples, 1.02%)</title><rect x="34.1567%" y="197" width="1.0221%" height="15" fill="rgb(210,80,43)" fg:x="401" fg:w="12"/><text x="34.4067%" y="207.50"></text></g><g><title>[unknown] (12 samples, 1.02%)</title><rect x="34.1567%" y="181" width="1.0221%" height="15" fill="rgb(247,160,36)" fg:x="401" fg:w="12"/><text x="34.4067%" y="191.50"></text></g><g><title>[unknown] (12 samples, 1.02%)</title><rect x="34.1567%" y="165" width="1.0221%" height="15" fill="rgb(234,13,49)" fg:x="401" fg:w="12"/><text x="34.4067%" y="175.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="34.2419%" y="149" width="0.9370%" height="15" fill="rgb(234,122,0)" fg:x="402" fg:w="11"/><text x="34.4919%" y="159.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="34.2419%" y="133" width="0.9370%" height="15" fill="rgb(207,146,38)" fg:x="402" fg:w="11"/><text x="34.4919%" y="143.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="34.2419%" y="117" width="0.9370%" height="15" fill="rgb(207,177,25)" fg:x="402" fg:w="11"/><text x="34.4919%" y="127.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="34.2419%" y="101" width="0.9370%" height="15" fill="rgb(211,178,42)" fg:x="402" fg:w="11"/><text x="34.4919%" y="111.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="34.2419%" y="85" width="0.9370%" height="15" fill="rgb(230,69,54)" fg:x="402" fg:w="11"/><text x="34.4919%" y="95.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="34.2419%" y="69" width="0.9370%" height="15" fill="rgb(214,135,41)" fg:x="402" fg:w="11"/><text x="34.4919%" y="79.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="34.2419%" y="53" width="0.9370%" height="15" fill="rgb(237,67,25)" fg:x="402" fg:w="11"/><text x="34.4919%" y="63.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="34.2419%" y="37" width="0.9370%" height="15" fill="rgb(222,189,50)" fg:x="402" fg:w="11"/><text x="34.4919%" y="47.50"></text></g><g><title>std::sys::unix::futex::futex_wait (92 samples, 7.84%)</title><rect x="35.1789%" y="597" width="7.8365%" height="15" fill="rgb(245,148,34)" fg:x="413" fg:w="92"/><text x="35.4289%" y="607.50">std::sys::u..</text></g><g><title>syscall (92 samples, 7.84%)</title><rect x="35.1789%" y="581" width="7.8365%" height="15" fill="rgb(222,29,6)" fg:x="413" fg:w="92"/><text x="35.4289%" y="591.50">syscall</text></g><g><title>[unknown] (92 samples, 7.84%)</title><rect x="35.1789%" y="565" width="7.8365%" height="15" fill="rgb(221,189,43)" fg:x="413" fg:w="92"/><text x="35.4289%" y="575.50">[unknown]</text></g><g><title>[unknown] (91 samples, 7.75%)</title><rect x="35.2641%" y="549" width="7.7513%" height="15" fill="rgb(207,36,27)" fg:x="414" fg:w="91"/><text x="35.5141%" y="559.50">[unknown]</text></g><g><title>[unknown] (91 samples, 7.75%)</title><rect x="35.2641%" y="533" width="7.7513%" height="15" fill="rgb(217,90,24)" fg:x="414" fg:w="91"/><text x="35.5141%" y="543.50">[unknown]</text></g><g><title>[unknown] (90 samples, 7.67%)</title><rect x="35.3492%" y="517" width="7.6661%" height="15" fill="rgb(224,66,35)" fg:x="415" fg:w="90"/><text x="35.5992%" y="527.50">[unknown]</text></g><g><title>[unknown] (89 samples, 7.58%)</title><rect x="35.4344%" y="501" width="7.5809%" height="15" fill="rgb(221,13,50)" fg:x="416" fg:w="89"/><text x="35.6844%" y="511.50">[unknown]</text></g><g><title>[unknown] (84 samples, 7.16%)</title><rect x="35.8603%" y="485" width="7.1550%" height="15" fill="rgb(236,68,49)" fg:x="421" fg:w="84"/><text x="36.1103%" y="495.50">[unknown]</text></g><g><title>[unknown] (80 samples, 6.81%)</title><rect x="36.2010%" y="469" width="6.8143%" height="15" fill="rgb(229,146,28)" fg:x="425" fg:w="80"/><text x="36.4510%" y="479.50">[unknown]</text></g><g><title>[unknown] (80 samples, 6.81%)</title><rect x="36.2010%" y="453" width="6.8143%" height="15" fill="rgb(225,31,38)" fg:x="425" fg:w="80"/><text x="36.4510%" y="463.50">[unknown]</text></g><g><title>[unknown] (80 samples, 6.81%)</title><rect x="36.2010%" y="437" width="6.8143%" height="15" fill="rgb(250,208,3)" fg:x="425" fg:w="80"/><text x="36.4510%" y="447.50">[unknown]</text></g><g><title>[unknown] (79 samples, 6.73%)</title><rect x="36.2862%" y="421" width="6.7291%" height="15" fill="rgb(246,54,23)" fg:x="426" fg:w="79"/><text x="36.5362%" y="431.50">[unknown]</text></g><g><title>[unknown] (79 samples, 6.73%)</title><rect x="36.2862%" y="405" width="6.7291%" height="15" fill="rgb(243,76,11)" fg:x="426" fg:w="79"/><text x="36.5362%" y="415.50">[unknown]</text></g><g><title>[unknown] (79 samples, 6.73%)</title><rect x="36.2862%" y="389" width="6.7291%" height="15" fill="rgb(245,21,50)" fg:x="426" fg:w="79"/><text x="36.5362%" y="399.50">[unknown]</text></g><g><title>[unknown] (77 samples, 6.56%)</title><rect x="36.4566%" y="373" width="6.5588%" height="15" fill="rgb(228,9,43)" fg:x="428" fg:w="77"/><text x="36.7066%" y="383.50">[unknown]</text></g><g><title>[unknown] (77 samples, 6.56%)</title><rect x="36.4566%" y="357" width="6.5588%" height="15" fill="rgb(208,100,47)" fg:x="428" fg:w="77"/><text x="36.7066%" y="367.50">[unknown]</text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="341" width="0.0852%" height="15" fill="rgb(232,26,8)" fg:x="504" fg:w="1"/><text x="43.1802%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="325" width="0.0852%" height="15" fill="rgb(216,166,38)" fg:x="504" fg:w="1"/><text x="43.1802%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="309" width="0.0852%" height="15" fill="rgb(251,202,51)" fg:x="504" fg:w="1"/><text x="43.1802%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="293" width="0.0852%" height="15" fill="rgb(254,216,34)" fg:x="504" fg:w="1"/><text x="43.1802%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="277" width="0.0852%" height="15" fill="rgb(251,32,27)" fg:x="504" fg:w="1"/><text x="43.1802%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="261" width="0.0852%" height="15" fill="rgb(208,127,28)" fg:x="504" fg:w="1"/><text x="43.1802%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="245" width="0.0852%" height="15" fill="rgb(224,137,22)" fg:x="504" fg:w="1"/><text x="43.1802%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="229" width="0.0852%" height="15" fill="rgb(254,70,32)" fg:x="504" fg:w="1"/><text x="43.1802%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="213" width="0.0852%" height="15" fill="rgb(229,75,37)" fg:x="504" fg:w="1"/><text x="43.1802%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="197" width="0.0852%" height="15" fill="rgb(252,64,23)" fg:x="504" fg:w="1"/><text x="43.1802%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="181" width="0.0852%" height="15" fill="rgb(232,162,48)" fg:x="504" fg:w="1"/><text x="43.1802%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="165" width="0.0852%" height="15" fill="rgb(246,160,12)" fg:x="504" fg:w="1"/><text x="43.1802%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="149" width="0.0852%" height="15" fill="rgb(247,166,0)" fg:x="504" fg:w="1"/><text x="43.1802%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="133" width="0.0852%" height="15" fill="rgb(249,219,21)" fg:x="504" fg:w="1"/><text x="43.1802%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="117" width="0.0852%" height="15" fill="rgb(205,209,3)" fg:x="504" fg:w="1"/><text x="43.1802%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.9302%" y="101" width="0.0852%" height="15" fill="rgb(243,44,1)" fg:x="504" fg:w="1"/><text x="43.1802%" y="111.50"></text></g><g><title>core::hint::spin_loop (7 samples, 0.60%)</title><rect x="43.0153%" y="581" width="0.5963%" height="15" fill="rgb(206,159,16)" fg:x="505" fg:w="7"/><text x="43.2653%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (7 samples, 0.60%)</title><rect x="43.0153%" y="565" width="0.5963%" height="15" fill="rgb(244,77,30)" fg:x="505" fg:w="7"/><text x="43.2653%" y="575.50"></text></g><g><title>lab4::package::PackageDownloader::run (411 samples, 35.01%)</title><rect x="8.8586%" y="661" width="35.0085%" height="15" fill="rgb(218,69,12)" fg:x="104" fg:w="411"/><text x="9.1086%" y="671.50">lab4::package::PackageDownloader::run</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (102 samples, 8.69%)</title><rect x="35.1789%" y="645" width="8.6882%" height="15" fill="rgb(212,87,7)" fg:x="413" fg:w="102"/><text x="35.4289%" y="655.50">std::sync::m..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (102 samples, 8.69%)</title><rect x="35.1789%" y="629" width="8.6882%" height="15" fill="rgb(245,114,25)" fg:x="413" fg:w="102"/><text x="35.4289%" y="639.50">std::sys::un..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (102 samples, 8.69%)</title><rect x="35.1789%" y="613" width="8.6882%" height="15" fill="rgb(210,61,42)" fg:x="413" fg:w="102"/><text x="35.4289%" y="623.50">std::sys::un..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (10 samples, 0.85%)</title><rect x="43.0153%" y="597" width="0.8518%" height="15" fill="rgb(211,52,33)" fg:x="505" fg:w="10"/><text x="43.2653%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.26%)</title><rect x="43.6116%" y="581" width="0.2555%" height="15" fill="rgb(234,58,33)" fg:x="512" fg:w="3"/><text x="43.8616%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.26%)</title><rect x="43.6116%" y="565" width="0.2555%" height="15" fill="rgb(220,115,36)" fg:x="512" fg:w="3"/><text x="43.8616%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="645" width="0.0852%" height="15" fill="rgb(243,153,54)" fg:x="527" fg:w="1"/><text x="45.1393%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="629" width="0.0852%" height="15" fill="rgb(251,47,18)" fg:x="527" fg:w="1"/><text x="45.1393%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="613" width="0.0852%" height="15" fill="rgb(242,102,42)" fg:x="527" fg:w="1"/><text x="45.1393%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="597" width="0.0852%" height="15" fill="rgb(234,31,38)" fg:x="527" fg:w="1"/><text x="45.1393%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="581" width="0.0852%" height="15" fill="rgb(221,117,51)" fg:x="527" fg:w="1"/><text x="45.1393%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="565" width="0.0852%" height="15" fill="rgb(212,20,18)" fg:x="527" fg:w="1"/><text x="45.1393%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="549" width="0.0852%" height="15" fill="rgb(245,133,36)" fg:x="527" fg:w="1"/><text x="45.1393%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="533" width="0.0852%" height="15" fill="rgb(212,6,19)" fg:x="527" fg:w="1"/><text x="45.1393%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="517" width="0.0852%" height="15" fill="rgb(218,1,36)" fg:x="527" fg:w="1"/><text x="45.1393%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="501" width="0.0852%" height="15" fill="rgb(246,84,54)" fg:x="527" fg:w="1"/><text x="45.1393%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="485" width="0.0852%" height="15" fill="rgb(242,110,6)" fg:x="527" fg:w="1"/><text x="45.1393%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="44.8893%" y="469" width="0.0852%" height="15" fill="rgb(214,47,5)" fg:x="527" fg:w="1"/><text x="45.1393%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (5 samples, 0.43%)</title><rect x="44.9744%" y="645" width="0.4259%" height="15" fill="rgb(218,159,25)" fg:x="528" fg:w="5"/><text x="45.2244%" y="655.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.26%)</title><rect x="45.4855%" y="629" width="0.2555%" height="15" fill="rgb(215,211,28)" fg:x="534" fg:w="3"/><text x="45.7355%" y="639.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (3 samples, 0.26%)</title><rect x="45.4855%" y="613" width="0.2555%" height="15" fill="rgb(238,59,32)" fg:x="534" fg:w="3"/><text x="45.7355%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (24 samples, 2.04%)</title><rect x="45.7411%" y="629" width="2.0443%" height="15" fill="rgb(226,82,3)" fg:x="537" fg:w="24"/><text x="45.9911%" y="639.50">c..</text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (7 samples, 0.60%)</title><rect x="49.2334%" y="613" width="0.5963%" height="15" fill="rgb(240,164,32)" fg:x="578" fg:w="7"/><text x="49.4834%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.09%)</title><rect x="49.8296%" y="613" width="0.0852%" height="15" fill="rgb(232,46,7)" fg:x="585" fg:w="1"/><text x="50.0796%" y="623.50"></text></g><g><title>crossbeam_channel::context::Context::with (1 samples, 0.09%)</title><rect x="49.9148%" y="613" width="0.0852%" height="15" fill="rgb(229,129,53)" fg:x="586" fg:w="1"/><text x="50.1648%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.09%)</title><rect x="49.9148%" y="597" width="0.0852%" height="15" fill="rgb(234,188,29)" fg:x="586" fg:w="1"/><text x="50.1648%" y="607.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (1 samples, 0.09%)</title><rect x="49.9148%" y="581" width="0.0852%" height="15" fill="rgb(246,141,4)" fg:x="586" fg:w="1"/><text x="50.1648%" y="591.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (1 samples, 0.09%)</title><rect x="49.9148%" y="565" width="0.0852%" height="15" fill="rgb(229,23,39)" fg:x="586" fg:w="1"/><text x="50.1648%" y="575.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.09%)</title><rect x="49.9148%" y="549" width="0.0852%" height="15" fill="rgb(206,12,3)" fg:x="586" fg:w="1"/><text x="50.1648%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="49.9148%" y="533" width="0.0852%" height="15" fill="rgb(252,226,20)" fg:x="586" fg:w="1"/><text x="50.1648%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (1 samples, 0.09%)</title><rect x="50.3407%" y="597" width="0.0852%" height="15" fill="rgb(216,123,35)" fg:x="591" fg:w="1"/><text x="50.5907%" y="607.50"></text></g><g><title>core::ptr::read (1 samples, 0.09%)</title><rect x="50.3407%" y="581" width="0.0852%" height="15" fill="rgb(212,68,40)" fg:x="591" fg:w="1"/><text x="50.5907%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.09%)</title><rect x="50.4259%" y="597" width="0.0852%" height="15" fill="rgb(254,125,32)" fg:x="592" fg:w="1"/><text x="50.6759%" y="607.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.09%)</title><rect x="50.4259%" y="581" width="0.0852%" height="15" fill="rgb(253,97,22)" fg:x="592" fg:w="1"/><text x="50.6759%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.09%)</title><rect x="50.4259%" y="565" width="0.0852%" height="15" fill="rgb(241,101,14)" fg:x="592" fg:w="1"/><text x="50.6759%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (45 samples, 3.83%)</title><rect x="50.5111%" y="597" width="3.8330%" height="15" fill="rgb(238,103,29)" fg:x="593" fg:w="45"/><text x="50.7611%" y="607.50">core..</text></g><g><title>core::sync::atomic::atomic_or (45 samples, 3.83%)</title><rect x="50.5111%" y="581" width="3.8330%" height="15" fill="rgb(233,195,47)" fg:x="593" fg:w="45"/><text x="50.7611%" y="591.50">core..</text></g><g><title>__GI___libc_free (4 samples, 0.34%)</title><rect x="54.3441%" y="501" width="0.3407%" height="15" fill="rgb(246,218,30)" fg:x="638" fg:w="4"/><text x="54.5941%" y="511.50"></text></g><g><title>core::mem::drop (33 samples, 2.81%)</title><rect x="54.3441%" y="581" width="2.8109%" height="15" fill="rgb(219,145,47)" fg:x="638" fg:w="33"/><text x="54.5941%" y="591.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (33 samples, 2.81%)</title><rect x="54.3441%" y="565" width="2.8109%" height="15" fill="rgb(243,12,26)" fg:x="638" fg:w="33"/><text x="54.5941%" y="575.50">co..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 2.81%)</title><rect x="54.3441%" y="549" width="2.8109%" height="15" fill="rgb(214,87,16)" fg:x="638" fg:w="33"/><text x="54.5941%" y="559.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 2.81%)</title><rect x="54.3441%" y="533" width="2.8109%" height="15" fill="rgb(208,99,42)" fg:x="638" fg:w="33"/><text x="54.5941%" y="543.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (33 samples, 2.81%)</title><rect x="54.3441%" y="517" width="2.8109%" height="15" fill="rgb(253,99,2)" fg:x="638" fg:w="33"/><text x="54.5941%" y="527.50">al..</text></g><g><title>_int_free (29 samples, 2.47%)</title><rect x="54.6848%" y="501" width="2.4702%" height="15" fill="rgb(220,168,23)" fg:x="642" fg:w="29"/><text x="54.9348%" y="511.50">_i..</text></g><g><title>__lll_lock_wait_private (24 samples, 2.04%)</title><rect x="55.1107%" y="485" width="2.0443%" height="15" fill="rgb(242,38,24)" fg:x="647" fg:w="24"/><text x="55.3607%" y="495.50">_..</text></g><g><title>[unknown] (24 samples, 2.04%)</title><rect x="55.1107%" y="469" width="2.0443%" height="15" fill="rgb(225,182,9)" fg:x="647" fg:w="24"/><text x="55.3607%" y="479.50">[..</text></g><g><title>[unknown] (23 samples, 1.96%)</title><rect x="55.1959%" y="453" width="1.9591%" height="15" fill="rgb(243,178,37)" fg:x="648" fg:w="23"/><text x="55.4459%" y="463.50">[..</text></g><g><title>[unknown] (22 samples, 1.87%)</title><rect x="55.2811%" y="437" width="1.8739%" height="15" fill="rgb(232,139,19)" fg:x="649" fg:w="22"/><text x="55.5311%" y="447.50">[..</text></g><g><title>[unknown] (22 samples, 1.87%)</title><rect x="55.2811%" y="421" width="1.8739%" height="15" fill="rgb(225,201,24)" fg:x="649" fg:w="22"/><text x="55.5311%" y="431.50">[..</text></g><g><title>[unknown] (21 samples, 1.79%)</title><rect x="55.3663%" y="405" width="1.7888%" height="15" fill="rgb(221,47,46)" fg:x="650" fg:w="21"/><text x="55.6163%" y="415.50">[..</text></g><g><title>[unknown] (21 samples, 1.79%)</title><rect x="55.3663%" y="389" width="1.7888%" height="15" fill="rgb(249,23,13)" fg:x="650" fg:w="21"/><text x="55.6163%" y="399.50">[..</text></g><g><title>[unknown] (20 samples, 1.70%)</title><rect x="55.4514%" y="373" width="1.7036%" height="15" fill="rgb(219,9,5)" fg:x="651" fg:w="20"/><text x="55.7014%" y="383.50"></text></g><g><title>[unknown] (20 samples, 1.70%)</title><rect x="55.4514%" y="357" width="1.7036%" height="15" fill="rgb(254,171,16)" fg:x="651" fg:w="20"/><text x="55.7014%" y="367.50"></text></g><g><title>[unknown] (20 samples, 1.70%)</title><rect x="55.4514%" y="341" width="1.7036%" height="15" fill="rgb(230,171,20)" fg:x="651" fg:w="20"/><text x="55.7014%" y="351.50"></text></g><g><title>[unknown] (20 samples, 1.70%)</title><rect x="55.4514%" y="325" width="1.7036%" height="15" fill="rgb(210,71,41)" fg:x="651" fg:w="20"/><text x="55.7014%" y="335.50"></text></g><g><title>[unknown] (20 samples, 1.70%)</title><rect x="55.4514%" y="309" width="1.7036%" height="15" fill="rgb(206,173,20)" fg:x="651" fg:w="20"/><text x="55.7014%" y="319.50"></text></g><g><title>[unknown] (20 samples, 1.70%)</title><rect x="55.4514%" y="293" width="1.7036%" height="15" fill="rgb(233,88,34)" fg:x="651" fg:w="20"/><text x="55.7014%" y="303.50"></text></g><g><title>[unknown] (20 samples, 1.70%)</title><rect x="55.4514%" y="277" width="1.7036%" height="15" fill="rgb(223,209,46)" fg:x="651" fg:w="20"/><text x="55.7014%" y="287.50"></text></g><g><title>[unknown] (20 samples, 1.70%)</title><rect x="55.4514%" y="261" width="1.7036%" height="15" fill="rgb(250,43,18)" fg:x="651" fg:w="20"/><text x="55.7014%" y="271.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::destroy (35 samples, 2.98%)</title><rect x="54.3441%" y="597" width="2.9813%" height="15" fill="rgb(208,13,10)" fg:x="638" fg:w="35"/><text x="54.5941%" y="607.50">cro..</text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.17%)</title><rect x="57.1550%" y="581" width="0.1704%" height="15" fill="rgb(212,200,36)" fg:x="671" fg:w="2"/><text x="57.4050%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.17%)</title><rect x="57.1550%" y="565" width="0.1704%" height="15" fill="rgb(225,90,30)" fg:x="671" fg:w="2"/><text x="57.4050%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.26%)</title><rect x="57.4106%" y="581" width="0.2555%" height="15" fill="rgb(236,182,39)" fg:x="674" fg:w="3"/><text x="57.6606%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.26%)</title><rect x="57.4106%" y="565" width="0.2555%" height="15" fill="rgb(212,144,35)" fg:x="674" fg:w="3"/><text x="57.6606%" y="575.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (113 samples, 9.63%)</title><rect x="50.0000%" y="613" width="9.6252%" height="15" fill="rgb(228,63,44)" fg:x="587" fg:w="113"/><text x="50.2500%" y="623.50">crossbeam_chan..</text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (27 samples, 2.30%)</title><rect x="57.3254%" y="597" width="2.2998%" height="15" fill="rgb(228,109,6)" fg:x="673" fg:w="27"/><text x="57.5754%" y="607.50">c..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (23 samples, 1.96%)</title><rect x="57.6661%" y="581" width="1.9591%" height="15" fill="rgb(238,117,24)" fg:x="677" fg:w="23"/><text x="57.9161%" y="591.50">c..</text></g><g><title>__GI___sched_yield (23 samples, 1.96%)</title><rect x="57.6661%" y="565" width="1.9591%" height="15" fill="rgb(242,26,26)" fg:x="677" fg:w="23"/><text x="57.9161%" y="575.50">_..</text></g><g><title>[unknown] (23 samples, 1.96%)</title><rect x="57.6661%" y="549" width="1.9591%" height="15" fill="rgb(221,92,48)" fg:x="677" fg:w="23"/><text x="57.9161%" y="559.50">[..</text></g><g><title>[unknown] (23 samples, 1.96%)</title><rect x="57.6661%" y="533" width="1.9591%" height="15" fill="rgb(209,209,32)" fg:x="677" fg:w="23"/><text x="57.9161%" y="543.50">[..</text></g><g><title>[unknown] (23 samples, 1.96%)</title><rect x="57.6661%" y="517" width="1.9591%" height="15" fill="rgb(221,70,22)" fg:x="677" fg:w="23"/><text x="57.9161%" y="527.50">[..</text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="58.0920%" y="501" width="1.5332%" height="15" fill="rgb(248,145,5)" fg:x="682" fg:w="18"/><text x="58.3420%" y="511.50"></text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="58.0920%" y="485" width="1.5332%" height="15" fill="rgb(226,116,26)" fg:x="682" fg:w="18"/><text x="58.3420%" y="495.50"></text></g><g><title>[unknown] (17 samples, 1.45%)</title><rect x="58.1772%" y="469" width="1.4480%" height="15" fill="rgb(244,5,17)" fg:x="683" fg:w="17"/><text x="58.4272%" y="479.50"></text></g><g><title>[unknown] (15 samples, 1.28%)</title><rect x="58.3475%" y="453" width="1.2777%" height="15" fill="rgb(252,159,33)" fg:x="685" fg:w="15"/><text x="58.5975%" y="463.50"></text></g><g><title>[unknown] (13 samples, 1.11%)</title><rect x="58.5179%" y="437" width="1.1073%" height="15" fill="rgb(206,71,0)" fg:x="687" fg:w="13"/><text x="58.7679%" y="447.50"></text></g><g><title>[unknown] (12 samples, 1.02%)</title><rect x="58.6031%" y="421" width="1.0221%" height="15" fill="rgb(233,118,54)" fg:x="688" fg:w="12"/><text x="58.8531%" y="431.50"></text></g><g><title>[unknown] (11 samples, 0.94%)</title><rect x="58.6882%" y="405" width="0.9370%" height="15" fill="rgb(234,83,48)" fg:x="689" fg:w="11"/><text x="58.9382%" y="415.50"></text></g><g><title>[unknown] (10 samples, 0.85%)</title><rect x="58.7734%" y="389" width="0.8518%" height="15" fill="rgb(228,3,54)" fg:x="690" fg:w="10"/><text x="59.0234%" y="399.50"></text></g><g><title>[unknown] (10 samples, 0.85%)</title><rect x="58.7734%" y="373" width="0.8518%" height="15" fill="rgb(226,155,13)" fg:x="690" fg:w="10"/><text x="59.0234%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.09%)</title><rect x="62.4361%" y="597" width="0.0852%" height="15" fill="rgb(241,28,37)" fg:x="733" fg:w="1"/><text x="62.6861%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="62.4361%" y="581" width="0.0852%" height="15" fill="rgb(233,93,10)" fg:x="733" fg:w="1"/><text x="62.6861%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (21 samples, 1.79%)</title><rect x="62.5213%" y="597" width="1.7888%" height="15" fill="rgb(225,113,19)" fg:x="734" fg:w="21"/><text x="62.7713%" y="607.50">c..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 1.79%)</title><rect x="62.5213%" y="581" width="1.7888%" height="15" fill="rgb(241,2,18)" fg:x="734" fg:w="21"/><text x="62.7713%" y="591.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.43%)</title><rect x="64.3101%" y="597" width="0.4259%" height="15" fill="rgb(228,207,21)" fg:x="755" fg:w="5"/><text x="64.5601%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.43%)</title><rect x="64.3101%" y="581" width="0.4259%" height="15" fill="rgb(213,211,35)" fg:x="755" fg:w="5"/><text x="64.5601%" y="591.50"></text></g><g><title>core::sync::atomic::fence (3 samples, 0.26%)</title><rect x="64.7359%" y="597" width="0.2555%" height="15" fill="rgb(209,83,10)" fg:x="760" fg:w="3"/><text x="64.9859%" y="607.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (8 samples, 0.68%)</title><rect x="64.9915%" y="597" width="0.6814%" height="15" fill="rgb(209,164,1)" fg:x="763" fg:w="8"/><text x="65.2415%" y="607.50"></text></g><g><title>__GI___sched_yield (8 samples, 0.68%)</title><rect x="64.9915%" y="581" width="0.6814%" height="15" fill="rgb(213,184,43)" fg:x="763" fg:w="8"/><text x="65.2415%" y="591.50"></text></g><g><title>[unknown] (8 samples, 0.68%)</title><rect x="64.9915%" y="565" width="0.6814%" height="15" fill="rgb(231,61,34)" fg:x="763" fg:w="8"/><text x="65.2415%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="65.1618%" y="549" width="0.5111%" height="15" fill="rgb(235,75,3)" fg:x="765" fg:w="6"/><text x="65.4118%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="65.1618%" y="533" width="0.5111%" height="15" fill="rgb(220,106,47)" fg:x="765" fg:w="6"/><text x="65.4118%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="65.3322%" y="517" width="0.3407%" height="15" fill="rgb(210,196,33)" fg:x="767" fg:w="4"/><text x="65.5822%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="65.3322%" y="501" width="0.3407%" height="15" fill="rgb(229,154,42)" fg:x="767" fg:w="4"/><text x="65.5822%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="65.3322%" y="485" width="0.3407%" height="15" fill="rgb(228,114,26)" fg:x="767" fg:w="4"/><text x="65.5822%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.34%)</title><rect x="65.3322%" y="469" width="0.3407%" height="15" fill="rgb(208,144,1)" fg:x="767" fg:w="4"/><text x="65.5822%" y="479.50"></text></g><g><title>[unknown] (3 samples, 0.26%)</title><rect x="65.4174%" y="453" width="0.2555%" height="15" fill="rgb(239,112,37)" fg:x="768" fg:w="3"/><text x="65.6674%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.17%)</title><rect x="65.5026%" y="437" width="0.1704%" height="15" fill="rgb(210,96,50)" fg:x="769" fg:w="2"/><text x="65.7526%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="65.5877%" y="421" width="0.0852%" height="15" fill="rgb(222,178,2)" fg:x="770" fg:w="1"/><text x="65.8377%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.09%)</title><rect x="65.6729%" y="581" width="0.0852%" height="15" fill="rgb(226,74,18)" fg:x="771" fg:w="1"/><text x="65.9229%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.09%)</title><rect x="65.6729%" y="565" width="0.0852%" height="15" fill="rgb(225,67,54)" fg:x="771" fg:w="1"/><text x="65.9229%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.09%)</title><rect x="65.6729%" y="549" width="0.0852%" height="15" fill="rgb(251,92,32)" fg:x="771" fg:w="1"/><text x="65.9229%" y="559.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (74 samples, 6.30%)</title><rect x="59.6252%" y="613" width="6.3032%" height="15" fill="rgb(228,149,22)" fg:x="700" fg:w="74"/><text x="59.8752%" y="623.50">crossbea..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (3 samples, 0.26%)</title><rect x="65.6729%" y="597" width="0.2555%" height="15" fill="rgb(243,54,13)" fg:x="771" fg:w="3"/><text x="65.9229%" y="607.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (2 samples, 0.17%)</title><rect x="65.7581%" y="581" width="0.1704%" height="15" fill="rgb(243,180,28)" fg:x="772" fg:w="2"/><text x="66.0081%" y="591.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.17%)</title><rect x="65.7581%" y="565" width="0.1704%" height="15" fill="rgb(208,167,24)" fg:x="772" fg:w="2"/><text x="66.0081%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.17%)</title><rect x="65.7581%" y="549" width="0.1704%" height="15" fill="rgb(245,73,45)" fg:x="772" fg:w="2"/><text x="66.0081%" y="559.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (242 samples, 20.61%)</title><rect x="45.4003%" y="645" width="20.6133%" height="15" fill="rgb(237,203,48)" fg:x="533" fg:w="242"/><text x="45.6503%" y="655.50">crossbeam_channel::channel::Rece..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (214 samples, 18.23%)</title><rect x="47.7853%" y="629" width="18.2283%" height="15" fill="rgb(211,197,16)" fg:x="561" fg:w="214"/><text x="48.0353%" y="639.50">crossbeam_channel::flavors::..</text></g><g><title>crossbeam_utils::backoff::Backoff::new (1 samples, 0.09%)</title><rect x="65.9284%" y="613" width="0.0852%" height="15" fill="rgb(243,99,51)" fg:x="774" fg:w="1"/><text x="66.1784%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="65.9284%" y="597" width="0.0852%" height="15" fill="rgb(215,123,29)" fg:x="774" fg:w="1"/><text x="66.1784%" y="607.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::new (1 samples, 0.09%)</title><rect x="65.9284%" y="581" width="0.0852%" height="15" fill="rgb(239,186,37)" fg:x="774" fg:w="1"/><text x="66.1784%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.17%)</title><rect x="67.8024%" y="629" width="0.1704%" height="15" fill="rgb(252,136,39)" fg:x="796" fg:w="2"/><text x="68.0524%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.17%)</title><rect x="68.1431%" y="613" width="0.1704%" height="15" fill="rgb(223,213,32)" fg:x="800" fg:w="2"/><text x="68.3931%" y="623.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.26%)</title><rect x="69.2504%" y="581" width="0.2555%" height="15" fill="rgb(233,115,5)" fg:x="813" fg:w="3"/><text x="69.5004%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (16 samples, 1.36%)</title><rect x="69.2504%" y="597" width="1.3629%" height="15" fill="rgb(207,226,44)" fg:x="813" fg:w="16"/><text x="69.5004%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 1.11%)</title><rect x="69.5060%" y="581" width="1.1073%" height="15" fill="rgb(208,126,0)" fg:x="816" fg:w="13"/><text x="69.7560%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 1.11%)</title><rect x="69.5060%" y="565" width="1.1073%" height="15" fill="rgb(244,66,21)" fg:x="816" fg:w="13"/><text x="69.7560%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 1.11%)</title><rect x="69.5060%" y="549" width="1.1073%" height="15" fill="rgb(222,97,12)" fg:x="816" fg:w="13"/><text x="69.7560%" y="559.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 1.11%)</title><rect x="69.5060%" y="533" width="1.1073%" height="15" fill="rgb(219,213,19)" fg:x="816" fg:w="13"/><text x="69.7560%" y="543.50"></text></g><g><title>__GI___libc_malloc (13 samples, 1.11%)</title><rect x="69.5060%" y="517" width="1.1073%" height="15" fill="rgb(252,169,30)" fg:x="816" fg:w="13"/><text x="69.7560%" y="527.50"></text></g><g><title>_int_malloc (12 samples, 1.02%)</title><rect x="69.5911%" y="501" width="1.0221%" height="15" fill="rgb(206,32,51)" fg:x="817" fg:w="12"/><text x="69.8411%" y="511.50"></text></g><g><title>malloc_consolidate (1 samples, 0.09%)</title><rect x="70.5281%" y="485" width="0.0852%" height="15" fill="rgb(250,172,42)" fg:x="828" fg:w="1"/><text x="70.7781%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="70.6133%" y="597" width="0.0852%" height="15" fill="rgb(209,34,43)" fg:x="829" fg:w="1"/><text x="70.8633%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.09%)</title><rect x="70.6985%" y="597" width="0.0852%" height="15" fill="rgb(223,11,35)" fg:x="830" fg:w="1"/><text x="70.9485%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="70.6985%" y="581" width="0.0852%" height="15" fill="rgb(251,219,26)" fg:x="830" fg:w="1"/><text x="70.9485%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (22 samples, 1.87%)</title><rect x="70.7836%" y="597" width="1.8739%" height="15" fill="rgb(231,119,3)" fg:x="831" fg:w="22"/><text x="71.0336%" y="607.50">c..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 1.87%)</title><rect x="70.7836%" y="581" width="1.8739%" height="15" fill="rgb(216,97,11)" fg:x="831" fg:w="22"/><text x="71.0336%" y="591.50">c..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (7 samples, 0.60%)</title><rect x="72.6576%" y="597" width="0.5963%" height="15" fill="rgb(223,59,9)" fg:x="853" fg:w="7"/><text x="72.9076%" y="607.50"></text></g><g><title>__GI___sched_yield (7 samples, 0.60%)</title><rect x="72.6576%" y="581" width="0.5963%" height="15" fill="rgb(233,93,31)" fg:x="853" fg:w="7"/><text x="72.9076%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.60%)</title><rect x="72.6576%" y="565" width="0.5963%" height="15" fill="rgb(239,81,33)" fg:x="853" fg:w="7"/><text x="72.9076%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.60%)</title><rect x="72.6576%" y="549" width="0.5963%" height="15" fill="rgb(213,120,34)" fg:x="853" fg:w="7"/><text x="72.9076%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.60%)</title><rect x="72.6576%" y="533" width="0.5963%" height="15" fill="rgb(243,49,53)" fg:x="853" fg:w="7"/><text x="72.9076%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.60%)</title><rect x="72.6576%" y="517" width="0.5963%" height="15" fill="rgb(247,216,33)" fg:x="853" fg:w="7"/><text x="72.9076%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.60%)</title><rect x="72.6576%" y="501" width="0.5963%" height="15" fill="rgb(226,26,14)" fg:x="853" fg:w="7"/><text x="72.9076%" y="511.50"></text></g><g><title>[unknown] (7 samples, 0.60%)</title><rect x="72.6576%" y="485" width="0.5963%" height="15" fill="rgb(215,49,53)" fg:x="853" fg:w="7"/><text x="72.9076%" y="495.50"></text></g><g><title>[unknown] (7 samples, 0.60%)</title><rect x="72.6576%" y="469" width="0.5963%" height="15" fill="rgb(245,162,40)" fg:x="853" fg:w="7"/><text x="72.9076%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="72.7428%" y="453" width="0.5111%" height="15" fill="rgb(229,68,17)" fg:x="854" fg:w="6"/><text x="72.9928%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="72.7428%" y="437" width="0.5111%" height="15" fill="rgb(213,182,10)" fg:x="854" fg:w="6"/><text x="72.9928%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="72.8279%" y="421" width="0.4259%" height="15" fill="rgb(245,125,30)" fg:x="855" fg:w="5"/><text x="73.0779%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="72.8279%" y="405" width="0.4259%" height="15" fill="rgb(232,202,2)" fg:x="855" fg:w="5"/><text x="73.0779%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="72.8279%" y="389" width="0.4259%" height="15" fill="rgb(237,140,51)" fg:x="855" fg:w="5"/><text x="73.0779%" y="399.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.26%)</title><rect x="73.2538%" y="581" width="0.2555%" height="15" fill="rgb(236,157,25)" fg:x="860" fg:w="3"/><text x="73.5038%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.26%)</title><rect x="73.2538%" y="565" width="0.2555%" height="15" fill="rgb(219,209,0)" fg:x="860" fg:w="3"/><text x="73.5038%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (3 samples, 0.26%)</title><rect x="73.2538%" y="549" width="0.2555%" height="15" fill="rgb(240,116,54)" fg:x="860" fg:w="3"/><text x="73.5038%" y="559.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (70 samples, 5.96%)</title><rect x="68.3135%" y="613" width="5.9625%" height="15" fill="rgb(216,10,36)" fg:x="802" fg:w="70"/><text x="68.5635%" y="623.50">crossbea..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (12 samples, 1.02%)</title><rect x="73.2538%" y="597" width="1.0221%" height="15" fill="rgb(222,72,44)" fg:x="860" fg:w="12"/><text x="73.5038%" y="607.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (9 samples, 0.77%)</title><rect x="73.5094%" y="581" width="0.7666%" height="15" fill="rgb(232,159,9)" fg:x="863" fg:w="9"/><text x="73.7594%" y="591.50"></text></g><g><title>core::hint::spin_loop (9 samples, 0.77%)</title><rect x="73.5094%" y="565" width="0.7666%" height="15" fill="rgb(210,39,32)" fg:x="863" fg:w="9"/><text x="73.7594%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (9 samples, 0.77%)</title><rect x="73.5094%" y="549" width="0.7666%" height="15" fill="rgb(216,194,45)" fg:x="863" fg:w="9"/><text x="73.7594%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.17%)</title><rect x="74.2760%" y="597" width="0.1704%" height="15" fill="rgb(218,18,35)" fg:x="872" fg:w="2"/><text x="74.5260%" y="607.50"></text></g><g><title>core::ptr::write (2 samples, 0.17%)</title><rect x="74.2760%" y="581" width="0.1704%" height="15" fill="rgb(207,83,51)" fg:x="872" fg:w="2"/><text x="74.5260%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.17%)</title><rect x="74.4463%" y="597" width="0.1704%" height="15" fill="rgb(225,63,43)" fg:x="874" fg:w="2"/><text x="74.6963%" y="607.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.17%)</title><rect x="74.4463%" y="581" width="0.1704%" height="15" fill="rgb(207,57,36)" fg:x="874" fg:w="2"/><text x="74.6963%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.17%)</title><rect x="74.4463%" y="565" width="0.1704%" height="15" fill="rgb(216,99,33)" fg:x="874" fg:w="2"/><text x="74.6963%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (24 samples, 2.04%)</title><rect x="74.6167%" y="597" width="2.0443%" height="15" fill="rgb(225,42,16)" fg:x="876" fg:w="24"/><text x="74.8667%" y="607.50">c..</text></g><g><title>core::sync::atomic::atomic_or (24 samples, 2.04%)</title><rect x="74.6167%" y="581" width="2.0443%" height="15" fill="rgb(220,201,45)" fg:x="876" fg:w="24"/><text x="74.8667%" y="591.50">c..</text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="581" width="0.4259%" height="15" fill="rgb(225,33,4)" fg:x="900" fg:w="5"/><text x="76.9110%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="565" width="0.4259%" height="15" fill="rgb(224,33,50)" fg:x="900" fg:w="5"/><text x="76.9110%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="549" width="0.4259%" height="15" fill="rgb(246,198,51)" fg:x="900" fg:w="5"/><text x="76.9110%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="533" width="0.4259%" height="15" fill="rgb(205,22,4)" fg:x="900" fg:w="5"/><text x="76.9110%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="517" width="0.4259%" height="15" fill="rgb(206,3,8)" fg:x="900" fg:w="5"/><text x="76.9110%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="501" width="0.4259%" height="15" fill="rgb(251,23,15)" fg:x="900" fg:w="5"/><text x="76.9110%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="485" width="0.4259%" height="15" fill="rgb(252,88,28)" fg:x="900" fg:w="5"/><text x="76.9110%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="469" width="0.4259%" height="15" fill="rgb(212,127,14)" fg:x="900" fg:w="5"/><text x="76.9110%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="453" width="0.4259%" height="15" fill="rgb(247,145,37)" fg:x="900" fg:w="5"/><text x="76.9110%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="437" width="0.4259%" height="15" fill="rgb(209,117,53)" fg:x="900" fg:w="5"/><text x="76.9110%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="421" width="0.4259%" height="15" fill="rgb(212,90,42)" fg:x="900" fg:w="5"/><text x="76.9110%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="405" width="0.4259%" height="15" fill="rgb(218,164,37)" fg:x="900" fg:w="5"/><text x="76.9110%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="76.6610%" y="389" width="0.4259%" height="15" fill="rgb(246,65,34)" fg:x="900" fg:w="5"/><text x="76.9110%" y="399.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (139 samples, 11.84%)</title><rect x="66.0136%" y="645" width="11.8399%" height="15" fill="rgb(231,100,33)" fg:x="775" fg:w="139"/><text x="66.2636%" y="655.50">crossbeam_channel:..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (116 samples, 9.88%)</title><rect x="67.9727%" y="629" width="9.8807%" height="15" fill="rgb(228,126,14)" fg:x="798" fg:w="116"/><text x="68.2227%" y="639.50">crossbeam_chan..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (42 samples, 3.58%)</title><rect x="74.2760%" y="613" width="3.5775%" height="15" fill="rgb(215,173,21)" fg:x="872" fg:w="42"/><text x="74.5260%" y="623.50">cros..</text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (14 samples, 1.19%)</title><rect x="76.6610%" y="597" width="1.1925%" height="15" fill="rgb(210,6,40)" fg:x="900" fg:w="14"/><text x="76.9110%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (9 samples, 0.77%)</title><rect x="77.0869%" y="581" width="0.7666%" height="15" fill="rgb(212,48,18)" fg:x="905" fg:w="9"/><text x="77.3369%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.77%)</title><rect x="77.0869%" y="565" width="0.7666%" height="15" fill="rgb(230,214,11)" fg:x="905" fg:w="9"/><text x="77.3369%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.17%)</title><rect x="77.9387%" y="629" width="0.1704%" height="15" fill="rgb(254,105,39)" fg:x="915" fg:w="2"/><text x="78.1887%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="77.9387%" y="613" width="0.1704%" height="15" fill="rgb(245,158,5)" fg:x="915" fg:w="2"/><text x="78.1887%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="77.9387%" y="597" width="0.1704%" height="15" fill="rgb(249,208,11)" fg:x="915" fg:w="2"/><text x="78.1887%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.17%)</title><rect x="77.9387%" y="581" width="0.1704%" height="15" fill="rgb(210,39,28)" fg:x="915" fg:w="2"/><text x="78.1887%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.17%)</title><rect x="77.9387%" y="565" width="0.1704%" height="15" fill="rgb(211,56,53)" fg:x="915" fg:w="2"/><text x="78.1887%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.17%)</title><rect x="77.9387%" y="549" width="0.1704%" height="15" fill="rgb(226,201,30)" fg:x="915" fg:w="2"/><text x="78.1887%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.17%)</title><rect x="77.9387%" y="533" width="0.1704%" height="15" fill="rgb(239,101,34)" fg:x="915" fg:w="2"/><text x="78.1887%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.17%)</title><rect x="77.9387%" y="517" width="0.1704%" height="15" fill="rgb(226,209,5)" fg:x="915" fg:w="2"/><text x="78.1887%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.09%)</title><rect x="78.0239%" y="501" width="0.0852%" height="15" fill="rgb(250,105,47)" fg:x="916" fg:w="1"/><text x="78.2739%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.09%)</title><rect x="78.0239%" y="485" width="0.0852%" height="15" fill="rgb(230,72,3)" fg:x="916" fg:w="1"/><text x="78.2739%" y="495.50"></text></g><g><title>core::ptr::write (1 samples, 0.09%)</title><rect x="78.0239%" y="469" width="0.0852%" height="15" fill="rgb(232,218,39)" fg:x="916" fg:w="1"/><text x="78.2739%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.17%)</title><rect x="78.2794%" y="613" width="0.1704%" height="15" fill="rgb(248,166,6)" fg:x="919" fg:w="2"/><text x="78.5294%" y="623.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.17%)</title><rect x="78.2794%" y="597" width="0.1704%" height="15" fill="rgb(247,89,20)" fg:x="919" fg:w="2"/><text x="78.5294%" y="607.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.17%)</title><rect x="78.2794%" y="581" width="0.1704%" height="15" fill="rgb(248,130,54)" fg:x="919" fg:w="2"/><text x="78.5294%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="78.4497%" y="613" width="0.0852%" height="15" fill="rgb(234,196,4)" fg:x="921" fg:w="1"/><text x="78.6997%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="78.4497%" y="597" width="0.0852%" height="15" fill="rgb(250,143,31)" fg:x="921" fg:w="1"/><text x="78.6997%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="78.4497%" y="581" width="0.0852%" height="15" fill="rgb(211,110,34)" fg:x="921" fg:w="1"/><text x="78.6997%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="78.4497%" y="565" width="0.0852%" height="15" fill="rgb(215,124,48)" fg:x="921" fg:w="1"/><text x="78.6997%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="78.4497%" y="549" width="0.0852%" height="15" fill="rgb(216,46,13)" fg:x="921" fg:w="1"/><text x="78.6997%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="78.4497%" y="533" width="0.0852%" height="15" fill="rgb(205,184,25)" fg:x="921" fg:w="1"/><text x="78.6997%" y="543.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.09%)</title><rect x="78.5349%" y="501" width="0.0852%" height="15" fill="rgb(228,1,10)" fg:x="922" fg:w="1"/><text x="78.7849%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.09%)</title><rect x="78.5349%" y="485" width="0.0852%" height="15" fill="rgb(213,116,27)" fg:x="922" fg:w="1"/><text x="78.7849%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (4 samples, 0.34%)</title><rect x="78.5349%" y="613" width="0.3407%" height="15" fill="rgb(241,95,50)" fg:x="922" fg:w="4"/><text x="78.7849%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.34%)</title><rect x="78.5349%" y="597" width="0.3407%" height="15" fill="rgb(238,48,32)" fg:x="922" fg:w="4"/><text x="78.7849%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.34%)</title><rect x="78.5349%" y="581" width="0.3407%" height="15" fill="rgb(235,113,49)" fg:x="922" fg:w="4"/><text x="78.7849%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.34%)</title><rect x="78.5349%" y="565" width="0.3407%" height="15" fill="rgb(205,127,43)" fg:x="922" fg:w="4"/><text x="78.7849%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.34%)</title><rect x="78.5349%" y="549" width="0.3407%" height="15" fill="rgb(250,162,2)" fg:x="922" fg:w="4"/><text x="78.7849%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.34%)</title><rect x="78.5349%" y="533" width="0.3407%" height="15" fill="rgb(220,13,41)" fg:x="922" fg:w="4"/><text x="78.7849%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.34%)</title><rect x="78.5349%" y="517" width="0.3407%" height="15" fill="rgb(249,221,25)" fg:x="922" fg:w="4"/><text x="78.7849%" y="527.50"></text></g><g><title>_int_free (3 samples, 0.26%)</title><rect x="78.6201%" y="501" width="0.2555%" height="15" fill="rgb(215,208,19)" fg:x="923" fg:w="3"/><text x="78.8701%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (76 samples, 6.47%)</title><rect x="80.0681%" y="325" width="6.4736%" height="15" fill="rgb(236,175,2)" fg:x="940" fg:w="76"/><text x="80.3181%" y="335.50">&lt;core::i..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (73 samples, 6.22%)</title><rect x="80.3237%" y="309" width="6.2181%" height="15" fill="rgb(241,52,2)" fg:x="943" fg:w="73"/><text x="80.5737%" y="319.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (73 samples, 6.22%)</title><rect x="80.3237%" y="293" width="6.2181%" height="15" fill="rgb(248,140,14)" fg:x="943" fg:w="73"/><text x="80.5737%" y="303.50">&lt;alloc::..</text></g><g><title>hex::val (54 samples, 4.60%)</title><rect x="81.9421%" y="277" width="4.5997%" height="15" fill="rgb(253,22,42)" fg:x="962" fg:w="54"/><text x="82.1921%" y="287.50">hex::..</text></g><g><title>core::cmp::min (1 samples, 0.09%)</title><rect x="87.1380%" y="309" width="0.0852%" height="15" fill="rgb(234,61,47)" fg:x="1023" fg:w="1"/><text x="87.3880%" y="319.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.09%)</title><rect x="87.1380%" y="293" width="0.0852%" height="15" fill="rgb(208,226,15)" fg:x="1023" fg:w="1"/><text x="87.3880%" y="303.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.09%)</title><rect x="87.1380%" y="277" width="0.0852%" height="15" fill="rgb(217,221,4)" fg:x="1023" fg:w="1"/><text x="87.3880%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 7.33%)</title><rect x="79.9830%" y="421" width="7.3254%" height="15" fill="rgb(212,174,34)" fg:x="939" fg:w="86"/><text x="80.2330%" y="431.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (85 samples, 7.24%)</title><rect x="80.0681%" y="405" width="7.2402%" height="15" fill="rgb(253,83,4)" fg:x="940" fg:w="85"/><text x="80.3181%" y="415.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (85 samples, 7.24%)</title><rect x="80.0681%" y="389" width="7.2402%" height="15" fill="rgb(250,195,49)" fg:x="940" fg:w="85"/><text x="80.3181%" y="399.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (85 samples, 7.24%)</title><rect x="80.0681%" y="373" width="7.2402%" height="15" fill="rgb(241,192,25)" fg:x="940" fg:w="85"/><text x="80.3181%" y="383.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (85 samples, 7.24%)</title><rect x="80.0681%" y="357" width="7.2402%" height="15" fill="rgb(208,124,10)" fg:x="940" fg:w="85"/><text x="80.3181%" y="367.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (85 samples, 7.24%)</title><rect x="80.0681%" y="341" width="7.2402%" height="15" fill="rgb(222,33,0)" fg:x="940" fg:w="85"/><text x="80.3181%" y="351.50">core::iter..</text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.77%)</title><rect x="86.5417%" y="325" width="0.7666%" height="15" fill="rgb(234,209,28)" fg:x="1016" fg:w="9"/><text x="86.7917%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.09%)</title><rect x="87.2232%" y="309" width="0.0852%" height="15" fill="rgb(224,11,23)" fg:x="1024" fg:w="1"/><text x="87.4732%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.09%)</title><rect x="87.2232%" y="293" width="0.0852%" height="15" fill="rgb(232,99,1)" fg:x="1024" fg:w="1"/><text x="87.4732%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (5 samples, 0.43%)</title><rect x="87.3083%" y="421" width="0.4259%" height="15" fill="rgb(237,95,45)" fg:x="1025" fg:w="5"/><text x="87.5583%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.09%)</title><rect x="87.6491%" y="405" width="0.0852%" height="15" fill="rgb(208,109,11)" fg:x="1029" fg:w="1"/><text x="87.8991%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.09%)</title><rect x="87.7342%" y="357" width="0.0852%" height="15" fill="rgb(216,190,48)" fg:x="1030" fg:w="1"/><text x="87.9842%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="88.9267%" y="261" width="0.0852%" height="15" fill="rgb(251,171,36)" fg:x="1044" fg:w="1"/><text x="89.1767%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 1.36%)</title><rect x="87.8194%" y="341" width="1.3629%" height="15" fill="rgb(230,62,22)" fg:x="1031" fg:w="16"/><text x="88.0694%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 1.36%)</title><rect x="87.8194%" y="325" width="1.3629%" height="15" fill="rgb(225,114,35)" fg:x="1031" fg:w="16"/><text x="88.0694%" y="335.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 1.36%)</title><rect x="87.8194%" y="309" width="1.3629%" height="15" fill="rgb(215,118,42)" fg:x="1031" fg:w="16"/><text x="88.0694%" y="319.50"></text></g><g><title>__GI___libc_realloc (16 samples, 1.36%)</title><rect x="87.8194%" y="293" width="1.3629%" height="15" fill="rgb(243,119,21)" fg:x="1031" fg:w="16"/><text x="88.0694%" y="303.50"></text></g><g><title>_int_realloc (8 samples, 0.68%)</title><rect x="88.5009%" y="277" width="0.6814%" height="15" fill="rgb(252,177,53)" fg:x="1039" fg:w="8"/><text x="88.7509%" y="287.50"></text></g><g><title>_int_malloc (2 samples, 0.17%)</title><rect x="89.0119%" y="261" width="0.1704%" height="15" fill="rgb(237,209,29)" fg:x="1045" fg:w="2"/><text x="89.2619%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 1.45%)</title><rect x="87.8194%" y="357" width="1.4480%" height="15" fill="rgb(212,65,23)" fg:x="1031" fg:w="17"/><text x="88.0694%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.09%)</title><rect x="89.1823%" y="341" width="0.0852%" height="15" fill="rgb(230,222,46)" fg:x="1047" fg:w="1"/><text x="89.4323%" y="351.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.09%)</title><rect x="89.2675%" y="357" width="0.0852%" height="15" fill="rgb(215,135,32)" fg:x="1048" fg:w="1"/><text x="89.5175%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.09%)</title><rect x="89.2675%" y="341" width="0.0852%" height="15" fill="rgb(246,101,22)" fg:x="1048" fg:w="1"/><text x="89.5175%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (22 samples, 1.87%)</title><rect x="87.7342%" y="421" width="1.8739%" height="15" fill="rgb(206,107,13)" fg:x="1030" fg:w="22"/><text x="87.9842%" y="431.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (22 samples, 1.87%)</title><rect x="87.7342%" y="405" width="1.8739%" height="15" fill="rgb(250,100,44)" fg:x="1030" fg:w="22"/><text x="87.9842%" y="415.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (22 samples, 1.87%)</title><rect x="87.7342%" y="389" width="1.8739%" height="15" fill="rgb(231,147,38)" fg:x="1030" fg:w="22"/><text x="87.9842%" y="399.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 1.87%)</title><rect x="87.7342%" y="373" width="1.8739%" height="15" fill="rgb(229,8,40)" fg:x="1030" fg:w="22"/><text x="87.9842%" y="383.50">a..</text></g><g><title>core::cmp::max (3 samples, 0.26%)</title><rect x="89.3526%" y="357" width="0.2555%" height="15" fill="rgb(221,135,30)" fg:x="1049" fg:w="3"/><text x="89.6026%" y="367.50"></text></g><g><title>core::cmp::Ord::max (3 samples, 0.26%)</title><rect x="89.3526%" y="341" width="0.2555%" height="15" fill="rgb(249,193,18)" fg:x="1049" fg:w="3"/><text x="89.6026%" y="351.50"></text></g><g><title>core::cmp::max_by (3 samples, 0.26%)</title><rect x="89.3526%" y="325" width="0.2555%" height="15" fill="rgb(209,133,39)" fg:x="1049" fg:w="3"/><text x="89.6026%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.17%)</title><rect x="89.6082%" y="421" width="0.1704%" height="15" fill="rgb(232,100,14)" fg:x="1052" fg:w="2"/><text x="89.8582%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (133 samples, 11.33%)</title><rect x="78.9608%" y="453" width="11.3288%" height="15" fill="rgb(224,185,1)" fg:x="927" fg:w="133"/><text x="79.2108%" y="463.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (133 samples, 11.33%)</title><rect x="78.9608%" y="437" width="11.3288%" height="15" fill="rgb(223,139,8)" fg:x="927" fg:w="133"/><text x="79.2108%" y="447.50">alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::write (6 samples, 0.51%)</title><rect x="89.7785%" y="421" width="0.5111%" height="15" fill="rgb(232,213,38)" fg:x="1054" fg:w="6"/><text x="90.0285%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.09%)</title><rect x="90.2896%" y="357" width="0.0852%" height="15" fill="rgb(207,94,22)" fg:x="1060" fg:w="1"/><text x="90.5396%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.09%)</title><rect x="90.2896%" y="341" width="0.0852%" height="15" fill="rgb(219,183,54)" fg:x="1060" fg:w="1"/><text x="90.5396%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (1 samples, 0.09%)</title><rect x="90.2896%" y="325" width="0.0852%" height="15" fill="rgb(216,185,54)" fg:x="1060" fg:w="1"/><text x="90.5396%" y="335.50"></text></g><g><title>hex::val (1 samples, 0.09%)</title><rect x="90.2896%" y="309" width="0.0852%" height="15" fill="rgb(254,217,39)" fg:x="1060" fg:w="1"/><text x="90.5396%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.17%)</title><rect x="90.2896%" y="453" width="0.1704%" height="15" fill="rgb(240,178,23)" fg:x="1060" fg:w="2"/><text x="90.5396%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.17%)</title><rect x="90.2896%" y="437" width="0.1704%" height="15" fill="rgb(218,11,47)" fg:x="1060" fg:w="2"/><text x="90.5396%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.17%)</title><rect x="90.2896%" y="421" width="0.1704%" height="15" fill="rgb(218,51,51)" fg:x="1060" fg:w="2"/><text x="90.5396%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.17%)</title><rect x="90.2896%" y="405" width="0.1704%" height="15" fill="rgb(238,126,27)" fg:x="1060" fg:w="2"/><text x="90.5396%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.17%)</title><rect x="90.2896%" y="389" width="0.1704%" height="15" fill="rgb(249,202,22)" fg:x="1060" fg:w="2"/><text x="90.5396%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.17%)</title><rect x="90.2896%" y="373" width="0.1704%" height="15" fill="rgb(254,195,49)" fg:x="1060" fg:w="2"/><text x="90.5396%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="90.3748%" y="357" width="0.0852%" height="15" fill="rgb(208,123,14)" fg:x="1061" fg:w="1"/><text x="90.6248%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.09%)</title><rect x="90.3748%" y="341" width="0.0852%" height="15" fill="rgb(224,200,8)" fg:x="1061" fg:w="1"/><text x="90.6248%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.09%)</title><rect x="90.3748%" y="325" width="0.0852%" height="15" fill="rgb(217,61,36)" fg:x="1061" fg:w="1"/><text x="90.6248%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.09%)</title><rect x="90.3748%" y="309" width="0.0852%" height="15" fill="rgb(206,35,45)" fg:x="1061" fg:w="1"/><text x="90.6248%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.17%)</title><rect x="90.4600%" y="453" width="0.1704%" height="15" fill="rgb(217,65,33)" fg:x="1062" fg:w="2"/><text x="90.7100%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.17%)</title><rect x="90.4600%" y="437" width="0.1704%" height="15" fill="rgb(222,158,48)" fg:x="1062" fg:w="2"/><text x="90.7100%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="90.6303%" y="341" width="0.0852%" height="15" fill="rgb(254,2,54)" fg:x="1064" fg:w="1"/><text x="90.8803%" y="351.50"></text></g><g><title>hex::decode (140 samples, 11.93%)</title><rect x="78.8756%" y="613" width="11.9250%" height="15" fill="rgb(250,143,38)" fg:x="926" fg:w="140"/><text x="79.1256%" y="623.50">hex::decode</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (140 samples, 11.93%)</title><rect x="78.8756%" y="597" width="11.9250%" height="15" fill="rgb(248,25,0)" fg:x="926" fg:w="140"/><text x="79.1256%" y="607.50">&lt;alloc::vec::Vec&lt;u..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (140 samples, 11.93%)</title><rect x="78.8756%" y="581" width="11.9250%" height="15" fill="rgb(206,152,27)" fg:x="926" fg:w="140"/><text x="79.1256%" y="591.50">core::iter::traits..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (140 samples, 11.93%)</title><rect x="78.8756%" y="565" width="11.9250%" height="15" fill="rgb(240,77,30)" fg:x="926" fg:w="140"/><text x="79.1256%" y="575.50">&lt;core::result::Res..</text></g><g><title>core::iter::adapters::try_process (140 samples, 11.93%)</title><rect x="78.8756%" y="549" width="11.9250%" height="15" fill="rgb(231,5,3)" fg:x="926" fg:w="140"/><text x="79.1256%" y="559.50">core::iter::adapte..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (140 samples, 11.93%)</title><rect x="78.8756%" y="533" width="11.9250%" height="15" fill="rgb(207,226,32)" fg:x="926" fg:w="140"/><text x="79.1256%" y="543.50">&lt;core::result::Res..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (140 samples, 11.93%)</title><rect x="78.8756%" y="517" width="11.9250%" height="15" fill="rgb(222,207,47)" fg:x="926" fg:w="140"/><text x="79.1256%" y="527.50">core::iter::traits..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (140 samples, 11.93%)</title><rect x="78.8756%" y="501" width="11.9250%" height="15" fill="rgb(229,115,45)" fg:x="926" fg:w="140"/><text x="79.1256%" y="511.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (140 samples, 11.93%)</title><rect x="78.8756%" y="485" width="11.9250%" height="15" fill="rgb(224,191,6)" fg:x="926" fg:w="140"/><text x="79.1256%" y="495.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (140 samples, 11.93%)</title><rect x="78.8756%" y="469" width="11.9250%" height="15" fill="rgb(230,227,24)" fg:x="926" fg:w="140"/><text x="79.1256%" y="479.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.17%)</title><rect x="90.6303%" y="453" width="0.1704%" height="15" fill="rgb(228,80,19)" fg:x="1064" fg:w="2"/><text x="90.8803%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="90.6303%" y="437" width="0.1704%" height="15" fill="rgb(247,229,0)" fg:x="1064" fg:w="2"/><text x="90.8803%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="90.6303%" y="421" width="0.1704%" height="15" fill="rgb(237,194,15)" fg:x="1064" fg:w="2"/><text x="90.8803%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="90.6303%" y="405" width="0.1704%" height="15" fill="rgb(219,203,20)" fg:x="1064" fg:w="2"/><text x="90.8803%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.17%)</title><rect x="90.6303%" y="389" width="0.1704%" height="15" fill="rgb(234,128,8)" fg:x="1064" fg:w="2"/><text x="90.8803%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.17%)</title><rect x="90.6303%" y="373" width="0.1704%" height="15" fill="rgb(248,202,8)" fg:x="1064" fg:w="2"/><text x="90.8803%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.17%)</title><rect x="90.6303%" y="357" width="0.1704%" height="15" fill="rgb(206,104,37)" fg:x="1064" fg:w="2"/><text x="90.8803%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.09%)</title><rect x="90.7155%" y="341" width="0.0852%" height="15" fill="rgb(223,8,27)" fg:x="1065" fg:w="1"/><text x="90.9655%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.09%)</title><rect x="90.7155%" y="325" width="0.0852%" height="15" fill="rgb(216,217,28)" fg:x="1065" fg:w="1"/><text x="90.9655%" y="335.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.09%)</title><rect x="90.8007%" y="517" width="0.0852%" height="15" fill="rgb(249,199,1)" fg:x="1066" fg:w="1"/><text x="91.0507%" y="527.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.09%)</title><rect x="90.8007%" y="501" width="0.0852%" height="15" fill="rgb(240,85,17)" fg:x="1066" fg:w="1"/><text x="91.0507%" y="511.50"></text></g><g><title>alloc::string::String::reserve (3 samples, 0.26%)</title><rect x="90.8859%" y="517" width="0.2555%" height="15" fill="rgb(206,108,45)" fg:x="1067" fg:w="3"/><text x="91.1359%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.26%)</title><rect x="90.8859%" y="501" width="0.2555%" height="15" fill="rgb(245,210,41)" fg:x="1067" fg:w="3"/><text x="91.1359%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.26%)</title><rect x="90.8859%" y="485" width="0.2555%" height="15" fill="rgb(206,13,37)" fg:x="1067" fg:w="3"/><text x="91.1359%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.26%)</title><rect x="90.8859%" y="469" width="0.2555%" height="15" fill="rgb(250,61,18)" fg:x="1067" fg:w="3"/><text x="91.1359%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.26%)</title><rect x="90.8859%" y="453" width="0.2555%" height="15" fill="rgb(235,172,48)" fg:x="1067" fg:w="3"/><text x="91.1359%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.26%)</title><rect x="90.8859%" y="437" width="0.2555%" height="15" fill="rgb(249,201,17)" fg:x="1067" fg:w="3"/><text x="91.1359%" y="447.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.26%)</title><rect x="90.8859%" y="421" width="0.2555%" height="15" fill="rgb(219,208,6)" fg:x="1067" fg:w="3"/><text x="91.1359%" y="431.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.17%)</title><rect x="91.2266%" y="453" width="0.1704%" height="15" fill="rgb(248,31,23)" fg:x="1071" fg:w="2"/><text x="91.4766%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.26%)</title><rect x="91.2266%" y="469" width="0.2555%" height="15" fill="rgb(245,15,42)" fg:x="1071" fg:w="3"/><text x="91.4766%" y="479.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.09%)</title><rect x="91.3969%" y="453" width="0.0852%" height="15" fill="rgb(222,217,39)" fg:x="1073" fg:w="1"/><text x="91.6469%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.68%)</title><rect x="91.4821%" y="469" width="0.6814%" height="15" fill="rgb(210,219,27)" fg:x="1074" fg:w="8"/><text x="91.7321%" y="479.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (7 samples, 0.60%)</title><rect x="91.5673%" y="453" width="0.5963%" height="15" fill="rgb(252,166,36)" fg:x="1075" fg:w="7"/><text x="91.8173%" y="463.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitAnd&lt;u8&gt;&gt;::bitand (1 samples, 0.09%)</title><rect x="92.0784%" y="437" width="0.0852%" height="15" fill="rgb(245,132,34)" fg:x="1081" fg:w="1"/><text x="92.3284%" y="447.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.09%)</title><rect x="92.0784%" y="421" width="0.0852%" height="15" fill="rgb(236,54,3)" fg:x="1081" fg:w="1"/><text x="92.3284%" y="431.50"></text></g><g><title>core::ptr::read (2 samples, 0.17%)</title><rect x="92.1635%" y="437" width="0.1704%" height="15" fill="rgb(241,173,43)" fg:x="1082" fg:w="2"/><text x="92.4135%" y="447.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 1.45%)</title><rect x="91.2266%" y="485" width="1.4480%" height="15" fill="rgb(215,190,9)" fg:x="1071" fg:w="17"/><text x="91.4766%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (6 samples, 0.51%)</title><rect x="92.1635%" y="469" width="0.5111%" height="15" fill="rgb(242,101,16)" fg:x="1082" fg:w="6"/><text x="92.4135%" y="479.50"></text></g><g><title>core::mem::replace (6 samples, 0.51%)</title><rect x="92.1635%" y="453" width="0.5111%" height="15" fill="rgb(223,190,21)" fg:x="1082" fg:w="6"/><text x="92.4135%" y="463.50"></text></g><g><title>core::ptr::write (4 samples, 0.34%)</title><rect x="92.3339%" y="437" width="0.3407%" height="15" fill="rgb(215,228,25)" fg:x="1084" fg:w="4"/><text x="92.5839%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.09%)</title><rect x="93.5264%" y="421" width="0.0852%" height="15" fill="rgb(225,36,22)" fg:x="1098" fg:w="1"/><text x="93.7764%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.09%)</title><rect x="93.5264%" y="405" width="0.0852%" height="15" fill="rgb(251,106,46)" fg:x="1098" fg:w="1"/><text x="93.7764%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 1.45%)</title><rect x="92.6746%" y="437" width="1.4480%" height="15" fill="rgb(208,90,1)" fg:x="1088" fg:w="17"/><text x="92.9246%" y="447.50"></text></g><g><title>core::ptr::write (6 samples, 0.51%)</title><rect x="93.6116%" y="421" width="0.5111%" height="15" fill="rgb(243,10,4)" fg:x="1099" fg:w="6"/><text x="93.8616%" y="431.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (40 samples, 3.41%)</title><rect x="90.8007%" y="597" width="3.4072%" height="15" fill="rgb(212,137,27)" fg:x="1066" fg:w="40"/><text x="91.0507%" y="607.50">&lt;T ..</text></g><g><title>hex::encode_to_iter (40 samples, 3.41%)</title><rect x="90.8007%" y="581" width="3.4072%" height="15" fill="rgb(231,220,49)" fg:x="1066" fg:w="40"/><text x="91.0507%" y="591.50">hex..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (40 samples, 3.41%)</title><rect x="90.8007%" y="565" width="3.4072%" height="15" fill="rgb(237,96,20)" fg:x="1066" fg:w="40"/><text x="91.0507%" y="575.50">cor..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (40 samples, 3.41%)</title><rect x="90.8007%" y="549" width="3.4072%" height="15" fill="rgb(239,229,30)" fg:x="1066" fg:w="40"/><text x="91.0507%" y="559.50">&lt;al..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (40 samples, 3.41%)</title><rect x="90.8007%" y="533" width="3.4072%" height="15" fill="rgb(219,65,33)" fg:x="1066" fg:w="40"/><text x="91.0507%" y="543.50">&lt;al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (36 samples, 3.07%)</title><rect x="91.1414%" y="517" width="3.0664%" height="15" fill="rgb(243,134,7)" fg:x="1070" fg:w="36"/><text x="91.3914%" y="527.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (36 samples, 3.07%)</title><rect x="91.1414%" y="501" width="3.0664%" height="15" fill="rgb(216,177,54)" fg:x="1070" fg:w="36"/><text x="91.3914%" y="511.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (18 samples, 1.53%)</title><rect x="92.6746%" y="485" width="1.5332%" height="15" fill="rgb(211,160,20)" fg:x="1088" fg:w="18"/><text x="92.9246%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (18 samples, 1.53%)</title><rect x="92.6746%" y="469" width="1.5332%" height="15" fill="rgb(239,85,39)" fg:x="1088" fg:w="18"/><text x="92.9246%" y="479.50"></text></g><g><title>alloc::string::String::push (18 samples, 1.53%)</title><rect x="92.6746%" y="453" width="1.5332%" height="15" fill="rgb(232,125,22)" fg:x="1088" fg:w="18"/><text x="92.9246%" y="463.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.09%)</title><rect x="94.1227%" y="437" width="0.0852%" height="15" fill="rgb(244,57,34)" fg:x="1105" fg:w="1"/><text x="94.3727%" y="447.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.09%)</title><rect x="94.1227%" y="421" width="0.0852%" height="15" fill="rgb(214,203,32)" fg:x="1105" fg:w="1"/><text x="94.3727%" y="431.50"></text></g><g><title>__rust_dealloc (1 samples, 0.09%)</title><rect x="94.2078%" y="517" width="0.0852%" height="15" fill="rgb(207,58,43)" fg:x="1106" fg:w="1"/><text x="94.4578%" y="527.50"></text></g><g><title>lab4::checksum::Checksum::update (191 samples, 16.27%)</title><rect x="78.1090%" y="629" width="16.2692%" height="15" fill="rgb(215,193,15)" fg:x="917" fg:w="191"/><text x="78.3590%" y="639.50">lab4::checksum::Checksum:..</text></g><g><title>hex::encode (42 samples, 3.58%)</title><rect x="90.8007%" y="613" width="3.5775%" height="15" fill="rgb(232,15,44)" fg:x="1066" fg:w="42"/><text x="91.0507%" y="623.50">hex:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.17%)</title><rect x="94.2078%" y="597" width="0.1704%" height="15" fill="rgb(212,3,48)" fg:x="1106" fg:w="2"/><text x="94.4578%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.17%)</title><rect x="94.2078%" y="581" width="0.1704%" height="15" fill="rgb(218,128,7)" fg:x="1106" fg:w="2"/><text x="94.4578%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.17%)</title><rect x="94.2078%" y="565" width="0.1704%" height="15" fill="rgb(226,216,39)" fg:x="1106" fg:w="2"/><text x="94.4578%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.17%)</title><rect x="94.2078%" y="549" width="0.1704%" height="15" fill="rgb(243,47,51)" fg:x="1106" fg:w="2"/><text x="94.4578%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.17%)</title><rect x="94.2078%" y="533" width="0.1704%" height="15" fill="rgb(241,183,40)" fg:x="1106" fg:w="2"/><text x="94.4578%" y="543.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="94.2930%" y="517" width="0.0852%" height="15" fill="rgb(231,217,32)" fg:x="1107" fg:w="1"/><text x="94.5430%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="94.5486%" y="517" width="0.1704%" height="15" fill="rgb(229,61,38)" fg:x="1110" fg:w="2"/><text x="94.7986%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.17%)</title><rect x="94.5486%" y="501" width="0.1704%" height="15" fill="rgb(225,210,5)" fg:x="1110" fg:w="2"/><text x="94.7986%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.17%)</title><rect x="94.5486%" y="485" width="0.1704%" height="15" fill="rgb(231,79,45)" fg:x="1110" fg:w="2"/><text x="94.7986%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="94.6337%" y="469" width="0.0852%" height="15" fill="rgb(224,100,7)" fg:x="1111" fg:w="1"/><text x="94.8837%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="94.6337%" y="453" width="0.0852%" height="15" fill="rgb(241,198,18)" fg:x="1111" fg:w="1"/><text x="94.8837%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="94.6337%" y="437" width="0.0852%" height="15" fill="rgb(252,97,53)" fg:x="1111" fg:w="1"/><text x="94.8837%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="94.6337%" y="421" width="0.0852%" height="15" fill="rgb(220,88,7)" fg:x="1111" fg:w="1"/><text x="94.8837%" y="431.50"></text></g><g><title>&lt;lab4::checksum::Checksum as core::clone::Clone&gt;::clone (5 samples, 0.43%)</title><rect x="94.3782%" y="613" width="0.4259%" height="15" fill="rgb(213,176,14)" fg:x="1108" fg:w="5"/><text x="94.6282%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.26%)</title><rect x="94.5486%" y="597" width="0.2555%" height="15" fill="rgb(246,73,7)" fg:x="1110" fg:w="3"/><text x="94.7986%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.26%)</title><rect x="94.5486%" y="581" width="0.2555%" height="15" fill="rgb(245,64,36)" fg:x="1110" fg:w="3"/><text x="94.7986%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.26%)</title><rect x="94.5486%" y="565" width="0.2555%" height="15" fill="rgb(245,80,10)" fg:x="1110" fg:w="3"/><text x="94.7986%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.26%)</title><rect x="94.5486%" y="549" width="0.2555%" height="15" fill="rgb(232,107,50)" fg:x="1110" fg:w="3"/><text x="94.7986%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.26%)</title><rect x="94.5486%" y="533" width="0.2555%" height="15" fill="rgb(253,3,0)" fg:x="1110" fg:w="3"/><text x="94.7986%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.09%)</title><rect x="94.7189%" y="517" width="0.0852%" height="15" fill="rgb(212,99,53)" fg:x="1112" fg:w="1"/><text x="94.9689%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="94.7189%" y="501" width="0.0852%" height="15" fill="rgb(249,111,54)" fg:x="1112" fg:w="1"/><text x="94.9689%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="94.7189%" y="485" width="0.0852%" height="15" fill="rgb(249,55,30)" fg:x="1112" fg:w="1"/><text x="94.9689%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,lab4::checksum::Checksum&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="94.8041%" y="613" width="0.0852%" height="15" fill="rgb(237,47,42)" fg:x="1113" fg:w="1"/><text x="95.0541%" y="623.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="94.8041%" y="597" width="0.0852%" height="15" fill="rgb(211,20,18)" fg:x="1113" fg:w="1"/><text x="95.0541%" y="607.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read_unlock (1 samples, 0.09%)</title><rect x="94.8041%" y="581" width="0.0852%" height="15" fill="rgb(231,203,46)" fg:x="1113" fg:w="1"/><text x="95.0541%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (1 samples, 0.09%)</title><rect x="94.8041%" y="565" width="0.0852%" height="15" fill="rgb(237,142,3)" fg:x="1113" fg:w="1"/><text x="95.0541%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.09%)</title><rect x="94.8041%" y="549" width="0.0852%" height="15" fill="rgb(241,107,1)" fg:x="1113" fg:w="1"/><text x="95.0541%" y="559.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as core::default::Default&gt;::default (1 samples, 0.09%)</title><rect x="94.8893%" y="581" width="0.0852%" height="15" fill="rgb(229,83,13)" fg:x="1114" fg:w="1"/><text x="95.1393%" y="591.50"></text></g><g><title>sha2::sha256::Engine256::new (1 samples, 0.09%)</title><rect x="94.8893%" y="565" width="0.0852%" height="15" fill="rgb(241,91,40)" fg:x="1114" fg:w="1"/><text x="95.1393%" y="575.50"></text></g><g><title>&lt;block_buffer::BlockBuffer&lt;BlockSize&gt; as core::default::Default&gt;::default (1 samples, 0.09%)</title><rect x="94.8893%" y="549" width="0.0852%" height="15" fill="rgb(225,3,45)" fg:x="1114" fg:w="1"/><text x="95.1393%" y="559.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (1 samples, 0.09%)</title><rect x="94.8893%" y="533" width="0.0852%" height="15" fill="rgb(244,223,14)" fg:x="1114" fg:w="1"/><text x="95.1393%" y="543.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (1 samples, 0.09%)</title><rect x="94.8893%" y="517" width="0.0852%" height="15" fill="rgb(224,124,37)" fg:x="1114" fg:w="1"/><text x="95.1393%" y="527.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (1 samples, 0.09%)</title><rect x="94.8893%" y="501" width="0.0852%" height="15" fill="rgb(251,171,30)" fg:x="1114" fg:w="1"/><text x="95.1393%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.09%)</title><rect x="94.8893%" y="485" width="0.0852%" height="15" fill="rgb(236,46,54)" fg:x="1114" fg:w="1"/><text x="95.1393%" y="495.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (1 samples, 0.09%)</title><rect x="94.8893%" y="469" width="0.0852%" height="15" fill="rgb(245,213,5)" fg:x="1114" fg:w="1"/><text x="95.1393%" y="479.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (2 samples, 0.17%)</title><rect x="94.8893%" y="613" width="0.1704%" height="15" fill="rgb(230,144,27)" fg:x="1114" fg:w="2"/><text x="95.1393%" y="623.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (2 samples, 0.17%)</title><rect x="94.8893%" y="597" width="0.1704%" height="15" fill="rgb(220,86,6)" fg:x="1114" fg:w="2"/><text x="95.1393%" y="607.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (1 samples, 0.09%)</title><rect x="94.9744%" y="581" width="0.0852%" height="15" fill="rgb(240,20,13)" fg:x="1115" fg:w="1"/><text x="95.2244%" y="591.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (1 samples, 0.09%)</title><rect x="94.9744%" y="565" width="0.0852%" height="15" fill="rgb(217,89,34)" fg:x="1115" fg:w="1"/><text x="95.2244%" y="575.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (1 samples, 0.09%)</title><rect x="94.9744%" y="549" width="0.0852%" height="15" fill="rgb(229,13,5)" fg:x="1115" fg:w="1"/><text x="95.2244%" y="559.50"></text></g><g><title>sha2::sha256::Engine256::finish (1 samples, 0.09%)</title><rect x="94.9744%" y="533" width="0.0852%" height="15" fill="rgb(244,67,35)" fg:x="1115" fg:w="1"/><text x="95.2244%" y="543.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (1 samples, 0.09%)</title><rect x="94.9744%" y="517" width="0.0852%" height="15" fill="rgb(221,40,2)" fg:x="1115" fg:w="1"/><text x="95.2244%" y="527.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (1 samples, 0.09%)</title><rect x="94.9744%" y="501" width="0.0852%" height="15" fill="rgb(237,157,21)" fg:x="1115" fg:w="1"/><text x="95.2244%" y="511.50"></text></g><g><title>sha2::sha256::compress256 (1 samples, 0.09%)</title><rect x="94.9744%" y="485" width="0.0852%" height="15" fill="rgb(222,94,11)" fg:x="1115" fg:w="1"/><text x="95.2244%" y="495.50"></text></g><g><title>sha2::sha256::x86::compress (1 samples, 0.09%)</title><rect x="94.9744%" y="469" width="0.0852%" height="15" fill="rgb(249,113,6)" fg:x="1115" fg:w="1"/><text x="95.2244%" y="479.50"></text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.09%)</title><rect x="94.9744%" y="453" width="0.0852%" height="15" fill="rgb(238,137,36)" fg:x="1115" fg:w="1"/><text x="95.2244%" y="463.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (1 samples, 0.09%)</title><rect x="94.9744%" y="437" width="0.0852%" height="15" fill="rgb(210,102,26)" fg:x="1115" fg:w="1"/><text x="95.2244%" y="447.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (1 samples, 0.09%)</title><rect x="94.9744%" y="421" width="0.0852%" height="15" fill="rgb(218,30,30)" fg:x="1115" fg:w="1"/><text x="95.2244%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.09%)</title><rect x="95.1448%" y="565" width="0.0852%" height="15" fill="rgb(214,67,26)" fg:x="1117" fg:w="1"/><text x="95.3948%" y="575.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.09%)</title><rect x="95.1448%" y="549" width="0.0852%" height="15" fill="rgb(251,9,53)" fg:x="1117" fg:w="1"/><text x="95.3948%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.09%)</title><rect x="95.1448%" y="533" width="0.0852%" height="15" fill="rgb(228,204,25)" fg:x="1117" fg:w="1"/><text x="95.3948%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.09%)</title><rect x="95.1448%" y="517" width="0.0852%" height="15" fill="rgb(207,153,8)" fg:x="1117" fg:w="1"/><text x="95.3948%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.09%)</title><rect x="95.1448%" y="501" width="0.0852%" height="15" fill="rgb(242,9,16)" fg:x="1117" fg:w="1"/><text x="95.3948%" y="511.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.09%)</title><rect x="95.1448%" y="485" width="0.0852%" height="15" fill="rgb(217,211,10)" fg:x="1117" fg:w="1"/><text x="95.3948%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.09%)</title><rect x="95.1448%" y="469" width="0.0852%" height="15" fill="rgb(219,228,52)" fg:x="1117" fg:w="1"/><text x="95.3948%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.09%)</title><rect x="95.1448%" y="453" width="0.0852%" height="15" fill="rgb(231,92,29)" fg:x="1117" fg:w="1"/><text x="95.3948%" y="463.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.09%)</title><rect x="95.1448%" y="437" width="0.0852%" height="15" fill="rgb(232,8,23)" fg:x="1117" fg:w="1"/><text x="95.3948%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.09%)</title><rect x="95.1448%" y="421" width="0.0852%" height="15" fill="rgb(216,211,34)" fg:x="1117" fg:w="1"/><text x="95.3948%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.26%)</title><rect x="95.0596%" y="613" width="0.2555%" height="15" fill="rgb(236,151,0)" fg:x="1116" fg:w="3"/><text x="95.3096%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.26%)</title><rect x="95.0596%" y="597" width="0.2555%" height="15" fill="rgb(209,168,3)" fg:x="1116" fg:w="3"/><text x="95.3096%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.26%)</title><rect x="95.0596%" y="581" width="0.2555%" height="15" fill="rgb(208,129,28)" fg:x="1116" fg:w="3"/><text x="95.3096%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.09%)</title><rect x="95.2300%" y="565" width="0.0852%" height="15" fill="rgb(229,78,22)" fg:x="1118" fg:w="1"/><text x="95.4800%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.09%)</title><rect x="95.2300%" y="549" width="0.0852%" height="15" fill="rgb(228,187,13)" fg:x="1118" fg:w="1"/><text x="95.4800%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (1 samples, 0.09%)</title><rect x="95.2300%" y="533" width="0.0852%" height="15" fill="rgb(240,119,24)" fg:x="1118" fg:w="1"/><text x="95.4800%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.09%)</title><rect x="95.2300%" y="517" width="0.0852%" height="15" fill="rgb(209,194,42)" fg:x="1118" fg:w="1"/><text x="95.4800%" y="527.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.09%)</title><rect x="95.2300%" y="501" width="0.0852%" height="15" fill="rgb(247,200,46)" fg:x="1118" fg:w="1"/><text x="95.4800%" y="511.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.09%)</title><rect x="95.2300%" y="485" width="0.0852%" height="15" fill="rgb(218,76,16)" fg:x="1118" fg:w="1"/><text x="95.4800%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.09%)</title><rect x="95.2300%" y="469" width="0.0852%" height="15" fill="rgb(225,21,48)" fg:x="1118" fg:w="1"/><text x="95.4800%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.09%)</title><rect x="95.2300%" y="453" width="0.0852%" height="15" fill="rgb(239,223,50)" fg:x="1118" fg:w="1"/><text x="95.4800%" y="463.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.09%)</title><rect x="95.2300%" y="437" width="0.0852%" height="15" fill="rgb(244,45,21)" fg:x="1118" fg:w="1"/><text x="95.4800%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.09%)</title><rect x="95.2300%" y="421" width="0.0852%" height="15" fill="rgb(232,33,43)" fg:x="1118" fg:w="1"/><text x="95.4800%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.09%)</title><rect x="95.2300%" y="405" width="0.0852%" height="15" fill="rgb(209,8,3)" fg:x="1118" fg:w="1"/><text x="95.4800%" y="415.50"></text></g><g><title>lab4::student::access_or_write (13 samples, 1.11%)</title><rect x="94.3782%" y="629" width="1.1073%" height="15" fill="rgb(214,25,53)" fg:x="1108" fg:w="13"/><text x="94.6282%" y="639.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (2 samples, 0.17%)</title><rect x="95.3152%" y="613" width="0.1704%" height="15" fill="rgb(254,186,54)" fg:x="1119" fg:w="2"/><text x="95.5652%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_rwlock::RwLock::read (2 samples, 0.17%)</title><rect x="95.3152%" y="597" width="0.1704%" height="15" fill="rgb(208,174,49)" fg:x="1119" fg:w="2"/><text x="95.5652%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (1 samples, 0.09%)</title><rect x="95.4003%" y="581" width="0.0852%" height="15" fill="rgb(233,191,51)" fg:x="1120" fg:w="1"/><text x="95.6503%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.09%)</title><rect x="95.4003%" y="565" width="0.0852%" height="15" fill="rgb(222,134,10)" fg:x="1120" fg:w="1"/><text x="95.6503%" y="575.50"></text></g><g><title>lab4::student::Student::build_idea (225 samples, 19.17%)</title><rect x="77.8535%" y="645" width="19.1652%" height="15" fill="rgb(230,226,20)" fg:x="914" fg:w="225"/><text x="78.1035%" y="655.50">lab4::student::Student::build_..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 1.53%)</title><rect x="95.4855%" y="629" width="1.5332%" height="15" fill="rgb(251,111,25)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (18 samples, 1.53%)</title><rect x="95.4855%" y="613" width="1.5332%" height="15" fill="rgb(224,40,46)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (18 samples, 1.53%)</title><rect x="95.4855%" y="597" width="1.5332%" height="15" fill="rgb(236,108,47)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (18 samples, 1.53%)</title><rect x="95.4855%" y="581" width="1.5332%" height="15" fill="rgb(234,93,0)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="591.50"></text></g><g><title>syscall (18 samples, 1.53%)</title><rect x="95.4855%" y="565" width="1.5332%" height="15" fill="rgb(224,213,32)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="575.50"></text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="95.4855%" y="549" width="1.5332%" height="15" fill="rgb(251,11,48)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="559.50"></text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="95.4855%" y="533" width="1.5332%" height="15" fill="rgb(236,173,5)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="543.50"></text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="95.4855%" y="517" width="1.5332%" height="15" fill="rgb(230,95,12)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="527.50"></text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="95.4855%" y="501" width="1.5332%" height="15" fill="rgb(232,209,1)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="511.50"></text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="95.4855%" y="485" width="1.5332%" height="15" fill="rgb(232,6,1)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="495.50"></text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="95.4855%" y="469" width="1.5332%" height="15" fill="rgb(210,224,50)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="479.50"></text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="95.4855%" y="453" width="1.5332%" height="15" fill="rgb(228,127,35)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="463.50"></text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="95.4855%" y="437" width="1.5332%" height="15" fill="rgb(245,102,45)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="447.50"></text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="95.4855%" y="421" width="1.5332%" height="15" fill="rgb(214,1,49)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="431.50"></text></g><g><title>[unknown] (18 samples, 1.53%)</title><rect x="95.4855%" y="405" width="1.5332%" height="15" fill="rgb(226,163,40)" fg:x="1121" fg:w="18"/><text x="95.7355%" y="415.50"></text></g><g><title>[unknown] (17 samples, 1.45%)</title><rect x="95.5707%" y="389" width="1.4480%" height="15" fill="rgb(239,212,28)" fg:x="1122" fg:w="17"/><text x="95.8207%" y="399.50"></text></g><g><title>[unknown] (17 samples, 1.45%)</title><rect x="95.5707%" y="373" width="1.4480%" height="15" fill="rgb(220,20,13)" fg:x="1122" fg:w="17"/><text x="95.8207%" y="383.50"></text></g><g><title>[unknown] (17 samples, 1.45%)</title><rect x="95.5707%" y="357" width="1.4480%" height="15" fill="rgb(210,164,35)" fg:x="1122" fg:w="17"/><text x="95.8207%" y="367.50"></text></g><g><title>[unknown] (17 samples, 1.45%)</title><rect x="95.5707%" y="341" width="1.4480%" height="15" fill="rgb(248,109,41)" fg:x="1122" fg:w="17"/><text x="95.8207%" y="351.50"></text></g><g><title>std::panic::catch_unwind (1,049 samples, 89.35%)</title><rect x="8.1772%" y="773" width="89.3526%" height="15" fill="rgb(238,23,50)" fg:x="96" fg:w="1049"/><text x="8.4272%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,049 samples, 89.35%)</title><rect x="8.1772%" y="757" width="89.3526%" height="15" fill="rgb(211,48,49)" fg:x="96" fg:w="1049"/><text x="8.4272%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,049 samples, 89.35%)</title><rect x="8.1772%" y="741" width="89.3526%" height="15" fill="rgb(223,36,21)" fg:x="96" fg:w="1049"/><text x="8.4272%" y="751.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,049 samples, 89.35%)</title><rect x="8.1772%" y="725" width="89.3526%" height="15" fill="rgb(207,123,46)" fg:x="96" fg:w="1049"/><text x="8.4272%" y="735.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1,049 samples, 89.35%)</title><rect x="8.1772%" y="709" width="89.3526%" height="15" fill="rgb(240,218,32)" fg:x="96" fg:w="1049"/><text x="8.4272%" y="719.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,049 samples, 89.35%)</title><rect x="8.1772%" y="693" width="89.3526%" height="15" fill="rgb(252,5,43)" fg:x="96" fg:w="1049"/><text x="8.4272%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (1,049 samples, 89.35%)</title><rect x="8.1772%" y="677" width="89.3526%" height="15" fill="rgb(252,84,19)" fg:x="96" fg:w="1049"/><text x="8.4272%" y="687.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (630 samples, 53.66%)</title><rect x="43.8671%" y="661" width="53.6627%" height="15" fill="rgb(243,152,39)" fg:x="515" fg:w="630"/><text x="44.1171%" y="671.50">lab4::student::Student::run</text></g><g><title>syscall (6 samples, 0.51%)</title><rect x="97.0187%" y="645" width="0.5111%" height="15" fill="rgb(234,160,15)" fg:x="1139" fg:w="6"/><text x="97.2687%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.0187%" y="629" width="0.5111%" height="15" fill="rgb(237,34,20)" fg:x="1139" fg:w="6"/><text x="97.2687%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.0187%" y="613" width="0.5111%" height="15" fill="rgb(229,97,13)" fg:x="1139" fg:w="6"/><text x="97.2687%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.0187%" y="597" width="0.5111%" height="15" fill="rgb(234,71,50)" fg:x="1139" fg:w="6"/><text x="97.2687%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.0187%" y="581" width="0.5111%" height="15" fill="rgb(253,155,4)" fg:x="1139" fg:w="6"/><text x="97.2687%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.0187%" y="565" width="0.5111%" height="15" fill="rgb(222,185,37)" fg:x="1139" fg:w="6"/><text x="97.2687%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.0187%" y="549" width="0.5111%" height="15" fill="rgb(251,177,13)" fg:x="1139" fg:w="6"/><text x="97.2687%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.0187%" y="533" width="0.5111%" height="15" fill="rgb(250,179,40)" fg:x="1139" fg:w="6"/><text x="97.2687%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.1039%" y="517" width="0.4259%" height="15" fill="rgb(242,44,2)" fg:x="1140" fg:w="5"/><text x="97.3539%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.1039%" y="501" width="0.4259%" height="15" fill="rgb(216,177,13)" fg:x="1140" fg:w="5"/><text x="97.3539%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.1039%" y="485" width="0.4259%" height="15" fill="rgb(216,106,43)" fg:x="1140" fg:w="5"/><text x="97.3539%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.1039%" y="469" width="0.4259%" height="15" fill="rgb(216,183,2)" fg:x="1140" fg:w="5"/><text x="97.3539%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.1039%" y="453" width="0.4259%" height="15" fill="rgb(249,75,3)" fg:x="1140" fg:w="5"/><text x="97.3539%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.5298%" y="677" width="0.5111%" height="15" fill="rgb(219,67,39)" fg:x="1145" fg:w="6"/><text x="97.7798%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.5298%" y="661" width="0.5111%" height="15" fill="rgb(253,228,2)" fg:x="1145" fg:w="6"/><text x="97.7798%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.5298%" y="645" width="0.5111%" height="15" fill="rgb(235,138,27)" fg:x="1145" fg:w="6"/><text x="97.7798%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.5298%" y="629" width="0.5111%" height="15" fill="rgb(236,97,51)" fg:x="1145" fg:w="6"/><text x="97.7798%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="97.5298%" y="613" width="0.5111%" height="15" fill="rgb(240,80,30)" fg:x="1145" fg:w="6"/><text x="97.7798%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.6150%" y="597" width="0.4259%" height="15" fill="rgb(230,178,19)" fg:x="1146" fg:w="5"/><text x="97.8650%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.6150%" y="581" width="0.4259%" height="15" fill="rgb(210,190,27)" fg:x="1146" fg:w="5"/><text x="97.8650%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.6150%" y="565" width="0.4259%" height="15" fill="rgb(222,107,31)" fg:x="1146" fg:w="5"/><text x="97.8650%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.6150%" y="549" width="0.4259%" height="15" fill="rgb(216,127,34)" fg:x="1146" fg:w="5"/><text x="97.8650%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.6150%" y="533" width="0.4259%" height="15" fill="rgb(234,116,52)" fg:x="1146" fg:w="5"/><text x="97.8650%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.6150%" y="517" width="0.4259%" height="15" fill="rgb(222,124,15)" fg:x="1146" fg:w="5"/><text x="97.8650%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.6150%" y="501" width="0.4259%" height="15" fill="rgb(231,179,28)" fg:x="1146" fg:w="5"/><text x="97.8650%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.6150%" y="485" width="0.4259%" height="15" fill="rgb(226,93,45)" fg:x="1146" fg:w="5"/><text x="97.8650%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="97.6150%" y="469" width="0.4259%" height="15" fill="rgb(215,8,51)" fg:x="1146" fg:w="5"/><text x="97.8650%" y="479.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.60%)</title><rect x="97.5298%" y="741" width="0.5963%" height="15" fill="rgb(223,106,5)" fg:x="1145" fg:w="7"/><text x="97.7798%" y="751.50"></text></g><g><title>tcache_init.part.0 (7 samples, 0.60%)</title><rect x="97.5298%" y="725" width="0.5963%" height="15" fill="rgb(250,191,5)" fg:x="1145" fg:w="7"/><text x="97.7798%" y="735.50"></text></g><g><title>arena_get2.part.0 (7 samples, 0.60%)</title><rect x="97.5298%" y="709" width="0.5963%" height="15" fill="rgb(242,132,44)" fg:x="1145" fg:w="7"/><text x="97.7798%" y="719.50"></text></g><g><title>new_heap (7 samples, 0.60%)</title><rect x="97.5298%" y="693" width="0.5963%" height="15" fill="rgb(251,152,29)" fg:x="1145" fg:w="7"/><text x="97.7798%" y="703.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.09%)</title><rect x="98.0409%" y="677" width="0.0852%" height="15" fill="rgb(218,179,5)" fg:x="1151" fg:w="1"/><text x="98.2909%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.0409%" y="661" width="0.0852%" height="15" fill="rgb(227,67,19)" fg:x="1151" fg:w="1"/><text x="98.2909%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.0409%" y="645" width="0.0852%" height="15" fill="rgb(233,119,31)" fg:x="1151" fg:w="1"/><text x="98.2909%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.0409%" y="629" width="0.0852%" height="15" fill="rgb(241,120,22)" fg:x="1151" fg:w="1"/><text x="98.2909%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.0409%" y="613" width="0.0852%" height="15" fill="rgb(224,102,30)" fg:x="1151" fg:w="1"/><text x="98.2909%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.0409%" y="597" width="0.0852%" height="15" fill="rgb(210,164,37)" fg:x="1151" fg:w="1"/><text x="98.2909%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.0409%" y="581" width="0.0852%" height="15" fill="rgb(226,191,16)" fg:x="1151" fg:w="1"/><text x="98.2909%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.0409%" y="565" width="0.0852%" height="15" fill="rgb(214,40,45)" fg:x="1151" fg:w="1"/><text x="98.2909%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,057 samples, 90.03%)</title><rect x="8.1772%" y="837" width="90.0341%" height="15" fill="rgb(244,29,26)" fg:x="96" fg:w="1057"/><text x="8.4272%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,057 samples, 90.03%)</title><rect x="8.1772%" y="821" width="90.0341%" height="15" fill="rgb(216,16,5)" fg:x="96" fg:w="1057"/><text x="8.4272%" y="831.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,057 samples, 90.03%)</title><rect x="8.1772%" y="805" width="90.0341%" height="15" fill="rgb(249,76,35)" fg:x="96" fg:w="1057"/><text x="8.4272%" y="815.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1,057 samples, 90.03%)</title><rect x="8.1772%" y="789" width="90.0341%" height="15" fill="rgb(207,11,44)" fg:x="96" fg:w="1057"/><text x="8.4272%" y="799.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (8 samples, 0.68%)</title><rect x="97.5298%" y="773" width="0.6814%" height="15" fill="rgb(228,190,49)" fg:x="1145" fg:w="8"/><text x="97.7798%" y="783.50"></text></g><g><title>pthread_getattr_np (8 samples, 0.68%)</title><rect x="97.5298%" y="757" width="0.6814%" height="15" fill="rgb(214,173,12)" fg:x="1145" fg:w="8"/><text x="97.7798%" y="767.50"></text></g><g><title>__pthread_getaffinity_new (1 samples, 0.09%)</title><rect x="98.1261%" y="741" width="0.0852%" height="15" fill="rgb(218,26,35)" fg:x="1152" fg:w="1"/><text x="98.3761%" y="751.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.09%)</title><rect x="98.1261%" y="725" width="0.0852%" height="15" fill="rgb(220,200,19)" fg:x="1152" fg:w="1"/><text x="98.3761%" y="735.50"></text></g><g><title>__GI___clone (1,081 samples, 92.08%)</title><rect x="6.2181%" y="885" width="92.0784%" height="15" fill="rgb(239,95,49)" fg:x="73" fg:w="1081"/><text x="6.4681%" y="895.50">__GI___clone</text></g><g><title>start_thread (1,058 samples, 90.12%)</title><rect x="8.1772%" y="869" width="90.1193%" height="15" fill="rgb(235,85,53)" fg:x="96" fg:w="1058"/><text x="8.4272%" y="879.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,058 samples, 90.12%)</title><rect x="8.1772%" y="853" width="90.1193%" height="15" fill="rgb(233,133,31)" fg:x="96" fg:w="1058"/><text x="8.4272%" y="863.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.09%)</title><rect x="98.2112%" y="837" width="0.0852%" height="15" fill="rgb(218,25,20)" fg:x="1153" fg:w="1"/><text x="98.4612%" y="847.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.09%)</title><rect x="98.2112%" y="821" width="0.0852%" height="15" fill="rgb(252,210,38)" fg:x="1153" fg:w="1"/><text x="98.4612%" y="831.50"></text></g><g><title>__sigaltstack (1 samples, 0.09%)</title><rect x="98.2112%" y="805" width="0.0852%" height="15" fill="rgb(242,134,21)" fg:x="1153" fg:w="1"/><text x="98.4612%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.2112%" y="789" width="0.0852%" height="15" fill="rgb(213,28,48)" fg:x="1153" fg:w="1"/><text x="98.4612%" y="799.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.09%)</title><rect x="98.2964%" y="885" width="0.0852%" height="15" fill="rgb(250,196,2)" fg:x="1154" fg:w="1"/><text x="98.5464%" y="895.50"></text></g><g><title>__rdl_realloc (2 samples, 0.17%)</title><rect x="98.3816%" y="885" width="0.1704%" height="15" fill="rgb(227,5,17)" fg:x="1155" fg:w="2"/><text x="98.6316%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.51%)</title><rect x="98.5520%" y="613" width="0.5111%" height="15" fill="rgb(221,226,24)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.51%)</title><rect x="98.5520%" y="597" width="0.5111%" height="15" fill="rgb(211,5,48)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.51%)</title><rect x="98.5520%" y="581" width="0.5111%" height="15" fill="rgb(219,150,6)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="591.50"></text></g><g><title>lab4::hackathon::{{closure}} (6 samples, 0.51%)</title><rect x="98.5520%" y="565" width="0.5111%" height="15" fill="rgb(251,46,16)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="575.50"></text></g><g><title>std::thread::JoinHandle&lt;T&gt;::join (6 samples, 0.51%)</title><rect x="98.5520%" y="549" width="0.5111%" height="15" fill="rgb(220,204,40)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="559.50"></text></g><g><title>std::thread::JoinInner&lt;T&gt;::join (6 samples, 0.51%)</title><rect x="98.5520%" y="533" width="0.5111%" height="15" fill="rgb(211,85,2)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="543.50"></text></g><g><title>std::sys::unix::thread::Thread::join (6 samples, 0.51%)</title><rect x="98.5520%" y="517" width="0.5111%" height="15" fill="rgb(229,17,7)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="527.50"></text></g><g><title>__pthread_clockjoin_ex (6 samples, 0.51%)</title><rect x="98.5520%" y="501" width="0.5111%" height="15" fill="rgb(239,72,28)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="485" width="0.5111%" height="15" fill="rgb(230,47,54)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="469" width="0.5111%" height="15" fill="rgb(214,50,8)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="453" width="0.5111%" height="15" fill="rgb(216,198,43)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="437" width="0.5111%" height="15" fill="rgb(234,20,35)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="421" width="0.5111%" height="15" fill="rgb(254,45,19)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="405" width="0.5111%" height="15" fill="rgb(219,14,44)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="389" width="0.5111%" height="15" fill="rgb(217,220,26)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="373" width="0.5111%" height="15" fill="rgb(213,158,28)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="357" width="0.5111%" height="15" fill="rgb(252,51,52)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="341" width="0.5111%" height="15" fill="rgb(246,89,16)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="325" width="0.5111%" height="15" fill="rgb(216,158,49)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="309" width="0.5111%" height="15" fill="rgb(236,107,19)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="293" width="0.5111%" height="15" fill="rgb(228,185,30)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="98.5520%" y="277" width="0.5111%" height="15" fill="rgb(246,134,8)" fg:x="1157" fg:w="6"/><text x="98.8020%" y="287.50"></text></g><g><title>__libc_start_main (7 samples, 0.60%)</title><rect x="98.5520%" y="869" width="0.5963%" height="15" fill="rgb(214,143,50)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="879.50"></text></g><g><title>main (7 samples, 0.60%)</title><rect x="98.5520%" y="853" width="0.5963%" height="15" fill="rgb(228,75,8)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (7 samples, 0.60%)</title><rect x="98.5520%" y="837" width="0.5963%" height="15" fill="rgb(207,175,4)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="847.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.60%)</title><rect x="98.5520%" y="821" width="0.5963%" height="15" fill="rgb(205,108,24)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="831.50"></text></g><g><title>std::panicking::try (7 samples, 0.60%)</title><rect x="98.5520%" y="805" width="0.5963%" height="15" fill="rgb(244,120,49)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="815.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.60%)</title><rect x="98.5520%" y="789" width="0.5963%" height="15" fill="rgb(223,47,38)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (7 samples, 0.60%)</title><rect x="98.5520%" y="773" width="0.5963%" height="15" fill="rgb(229,179,11)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="783.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.60%)</title><rect x="98.5520%" y="757" width="0.5963%" height="15" fill="rgb(231,122,1)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="767.50"></text></g><g><title>std::panicking::try (7 samples, 0.60%)</title><rect x="98.5520%" y="741" width="0.5963%" height="15" fill="rgb(245,119,9)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="751.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.60%)</title><rect x="98.5520%" y="725" width="0.5963%" height="15" fill="rgb(241,163,25)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (7 samples, 0.60%)</title><rect x="98.5520%" y="709" width="0.5963%" height="15" fill="rgb(217,214,3)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}} (7 samples, 0.60%)</title><rect x="98.5520%" y="693" width="0.5963%" height="15" fill="rgb(240,86,28)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.60%)</title><rect x="98.5520%" y="677" width="0.5963%" height="15" fill="rgb(215,47,9)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.60%)</title><rect x="98.5520%" y="661" width="0.5963%" height="15" fill="rgb(252,25,45)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="671.50"></text></g><g><title>lab4::main (7 samples, 0.60%)</title><rect x="98.5520%" y="645" width="0.5963%" height="15" fill="rgb(251,164,9)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="655.50"></text></g><g><title>lab4::hackathon (7 samples, 0.60%)</title><rect x="98.5520%" y="629" width="0.5963%" height="15" fill="rgb(233,194,0)" fg:x="1157" fg:w="7"/><text x="98.8020%" y="639.50"></text></g><g><title>std::io::stdio::_print (1 samples, 0.09%)</title><rect x="99.0630%" y="613" width="0.0852%" height="15" fill="rgb(249,111,24)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="623.50"></text></g><g><title>std::io::stdio::print_to (1 samples, 0.09%)</title><rect x="99.0630%" y="597" width="0.0852%" height="15" fill="rgb(250,223,3)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="607.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.09%)</title><rect x="99.0630%" y="581" width="0.0852%" height="15" fill="rgb(236,178,37)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="591.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1 samples, 0.09%)</title><rect x="99.0630%" y="565" width="0.0852%" height="15" fill="rgb(241,158,50)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="575.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.09%)</title><rect x="99.0630%" y="549" width="0.0852%" height="15" fill="rgb(213,121,41)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.09%)</title><rect x="99.0630%" y="533" width="0.0852%" height="15" fill="rgb(240,92,3)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="543.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.09%)</title><rect x="99.0630%" y="517" width="0.0852%" height="15" fill="rgb(205,123,3)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="527.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="99.0630%" y="501" width="0.0852%" height="15" fill="rgb(205,97,47)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="511.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="99.0630%" y="485" width="0.0852%" height="15" fill="rgb(247,152,14)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="495.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="99.0630%" y="469" width="0.0852%" height="15" fill="rgb(248,195,53)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="479.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1 samples, 0.09%)</title><rect x="99.0630%" y="453" width="0.0852%" height="15" fill="rgb(226,201,16)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="463.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.09%)</title><rect x="99.0630%" y="437" width="0.0852%" height="15" fill="rgb(205,98,0)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="447.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.09%)</title><rect x="99.0630%" y="421" width="0.0852%" height="15" fill="rgb(214,191,48)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="431.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.09%)</title><rect x="99.0630%" y="405" width="0.0852%" height="15" fill="rgb(237,112,39)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="415.50"></text></g><g><title>__libc_write (1 samples, 0.09%)</title><rect x="99.0630%" y="389" width="0.0852%" height="15" fill="rgb(247,203,27)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="399.50"></text></g><g><title>__libc_write (1 samples, 0.09%)</title><rect x="99.0630%" y="373" width="0.0852%" height="15" fill="rgb(235,124,28)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.0630%" y="357" width="0.0852%" height="15" fill="rgb(208,207,46)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.0630%" y="341" width="0.0852%" height="15" fill="rgb(234,176,4)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.0630%" y="325" width="0.0852%" height="15" fill="rgb(230,133,28)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.0630%" y="309" width="0.0852%" height="15" fill="rgb(211,137,40)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.0630%" y="293" width="0.0852%" height="15" fill="rgb(254,35,13)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.0630%" y="277" width="0.0852%" height="15" fill="rgb(225,49,51)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.0630%" y="261" width="0.0852%" height="15" fill="rgb(251,10,15)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.0630%" y="245" width="0.0852%" height="15" fill="rgb(228,207,15)" fg:x="1163" fg:w="1"/><text x="99.3130%" y="255.50"></text></g><g><title>_start (8 samples, 0.68%)</title><rect x="98.5520%" y="885" width="0.6814%" height="15" fill="rgb(241,99,19)" fg:x="1157" fg:w="8"/><text x="98.8020%" y="895.50"></text></g><g><title>_dl_start (1 samples, 0.09%)</title><rect x="99.1482%" y="869" width="0.0852%" height="15" fill="rgb(207,104,49)" fg:x="1164" fg:w="1"/><text x="99.3982%" y="879.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.09%)</title><rect x="99.1482%" y="853" width="0.0852%" height="15" fill="rgb(234,99,18)" fg:x="1164" fg:w="1"/><text x="99.3982%" y="863.50"></text></g><g><title>dl_main (1 samples, 0.09%)</title><rect x="99.1482%" y="837" width="0.0852%" height="15" fill="rgb(213,191,49)" fg:x="1164" fg:w="1"/><text x="99.3982%" y="847.50"></text></g><g><title>_dl_receive_error (1 samples, 0.09%)</title><rect x="99.1482%" y="821" width="0.0852%" height="15" fill="rgb(210,226,19)" fg:x="1164" fg:w="1"/><text x="99.3982%" y="831.50"></text></g><g><title>version_check_doit (1 samples, 0.09%)</title><rect x="99.1482%" y="805" width="0.0852%" height="15" fill="rgb(229,97,18)" fg:x="1164" fg:w="1"/><text x="99.3982%" y="815.50"></text></g><g><title>_dl_check_all_versions (1 samples, 0.09%)</title><rect x="99.1482%" y="789" width="0.0852%" height="15" fill="rgb(211,167,15)" fg:x="1164" fg:w="1"/><text x="99.3982%" y="799.50"></text></g><g><title>_dl_check_map_versions (1 samples, 0.09%)</title><rect x="99.1482%" y="773" width="0.0852%" height="15" fill="rgb(210,169,34)" fg:x="1164" fg:w="1"/><text x="99.3982%" y="783.50"></text></g><g><title>lab4 (1,168 samples, 99.49%)</title><rect x="0.0000%" y="901" width="99.4889%" height="15" fill="rgb(241,121,31)" fg:x="0" fg:w="1168"/><text x="0.2500%" y="911.50">lab4</text></g><g><title>lab4::student::Student::run (3 samples, 0.26%)</title><rect x="99.2334%" y="885" width="0.2555%" height="15" fill="rgb(232,40,11)" fg:x="1165" fg:w="3"/><text x="99.4834%" y="895.50"></text></g><g><title>all (1,174 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(205,86,26)" fg:x="0" fg:w="1174"/><text x="0.2500%" y="927.50"></text></g><g><title>perf-exec (6 samples, 0.51%)</title><rect x="99.4889%" y="901" width="0.5111%" height="15" fill="rgb(231,126,28)" fg:x="1168" fg:w="6"/><text x="99.7389%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="99.4889%" y="885" width="0.5111%" height="15" fill="rgb(219,221,18)" fg:x="1168" fg:w="6"/><text x="99.7389%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="99.4889%" y="869" width="0.5111%" height="15" fill="rgb(211,40,0)" fg:x="1168" fg:w="6"/><text x="99.7389%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="99.4889%" y="853" width="0.5111%" height="15" fill="rgb(239,85,43)" fg:x="1168" fg:w="6"/><text x="99.7389%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="99.4889%" y="837" width="0.5111%" height="15" fill="rgb(231,55,21)" fg:x="1168" fg:w="6"/><text x="99.7389%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="99.4889%" y="821" width="0.5111%" height="15" fill="rgb(225,184,43)" fg:x="1168" fg:w="6"/><text x="99.7389%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="99.4889%" y="805" width="0.5111%" height="15" fill="rgb(251,158,41)" fg:x="1168" fg:w="6"/><text x="99.7389%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="99.4889%" y="789" width="0.5111%" height="15" fill="rgb(234,159,37)" fg:x="1168" fg:w="6"/><text x="99.7389%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="99.4889%" y="773" width="0.5111%" height="15" fill="rgb(216,204,22)" fg:x="1168" fg:w="6"/><text x="99.7389%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="99.4889%" y="757" width="0.5111%" height="15" fill="rgb(214,17,3)" fg:x="1168" fg:w="6"/><text x="99.7389%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.51%)</title><rect x="99.4889%" y="741" width="0.5111%" height="15" fill="rgb(212,111,17)" fg:x="1168" fg:w="6"/><text x="99.7389%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="99.5741%" y="725" width="0.4259%" height="15" fill="rgb(221,157,24)" fg:x="1169" fg:w="5"/><text x="99.8241%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="99.5741%" y="709" width="0.4259%" height="15" fill="rgb(252,16,13)" fg:x="1169" fg:w="5"/><text x="99.8241%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="99.5741%" y="693" width="0.4259%" height="15" fill="rgb(221,62,2)" fg:x="1169" fg:w="5"/><text x="99.8241%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.43%)</title><rect x="99.5741%" y="677" width="0.4259%" height="15" fill="rgb(247,87,22)" fg:x="1169" fg:w="5"/><text x="99.8241%" y="687.50"></text></g></svg></svg>