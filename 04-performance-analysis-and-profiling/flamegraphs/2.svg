<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="857"><g><title>[[heap]] (1 samples, 0.12%)</title><rect x="0.0000%" y="901" width="0.1167%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="0.0000%" y="885" width="0.1167%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.23%)</title><rect x="0.1167%" y="853" width="0.2334%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="2"/><text x="0.3667%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.23%)</title><rect x="0.1167%" y="837" width="0.2334%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="2"/><text x="0.3667%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.35%)</title><rect x="0.1167%" y="885" width="0.3501%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="3"/><text x="0.3667%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.35%)</title><rect x="0.1167%" y="869" width="0.3501%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="3"/><text x="0.3667%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.12%)</title><rect x="0.3501%" y="853" width="0.1167%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="1"/><text x="0.6001%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="0.3501%" y="837" width="0.1167%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="1"/><text x="0.6001%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.12%)</title><rect x="0.3501%" y="821" width="0.1167%" height="15" fill="rgb(218,30,26)" fg:x="3" fg:w="1"/><text x="0.6001%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.12%)</title><rect x="0.3501%" y="805" width="0.1167%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.6001%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.12%)</title><rect x="0.3501%" y="789" width="0.1167%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.6001%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="0.3501%" y="773" width="0.1167%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.6001%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="0.3501%" y="757" width="0.1167%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="0.6001%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.58%)</title><rect x="0.4667%" y="885" width="0.5834%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="5"/><text x="0.7167%" y="895.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="1.0502%" y="885" width="0.2334%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="2"/><text x="1.3002%" y="895.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="1.2835%" y="885" width="0.1167%" height="15" fill="rgb(231,73,38)" fg:x="11" fg:w="1"/><text x="1.5335%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="1.4002%" y="885" width="0.1167%" height="15" fill="rgb(225,20,46)" fg:x="12" fg:w="1"/><text x="1.6502%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="1.5169%" y="885" width="0.1167%" height="15" fill="rgb(210,31,41)" fg:x="13" fg:w="1"/><text x="1.7669%" y="895.50"></text></g><g><title>hex::encode_to_iter (1 samples, 0.12%)</title><rect x="1.6336%" y="885" width="0.1167%" height="15" fill="rgb(221,200,47)" fg:x="14" fg:w="1"/><text x="1.8836%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="1.6336%" y="869" width="0.1167%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="1"/><text x="1.8836%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="1.6336%" y="853" width="0.1167%" height="15" fill="rgb(249,33,26)" fg:x="14" fg:w="1"/><text x="1.8836%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.12%)</title><rect x="1.6336%" y="837" width="0.1167%" height="15" fill="rgb(235,183,28)" fg:x="14" fg:w="1"/><text x="1.8836%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.12%)</title><rect x="1.6336%" y="821" width="0.1167%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="1"/><text x="1.8836%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.12%)</title><rect x="1.6336%" y="805" width="0.1167%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="1"/><text x="1.8836%" y="815.50"></text></g><g><title>lab4::checksum::Checksum::update (1 samples, 0.12%)</title><rect x="1.7503%" y="885" width="0.1167%" height="15" fill="rgb(241,131,45)" fg:x="15" fg:w="1"/><text x="2.0003%" y="895.50"></text></g><g><title>[anon] (16 samples, 1.87%)</title><rect x="0.1167%" y="901" width="1.8670%" height="15" fill="rgb(249,31,29)" fg:x="1" fg:w="16"/><text x="0.3667%" y="911.50">[..</text></g><g><title>malloc_consolidate (1 samples, 0.12%)</title><rect x="1.8670%" y="885" width="0.1167%" height="15" fill="rgb(225,111,53)" fg:x="16" fg:w="1"/><text x="2.1170%" y="895.50"></text></g><g><title>[lab4] (1 samples, 0.12%)</title><rect x="1.9837%" y="901" width="0.1167%" height="15" fill="rgb(238,160,17)" fg:x="17" fg:w="1"/><text x="2.2337%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="1.9837%" y="885" width="0.1167%" height="15" fill="rgb(214,148,48)" fg:x="17" fg:w="1"/><text x="2.2337%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.70%)</title><rect x="2.1004%" y="885" width="0.7001%" height="15" fill="rgb(232,36,49)" fg:x="18" fg:w="6"/><text x="2.3504%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.70%)</title><rect x="2.1004%" y="869" width="0.7001%" height="15" fill="rgb(209,103,24)" fg:x="18" fg:w="6"/><text x="2.3504%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.70%)</title><rect x="2.1004%" y="853" width="0.7001%" height="15" fill="rgb(229,88,8)" fg:x="18" fg:w="6"/><text x="2.3504%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.70%)</title><rect x="2.1004%" y="837" width="0.7001%" height="15" fill="rgb(213,181,19)" fg:x="18" fg:w="6"/><text x="2.3504%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="2.6838%" y="821" width="0.1167%" height="15" fill="rgb(254,191,54)" fg:x="23" fg:w="1"/><text x="2.9338%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="2.6838%" y="805" width="0.1167%" height="15" fill="rgb(241,83,37)" fg:x="23" fg:w="1"/><text x="2.9338%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="2.8005%" y="885" width="0.2334%" height="15" fill="rgb(233,36,39)" fg:x="24" fg:w="2"/><text x="3.0505%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="3.0338%" y="885" width="0.1167%" height="15" fill="rgb(226,3,54)" fg:x="26" fg:w="1"/><text x="3.2838%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="3.0338%" y="869" width="0.1167%" height="15" fill="rgb(245,192,40)" fg:x="26" fg:w="1"/><text x="3.2838%" y="879.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (1 samples, 0.12%)</title><rect x="3.0338%" y="853" width="0.1167%" height="15" fill="rgb(238,167,29)" fg:x="26" fg:w="1"/><text x="3.2838%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.12%)</title><rect x="3.0338%" y="837" width="0.1167%" height="15" fill="rgb(232,182,51)" fg:x="26" fg:w="1"/><text x="3.2838%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="3.0338%" y="821" width="0.1167%" height="15" fill="rgb(231,60,39)" fg:x="26" fg:w="1"/><text x="3.2838%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.12%)</title><rect x="3.0338%" y="805" width="0.1167%" height="15" fill="rgb(208,69,12)" fg:x="26" fg:w="1"/><text x="3.2838%" y="815.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.58%)</title><rect x="3.1505%" y="885" width="0.5834%" height="15" fill="rgb(235,93,37)" fg:x="27" fg:w="5"/><text x="3.4005%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="885" width="0.1167%" height="15" fill="rgb(213,116,39)" fg:x="32" fg:w="1"/><text x="3.9840%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="869" width="0.1167%" height="15" fill="rgb(222,207,29)" fg:x="32" fg:w="1"/><text x="3.9840%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="853" width="0.1167%" height="15" fill="rgb(206,96,30)" fg:x="32" fg:w="1"/><text x="3.9840%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="837" width="0.1167%" height="15" fill="rgb(218,138,4)" fg:x="32" fg:w="1"/><text x="3.9840%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="821" width="0.1167%" height="15" fill="rgb(250,191,14)" fg:x="32" fg:w="1"/><text x="3.9840%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="805" width="0.1167%" height="15" fill="rgb(239,60,40)" fg:x="32" fg:w="1"/><text x="3.9840%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="789" width="0.1167%" height="15" fill="rgb(206,27,48)" fg:x="32" fg:w="1"/><text x="3.9840%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="773" width="0.1167%" height="15" fill="rgb(225,35,8)" fg:x="32" fg:w="1"/><text x="3.9840%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="757" width="0.1167%" height="15" fill="rgb(250,213,24)" fg:x="32" fg:w="1"/><text x="3.9840%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="741" width="0.1167%" height="15" fill="rgb(247,123,22)" fg:x="32" fg:w="1"/><text x="3.9840%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="725" width="0.1167%" height="15" fill="rgb(231,138,38)" fg:x="32" fg:w="1"/><text x="3.9840%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="709" width="0.1167%" height="15" fill="rgb(231,145,46)" fg:x="32" fg:w="1"/><text x="3.9840%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="693" width="0.1167%" height="15" fill="rgb(251,118,11)" fg:x="32" fg:w="1"/><text x="3.9840%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="3.7340%" y="677" width="0.1167%" height="15" fill="rgb(217,147,25)" fg:x="32" fg:w="1"/><text x="3.9840%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="3.8506%" y="885" width="0.1167%" height="15" fill="rgb(247,81,37)" fg:x="33" fg:w="1"/><text x="4.1006%" y="895.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="3.9673%" y="885" width="0.1167%" height="15" fill="rgb(209,12,38)" fg:x="34" fg:w="1"/><text x="4.2173%" y="895.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="4.0840%" y="885" width="0.1167%" height="15" fill="rgb(227,1,9)" fg:x="35" fg:w="1"/><text x="4.3340%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.23%)</title><rect x="4.2007%" y="885" width="0.2334%" height="15" fill="rgb(248,47,43)" fg:x="36" fg:w="2"/><text x="4.4507%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.23%)</title><rect x="4.2007%" y="869" width="0.2334%" height="15" fill="rgb(221,10,30)" fg:x="36" fg:w="2"/><text x="4.4507%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (2 samples, 0.23%)</title><rect x="4.2007%" y="853" width="0.2334%" height="15" fill="rgb(210,229,1)" fg:x="36" fg:w="2"/><text x="4.4507%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.23%)</title><rect x="4.2007%" y="837" width="0.2334%" height="15" fill="rgb(222,148,37)" fg:x="36" fg:w="2"/><text x="4.4507%" y="847.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (1 samples, 0.12%)</title><rect x="4.4341%" y="885" width="0.1167%" height="15" fill="rgb(234,67,33)" fg:x="38" fg:w="1"/><text x="4.6841%" y="895.50"></text></g><g><title>[unknown] (23 samples, 2.68%)</title><rect x="2.1004%" y="901" width="2.6838%" height="15" fill="rgb(247,98,35)" fg:x="18" fg:w="23"/><text x="2.3504%" y="911.50">[u..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (2 samples, 0.23%)</title><rect x="4.5508%" y="885" width="0.2334%" height="15" fill="rgb(247,138,52)" fg:x="39" fg:w="2"/><text x="4.8008%" y="895.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (1 samples, 0.12%)</title><rect x="4.6674%" y="869" width="0.1167%" height="15" fill="rgb(213,79,30)" fg:x="40" fg:w="1"/><text x="4.9174%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::destroy (1 samples, 0.12%)</title><rect x="4.6674%" y="853" width="0.1167%" height="15" fill="rgb(246,177,23)" fg:x="40" fg:w="1"/><text x="4.9174%" y="863.50"></text></g><g><title>core::mem::drop (1 samples, 0.12%)</title><rect x="4.6674%" y="837" width="0.1167%" height="15" fill="rgb(230,62,27)" fg:x="40" fg:w="1"/><text x="4.9174%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (1 samples, 0.12%)</title><rect x="4.6674%" y="821" width="0.1167%" height="15" fill="rgb(216,154,8)" fg:x="40" fg:w="1"/><text x="4.9174%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="4.6674%" y="805" width="0.1167%" height="15" fill="rgb(244,35,45)" fg:x="40" fg:w="1"/><text x="4.9174%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.12%)</title><rect x="4.6674%" y="789" width="0.1167%" height="15" fill="rgb(251,115,12)" fg:x="40" fg:w="1"/><text x="4.9174%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="4.6674%" y="773" width="0.1167%" height="15" fill="rgb(240,54,50)" fg:x="40" fg:w="1"/><text x="4.9174%" y="783.50"></text></g><g><title>[unknown] (30 samples, 3.50%)</title><rect x="4.7841%" y="885" width="3.5006%" height="15" fill="rgb(233,84,52)" fg:x="41" fg:w="30"/><text x="5.0341%" y="895.50">[un..</text></g><g><title>[unknown] (30 samples, 3.50%)</title><rect x="4.7841%" y="869" width="3.5006%" height="15" fill="rgb(207,117,47)" fg:x="41" fg:w="30"/><text x="5.0341%" y="879.50">[un..</text></g><g><title>[unknown] (28 samples, 3.27%)</title><rect x="5.0175%" y="853" width="3.2672%" height="15" fill="rgb(249,43,39)" fg:x="43" fg:w="28"/><text x="5.2675%" y="863.50">[un..</text></g><g><title>[unknown] (26 samples, 3.03%)</title><rect x="5.2509%" y="837" width="3.0338%" height="15" fill="rgb(209,38,44)" fg:x="45" fg:w="26"/><text x="5.5009%" y="847.50">[un..</text></g><g><title>[unknown] (25 samples, 2.92%)</title><rect x="5.3676%" y="821" width="2.9172%" height="15" fill="rgb(236,212,23)" fg:x="46" fg:w="25"/><text x="5.6176%" y="831.50">[u..</text></g><g><title>[unknown] (25 samples, 2.92%)</title><rect x="5.3676%" y="805" width="2.9172%" height="15" fill="rgb(242,79,21)" fg:x="46" fg:w="25"/><text x="5.6176%" y="815.50">[u..</text></g><g><title>[unknown] (25 samples, 2.92%)</title><rect x="5.3676%" y="789" width="2.9172%" height="15" fill="rgb(211,96,35)" fg:x="46" fg:w="25"/><text x="5.6176%" y="799.50">[u..</text></g><g><title>[unknown] (25 samples, 2.92%)</title><rect x="5.3676%" y="773" width="2.9172%" height="15" fill="rgb(253,215,40)" fg:x="46" fg:w="25"/><text x="5.6176%" y="783.50">[u..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="8.2847%" y="629" width="0.1167%" height="15" fill="rgb(211,81,21)" fg:x="71" fg:w="1"/><text x="8.5347%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::string::String,alloc::string::String)]&gt; (1 samples, 0.12%)</title><rect x="8.2847%" y="613" width="0.1167%" height="15" fill="rgb(208,190,38)" fg:x="71" fg:w="1"/><text x="8.5347%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (1 samples, 0.12%)</title><rect x="8.2847%" y="597" width="0.1167%" height="15" fill="rgb(235,213,38)" fg:x="71" fg:w="1"/><text x="8.5347%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.12%)</title><rect x="8.2847%" y="581" width="0.1167%" height="15" fill="rgb(237,122,38)" fg:x="71" fg:w="1"/><text x="8.5347%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.12%)</title><rect x="8.2847%" y="565" width="0.1167%" height="15" fill="rgb(244,218,35)" fg:x="71" fg:w="1"/><text x="8.5347%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.12%)</title><rect x="8.2847%" y="549" width="0.1167%" height="15" fill="rgb(240,68,47)" fg:x="71" fg:w="1"/><text x="8.5347%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="8.2847%" y="533" width="0.1167%" height="15" fill="rgb(210,16,53)" fg:x="71" fg:w="1"/><text x="8.5347%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.12%)</title><rect x="8.2847%" y="517" width="0.1167%" height="15" fill="rgb(235,124,12)" fg:x="71" fg:w="1"/><text x="8.5347%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="8.2847%" y="501" width="0.1167%" height="15" fill="rgb(224,169,11)" fg:x="71" fg:w="1"/><text x="8.5347%" y="511.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="8.2847%" y="485" width="0.1167%" height="15" fill="rgb(250,166,2)" fg:x="71" fg:w="1"/><text x="8.5347%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (2 samples, 0.23%)</title><rect x="8.2847%" y="645" width="0.2334%" height="15" fill="rgb(242,216,29)" fg:x="71" fg:w="2"/><text x="8.5347%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (1 samples, 0.12%)</title><rect x="8.4014%" y="629" width="0.1167%" height="15" fill="rgb(230,116,27)" fg:x="72" fg:w="1"/><text x="8.6514%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="8.4014%" y="613" width="0.1167%" height="15" fill="rgb(228,99,48)" fg:x="72" fg:w="1"/><text x="8.6514%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.12%)</title><rect x="8.4014%" y="597" width="0.1167%" height="15" fill="rgb(253,11,6)" fg:x="72" fg:w="1"/><text x="8.6514%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="8.4014%" y="581" width="0.1167%" height="15" fill="rgb(247,143,39)" fg:x="72" fg:w="1"/><text x="8.6514%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="8.4014%" y="565" width="0.1167%" height="15" fill="rgb(236,97,10)" fg:x="72" fg:w="1"/><text x="8.6514%" y="575.50"></text></g><g><title>malloc_consolidate (1 samples, 0.12%)</title><rect x="8.4014%" y="549" width="0.1167%" height="15" fill="rgb(233,208,19)" fg:x="72" fg:w="1"/><text x="8.6514%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.12%)</title><rect x="8.7515%" y="373" width="0.1167%" height="15" fill="rgb(216,164,2)" fg:x="75" fg:w="1"/><text x="9.0015%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.12%)</title><rect x="8.7515%" y="357" width="0.1167%" height="15" fill="rgb(220,129,5)" fg:x="75" fg:w="1"/><text x="9.0015%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.12%)</title><rect x="8.7515%" y="341" width="0.1167%" height="15" fill="rgb(242,17,10)" fg:x="75" fg:w="1"/><text x="9.0015%" y="351.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.12%)</title><rect x="8.7515%" y="325" width="0.1167%" height="15" fill="rgb(242,107,0)" fg:x="75" fg:w="1"/><text x="9.0015%" y="335.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.35%)</title><rect x="8.6348%" y="453" width="0.3501%" height="15" fill="rgb(251,28,31)" fg:x="74" fg:w="3"/><text x="8.8848%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.35%)</title><rect x="8.6348%" y="437" width="0.3501%" height="15" fill="rgb(233,223,10)" fg:x="74" fg:w="3"/><text x="8.8848%" y="447.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.35%)</title><rect x="8.6348%" y="421" width="0.3501%" height="15" fill="rgb(215,21,27)" fg:x="74" fg:w="3"/><text x="8.8848%" y="431.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (3 samples, 0.35%)</title><rect x="8.6348%" y="405" width="0.3501%" height="15" fill="rgb(232,23,21)" fg:x="74" fg:w="3"/><text x="8.8848%" y="415.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.35%)</title><rect x="8.6348%" y="389" width="0.3501%" height="15" fill="rgb(244,5,23)" fg:x="74" fg:w="3"/><text x="8.8848%" y="399.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.12%)</title><rect x="8.8681%" y="373" width="0.1167%" height="15" fill="rgb(226,81,46)" fg:x="76" fg:w="1"/><text x="9.1181%" y="383.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.12%)</title><rect x="8.8681%" y="357" width="0.1167%" height="15" fill="rgb(247,70,30)" fg:x="76" fg:w="1"/><text x="9.1181%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.47%)</title><rect x="8.9848%" y="309" width="0.4667%" height="15" fill="rgb(212,68,19)" fg:x="77" fg:w="4"/><text x="9.2348%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.47%)</title><rect x="8.9848%" y="293" width="0.4667%" height="15" fill="rgb(240,187,13)" fg:x="77" fg:w="4"/><text x="9.2348%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.47%)</title><rect x="8.9848%" y="277" width="0.4667%" height="15" fill="rgb(223,113,26)" fg:x="77" fg:w="4"/><text x="9.2348%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.47%)</title><rect x="8.9848%" y="261" width="0.4667%" height="15" fill="rgb(206,192,2)" fg:x="77" fg:w="4"/><text x="9.2348%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.47%)</title><rect x="8.9848%" y="245" width="0.4667%" height="15" fill="rgb(241,108,4)" fg:x="77" fg:w="4"/><text x="9.2348%" y="255.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.47%)</title><rect x="8.9848%" y="229" width="0.4667%" height="15" fill="rgb(247,173,49)" fg:x="77" fg:w="4"/><text x="9.2348%" y="239.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.47%)</title><rect x="8.9848%" y="213" width="0.4667%" height="15" fill="rgb(224,114,35)" fg:x="77" fg:w="4"/><text x="9.2348%" y="223.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="9.3349%" y="197" width="0.1167%" height="15" fill="rgb(245,159,27)" fg:x="80" fg:w="1"/><text x="9.5849%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.05%)</title><rect x="8.6348%" y="533" width="1.0502%" height="15" fill="rgb(245,172,44)" fg:x="74" fg:w="9"/><text x="8.8848%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.05%)</title><rect x="8.6348%" y="517" width="1.0502%" height="15" fill="rgb(236,23,11)" fg:x="74" fg:w="9"/><text x="8.8848%" y="527.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (9 samples, 1.05%)</title><rect x="8.6348%" y="501" width="1.0502%" height="15" fill="rgb(205,117,38)" fg:x="74" fg:w="9"/><text x="8.8848%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 1.05%)</title><rect x="8.6348%" y="485" width="1.0502%" height="15" fill="rgb(237,72,25)" fg:x="74" fg:w="9"/><text x="8.8848%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.05%)</title><rect x="8.6348%" y="469" width="1.0502%" height="15" fill="rgb(244,70,9)" fg:x="74" fg:w="9"/><text x="8.8848%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.70%)</title><rect x="8.9848%" y="453" width="0.7001%" height="15" fill="rgb(217,125,39)" fg:x="77" fg:w="6"/><text x="9.2348%" y="463.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.70%)</title><rect x="8.9848%" y="437" width="0.7001%" height="15" fill="rgb(235,36,10)" fg:x="77" fg:w="6"/><text x="9.2348%" y="447.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product::{{closure}}::{{closure}} (6 samples, 0.70%)</title><rect x="8.9848%" y="421" width="0.7001%" height="15" fill="rgb(251,123,47)" fg:x="77" fg:w="6"/><text x="9.2348%" y="431.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (6 samples, 0.70%)</title><rect x="8.9848%" y="405" width="0.7001%" height="15" fill="rgb(221,13,13)" fg:x="77" fg:w="6"/><text x="9.2348%" y="415.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (6 samples, 0.70%)</title><rect x="8.9848%" y="389" width="0.7001%" height="15" fill="rgb(238,131,9)" fg:x="77" fg:w="6"/><text x="9.2348%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.70%)</title><rect x="8.9848%" y="373" width="0.7001%" height="15" fill="rgb(211,50,8)" fg:x="77" fg:w="6"/><text x="9.2348%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.70%)</title><rect x="8.9848%" y="357" width="0.7001%" height="15" fill="rgb(245,182,24)" fg:x="77" fg:w="6"/><text x="9.2348%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.70%)</title><rect x="8.9848%" y="341" width="0.7001%" height="15" fill="rgb(242,14,37)" fg:x="77" fg:w="6"/><text x="9.2348%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.70%)</title><rect x="8.9848%" y="325" width="0.7001%" height="15" fill="rgb(246,228,12)" fg:x="77" fg:w="6"/><text x="9.2348%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.23%)</title><rect x="9.4516%" y="309" width="0.2334%" height="15" fill="rgb(213,55,15)" fg:x="81" fg:w="2"/><text x="9.7016%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.23%)</title><rect x="9.4516%" y="293" width="0.2334%" height="15" fill="rgb(209,9,3)" fg:x="81" fg:w="2"/><text x="9.7016%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.23%)</title><rect x="9.4516%" y="277" width="0.2334%" height="15" fill="rgb(230,59,30)" fg:x="81" fg:w="2"/><text x="9.7016%" y="287.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product (11 samples, 1.28%)</title><rect x="8.5181%" y="645" width="1.2835%" height="15" fill="rgb(209,121,21)" fg:x="73" fg:w="11"/><text x="8.7681%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 1.28%)</title><rect x="8.5181%" y="629" width="1.2835%" height="15" fill="rgb(220,109,13)" fg:x="73" fg:w="11"/><text x="8.7681%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 1.28%)</title><rect x="8.5181%" y="613" width="1.2835%" height="15" fill="rgb(232,18,1)" fg:x="73" fg:w="11"/><text x="8.7681%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 1.28%)</title><rect x="8.5181%" y="597" width="1.2835%" height="15" fill="rgb(215,41,42)" fg:x="73" fg:w="11"/><text x="8.7681%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 1.28%)</title><rect x="8.5181%" y="581" width="1.2835%" height="15" fill="rgb(224,123,36)" fg:x="73" fg:w="11"/><text x="8.7681%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 1.28%)</title><rect x="8.5181%" y="565" width="1.2835%" height="15" fill="rgb(240,125,3)" fg:x="73" fg:w="11"/><text x="8.7681%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (11 samples, 1.28%)</title><rect x="8.5181%" y="549" width="1.2835%" height="15" fill="rgb(205,98,50)" fg:x="73" fg:w="11"/><text x="8.7681%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="9.6849%" y="533" width="0.1167%" height="15" fill="rgb(205,185,37)" fg:x="83" fg:w="1"/><text x="9.9349%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="9.6849%" y="517" width="0.1167%" height="15" fill="rgb(238,207,15)" fg:x="83" fg:w="1"/><text x="9.9349%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="9.6849%" y="501" width="0.1167%" height="15" fill="rgb(213,199,42)" fg:x="83" fg:w="1"/><text x="9.9349%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="9.6849%" y="485" width="0.1167%" height="15" fill="rgb(235,201,11)" fg:x="83" fg:w="1"/><text x="9.9349%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="9.6849%" y="469" width="0.1167%" height="15" fill="rgb(207,46,11)" fg:x="83" fg:w="1"/><text x="9.9349%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.12%)</title><rect x="9.6849%" y="453" width="0.1167%" height="15" fill="rgb(241,35,35)" fg:x="83" fg:w="1"/><text x="9.9349%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="9.6849%" y="437" width="0.1167%" height="15" fill="rgb(243,32,47)" fg:x="83" fg:w="1"/><text x="9.9349%" y="447.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="9.6849%" y="421" width="0.1167%" height="15" fill="rgb(247,202,23)" fg:x="83" fg:w="1"/><text x="9.9349%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="9.6849%" y="405" width="0.1167%" height="15" fill="rgb(219,102,11)" fg:x="83" fg:w="1"/><text x="9.9349%" y="415.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="9.6849%" y="389" width="0.1167%" height="15" fill="rgb(243,110,44)" fg:x="83" fg:w="1"/><text x="9.9349%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="9.6849%" y="373" width="0.1167%" height="15" fill="rgb(222,74,54)" fg:x="83" fg:w="1"/><text x="9.9349%" y="383.50"></text></g><g><title>std::fs::File::metadata (1 samples, 0.12%)</title><rect x="9.8016%" y="613" width="0.1167%" height="15" fill="rgb(216,99,12)" fg:x="84" fg:w="1"/><text x="10.0516%" y="623.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (1 samples, 0.12%)</title><rect x="9.8016%" y="597" width="0.1167%" height="15" fill="rgb(226,22,26)" fg:x="84" fg:w="1"/><text x="10.0516%" y="607.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.12%)</title><rect x="9.8016%" y="581" width="0.1167%" height="15" fill="rgb(217,163,10)" fg:x="84" fg:w="1"/><text x="10.0516%" y="591.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.12%)</title><rect x="9.8016%" y="565" width="0.1167%" height="15" fill="rgb(213,25,53)" fg:x="84" fg:w="1"/><text x="10.0516%" y="575.50"></text></g><g><title>statx (1 samples, 0.12%)</title><rect x="9.8016%" y="549" width="0.1167%" height="15" fill="rgb(252,105,26)" fg:x="84" fg:w="1"/><text x="10.0516%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.8016%" y="533" width="0.1167%" height="15" fill="rgb(220,39,43)" fg:x="84" fg:w="1"/><text x="10.0516%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.8016%" y="517" width="0.1167%" height="15" fill="rgb(229,68,48)" fg:x="84" fg:w="1"/><text x="10.0516%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.8016%" y="501" width="0.1167%" height="15" fill="rgb(252,8,32)" fg:x="84" fg:w="1"/><text x="10.0516%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.8016%" y="485" width="0.1167%" height="15" fill="rgb(223,20,43)" fg:x="84" fg:w="1"/><text x="10.0516%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.8016%" y="469" width="0.1167%" height="15" fill="rgb(229,81,49)" fg:x="84" fg:w="1"/><text x="10.0516%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.8016%" y="453" width="0.1167%" height="15" fill="rgb(236,28,36)" fg:x="84" fg:w="1"/><text x="10.0516%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.8016%" y="437" width="0.1167%" height="15" fill="rgb(249,185,26)" fg:x="84" fg:w="1"/><text x="10.0516%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.8016%" y="421" width="0.1167%" height="15" fill="rgb(249,174,33)" fg:x="84" fg:w="1"/><text x="10.0516%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="9.8016%" y="405" width="0.1167%" height="15" fill="rgb(233,201,37)" fg:x="84" fg:w="1"/><text x="10.0516%" y="415.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (20 samples, 2.33%)</title><rect x="8.2847%" y="677" width="2.3337%" height="15" fill="rgb(221,78,26)" fg:x="71" fg:w="20"/><text x="8.5347%" y="687.50">l..</text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name (20 samples, 2.33%)</title><rect x="8.2847%" y="661" width="2.3337%" height="15" fill="rgb(250,127,30)" fg:x="71" fg:w="20"/><text x="8.5347%" y="671.50">l..</text></g><g><title>std::fs::read_to_string (7 samples, 0.82%)</title><rect x="9.8016%" y="645" width="0.8168%" height="15" fill="rgb(230,49,44)" fg:x="84" fg:w="7"/><text x="10.0516%" y="655.50"></text></g><g><title>std::fs::read_to_string::inner (7 samples, 0.82%)</title><rect x="9.8016%" y="629" width="0.8168%" height="15" fill="rgb(229,67,23)" fg:x="84" fg:w="7"/><text x="10.0516%" y="639.50"></text></g><g><title>std::fs::File::open (6 samples, 0.70%)</title><rect x="9.9183%" y="613" width="0.7001%" height="15" fill="rgb(249,83,47)" fg:x="85" fg:w="6"/><text x="10.1683%" y="623.50"></text></g><g><title>std::fs::OpenOptions::open (6 samples, 0.70%)</title><rect x="9.9183%" y="597" width="0.7001%" height="15" fill="rgb(215,43,3)" fg:x="85" fg:w="6"/><text x="10.1683%" y="607.50"></text></g><g><title>std::fs::OpenOptions::_open (6 samples, 0.70%)</title><rect x="9.9183%" y="581" width="0.7001%" height="15" fill="rgb(238,154,13)" fg:x="85" fg:w="6"/><text x="10.1683%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::open (6 samples, 0.70%)</title><rect x="9.9183%" y="565" width="0.7001%" height="15" fill="rgb(219,56,2)" fg:x="85" fg:w="6"/><text x="10.1683%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (6 samples, 0.70%)</title><rect x="9.9183%" y="549" width="0.7001%" height="15" fill="rgb(233,0,4)" fg:x="85" fg:w="6"/><text x="10.1683%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (6 samples, 0.70%)</title><rect x="9.9183%" y="533" width="0.7001%" height="15" fill="rgb(235,30,7)" fg:x="85" fg:w="6"/><text x="10.1683%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (6 samples, 0.70%)</title><rect x="9.9183%" y="517" width="0.7001%" height="15" fill="rgb(250,79,13)" fg:x="85" fg:w="6"/><text x="10.1683%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::open_c (6 samples, 0.70%)</title><rect x="9.9183%" y="501" width="0.7001%" height="15" fill="rgb(211,146,34)" fg:x="85" fg:w="6"/><text x="10.1683%" y="511.50"></text></g><g><title>std::sys::unix::cvt_r (6 samples, 0.70%)</title><rect x="9.9183%" y="485" width="0.7001%" height="15" fill="rgb(228,22,38)" fg:x="85" fg:w="6"/><text x="10.1683%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (6 samples, 0.70%)</title><rect x="9.9183%" y="469" width="0.7001%" height="15" fill="rgb(235,168,5)" fg:x="85" fg:w="6"/><text x="10.1683%" y="479.50"></text></g><g><title>__libc_open64 (6 samples, 0.70%)</title><rect x="9.9183%" y="453" width="0.7001%" height="15" fill="rgb(221,155,16)" fg:x="85" fg:w="6"/><text x="10.1683%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="437" width="0.7001%" height="15" fill="rgb(215,215,53)" fg:x="85" fg:w="6"/><text x="10.1683%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="421" width="0.7001%" height="15" fill="rgb(223,4,10)" fg:x="85" fg:w="6"/><text x="10.1683%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="405" width="0.7001%" height="15" fill="rgb(234,103,6)" fg:x="85" fg:w="6"/><text x="10.1683%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="389" width="0.7001%" height="15" fill="rgb(227,97,0)" fg:x="85" fg:w="6"/><text x="10.1683%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="373" width="0.7001%" height="15" fill="rgb(234,150,53)" fg:x="85" fg:w="6"/><text x="10.1683%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="357" width="0.7001%" height="15" fill="rgb(228,201,54)" fg:x="85" fg:w="6"/><text x="10.1683%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="341" width="0.7001%" height="15" fill="rgb(222,22,37)" fg:x="85" fg:w="6"/><text x="10.1683%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="325" width="0.7001%" height="15" fill="rgb(237,53,32)" fg:x="85" fg:w="6"/><text x="10.1683%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="309" width="0.7001%" height="15" fill="rgb(233,25,53)" fg:x="85" fg:w="6"/><text x="10.1683%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="293" width="0.7001%" height="15" fill="rgb(210,40,34)" fg:x="85" fg:w="6"/><text x="10.1683%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="277" width="0.7001%" height="15" fill="rgb(241,220,44)" fg:x="85" fg:w="6"/><text x="10.1683%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="261" width="0.7001%" height="15" fill="rgb(235,28,35)" fg:x="85" fg:w="6"/><text x="10.1683%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="245" width="0.7001%" height="15" fill="rgb(210,56,17)" fg:x="85" fg:w="6"/><text x="10.1683%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="229" width="0.7001%" height="15" fill="rgb(224,130,29)" fg:x="85" fg:w="6"/><text x="10.1683%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="213" width="0.7001%" height="15" fill="rgb(235,212,8)" fg:x="85" fg:w="6"/><text x="10.1683%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="197" width="0.7001%" height="15" fill="rgb(223,33,50)" fg:x="85" fg:w="6"/><text x="10.1683%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="181" width="0.7001%" height="15" fill="rgb(219,149,13)" fg:x="85" fg:w="6"/><text x="10.1683%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="165" width="0.7001%" height="15" fill="rgb(250,156,29)" fg:x="85" fg:w="6"/><text x="10.1683%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="149" width="0.7001%" height="15" fill="rgb(216,193,19)" fg:x="85" fg:w="6"/><text x="10.1683%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="133" width="0.7001%" height="15" fill="rgb(216,135,14)" fg:x="85" fg:w="6"/><text x="10.1683%" y="143.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="117" width="0.7001%" height="15" fill="rgb(241,47,5)" fg:x="85" fg:w="6"/><text x="10.1683%" y="127.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="101" width="0.7001%" height="15" fill="rgb(233,42,35)" fg:x="85" fg:w="6"/><text x="10.1683%" y="111.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="85" width="0.7001%" height="15" fill="rgb(231,13,6)" fg:x="85" fg:w="6"/><text x="10.1683%" y="95.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="69" width="0.7001%" height="15" fill="rgb(207,181,40)" fg:x="85" fg:w="6"/><text x="10.1683%" y="79.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="53" width="0.7001%" height="15" fill="rgb(254,173,49)" fg:x="85" fg:w="6"/><text x="10.1683%" y="63.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="9.9183%" y="37" width="0.7001%" height="15" fill="rgb(221,1,38)" fg:x="85" fg:w="6"/><text x="10.1683%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="10.8518%" y="581" width="0.2334%" height="15" fill="rgb(206,124,46)" fg:x="93" fg:w="2"/><text x="11.1018%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.23%)</title><rect x="10.8518%" y="565" width="0.2334%" height="15" fill="rgb(249,21,11)" fg:x="93" fg:w="2"/><text x="11.1018%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.23%)</title><rect x="10.8518%" y="549" width="0.2334%" height="15" fill="rgb(222,201,40)" fg:x="93" fg:w="2"/><text x="11.1018%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.23%)</title><rect x="10.8518%" y="533" width="0.2334%" height="15" fill="rgb(235,61,29)" fg:x="93" fg:w="2"/><text x="11.1018%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.23%)</title><rect x="10.8518%" y="517" width="0.2334%" height="15" fill="rgb(219,207,3)" fg:x="93" fg:w="2"/><text x="11.1018%" y="527.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.23%)</title><rect x="10.8518%" y="501" width="0.2334%" height="15" fill="rgb(222,56,46)" fg:x="93" fg:w="2"/><text x="11.1018%" y="511.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.23%)</title><rect x="10.8518%" y="485" width="0.2334%" height="15" fill="rgb(239,76,54)" fg:x="93" fg:w="2"/><text x="11.1018%" y="495.50"></text></g><g><title>_int_malloc (1 samples, 0.12%)</title><rect x="10.9685%" y="469" width="0.1167%" height="15" fill="rgb(231,124,27)" fg:x="94" fg:w="1"/><text x="11.2185%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.47%)</title><rect x="10.7351%" y="661" width="0.4667%" height="15" fill="rgb(249,195,6)" fg:x="92" fg:w="4"/><text x="10.9851%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.35%)</title><rect x="10.8518%" y="645" width="0.3501%" height="15" fill="rgb(237,174,47)" fg:x="93" fg:w="3"/><text x="11.1018%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.35%)</title><rect x="10.8518%" y="629" width="0.3501%" height="15" fill="rgb(206,201,31)" fg:x="93" fg:w="3"/><text x="11.1018%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.35%)</title><rect x="10.8518%" y="613" width="0.3501%" height="15" fill="rgb(231,57,52)" fg:x="93" fg:w="3"/><text x="11.1018%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.35%)</title><rect x="10.8518%" y="597" width="0.3501%" height="15" fill="rgb(248,177,22)" fg:x="93" fg:w="3"/><text x="11.1018%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.12%)</title><rect x="11.0852%" y="581" width="0.1167%" height="15" fill="rgb(215,211,37)" fg:x="95" fg:w="1"/><text x="11.3352%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="11.0852%" y="565" width="0.1167%" height="15" fill="rgb(241,128,51)" fg:x="95" fg:w="1"/><text x="11.3352%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="11.0852%" y="549" width="0.1167%" height="15" fill="rgb(227,165,31)" fg:x="95" fg:w="1"/><text x="11.3352%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.23%)</title><rect x="11.2019%" y="661" width="0.2334%" height="15" fill="rgb(228,167,24)" fg:x="96" fg:w="2"/><text x="11.4519%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="11.2019%" y="645" width="0.2334%" height="15" fill="rgb(228,143,12)" fg:x="96" fg:w="2"/><text x="11.4519%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="11.2019%" y="629" width="0.2334%" height="15" fill="rgb(249,149,8)" fg:x="96" fg:w="2"/><text x="11.4519%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="11.2019%" y="613" width="0.2334%" height="15" fill="rgb(243,35,44)" fg:x="96" fg:w="2"/><text x="11.4519%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.23%)</title><rect x="11.2019%" y="597" width="0.2334%" height="15" fill="rgb(246,89,9)" fg:x="96" fg:w="2"/><text x="11.4519%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.23%)</title><rect x="11.2019%" y="581" width="0.2334%" height="15" fill="rgb(233,213,13)" fg:x="96" fg:w="2"/><text x="11.4519%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="11.2019%" y="565" width="0.2334%" height="15" fill="rgb(233,141,41)" fg:x="96" fg:w="2"/><text x="11.4519%" y="575.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="11.2019%" y="549" width="0.2334%" height="15" fill="rgb(239,167,4)" fg:x="96" fg:w="2"/><text x="11.4519%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="11.2019%" y="533" width="0.2334%" height="15" fill="rgb(209,217,16)" fg:x="96" fg:w="2"/><text x="11.4519%" y="543.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.23%)</title><rect x="11.2019%" y="517" width="0.2334%" height="15" fill="rgb(219,88,35)" fg:x="96" fg:w="2"/><text x="11.4519%" y="527.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (2 samples, 0.23%)</title><rect x="11.2019%" y="501" width="0.2334%" height="15" fill="rgb(220,193,23)" fg:x="96" fg:w="2"/><text x="11.4519%" y="511.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.12%)</title><rect x="11.3186%" y="485" width="0.1167%" height="15" fill="rgb(230,90,52)" fg:x="97" fg:w="1"/><text x="11.5686%" y="495.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.12%)</title><rect x="11.3186%" y="469" width="0.1167%" height="15" fill="rgb(252,106,19)" fg:x="97" fg:w="1"/><text x="11.5686%" y="479.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.12%)</title><rect x="11.3186%" y="453" width="0.1167%" height="15" fill="rgb(206,74,20)" fg:x="97" fg:w="1"/><text x="11.5686%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (19 samples, 2.22%)</title><rect x="11.4352%" y="661" width="2.2170%" height="15" fill="rgb(230,138,44)" fg:x="98" fg:w="19"/><text x="11.6852%" y="671.50">c..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 2.22%)</title><rect x="11.4352%" y="645" width="2.2170%" height="15" fill="rgb(235,182,43)" fg:x="98" fg:w="19"/><text x="11.6852%" y="655.50">&lt;..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (19 samples, 2.22%)</title><rect x="11.4352%" y="629" width="2.2170%" height="15" fill="rgb(242,16,51)" fg:x="98" fg:w="19"/><text x="11.6852%" y="639.50">s..</text></g><g><title>syscall (19 samples, 2.22%)</title><rect x="11.4352%" y="613" width="2.2170%" height="15" fill="rgb(248,9,4)" fg:x="98" fg:w="19"/><text x="11.6852%" y="623.50">s..</text></g><g><title>[unknown] (19 samples, 2.22%)</title><rect x="11.4352%" y="597" width="2.2170%" height="15" fill="rgb(210,31,22)" fg:x="98" fg:w="19"/><text x="11.6852%" y="607.50">[..</text></g><g><title>[unknown] (16 samples, 1.87%)</title><rect x="11.7853%" y="581" width="1.8670%" height="15" fill="rgb(239,54,39)" fg:x="101" fg:w="16"/><text x="12.0353%" y="591.50">[..</text></g><g><title>[unknown] (16 samples, 1.87%)</title><rect x="11.7853%" y="565" width="1.8670%" height="15" fill="rgb(230,99,41)" fg:x="101" fg:w="16"/><text x="12.0353%" y="575.50">[..</text></g><g><title>[unknown] (16 samples, 1.87%)</title><rect x="11.7853%" y="549" width="1.8670%" height="15" fill="rgb(253,106,12)" fg:x="101" fg:w="16"/><text x="12.0353%" y="559.50">[..</text></g><g><title>[unknown] (16 samples, 1.87%)</title><rect x="11.7853%" y="533" width="1.8670%" height="15" fill="rgb(213,46,41)" fg:x="101" fg:w="16"/><text x="12.0353%" y="543.50">[..</text></g><g><title>[unknown] (16 samples, 1.87%)</title><rect x="11.7853%" y="517" width="1.8670%" height="15" fill="rgb(215,133,35)" fg:x="101" fg:w="16"/><text x="12.0353%" y="527.50">[..</text></g><g><title>[unknown] (16 samples, 1.87%)</title><rect x="11.7853%" y="501" width="1.8670%" height="15" fill="rgb(213,28,5)" fg:x="101" fg:w="16"/><text x="12.0353%" y="511.50">[..</text></g><g><title>[unknown] (16 samples, 1.87%)</title><rect x="11.7853%" y="485" width="1.8670%" height="15" fill="rgb(215,77,49)" fg:x="101" fg:w="16"/><text x="12.0353%" y="495.50">[..</text></g><g><title>[unknown] (16 samples, 1.87%)</title><rect x="11.7853%" y="469" width="1.8670%" height="15" fill="rgb(248,100,22)" fg:x="101" fg:w="16"/><text x="12.0353%" y="479.50">[..</text></g><g><title>[unknown] (16 samples, 1.87%)</title><rect x="11.7853%" y="453" width="1.8670%" height="15" fill="rgb(208,67,9)" fg:x="101" fg:w="16"/><text x="12.0353%" y="463.50">[..</text></g><g><title>[unknown] (15 samples, 1.75%)</title><rect x="11.9020%" y="437" width="1.7503%" height="15" fill="rgb(219,133,21)" fg:x="102" fg:w="15"/><text x="12.1520%" y="447.50"></text></g><g><title>[unknown] (15 samples, 1.75%)</title><rect x="11.9020%" y="421" width="1.7503%" height="15" fill="rgb(246,46,29)" fg:x="102" fg:w="15"/><text x="12.1520%" y="431.50"></text></g><g><title>malloc_consolidate (4 samples, 0.47%)</title><rect x="13.8856%" y="501" width="0.4667%" height="15" fill="rgb(246,185,52)" fg:x="119" fg:w="4"/><text x="14.1356%" y="511.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.12%)</title><rect x="14.2357%" y="485" width="0.1167%" height="15" fill="rgb(252,136,11)" fg:x="122" fg:w="1"/><text x="14.4857%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.3524%" y="485" width="0.1167%" height="15" fill="rgb(219,138,53)" fg:x="123" fg:w="1"/><text x="14.6024%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.3524%" y="469" width="0.1167%" height="15" fill="rgb(211,51,23)" fg:x="123" fg:w="1"/><text x="14.6024%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.3524%" y="453" width="0.1167%" height="15" fill="rgb(247,221,28)" fg:x="123" fg:w="1"/><text x="14.6024%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.3524%" y="437" width="0.1167%" height="15" fill="rgb(251,222,45)" fg:x="123" fg:w="1"/><text x="14.6024%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.93%)</title><rect x="13.6523%" y="613" width="0.9335%" height="15" fill="rgb(217,162,53)" fg:x="117" fg:w="8"/><text x="13.9023%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.93%)</title><rect x="13.6523%" y="597" width="0.9335%" height="15" fill="rgb(229,93,14)" fg:x="117" fg:w="8"/><text x="13.9023%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.82%)</title><rect x="13.7690%" y="581" width="0.8168%" height="15" fill="rgb(209,67,49)" fg:x="118" fg:w="7"/><text x="14.0190%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.82%)</title><rect x="13.7690%" y="565" width="0.8168%" height="15" fill="rgb(213,87,29)" fg:x="118" fg:w="7"/><text x="14.0190%" y="575.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.82%)</title><rect x="13.7690%" y="549" width="0.8168%" height="15" fill="rgb(205,151,52)" fg:x="118" fg:w="7"/><text x="14.0190%" y="559.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.82%)</title><rect x="13.7690%" y="533" width="0.8168%" height="15" fill="rgb(253,215,39)" fg:x="118" fg:w="7"/><text x="14.0190%" y="543.50"></text></g><g><title>_int_malloc (7 samples, 0.82%)</title><rect x="13.7690%" y="517" width="0.8168%" height="15" fill="rgb(221,220,41)" fg:x="118" fg:w="7"/><text x="14.0190%" y="527.50"></text></g><g><title>sysmalloc (2 samples, 0.23%)</title><rect x="14.3524%" y="501" width="0.2334%" height="15" fill="rgb(218,133,21)" fg:x="123" fg:w="2"/><text x="14.6024%" y="511.50"></text></g><g><title>__GI___mprotect (1 samples, 0.12%)</title><rect x="14.4691%" y="485" width="0.1167%" height="15" fill="rgb(221,193,43)" fg:x="124" fg:w="1"/><text x="14.7191%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.4691%" y="469" width="0.1167%" height="15" fill="rgb(240,128,52)" fg:x="124" fg:w="1"/><text x="14.7191%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.4691%" y="453" width="0.1167%" height="15" fill="rgb(253,114,12)" fg:x="124" fg:w="1"/><text x="14.7191%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.4691%" y="437" width="0.1167%" height="15" fill="rgb(215,223,47)" fg:x="124" fg:w="1"/><text x="14.7191%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.4691%" y="421" width="0.1167%" height="15" fill="rgb(248,225,23)" fg:x="124" fg:w="1"/><text x="14.7191%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.4691%" y="405" width="0.1167%" height="15" fill="rgb(250,108,0)" fg:x="124" fg:w="1"/><text x="14.7191%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.4691%" y="389" width="0.1167%" height="15" fill="rgb(228,208,7)" fg:x="124" fg:w="1"/><text x="14.7191%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.4691%" y="373" width="0.1167%" height="15" fill="rgb(244,45,10)" fg:x="124" fg:w="1"/><text x="14.7191%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.4691%" y="357" width="0.1167%" height="15" fill="rgb(207,125,25)" fg:x="124" fg:w="1"/><text x="14.7191%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="14.4691%" y="341" width="0.1167%" height="15" fill="rgb(210,195,18)" fg:x="124" fg:w="1"/><text x="14.7191%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="14.5858%" y="597" width="0.1167%" height="15" fill="rgb(249,80,12)" fg:x="125" fg:w="1"/><text x="14.8358%" y="607.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.12%)</title><rect x="14.5858%" y="581" width="0.1167%" height="15" fill="rgb(221,65,9)" fg:x="125" fg:w="1"/><text x="14.8358%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.12%)</title><rect x="14.5858%" y="565" width="0.1167%" height="15" fill="rgb(235,49,36)" fg:x="125" fg:w="1"/><text x="14.8358%" y="575.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (12 samples, 1.40%)</title><rect x="13.6523%" y="629" width="1.4002%" height="15" fill="rgb(225,32,20)" fg:x="117" fg:w="12"/><text x="13.9023%" y="639.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (4 samples, 0.47%)</title><rect x="14.5858%" y="613" width="0.4667%" height="15" fill="rgb(215,141,46)" fg:x="125" fg:w="4"/><text x="14.8358%" y="623.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (3 samples, 0.35%)</title><rect x="14.7025%" y="597" width="0.3501%" height="15" fill="rgb(250,160,47)" fg:x="126" fg:w="3"/><text x="14.9525%" y="607.50"></text></g><g><title>core::hint::spin_loop (3 samples, 0.35%)</title><rect x="14.7025%" y="581" width="0.3501%" height="15" fill="rgb(216,222,40)" fg:x="126" fg:w="3"/><text x="14.9525%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3 samples, 0.35%)</title><rect x="14.7025%" y="565" width="0.3501%" height="15" fill="rgb(234,217,39)" fg:x="126" fg:w="3"/><text x="14.9525%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.12%)</title><rect x="15.0525%" y="613" width="0.1167%" height="15" fill="rgb(207,178,40)" fg:x="129" fg:w="1"/><text x="15.3025%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.12%)</title><rect x="15.0525%" y="597" width="0.1167%" height="15" fill="rgb(221,136,13)" fg:x="129" fg:w="1"/><text x="15.3025%" y="607.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (19 samples, 2.22%)</title><rect x="13.6523%" y="661" width="2.2170%" height="15" fill="rgb(249,199,10)" fg:x="117" fg:w="19"/><text x="13.9023%" y="671.50">c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (19 samples, 2.22%)</title><rect x="13.6523%" y="645" width="2.2170%" height="15" fill="rgb(249,222,13)" fg:x="117" fg:w="19"/><text x="13.9023%" y="655.50">c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (7 samples, 0.82%)</title><rect x="15.0525%" y="629" width="0.8168%" height="15" fill="rgb(244,185,38)" fg:x="129" fg:w="7"/><text x="15.3025%" y="639.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (6 samples, 0.70%)</title><rect x="15.1692%" y="613" width="0.7001%" height="15" fill="rgb(236,202,9)" fg:x="130" fg:w="6"/><text x="15.4192%" y="623.50"></text></g><g><title>crossbeam_channel::waker::Waker::try_select (6 samples, 0.70%)</title><rect x="15.1692%" y="597" width="0.7001%" height="15" fill="rgb(250,229,37)" fg:x="130" fg:w="6"/><text x="15.4192%" y="607.50"></text></g><g><title>crossbeam_channel::context::Context::unpark (6 samples, 0.70%)</title><rect x="15.1692%" y="581" width="0.7001%" height="15" fill="rgb(206,174,23)" fg:x="130" fg:w="6"/><text x="15.4192%" y="591.50"></text></g><g><title>std::thread::Thread::unpark (6 samples, 0.70%)</title><rect x="15.1692%" y="565" width="0.7001%" height="15" fill="rgb(211,33,43)" fg:x="130" fg:w="6"/><text x="15.4192%" y="575.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::unpark (6 samples, 0.70%)</title><rect x="15.1692%" y="549" width="0.7001%" height="15" fill="rgb(245,58,50)" fg:x="130" fg:w="6"/><text x="15.4192%" y="559.50"></text></g><g><title>std::sys::unix::futex::futex_wake (6 samples, 0.70%)</title><rect x="15.1692%" y="533" width="0.7001%" height="15" fill="rgb(244,68,36)" fg:x="130" fg:w="6"/><text x="15.4192%" y="543.50"></text></g><g><title>syscall (6 samples, 0.70%)</title><rect x="15.1692%" y="517" width="0.7001%" height="15" fill="rgb(232,229,15)" fg:x="130" fg:w="6"/><text x="15.4192%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="15.1692%" y="501" width="0.7001%" height="15" fill="rgb(254,30,23)" fg:x="130" fg:w="6"/><text x="15.4192%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="15.1692%" y="485" width="0.7001%" height="15" fill="rgb(235,160,14)" fg:x="130" fg:w="6"/><text x="15.4192%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="15.1692%" y="469" width="0.7001%" height="15" fill="rgb(212,155,44)" fg:x="130" fg:w="6"/><text x="15.4192%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="15.1692%" y="453" width="0.7001%" height="15" fill="rgb(226,2,50)" fg:x="130" fg:w="6"/><text x="15.4192%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="15.1692%" y="437" width="0.7001%" height="15" fill="rgb(234,177,6)" fg:x="130" fg:w="6"/><text x="15.4192%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="15.1692%" y="421" width="0.7001%" height="15" fill="rgb(217,24,9)" fg:x="130" fg:w="6"/><text x="15.4192%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="15.1692%" y="405" width="0.7001%" height="15" fill="rgb(220,13,46)" fg:x="130" fg:w="6"/><text x="15.4192%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="15.1692%" y="389" width="0.7001%" height="15" fill="rgb(239,221,27)" fg:x="130" fg:w="6"/><text x="15.4192%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="15.2859%" y="373" width="0.5834%" height="15" fill="rgb(222,198,25)" fg:x="131" fg:w="5"/><text x="15.5359%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="15.2859%" y="357" width="0.5834%" height="15" fill="rgb(211,99,13)" fg:x="131" fg:w="5"/><text x="15.5359%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="15.2859%" y="341" width="0.5834%" height="15" fill="rgb(232,111,31)" fg:x="131" fg:w="5"/><text x="15.5359%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="15.2859%" y="325" width="0.5834%" height="15" fill="rgb(245,82,37)" fg:x="131" fg:w="5"/><text x="15.5359%" y="335.50"></text></g><g><title>__GI___libc_free (3 samples, 0.35%)</title><rect x="16.1027%" y="565" width="0.3501%" height="15" fill="rgb(227,149,46)" fg:x="138" fg:w="3"/><text x="16.3527%" y="575.50"></text></g><g><title>__rust_dealloc (1 samples, 0.12%)</title><rect x="16.4527%" y="565" width="0.1167%" height="15" fill="rgb(218,36,50)" fg:x="141" fg:w="1"/><text x="16.7027%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.93%)</title><rect x="16.1027%" y="645" width="0.9335%" height="15" fill="rgb(226,80,48)" fg:x="138" fg:w="8"/><text x="16.3527%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.93%)</title><rect x="16.1027%" y="629" width="0.9335%" height="15" fill="rgb(238,224,15)" fg:x="138" fg:w="8"/><text x="16.3527%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.93%)</title><rect x="16.1027%" y="613" width="0.9335%" height="15" fill="rgb(241,136,10)" fg:x="138" fg:w="8"/><text x="16.3527%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.93%)</title><rect x="16.1027%" y="597" width="0.9335%" height="15" fill="rgb(208,32,45)" fg:x="138" fg:w="8"/><text x="16.3527%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.93%)</title><rect x="16.1027%" y="581" width="0.9335%" height="15" fill="rgb(207,135,9)" fg:x="138" fg:w="8"/><text x="16.3527%" y="591.50"></text></g><g><title>_int_free (4 samples, 0.47%)</title><rect x="16.5694%" y="565" width="0.4667%" height="15" fill="rgb(206,86,44)" fg:x="142" fg:w="4"/><text x="16.8194%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="17.0362%" y="533" width="0.1167%" height="15" fill="rgb(245,177,15)" fg:x="146" fg:w="1"/><text x="17.2862%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (3 samples, 0.35%)</title><rect x="17.0362%" y="645" width="0.3501%" height="15" fill="rgb(206,64,50)" fg:x="146" fg:w="3"/><text x="17.2862%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.35%)</title><rect x="17.0362%" y="629" width="0.3501%" height="15" fill="rgb(234,36,40)" fg:x="146" fg:w="3"/><text x="17.2862%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.35%)</title><rect x="17.0362%" y="613" width="0.3501%" height="15" fill="rgb(213,64,8)" fg:x="146" fg:w="3"/><text x="17.2862%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.35%)</title><rect x="17.0362%" y="597" width="0.3501%" height="15" fill="rgb(210,75,36)" fg:x="146" fg:w="3"/><text x="17.2862%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.35%)</title><rect x="17.0362%" y="581" width="0.3501%" height="15" fill="rgb(229,88,21)" fg:x="146" fg:w="3"/><text x="17.2862%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.35%)</title><rect x="17.0362%" y="565" width="0.3501%" height="15" fill="rgb(252,204,47)" fg:x="146" fg:w="3"/><text x="17.2862%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.35%)</title><rect x="17.0362%" y="549" width="0.3501%" height="15" fill="rgb(208,77,27)" fg:x="146" fg:w="3"/><text x="17.2862%" y="559.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="17.1529%" y="533" width="0.2334%" height="15" fill="rgb(221,76,26)" fg:x="147" fg:w="2"/><text x="17.4029%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (52 samples, 6.07%)</title><rect x="18.5531%" y="357" width="6.0677%" height="15" fill="rgb(225,139,18)" fg:x="159" fg:w="52"/><text x="18.8031%" y="367.50">&lt;core::i..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (46 samples, 5.37%)</title><rect x="19.2532%" y="341" width="5.3676%" height="15" fill="rgb(230,137,11)" fg:x="165" fg:w="46"/><text x="19.5032%" y="351.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (46 samples, 5.37%)</title><rect x="19.2532%" y="325" width="5.3676%" height="15" fill="rgb(212,28,1)" fg:x="165" fg:w="46"/><text x="19.5032%" y="335.50">&lt;alloc:..</text></g><g><title>hex::val (36 samples, 4.20%)</title><rect x="20.4201%" y="309" width="4.2007%" height="15" fill="rgb(248,164,17)" fg:x="175" fg:w="36"/><text x="20.6701%" y="319.50">hex::..</text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="23.9207%" y="293" width="0.7001%" height="15" fill="rgb(222,171,42)" fg:x="205" fg:w="6"/><text x="24.1707%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="23.9207%" y="277" width="0.7001%" height="15" fill="rgb(243,84,45)" fg:x="205" fg:w="6"/><text x="24.1707%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="23.9207%" y="261" width="0.7001%" height="15" fill="rgb(252,49,23)" fg:x="205" fg:w="6"/><text x="24.1707%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="23.9207%" y="245" width="0.7001%" height="15" fill="rgb(215,19,7)" fg:x="205" fg:w="6"/><text x="24.1707%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="23.9207%" y="229" width="0.7001%" height="15" fill="rgb(238,81,41)" fg:x="205" fg:w="6"/><text x="24.1707%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="24.0373%" y="213" width="0.5834%" height="15" fill="rgb(210,199,37)" fg:x="206" fg:w="5"/><text x="24.2873%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="24.0373%" y="197" width="0.5834%" height="15" fill="rgb(244,192,49)" fg:x="206" fg:w="5"/><text x="24.2873%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="24.0373%" y="181" width="0.5834%" height="15" fill="rgb(226,211,11)" fg:x="206" fg:w="5"/><text x="24.2873%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="24.0373%" y="165" width="0.5834%" height="15" fill="rgb(236,162,54)" fg:x="206" fg:w="5"/><text x="24.2873%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="24.0373%" y="149" width="0.5834%" height="15" fill="rgb(220,229,9)" fg:x="206" fg:w="5"/><text x="24.2873%" y="159.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="24.0373%" y="133" width="0.5834%" height="15" fill="rgb(250,87,22)" fg:x="206" fg:w="5"/><text x="24.2873%" y="143.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="24.0373%" y="117" width="0.5834%" height="15" fill="rgb(239,43,17)" fg:x="206" fg:w="5"/><text x="24.2873%" y="127.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="24.0373%" y="101" width="0.5834%" height="15" fill="rgb(231,177,25)" fg:x="206" fg:w="5"/><text x="24.2873%" y="111.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 7.23%)</title><rect x="18.5531%" y="453" width="7.2345%" height="15" fill="rgb(219,179,1)" fg:x="159" fg:w="62"/><text x="18.8031%" y="463.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (62 samples, 7.23%)</title><rect x="18.5531%" y="437" width="7.2345%" height="15" fill="rgb(238,219,53)" fg:x="159" fg:w="62"/><text x="18.8031%" y="447.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 7.23%)</title><rect x="18.5531%" y="421" width="7.2345%" height="15" fill="rgb(232,167,36)" fg:x="159" fg:w="62"/><text x="18.8031%" y="431.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 7.23%)</title><rect x="18.5531%" y="405" width="7.2345%" height="15" fill="rgb(244,19,51)" fg:x="159" fg:w="62"/><text x="18.8031%" y="415.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (62 samples, 7.23%)</title><rect x="18.5531%" y="389" width="7.2345%" height="15" fill="rgb(224,6,22)" fg:x="159" fg:w="62"/><text x="18.8031%" y="399.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (62 samples, 7.23%)</title><rect x="18.5531%" y="373" width="7.2345%" height="15" fill="rgb(224,145,5)" fg:x="159" fg:w="62"/><text x="18.8031%" y="383.50">core::iter..</text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.17%)</title><rect x="24.6208%" y="357" width="1.1669%" height="15" fill="rgb(234,130,49)" fg:x="211" fg:w="10"/><text x="24.8708%" y="367.50"></text></g><g><title>core::cmp::min (2 samples, 0.23%)</title><rect x="25.5543%" y="341" width="0.2334%" height="15" fill="rgb(254,6,2)" fg:x="219" fg:w="2"/><text x="25.8043%" y="351.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.23%)</title><rect x="25.5543%" y="325" width="0.2334%" height="15" fill="rgb(208,96,46)" fg:x="219" fg:w="2"/><text x="25.8043%" y="335.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.23%)</title><rect x="25.5543%" y="309" width="0.2334%" height="15" fill="rgb(239,3,39)" fg:x="219" fg:w="2"/><text x="25.8043%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (5 samples, 0.58%)</title><rect x="25.7876%" y="453" width="0.5834%" height="15" fill="rgb(233,210,1)" fg:x="221" fg:w="5"/><text x="26.0376%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.12%)</title><rect x="26.2544%" y="437" width="0.1167%" height="15" fill="rgb(244,137,37)" fg:x="225" fg:w="1"/><text x="26.5044%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.23%)</title><rect x="26.3711%" y="389" width="0.2334%" height="15" fill="rgb(240,136,2)" fg:x="226" fg:w="2"/><text x="26.6211%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.12%)</title><rect x="26.6044%" y="389" width="0.1167%" height="15" fill="rgb(239,18,37)" fg:x="228" fg:w="1"/><text x="26.8544%" y="399.50"></text></g><g><title>__GI___libc_realloc (9 samples, 1.05%)</title><rect x="26.8378%" y="325" width="1.0502%" height="15" fill="rgb(218,185,22)" fg:x="230" fg:w="9"/><text x="27.0878%" y="335.50"></text></g><g><title>_int_realloc (3 samples, 0.35%)</title><rect x="27.5379%" y="309" width="0.3501%" height="15" fill="rgb(225,218,4)" fg:x="236" fg:w="3"/><text x="27.7879%" y="319.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="27.6546%" y="293" width="0.2334%" height="15" fill="rgb(230,182,32)" fg:x="237" fg:w="2"/><text x="27.9046%" y="303.50"></text></g><g><title>__rdl_realloc (1 samples, 0.12%)</title><rect x="27.8880%" y="325" width="0.1167%" height="15" fill="rgb(242,56,43)" fg:x="239" fg:w="1"/><text x="28.1380%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 1.28%)</title><rect x="26.8378%" y="373" width="1.2835%" height="15" fill="rgb(233,99,24)" fg:x="230" fg:w="11"/><text x="27.0878%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 1.28%)</title><rect x="26.8378%" y="357" width="1.2835%" height="15" fill="rgb(234,209,42)" fg:x="230" fg:w="11"/><text x="27.0878%" y="367.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 1.28%)</title><rect x="26.8378%" y="341" width="1.2835%" height="15" fill="rgb(227,7,12)" fg:x="230" fg:w="11"/><text x="27.0878%" y="351.50"></text></g><g><title>__rust_realloc (1 samples, 0.12%)</title><rect x="28.0047%" y="325" width="0.1167%" height="15" fill="rgb(245,203,43)" fg:x="240" fg:w="1"/><text x="28.2547%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 1.87%)</title><rect x="26.3711%" y="453" width="1.8670%" height="15" fill="rgb(238,205,33)" fg:x="226" fg:w="16"/><text x="26.6211%" y="463.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 1.87%)</title><rect x="26.3711%" y="437" width="1.8670%" height="15" fill="rgb(231,56,7)" fg:x="226" fg:w="16"/><text x="26.6211%" y="447.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 1.87%)</title><rect x="26.3711%" y="421" width="1.8670%" height="15" fill="rgb(244,186,29)" fg:x="226" fg:w="16"/><text x="26.6211%" y="431.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 1.87%)</title><rect x="26.3711%" y="405" width="1.8670%" height="15" fill="rgb(234,111,31)" fg:x="226" fg:w="16"/><text x="26.6211%" y="415.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 1.52%)</title><rect x="26.7211%" y="389" width="1.5169%" height="15" fill="rgb(241,149,10)" fg:x="229" fg:w="13"/><text x="26.9711%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.12%)</title><rect x="28.1214%" y="373" width="0.1167%" height="15" fill="rgb(249,206,44)" fg:x="241" fg:w="1"/><text x="28.3714%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.12%)</title><rect x="28.2380%" y="453" width="0.1167%" height="15" fill="rgb(251,153,30)" fg:x="242" fg:w="1"/><text x="28.4880%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (105 samples, 12.25%)</title><rect x="17.5029%" y="485" width="12.2520%" height="15" fill="rgb(239,152,38)" fg:x="150" fg:w="105"/><text x="17.7529%" y="495.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (105 samples, 12.25%)</title><rect x="17.5029%" y="469" width="12.2520%" height="15" fill="rgb(249,139,47)" fg:x="150" fg:w="105"/><text x="17.7529%" y="479.50">alloc::vec::Vec&lt;T,..</text></g><g><title>core::ptr::write (12 samples, 1.40%)</title><rect x="28.3547%" y="453" width="1.4002%" height="15" fill="rgb(244,64,35)" fg:x="243" fg:w="12"/><text x="28.6047%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="29.0548%" y="437" width="0.7001%" height="15" fill="rgb(216,46,15)" fg:x="249" fg:w="6"/><text x="29.3048%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="29.0548%" y="421" width="0.7001%" height="15" fill="rgb(250,74,19)" fg:x="249" fg:w="6"/><text x="29.3048%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="29.0548%" y="405" width="0.7001%" height="15" fill="rgb(249,42,33)" fg:x="249" fg:w="6"/><text x="29.3048%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="29.0548%" y="389" width="0.7001%" height="15" fill="rgb(242,149,17)" fg:x="249" fg:w="6"/><text x="29.3048%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="29.0548%" y="373" width="0.7001%" height="15" fill="rgb(244,29,21)" fg:x="249" fg:w="6"/><text x="29.3048%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="29.0548%" y="357" width="0.7001%" height="15" fill="rgb(220,130,37)" fg:x="249" fg:w="6"/><text x="29.3048%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="29.0548%" y="341" width="0.7001%" height="15" fill="rgb(211,67,2)" fg:x="249" fg:w="6"/><text x="29.3048%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="29.0548%" y="325" width="0.7001%" height="15" fill="rgb(235,68,52)" fg:x="249" fg:w="6"/><text x="29.3048%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="29.1715%" y="309" width="0.5834%" height="15" fill="rgb(246,142,3)" fg:x="250" fg:w="5"/><text x="29.4215%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="29.1715%" y="293" width="0.5834%" height="15" fill="rgb(241,25,7)" fg:x="250" fg:w="5"/><text x="29.4215%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="29.1715%" y="277" width="0.5834%" height="15" fill="rgb(242,119,39)" fg:x="250" fg:w="5"/><text x="29.4215%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="29.1715%" y="261" width="0.5834%" height="15" fill="rgb(241,98,45)" fg:x="250" fg:w="5"/><text x="29.4215%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="29.1715%" y="245" width="0.5834%" height="15" fill="rgb(254,28,30)" fg:x="250" fg:w="5"/><text x="29.4215%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="29.7550%" y="485" width="0.1167%" height="15" fill="rgb(241,142,54)" fg:x="255" fg:w="1"/><text x="30.0050%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.12%)</title><rect x="29.7550%" y="469" width="0.1167%" height="15" fill="rgb(222,85,15)" fg:x="255" fg:w="1"/><text x="30.0050%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="29.7550%" y="453" width="0.1167%" height="15" fill="rgb(210,85,47)" fg:x="255" fg:w="1"/><text x="30.0050%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="29.7550%" y="437" width="0.1167%" height="15" fill="rgb(224,206,25)" fg:x="255" fg:w="1"/><text x="30.0050%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="29.7550%" y="421" width="0.1167%" height="15" fill="rgb(243,201,19)" fg:x="255" fg:w="1"/><text x="30.0050%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="29.7550%" y="405" width="0.1167%" height="15" fill="rgb(236,59,4)" fg:x="255" fg:w="1"/><text x="30.0050%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.12%)</title><rect x="29.7550%" y="389" width="0.1167%" height="15" fill="rgb(254,179,45)" fg:x="255" fg:w="1"/><text x="30.0050%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.12%)</title><rect x="29.7550%" y="373" width="0.1167%" height="15" fill="rgb(226,14,10)" fg:x="255" fg:w="1"/><text x="30.0050%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (1 samples, 0.12%)</title><rect x="29.7550%" y="357" width="0.1167%" height="15" fill="rgb(244,27,41)" fg:x="255" fg:w="1"/><text x="30.0050%" y="367.50"></text></g><g><title>hex::val (1 samples, 0.12%)</title><rect x="29.7550%" y="341" width="0.1167%" height="15" fill="rgb(235,35,32)" fg:x="255" fg:w="1"/><text x="30.0050%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.12%)</title><rect x="29.8716%" y="485" width="0.1167%" height="15" fill="rgb(218,68,31)" fg:x="256" fg:w="1"/><text x="30.1216%" y="495.50"></text></g><g><title>hex::decode (118 samples, 13.77%)</title><rect x="17.3862%" y="645" width="13.7690%" height="15" fill="rgb(207,120,37)" fg:x="149" fg:w="118"/><text x="17.6362%" y="655.50">hex::decode</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (118 samples, 13.77%)</title><rect x="17.3862%" y="629" width="13.7690%" height="15" fill="rgb(227,98,0)" fg:x="149" fg:w="118"/><text x="17.6362%" y="639.50">&lt;alloc::vec::Vec&lt;u8&gt; ..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (118 samples, 13.77%)</title><rect x="17.3862%" y="613" width="13.7690%" height="15" fill="rgb(207,7,3)" fg:x="149" fg:w="118"/><text x="17.6362%" y="623.50">core::iter::traits::i..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (118 samples, 13.77%)</title><rect x="17.3862%" y="597" width="13.7690%" height="15" fill="rgb(206,98,19)" fg:x="149" fg:w="118"/><text x="17.6362%" y="607.50">&lt;core::result::Result..</text></g><g><title>core::iter::adapters::try_process (118 samples, 13.77%)</title><rect x="17.3862%" y="581" width="13.7690%" height="15" fill="rgb(217,5,26)" fg:x="149" fg:w="118"/><text x="17.6362%" y="591.50">core::iter::adapters:..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (118 samples, 13.77%)</title><rect x="17.3862%" y="565" width="13.7690%" height="15" fill="rgb(235,190,38)" fg:x="149" fg:w="118"/><text x="17.6362%" y="575.50">&lt;core::result::Result..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (118 samples, 13.77%)</title><rect x="17.3862%" y="549" width="13.7690%" height="15" fill="rgb(247,86,24)" fg:x="149" fg:w="118"/><text x="17.6362%" y="559.50">core::iter::traits::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (118 samples, 13.77%)</title><rect x="17.3862%" y="533" width="13.7690%" height="15" fill="rgb(205,101,16)" fg:x="149" fg:w="118"/><text x="17.6362%" y="543.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (118 samples, 13.77%)</title><rect x="17.3862%" y="517" width="13.7690%" height="15" fill="rgb(246,168,33)" fg:x="149" fg:w="118"/><text x="17.6362%" y="527.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (118 samples, 13.77%)</title><rect x="17.3862%" y="501" width="13.7690%" height="15" fill="rgb(231,114,1)" fg:x="149" fg:w="118"/><text x="17.6362%" y="511.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 1.17%)</title><rect x="29.9883%" y="485" width="1.1669%" height="15" fill="rgb(207,184,53)" fg:x="257" fg:w="10"/><text x="30.2383%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 1.17%)</title><rect x="29.9883%" y="469" width="1.1669%" height="15" fill="rgb(224,95,51)" fg:x="257" fg:w="10"/><text x="30.2383%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 1.17%)</title><rect x="29.9883%" y="453" width="1.1669%" height="15" fill="rgb(212,188,45)" fg:x="257" fg:w="10"/><text x="30.2383%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 1.17%)</title><rect x="29.9883%" y="437" width="1.1669%" height="15" fill="rgb(223,154,38)" fg:x="257" fg:w="10"/><text x="30.2383%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 1.17%)</title><rect x="29.9883%" y="421" width="1.1669%" height="15" fill="rgb(251,22,52)" fg:x="257" fg:w="10"/><text x="30.2383%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 1.17%)</title><rect x="29.9883%" y="405" width="1.1669%" height="15" fill="rgb(229,209,22)" fg:x="257" fg:w="10"/><text x="30.2383%" y="415.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 1.17%)</title><rect x="29.9883%" y="389" width="1.1669%" height="15" fill="rgb(234,138,34)" fg:x="257" fg:w="10"/><text x="30.2383%" y="399.50"></text></g><g><title>__GI___libc_malloc (10 samples, 1.17%)</title><rect x="29.9883%" y="373" width="1.1669%" height="15" fill="rgb(212,95,11)" fg:x="257" fg:w="10"/><text x="30.2383%" y="383.50"></text></g><g><title>_int_malloc (8 samples, 0.93%)</title><rect x="30.2217%" y="357" width="0.9335%" height="15" fill="rgb(240,179,47)" fg:x="259" fg:w="8"/><text x="30.4717%" y="367.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.12%)</title><rect x="31.0385%" y="341" width="0.1167%" height="15" fill="rgb(240,163,11)" fg:x="266" fg:w="1"/><text x="31.2885%" y="351.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.23%)</title><rect x="31.1552%" y="549" width="0.2334%" height="15" fill="rgb(236,37,12)" fg:x="267" fg:w="2"/><text x="31.4052%" y="559.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.12%)</title><rect x="31.2719%" y="533" width="0.1167%" height="15" fill="rgb(232,164,16)" fg:x="268" fg:w="1"/><text x="31.5219%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.12%)</title><rect x="31.2719%" y="517" width="0.1167%" height="15" fill="rgb(244,205,15)" fg:x="268" fg:w="1"/><text x="31.5219%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.12%)</title><rect x="31.2719%" y="501" width="0.1167%" height="15" fill="rgb(223,117,47)" fg:x="268" fg:w="1"/><text x="31.5219%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.12%)</title><rect x="31.2719%" y="485" width="0.1167%" height="15" fill="rgb(244,107,35)" fg:x="268" fg:w="1"/><text x="31.5219%" y="495.50"></text></g><g><title>alloc::string::String::reserve (1 samples, 0.12%)</title><rect x="31.3886%" y="549" width="0.1167%" height="15" fill="rgb(205,140,8)" fg:x="269" fg:w="1"/><text x="31.6386%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="31.3886%" y="533" width="0.1167%" height="15" fill="rgb(228,84,46)" fg:x="269" fg:w="1"/><text x="31.6386%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="31.3886%" y="517" width="0.1167%" height="15" fill="rgb(254,188,9)" fg:x="269" fg:w="1"/><text x="31.6386%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="31.3886%" y="501" width="0.1167%" height="15" fill="rgb(206,112,54)" fg:x="269" fg:w="1"/><text x="31.6386%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="31.3886%" y="485" width="0.1167%" height="15" fill="rgb(216,84,49)" fg:x="269" fg:w="1"/><text x="31.6386%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="31.3886%" y="469" width="0.1167%" height="15" fill="rgb(214,194,35)" fg:x="269" fg:w="1"/><text x="31.6386%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.23%)</title><rect x="31.7386%" y="485" width="0.2334%" height="15" fill="rgb(249,28,3)" fg:x="272" fg:w="2"/><text x="31.9886%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.35%)</title><rect x="31.7386%" y="501" width="0.3501%" height="15" fill="rgb(222,56,52)" fg:x="272" fg:w="3"/><text x="31.9886%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.12%)</title><rect x="31.9720%" y="485" width="0.1167%" height="15" fill="rgb(245,217,50)" fg:x="274" fg:w="1"/><text x="32.2220%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.23%)</title><rect x="32.0887%" y="501" width="0.2334%" height="15" fill="rgb(213,201,24)" fg:x="275" fg:w="2"/><text x="32.3387%" y="511.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.23%)</title><rect x="32.0887%" y="485" width="0.2334%" height="15" fill="rgb(248,116,28)" fg:x="275" fg:w="2"/><text x="32.3387%" y="495.50"></text></g><g><title>core::ptr::read (3 samples, 0.35%)</title><rect x="32.3221%" y="469" width="0.3501%" height="15" fill="rgb(219,72,43)" fg:x="277" fg:w="3"/><text x="32.5721%" y="479.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.17%)</title><rect x="31.7386%" y="517" width="1.1669%" height="15" fill="rgb(209,138,14)" fg:x="272" fg:w="10"/><text x="31.9886%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.58%)</title><rect x="32.3221%" y="501" width="0.5834%" height="15" fill="rgb(222,18,33)" fg:x="277" fg:w="5"/><text x="32.5721%" y="511.50"></text></g><g><title>core::mem::replace (5 samples, 0.58%)</title><rect x="32.3221%" y="485" width="0.5834%" height="15" fill="rgb(213,199,7)" fg:x="277" fg:w="5"/><text x="32.5721%" y="495.50"></text></g><g><title>core::ptr::write (2 samples, 0.23%)</title><rect x="32.6721%" y="469" width="0.2334%" height="15" fill="rgb(250,110,10)" fg:x="280" fg:w="2"/><text x="32.9221%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.23%)</title><rect x="34.1890%" y="453" width="0.2334%" height="15" fill="rgb(248,123,6)" fg:x="293" fg:w="2"/><text x="34.4390%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.23%)</title><rect x="34.1890%" y="437" width="0.2334%" height="15" fill="rgb(206,91,31)" fg:x="293" fg:w="2"/><text x="34.4390%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 3.97%)</title><rect x="31.1552%" y="597" width="3.9673%" height="15" fill="rgb(211,154,13)" fg:x="267" fg:w="34"/><text x="31.4052%" y="607.50">core..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (34 samples, 3.97%)</title><rect x="31.1552%" y="581" width="3.9673%" height="15" fill="rgb(225,148,7)" fg:x="267" fg:w="34"/><text x="31.4052%" y="591.50">&lt;all..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (34 samples, 3.97%)</title><rect x="31.1552%" y="565" width="3.9673%" height="15" fill="rgb(220,160,43)" fg:x="267" fg:w="34"/><text x="31.4052%" y="575.50">&lt;all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (31 samples, 3.62%)</title><rect x="31.5053%" y="549" width="3.6173%" height="15" fill="rgb(213,52,39)" fg:x="270" fg:w="31"/><text x="31.7553%" y="559.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (31 samples, 3.62%)</title><rect x="31.5053%" y="533" width="3.6173%" height="15" fill="rgb(243,137,7)" fg:x="270" fg:w="31"/><text x="31.7553%" y="543.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (19 samples, 2.22%)</title><rect x="32.9055%" y="517" width="2.2170%" height="15" fill="rgb(230,79,13)" fg:x="282" fg:w="19"/><text x="33.1555%" y="527.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (19 samples, 2.22%)</title><rect x="32.9055%" y="501" width="2.2170%" height="15" fill="rgb(247,105,23)" fg:x="282" fg:w="19"/><text x="33.1555%" y="511.50">&lt;..</text></g><g><title>alloc::string::String::push (19 samples, 2.22%)</title><rect x="32.9055%" y="485" width="2.2170%" height="15" fill="rgb(223,179,41)" fg:x="282" fg:w="19"/><text x="33.1555%" y="495.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 2.22%)</title><rect x="32.9055%" y="469" width="2.2170%" height="15" fill="rgb(218,9,34)" fg:x="282" fg:w="19"/><text x="33.1555%" y="479.50">a..</text></g><g><title>core::ptr::write (6 samples, 0.70%)</title><rect x="34.4224%" y="453" width="0.7001%" height="15" fill="rgb(222,106,8)" fg:x="295" fg:w="6"/><text x="34.6724%" y="463.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (35 samples, 4.08%)</title><rect x="31.1552%" y="629" width="4.0840%" height="15" fill="rgb(211,220,0)" fg:x="267" fg:w="35"/><text x="31.4052%" y="639.50">&lt;T a..</text></g><g><title>hex::encode_to_iter (35 samples, 4.08%)</title><rect x="31.1552%" y="613" width="4.0840%" height="15" fill="rgb(229,52,16)" fg:x="267" fg:w="35"/><text x="31.4052%" y="623.50">hex:..</text></g><g><title>hex::BytesToHexChars::new (1 samples, 0.12%)</title><rect x="35.1225%" y="597" width="0.1167%" height="15" fill="rgb(212,155,18)" fg:x="301" fg:w="1"/><text x="35.3725%" y="607.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.12%)</title><rect x="35.1225%" y="581" width="0.1167%" height="15" fill="rgb(242,21,14)" fg:x="301" fg:w="1"/><text x="35.3725%" y="591.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.12%)</title><rect x="35.1225%" y="565" width="0.1167%" height="15" fill="rgb(222,19,48)" fg:x="301" fg:w="1"/><text x="35.3725%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.12%)</title><rect x="35.1225%" y="549" width="0.1167%" height="15" fill="rgb(232,45,27)" fg:x="301" fg:w="1"/><text x="35.3725%" y="559.50"></text></g><g><title>lab4::checksum::Checksum::update (167 samples, 19.49%)</title><rect x="15.8693%" y="661" width="19.4866%" height="15" fill="rgb(249,103,42)" fg:x="136" fg:w="167"/><text x="16.1193%" y="671.50">lab4::checksum::Checksum::update</text></g><g><title>hex::encode (36 samples, 4.20%)</title><rect x="31.1552%" y="645" width="4.2007%" height="15" fill="rgb(246,81,33)" fg:x="267" fg:w="36"/><text x="31.4052%" y="655.50">hex::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.12%)</title><rect x="35.2392%" y="629" width="0.1167%" height="15" fill="rgb(252,33,42)" fg:x="302" fg:w="1"/><text x="35.4892%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.12%)</title><rect x="35.2392%" y="613" width="0.1167%" height="15" fill="rgb(209,212,41)" fg:x="302" fg:w="1"/><text x="35.4892%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="35.2392%" y="597" width="0.1167%" height="15" fill="rgb(207,154,6)" fg:x="302" fg:w="1"/><text x="35.4892%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.12%)</title><rect x="35.2392%" y="581" width="0.1167%" height="15" fill="rgb(223,64,47)" fg:x="302" fg:w="1"/><text x="35.4892%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="35.2392%" y="565" width="0.1167%" height="15" fill="rgb(211,161,38)" fg:x="302" fg:w="1"/><text x="35.4892%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="35.2392%" y="549" width="0.1167%" height="15" fill="rgb(219,138,40)" fg:x="302" fg:w="1"/><text x="35.4892%" y="559.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::digest_pad (1 samples, 0.12%)</title><rect x="35.4726%" y="549" width="0.1167%" height="15" fill="rgb(241,228,46)" fg:x="304" fg:w="1"/><text x="35.7226%" y="559.50"></text></g><g><title>block_buffer::set_zero (1 samples, 0.12%)</title><rect x="35.4726%" y="533" width="0.1167%" height="15" fill="rgb(223,209,38)" fg:x="304" fg:w="1"/><text x="35.7226%" y="543.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.12%)</title><rect x="35.4726%" y="517" width="0.1167%" height="15" fill="rgb(236,164,45)" fg:x="304" fg:w="1"/><text x="35.7226%" y="527.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.12%)</title><rect x="35.4726%" y="501" width="0.1167%" height="15" fill="rgb(231,15,5)" fg:x="304" fg:w="1"/><text x="35.7226%" y="511.50"></text></g><g><title>sha2::sha256::soft::add (2 samples, 0.23%)</title><rect x="35.7060%" y="469" width="0.2334%" height="15" fill="rgb(252,35,15)" fg:x="306" fg:w="2"/><text x="35.9560%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.23%)</title><rect x="35.7060%" y="453" width="0.2334%" height="15" fill="rgb(248,181,18)" fg:x="306" fg:w="2"/><text x="35.9560%" y="463.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.12%)</title><rect x="35.9393%" y="453" width="0.1167%" height="15" fill="rgb(233,39,42)" fg:x="308" fg:w="1"/><text x="36.1893%" y="463.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.12%)</title><rect x="35.9393%" y="437" width="0.1167%" height="15" fill="rgb(238,110,33)" fg:x="308" fg:w="1"/><text x="36.1893%" y="447.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.12%)</title><rect x="36.0560%" y="437" width="0.1167%" height="15" fill="rgb(233,195,10)" fg:x="309" fg:w="1"/><text x="36.3060%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.12%)</title><rect x="36.0560%" y="421" width="0.1167%" height="15" fill="rgb(254,105,3)" fg:x="309" fg:w="1"/><text x="36.3060%" y="431.50"></text></g><g><title>sha2::sha256::soft::or (5 samples, 0.58%)</title><rect x="36.1727%" y="421" width="0.5834%" height="15" fill="rgb(221,225,9)" fg:x="310" fg:w="5"/><text x="36.4227%" y="431.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (7 samples, 0.82%)</title><rect x="36.0560%" y="453" width="0.8168%" height="15" fill="rgb(224,227,45)" fg:x="309" fg:w="7"/><text x="36.3060%" y="463.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (6 samples, 0.70%)</title><rect x="36.1727%" y="437" width="0.7001%" height="15" fill="rgb(229,198,43)" fg:x="310" fg:w="6"/><text x="36.4227%" y="447.50"></text></g><g><title>sha2::sha256::soft::xor (1 samples, 0.12%)</title><rect x="36.7561%" y="421" width="0.1167%" height="15" fill="rgb(206,209,35)" fg:x="315" fg:w="1"/><text x="37.0061%" y="431.50"></text></g><g><title>sha2::sha256::soft::schedule (9 samples, 1.05%)</title><rect x="35.9393%" y="469" width="1.0502%" height="15" fill="rgb(245,195,53)" fg:x="308" fg:w="9"/><text x="36.1893%" y="479.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1 samples, 0.12%)</title><rect x="36.8728%" y="453" width="0.1167%" height="15" fill="rgb(240,92,26)" fg:x="316" fg:w="1"/><text x="37.1228%" y="463.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.12%)</title><rect x="36.8728%" y="437" width="0.1167%" height="15" fill="rgb(207,40,23)" fg:x="316" fg:w="1"/><text x="37.1228%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (5 samples, 0.58%)</title><rect x="38.0397%" y="453" width="0.5834%" height="15" fill="rgb(223,111,35)" fg:x="326" fg:w="5"/><text x="38.2897%" y="463.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (34 samples, 3.97%)</title><rect x="35.3559%" y="645" width="3.9673%" height="15" fill="rgb(229,147,28)" fg:x="303" fg:w="34"/><text x="35.6059%" y="655.50">&lt;D a..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (33 samples, 3.85%)</title><rect x="35.4726%" y="629" width="3.8506%" height="15" fill="rgb(211,29,28)" fg:x="304" fg:w="33"/><text x="35.7226%" y="639.50">dige..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (33 samples, 3.85%)</title><rect x="35.4726%" y="613" width="3.8506%" height="15" fill="rgb(228,72,33)" fg:x="304" fg:w="33"/><text x="35.7226%" y="623.50">&lt;D a..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (33 samples, 3.85%)</title><rect x="35.4726%" y="597" width="3.8506%" height="15" fill="rgb(205,214,31)" fg:x="304" fg:w="33"/><text x="35.7226%" y="607.50">&lt;sha..</text></g><g><title>sha2::sha256::Engine256::finish (33 samples, 3.85%)</title><rect x="35.4726%" y="581" width="3.8506%" height="15" fill="rgb(224,111,15)" fg:x="304" fg:w="33"/><text x="35.7226%" y="591.50">sha2..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (33 samples, 3.85%)</title><rect x="35.4726%" y="565" width="3.8506%" height="15" fill="rgb(253,21,26)" fg:x="304" fg:w="33"/><text x="35.7226%" y="575.50">bloc..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (32 samples, 3.73%)</title><rect x="35.5893%" y="549" width="3.7340%" height="15" fill="rgb(245,139,43)" fg:x="305" fg:w="32"/><text x="35.8393%" y="559.50">sha2..</text></g><g><title>sha2::sha256::compress256 (32 samples, 3.73%)</title><rect x="35.5893%" y="533" width="3.7340%" height="15" fill="rgb(252,170,7)" fg:x="305" fg:w="32"/><text x="35.8393%" y="543.50">sha2..</text></g><g><title>sha2::sha256::x86::compress (32 samples, 3.73%)</title><rect x="35.5893%" y="517" width="3.7340%" height="15" fill="rgb(231,118,14)" fg:x="305" fg:w="32"/><text x="35.8393%" y="527.50">sha2..</text></g><g><title>sha2::sha256::soft::compress (32 samples, 3.73%)</title><rect x="35.5893%" y="501" width="3.7340%" height="15" fill="rgb(238,83,0)" fg:x="305" fg:w="32"/><text x="35.8393%" y="511.50">sha2..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (31 samples, 3.62%)</title><rect x="35.7060%" y="485" width="3.6173%" height="15" fill="rgb(221,39,39)" fg:x="306" fg:w="31"/><text x="35.9560%" y="495.50">sha2..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (20 samples, 2.33%)</title><rect x="36.9895%" y="469" width="2.3337%" height="15" fill="rgb(222,119,46)" fg:x="317" fg:w="20"/><text x="37.2395%" y="479.50">s..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (6 samples, 0.70%)</title><rect x="38.6231%" y="453" width="0.7001%" height="15" fill="rgb(222,165,49)" fg:x="331" fg:w="6"/><text x="38.8731%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="39.4399%" y="469" width="0.1167%" height="15" fill="rgb(219,113,52)" fg:x="338" fg:w="1"/><text x="39.6899%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="39.4399%" y="453" width="0.1167%" height="15" fill="rgb(214,7,15)" fg:x="338" fg:w="1"/><text x="39.6899%" y="463.50"></text></g><g><title>alloc::string::String::reserve (2 samples, 0.23%)</title><rect x="39.4399%" y="549" width="0.2334%" height="15" fill="rgb(235,32,4)" fg:x="338" fg:w="2"/><text x="39.6899%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="39.4399%" y="533" width="0.2334%" height="15" fill="rgb(238,90,54)" fg:x="338" fg:w="2"/><text x="39.6899%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.23%)</title><rect x="39.4399%" y="517" width="0.2334%" height="15" fill="rgb(213,208,19)" fg:x="338" fg:w="2"/><text x="39.6899%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.23%)</title><rect x="39.4399%" y="501" width="0.2334%" height="15" fill="rgb(233,156,4)" fg:x="338" fg:w="2"/><text x="39.6899%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.23%)</title><rect x="39.4399%" y="485" width="0.2334%" height="15" fill="rgb(207,194,5)" fg:x="338" fg:w="2"/><text x="39.6899%" y="495.50"></text></g><g><title>core::cmp::max (1 samples, 0.12%)</title><rect x="39.5566%" y="469" width="0.1167%" height="15" fill="rgb(206,111,30)" fg:x="339" fg:w="1"/><text x="39.8066%" y="479.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.12%)</title><rect x="39.5566%" y="453" width="0.1167%" height="15" fill="rgb(243,70,54)" fg:x="339" fg:w="1"/><text x="39.8066%" y="463.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.12%)</title><rect x="39.5566%" y="437" width="0.1167%" height="15" fill="rgb(242,28,8)" fg:x="339" fg:w="1"/><text x="39.8066%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="39.9067%" y="501" width="0.1167%" height="15" fill="rgb(219,106,18)" fg:x="342" fg:w="1"/><text x="40.1567%" y="511.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="39.9067%" y="485" width="0.1167%" height="15" fill="rgb(244,222,10)" fg:x="342" fg:w="1"/><text x="40.1567%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.35%)</title><rect x="40.0233%" y="501" width="0.3501%" height="15" fill="rgb(236,179,52)" fg:x="343" fg:w="3"/><text x="40.2733%" y="511.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (3 samples, 0.35%)</title><rect x="40.0233%" y="485" width="0.3501%" height="15" fill="rgb(213,23,39)" fg:x="343" fg:w="3"/><text x="40.2733%" y="495.50"></text></g><g><title>core::ptr::read (3 samples, 0.35%)</title><rect x="40.3734%" y="469" width="0.3501%" height="15" fill="rgb(238,48,10)" fg:x="346" fg:w="3"/><text x="40.6234%" y="479.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 1.05%)</title><rect x="39.9067%" y="517" width="1.0502%" height="15" fill="rgb(251,196,23)" fg:x="342" fg:w="9"/><text x="40.1567%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.58%)</title><rect x="40.3734%" y="501" width="0.5834%" height="15" fill="rgb(250,152,24)" fg:x="346" fg:w="5"/><text x="40.6234%" y="511.50"></text></g><g><title>core::mem::replace (5 samples, 0.58%)</title><rect x="40.3734%" y="485" width="0.5834%" height="15" fill="rgb(209,150,17)" fg:x="346" fg:w="5"/><text x="40.6234%" y="495.50"></text></g><g><title>core::ptr::write (2 samples, 0.23%)</title><rect x="40.7235%" y="469" width="0.2334%" height="15" fill="rgb(234,202,34)" fg:x="349" fg:w="2"/><text x="40.9735%" y="479.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (69 samples, 8.05%)</title><rect x="35.3559%" y="661" width="8.0513%" height="15" fill="rgb(253,148,53)" fg:x="303" fg:w="69"/><text x="35.6059%" y="671.50">lab4::check..</text></g><g><title>hex::encode (35 samples, 4.08%)</title><rect x="39.3232%" y="645" width="4.0840%" height="15" fill="rgb(218,129,16)" fg:x="337" fg:w="35"/><text x="39.5732%" y="655.50">hex:..</text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (35 samples, 4.08%)</title><rect x="39.3232%" y="629" width="4.0840%" height="15" fill="rgb(216,85,19)" fg:x="337" fg:w="35"/><text x="39.5732%" y="639.50">&lt;T a..</text></g><g><title>hex::encode_to_iter (35 samples, 4.08%)</title><rect x="39.3232%" y="613" width="4.0840%" height="15" fill="rgb(235,228,7)" fg:x="337" fg:w="35"/><text x="39.5732%" y="623.50">hex:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (35 samples, 4.08%)</title><rect x="39.3232%" y="597" width="4.0840%" height="15" fill="rgb(245,175,0)" fg:x="337" fg:w="35"/><text x="39.5732%" y="607.50">core..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (35 samples, 4.08%)</title><rect x="39.3232%" y="581" width="4.0840%" height="15" fill="rgb(208,168,36)" fg:x="337" fg:w="35"/><text x="39.5732%" y="591.50">&lt;all..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (34 samples, 3.97%)</title><rect x="39.4399%" y="565" width="3.9673%" height="15" fill="rgb(246,171,24)" fg:x="338" fg:w="34"/><text x="39.6899%" y="575.50">&lt;all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (32 samples, 3.73%)</title><rect x="39.6733%" y="549" width="3.7340%" height="15" fill="rgb(215,142,24)" fg:x="340" fg:w="32"/><text x="39.9233%" y="559.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (32 samples, 3.73%)</title><rect x="39.6733%" y="533" width="3.7340%" height="15" fill="rgb(250,187,7)" fg:x="340" fg:w="32"/><text x="39.9233%" y="543.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (21 samples, 2.45%)</title><rect x="40.9568%" y="517" width="2.4504%" height="15" fill="rgb(228,66,33)" fg:x="351" fg:w="21"/><text x="41.2068%" y="527.50">co..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (21 samples, 2.45%)</title><rect x="40.9568%" y="501" width="2.4504%" height="15" fill="rgb(234,215,21)" fg:x="351" fg:w="21"/><text x="41.2068%" y="511.50">&lt;a..</text></g><g><title>alloc::string::String::push (21 samples, 2.45%)</title><rect x="40.9568%" y="485" width="2.4504%" height="15" fill="rgb(222,191,20)" fg:x="351" fg:w="21"/><text x="41.2068%" y="495.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (21 samples, 2.45%)</title><rect x="40.9568%" y="469" width="2.4504%" height="15" fill="rgb(245,79,54)" fg:x="351" fg:w="21"/><text x="41.2068%" y="479.50">al..</text></g><g><title>core::ptr::write (7 samples, 0.82%)</title><rect x="42.5904%" y="453" width="0.8168%" height="15" fill="rgb(240,10,37)" fg:x="365" fg:w="7"/><text x="42.8404%" y="463.50"></text></g><g><title>std::sys::unix::futex::futex_wait (117 samples, 13.65%)</title><rect x="43.4072%" y="613" width="13.6523%" height="15" fill="rgb(214,192,32)" fg:x="372" fg:w="117"/><text x="43.6572%" y="623.50">std::sys::unix::futex..</text></g><g><title>syscall (117 samples, 13.65%)</title><rect x="43.4072%" y="597" width="13.6523%" height="15" fill="rgb(209,36,54)" fg:x="372" fg:w="117"/><text x="43.6572%" y="607.50">syscall</text></g><g><title>[unknown] (117 samples, 13.65%)</title><rect x="43.4072%" y="581" width="13.6523%" height="15" fill="rgb(220,10,11)" fg:x="372" fg:w="117"/><text x="43.6572%" y="591.50">[unknown]</text></g><g><title>[unknown] (117 samples, 13.65%)</title><rect x="43.4072%" y="565" width="13.6523%" height="15" fill="rgb(221,106,17)" fg:x="372" fg:w="117"/><text x="43.6572%" y="575.50">[unknown]</text></g><g><title>[unknown] (116 samples, 13.54%)</title><rect x="43.5239%" y="549" width="13.5356%" height="15" fill="rgb(251,142,44)" fg:x="373" fg:w="116"/><text x="43.7739%" y="559.50">[unknown]</text></g><g><title>[unknown] (116 samples, 13.54%)</title><rect x="43.5239%" y="533" width="13.5356%" height="15" fill="rgb(238,13,15)" fg:x="373" fg:w="116"/><text x="43.7739%" y="543.50">[unknown]</text></g><g><title>[unknown] (115 samples, 13.42%)</title><rect x="43.6406%" y="517" width="13.4189%" height="15" fill="rgb(208,107,27)" fg:x="374" fg:w="115"/><text x="43.8906%" y="527.50">[unknown]</text></g><g><title>[unknown] (114 samples, 13.30%)</title><rect x="43.7573%" y="501" width="13.3022%" height="15" fill="rgb(205,136,37)" fg:x="375" fg:w="114"/><text x="44.0073%" y="511.50">[unknown]</text></g><g><title>[unknown] (113 samples, 13.19%)</title><rect x="43.8740%" y="485" width="13.1855%" height="15" fill="rgb(250,205,27)" fg:x="376" fg:w="113"/><text x="44.1240%" y="495.50">[unknown]</text></g><g><title>[unknown] (113 samples, 13.19%)</title><rect x="43.8740%" y="469" width="13.1855%" height="15" fill="rgb(210,80,43)" fg:x="376" fg:w="113"/><text x="44.1240%" y="479.50">[unknown]</text></g><g><title>[unknown] (112 samples, 13.07%)</title><rect x="43.9907%" y="453" width="13.0688%" height="15" fill="rgb(247,160,36)" fg:x="377" fg:w="112"/><text x="44.2407%" y="463.50">[unknown]</text></g><g><title>[unknown] (110 samples, 12.84%)</title><rect x="44.2240%" y="437" width="12.8355%" height="15" fill="rgb(234,13,49)" fg:x="379" fg:w="110"/><text x="44.4740%" y="447.50">[unknown]</text></g><g><title>[unknown] (108 samples, 12.60%)</title><rect x="44.4574%" y="421" width="12.6021%" height="15" fill="rgb(234,122,0)" fg:x="381" fg:w="108"/><text x="44.7074%" y="431.50">[unknown]</text></g><g><title>[unknown] (107 samples, 12.49%)</title><rect x="44.5741%" y="405" width="12.4854%" height="15" fill="rgb(207,146,38)" fg:x="382" fg:w="107"/><text x="44.8241%" y="415.50">[unknown]</text></g><g><title>[unknown] (107 samples, 12.49%)</title><rect x="44.5741%" y="389" width="12.4854%" height="15" fill="rgb(207,177,25)" fg:x="382" fg:w="107"/><text x="44.8241%" y="399.50">[unknown]</text></g><g><title>[unknown] (106 samples, 12.37%)</title><rect x="44.6908%" y="373" width="12.3687%" height="15" fill="rgb(211,178,42)" fg:x="383" fg:w="106"/><text x="44.9408%" y="383.50">[unknown]</text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="56.8261%" y="357" width="0.2334%" height="15" fill="rgb(230,69,54)" fg:x="487" fg:w="2"/><text x="57.0761%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="56.8261%" y="341" width="0.2334%" height="15" fill="rgb(214,135,41)" fg:x="487" fg:w="2"/><text x="57.0761%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="56.8261%" y="325" width="0.2334%" height="15" fill="rgb(237,67,25)" fg:x="487" fg:w="2"/><text x="57.0761%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="56.8261%" y="309" width="0.2334%" height="15" fill="rgb(222,189,50)" fg:x="487" fg:w="2"/><text x="57.0761%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="56.8261%" y="293" width="0.2334%" height="15" fill="rgb(245,148,34)" fg:x="487" fg:w="2"/><text x="57.0761%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="56.8261%" y="277" width="0.2334%" height="15" fill="rgb(222,29,6)" fg:x="487" fg:w="2"/><text x="57.0761%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="56.8261%" y="261" width="0.2334%" height="15" fill="rgb(221,189,43)" fg:x="487" fg:w="2"/><text x="57.0761%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="56.8261%" y="245" width="0.2334%" height="15" fill="rgb(207,36,27)" fg:x="487" fg:w="2"/><text x="57.0761%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="56.8261%" y="229" width="0.2334%" height="15" fill="rgb(217,90,24)" fg:x="487" fg:w="2"/><text x="57.0761%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="56.8261%" y="213" width="0.2334%" height="15" fill="rgb(224,66,35)" fg:x="487" fg:w="2"/><text x="57.0761%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.23%)</title><rect x="56.8261%" y="197" width="0.2334%" height="15" fill="rgb(221,13,50)" fg:x="487" fg:w="2"/><text x="57.0761%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="56.9428%" y="181" width="0.1167%" height="15" fill="rgb(236,68,49)" fg:x="488" fg:w="1"/><text x="57.1928%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="56.9428%" y="165" width="0.1167%" height="15" fill="rgb(229,146,28)" fg:x="488" fg:w="1"/><text x="57.1928%" y="175.50"></text></g><g><title>core::hint::spin_loop (3 samples, 0.35%)</title><rect x="57.0595%" y="597" width="0.3501%" height="15" fill="rgb(225,31,38)" fg:x="489" fg:w="3"/><text x="57.3095%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3 samples, 0.35%)</title><rect x="57.0595%" y="581" width="0.3501%" height="15" fill="rgb(250,208,3)" fg:x="489" fg:w="3"/><text x="57.3095%" y="591.50"></text></g><g><title>lab4::package::PackageDownloader::run (402 samples, 46.91%)</title><rect x="10.6184%" y="677" width="46.9078%" height="15" fill="rgb(246,54,23)" fg:x="91" fg:w="402"/><text x="10.8684%" y="687.50">lab4::package::PackageDownloader::run</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (121 samples, 14.12%)</title><rect x="43.4072%" y="661" width="14.1190%" height="15" fill="rgb(243,76,11)" fg:x="372" fg:w="121"/><text x="43.6572%" y="671.50">std::sync::mutex::Mut..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (121 samples, 14.12%)</title><rect x="43.4072%" y="645" width="14.1190%" height="15" fill="rgb(245,21,50)" fg:x="372" fg:w="121"/><text x="43.6572%" y="655.50">std::sys::unix::locks..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (121 samples, 14.12%)</title><rect x="43.4072%" y="629" width="14.1190%" height="15" fill="rgb(228,9,43)" fg:x="372" fg:w="121"/><text x="43.6572%" y="639.50">std::sys::unix::locks..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (4 samples, 0.47%)</title><rect x="57.0595%" y="613" width="0.4667%" height="15" fill="rgb(208,100,47)" fg:x="489" fg:w="4"/><text x="57.3095%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.12%)</title><rect x="57.4096%" y="597" width="0.1167%" height="15" fill="rgb(232,26,8)" fg:x="492" fg:w="1"/><text x="57.6596%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.12%)</title><rect x="57.4096%" y="581" width="0.1167%" height="15" fill="rgb(216,166,38)" fg:x="492" fg:w="1"/><text x="57.6596%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.12%)</title><rect x="57.6429%" y="645" width="0.1167%" height="15" fill="rgb(251,202,51)" fg:x="494" fg:w="1"/><text x="57.8929%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="57.6429%" y="629" width="0.1167%" height="15" fill="rgb(254,216,34)" fg:x="494" fg:w="1"/><text x="57.8929%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="57.6429%" y="613" width="0.1167%" height="15" fill="rgb(251,32,27)" fg:x="494" fg:w="1"/><text x="57.8929%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.12%)</title><rect x="57.6429%" y="597" width="0.1167%" height="15" fill="rgb(208,127,28)" fg:x="494" fg:w="1"/><text x="57.8929%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.12%)</title><rect x="57.6429%" y="581" width="0.1167%" height="15" fill="rgb(224,137,22)" fg:x="494" fg:w="1"/><text x="57.8929%" y="591.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.12%)</title><rect x="57.6429%" y="565" width="0.1167%" height="15" fill="rgb(254,70,32)" fg:x="494" fg:w="1"/><text x="57.8929%" y="575.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="57.6429%" y="549" width="0.1167%" height="15" fill="rgb(229,75,37)" fg:x="494" fg:w="1"/><text x="57.8929%" y="559.50"></text></g><g><title>_int_realloc (1 samples, 0.12%)</title><rect x="57.6429%" y="533" width="0.1167%" height="15" fill="rgb(252,64,23)" fg:x="494" fg:w="1"/><text x="57.8929%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="57.6429%" y="517" width="0.1167%" height="15" fill="rgb(232,162,48)" fg:x="494" fg:w="1"/><text x="57.8929%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.6429%" y="501" width="0.1167%" height="15" fill="rgb(246,160,12)" fg:x="494" fg:w="1"/><text x="57.8929%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.6429%" y="485" width="0.1167%" height="15" fill="rgb(247,166,0)" fg:x="494" fg:w="1"/><text x="57.8929%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.6429%" y="469" width="0.1167%" height="15" fill="rgb(249,219,21)" fg:x="494" fg:w="1"/><text x="57.8929%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.6429%" y="453" width="0.1167%" height="15" fill="rgb(205,209,3)" fg:x="494" fg:w="1"/><text x="57.8929%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.6429%" y="437" width="0.1167%" height="15" fill="rgb(243,44,1)" fg:x="494" fg:w="1"/><text x="57.8929%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.6429%" y="421" width="0.1167%" height="15" fill="rgb(206,159,16)" fg:x="494" fg:w="1"/><text x="57.8929%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.6429%" y="405" width="0.1167%" height="15" fill="rgb(244,77,30)" fg:x="494" fg:w="1"/><text x="57.8929%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.6429%" y="389" width="0.1167%" height="15" fill="rgb(218,69,12)" fg:x="494" fg:w="1"/><text x="57.8929%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.6429%" y="373" width="0.1167%" height="15" fill="rgb(212,87,7)" fg:x="494" fg:w="1"/><text x="57.8929%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.6429%" y="357" width="0.1167%" height="15" fill="rgb(245,114,25)" fg:x="494" fg:w="1"/><text x="57.8929%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.6429%" y="341" width="0.1167%" height="15" fill="rgb(210,61,42)" fg:x="494" fg:w="1"/><text x="57.8929%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.35%)</title><rect x="57.6429%" y="661" width="0.3501%" height="15" fill="rgb(211,52,33)" fg:x="494" fg:w="3"/><text x="57.8929%" y="671.50"></text></g><g><title>core::ptr::write (2 samples, 0.23%)</title><rect x="57.7596%" y="645" width="0.2334%" height="15" fill="rgb(234,58,33)" fg:x="495" fg:w="2"/><text x="58.0096%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.8763%" y="629" width="0.1167%" height="15" fill="rgb(220,115,36)" fg:x="496" fg:w="1"/><text x="58.1263%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.8763%" y="613" width="0.1167%" height="15" fill="rgb(243,153,54)" fg:x="496" fg:w="1"/><text x="58.1263%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.8763%" y="597" width="0.1167%" height="15" fill="rgb(251,47,18)" fg:x="496" fg:w="1"/><text x="58.1263%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.8763%" y="581" width="0.1167%" height="15" fill="rgb(242,102,42)" fg:x="496" fg:w="1"/><text x="58.1263%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.8763%" y="565" width="0.1167%" height="15" fill="rgb(234,31,38)" fg:x="496" fg:w="1"/><text x="58.1263%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.8763%" y="549" width="0.1167%" height="15" fill="rgb(221,117,51)" fg:x="496" fg:w="1"/><text x="58.1263%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.8763%" y="533" width="0.1167%" height="15" fill="rgb(212,20,18)" fg:x="496" fg:w="1"/><text x="58.1263%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="57.8763%" y="517" width="0.1167%" height="15" fill="rgb(245,133,36)" fg:x="496" fg:w="1"/><text x="58.1263%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.47%)</title><rect x="57.9930%" y="645" width="0.4667%" height="15" fill="rgb(212,6,19)" fg:x="497" fg:w="4"/><text x="58.2430%" y="655.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (1 samples, 0.12%)</title><rect x="58.9265%" y="629" width="0.1167%" height="15" fill="rgb(218,1,36)" fg:x="505" fg:w="1"/><text x="59.1765%" y="639.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (6 samples, 0.70%)</title><rect x="59.0432%" y="533" width="0.7001%" height="15" fill="rgb(246,84,54)" fg:x="506" fg:w="6"/><text x="59.2932%" y="543.50"></text></g><g><title>__GI___sched_yield (6 samples, 0.70%)</title><rect x="59.0432%" y="517" width="0.7001%" height="15" fill="rgb(242,110,6)" fg:x="506" fg:w="6"/><text x="59.2932%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="501" width="0.7001%" height="15" fill="rgb(214,47,5)" fg:x="506" fg:w="6"/><text x="59.2932%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="485" width="0.7001%" height="15" fill="rgb(218,159,25)" fg:x="506" fg:w="6"/><text x="59.2932%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="469" width="0.7001%" height="15" fill="rgb(215,211,28)" fg:x="506" fg:w="6"/><text x="59.2932%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="453" width="0.7001%" height="15" fill="rgb(238,59,32)" fg:x="506" fg:w="6"/><text x="59.2932%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="437" width="0.7001%" height="15" fill="rgb(226,82,3)" fg:x="506" fg:w="6"/><text x="59.2932%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="421" width="0.7001%" height="15" fill="rgb(240,164,32)" fg:x="506" fg:w="6"/><text x="59.2932%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="405" width="0.7001%" height="15" fill="rgb(232,46,7)" fg:x="506" fg:w="6"/><text x="59.2932%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="389" width="0.7001%" height="15" fill="rgb(229,129,53)" fg:x="506" fg:w="6"/><text x="59.2932%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="373" width="0.7001%" height="15" fill="rgb(234,188,29)" fg:x="506" fg:w="6"/><text x="59.2932%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="357" width="0.7001%" height="15" fill="rgb(246,141,4)" fg:x="506" fg:w="6"/><text x="59.2932%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="341" width="0.7001%" height="15" fill="rgb(229,23,39)" fg:x="506" fg:w="6"/><text x="59.2932%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="59.0432%" y="325" width="0.7001%" height="15" fill="rgb(206,12,3)" fg:x="506" fg:w="6"/><text x="59.2932%" y="335.50"></text></g><g><title>crossbeam_channel::context::Context::with (17 samples, 1.98%)</title><rect x="59.0432%" y="629" width="1.9837%" height="15" fill="rgb(252,226,20)" fg:x="506" fg:w="17"/><text x="59.2932%" y="639.50">c..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 1.98%)</title><rect x="59.0432%" y="613" width="1.9837%" height="15" fill="rgb(216,123,35)" fg:x="506" fg:w="17"/><text x="59.2932%" y="623.50">s..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (17 samples, 1.98%)</title><rect x="59.0432%" y="597" width="1.9837%" height="15" fill="rgb(212,68,40)" fg:x="506" fg:w="17"/><text x="59.2932%" y="607.50">c..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (17 samples, 1.98%)</title><rect x="59.0432%" y="581" width="1.9837%" height="15" fill="rgb(254,125,32)" fg:x="506" fg:w="17"/><text x="59.2932%" y="591.50">c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (17 samples, 1.98%)</title><rect x="59.0432%" y="565" width="1.9837%" height="15" fill="rgb(253,97,22)" fg:x="506" fg:w="17"/><text x="59.2932%" y="575.50">c..</text></g><g><title>crossbeam_channel::context::Context::wait_until (17 samples, 1.98%)</title><rect x="59.0432%" y="549" width="1.9837%" height="15" fill="rgb(241,101,14)" fg:x="506" fg:w="17"/><text x="59.2932%" y="559.50">c..</text></g><g><title>std::thread::park (11 samples, 1.28%)</title><rect x="59.7433%" y="533" width="1.2835%" height="15" fill="rgb(238,103,29)" fg:x="512" fg:w="11"/><text x="59.9933%" y="543.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (11 samples, 1.28%)</title><rect x="59.7433%" y="517" width="1.2835%" height="15" fill="rgb(233,195,47)" fg:x="512" fg:w="11"/><text x="59.9933%" y="527.50"></text></g><g><title>std::sys::unix::futex::futex_wait (11 samples, 1.28%)</title><rect x="59.7433%" y="501" width="1.2835%" height="15" fill="rgb(246,218,30)" fg:x="512" fg:w="11"/><text x="59.9933%" y="511.50"></text></g><g><title>syscall (11 samples, 1.28%)</title><rect x="59.7433%" y="485" width="1.2835%" height="15" fill="rgb(219,145,47)" fg:x="512" fg:w="11"/><text x="59.9933%" y="495.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="469" width="1.2835%" height="15" fill="rgb(243,12,26)" fg:x="512" fg:w="11"/><text x="59.9933%" y="479.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="453" width="1.2835%" height="15" fill="rgb(214,87,16)" fg:x="512" fg:w="11"/><text x="59.9933%" y="463.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="437" width="1.2835%" height="15" fill="rgb(208,99,42)" fg:x="512" fg:w="11"/><text x="59.9933%" y="447.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="421" width="1.2835%" height="15" fill="rgb(253,99,2)" fg:x="512" fg:w="11"/><text x="59.9933%" y="431.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="405" width="1.2835%" height="15" fill="rgb(220,168,23)" fg:x="512" fg:w="11"/><text x="59.9933%" y="415.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="389" width="1.2835%" height="15" fill="rgb(242,38,24)" fg:x="512" fg:w="11"/><text x="59.9933%" y="399.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="373" width="1.2835%" height="15" fill="rgb(225,182,9)" fg:x="512" fg:w="11"/><text x="59.9933%" y="383.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="357" width="1.2835%" height="15" fill="rgb(243,178,37)" fg:x="512" fg:w="11"/><text x="59.9933%" y="367.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="341" width="1.2835%" height="15" fill="rgb(232,139,19)" fg:x="512" fg:w="11"/><text x="59.9933%" y="351.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="325" width="1.2835%" height="15" fill="rgb(225,201,24)" fg:x="512" fg:w="11"/><text x="59.9933%" y="335.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="309" width="1.2835%" height="15" fill="rgb(221,47,46)" fg:x="512" fg:w="11"/><text x="59.9933%" y="319.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="293" width="1.2835%" height="15" fill="rgb(249,23,13)" fg:x="512" fg:w="11"/><text x="59.9933%" y="303.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="277" width="1.2835%" height="15" fill="rgb(219,9,5)" fg:x="512" fg:w="11"/><text x="59.9933%" y="287.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="59.7433%" y="261" width="1.2835%" height="15" fill="rgb(254,171,16)" fg:x="512" fg:w="11"/><text x="59.9933%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (5 samples, 0.58%)</title><rect x="61.1435%" y="613" width="0.5834%" height="15" fill="rgb(230,171,20)" fg:x="524" fg:w="5"/><text x="61.3935%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_or (5 samples, 0.58%)</title><rect x="61.1435%" y="597" width="0.5834%" height="15" fill="rgb(210,71,41)" fg:x="524" fg:w="5"/><text x="61.3935%" y="607.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (7 samples, 0.82%)</title><rect x="61.0268%" y="629" width="0.8168%" height="15" fill="rgb(206,173,20)" fg:x="523" fg:w="7"/><text x="61.2768%" y="639.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::destroy (1 samples, 0.12%)</title><rect x="61.7270%" y="613" width="0.1167%" height="15" fill="rgb(233,88,34)" fg:x="529" fg:w="1"/><text x="61.9770%" y="623.50"></text></g><g><title>core::mem::drop (1 samples, 0.12%)</title><rect x="61.7270%" y="597" width="0.1167%" height="15" fill="rgb(223,209,46)" fg:x="529" fg:w="1"/><text x="61.9770%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (1 samples, 0.12%)</title><rect x="61.7270%" y="581" width="0.1167%" height="15" fill="rgb(250,43,18)" fg:x="529" fg:w="1"/><text x="61.9770%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="61.7270%" y="565" width="0.1167%" height="15" fill="rgb(208,13,10)" fg:x="529" fg:w="1"/><text x="61.9770%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.12%)</title><rect x="61.7270%" y="549" width="0.1167%" height="15" fill="rgb(212,200,36)" fg:x="529" fg:w="1"/><text x="61.9770%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="61.7270%" y="533" width="0.1167%" height="15" fill="rgb(225,90,30)" fg:x="529" fg:w="1"/><text x="61.9770%" y="543.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="61.7270%" y="517" width="0.1167%" height="15" fill="rgb(236,182,39)" fg:x="529" fg:w="1"/><text x="61.9770%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.12%)</title><rect x="62.0770%" y="613" width="0.1167%" height="15" fill="rgb(212,144,35)" fg:x="532" fg:w="1"/><text x="62.3270%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.12%)</title><rect x="62.0770%" y="597" width="0.1167%" height="15" fill="rgb(228,63,44)" fg:x="532" fg:w="1"/><text x="62.3270%" y="607.50"></text></g><g><title>core::sync::atomic::fence (6 samples, 0.70%)</title><rect x="62.1937%" y="613" width="0.7001%" height="15" fill="rgb(228,109,6)" fg:x="533" fg:w="6"/><text x="62.4437%" y="623.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (11 samples, 1.28%)</title><rect x="61.8436%" y="629" width="1.2835%" height="15" fill="rgb(238,117,24)" fg:x="530" fg:w="11"/><text x="62.0936%" y="639.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (2 samples, 0.23%)</title><rect x="62.8938%" y="613" width="0.2334%" height="15" fill="rgb(242,26,26)" fg:x="539" fg:w="2"/><text x="63.1438%" y="623.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (2 samples, 0.23%)</title><rect x="62.8938%" y="597" width="0.2334%" height="15" fill="rgb(221,92,48)" fg:x="539" fg:w="2"/><text x="63.1438%" y="607.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.23%)</title><rect x="62.8938%" y="581" width="0.2334%" height="15" fill="rgb(209,209,32)" fg:x="539" fg:w="2"/><text x="63.1438%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.23%)</title><rect x="62.8938%" y="565" width="0.2334%" height="15" fill="rgb(221,70,22)" fg:x="539" fg:w="2"/><text x="63.1438%" y="575.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::new (1 samples, 0.12%)</title><rect x="63.1272%" y="629" width="0.1167%" height="15" fill="rgb(248,145,5)" fg:x="541" fg:w="1"/><text x="63.3772%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::new (1 samples, 0.12%)</title><rect x="63.1272%" y="613" width="0.1167%" height="15" fill="rgb(226,116,26)" fg:x="541" fg:w="1"/><text x="63.3772%" y="623.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::new (1 samples, 0.12%)</title><rect x="63.1272%" y="597" width="0.1167%" height="15" fill="rgb(244,5,17)" fg:x="541" fg:w="1"/><text x="63.3772%" y="607.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (47 samples, 5.48%)</title><rect x="57.9930%" y="661" width="5.4842%" height="15" fill="rgb(252,159,33)" fg:x="497" fg:w="47"/><text x="58.2430%" y="671.50">crossbe..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (43 samples, 5.02%)</title><rect x="58.4597%" y="645" width="5.0175%" height="15" fill="rgb(206,71,0)" fg:x="501" fg:w="43"/><text x="58.7097%" y="655.50">crossb..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (2 samples, 0.23%)</title><rect x="63.2439%" y="629" width="0.2334%" height="15" fill="rgb(233,118,54)" fg:x="542" fg:w="2"/><text x="63.4939%" y="639.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (2 samples, 0.23%)</title><rect x="63.2439%" y="613" width="0.2334%" height="15" fill="rgb(234,83,48)" fg:x="542" fg:w="2"/><text x="63.4939%" y="623.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.23%)</title><rect x="63.2439%" y="597" width="0.2334%" height="15" fill="rgb(228,3,54)" fg:x="542" fg:w="2"/><text x="63.4939%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.23%)</title><rect x="63.2439%" y="581" width="0.2334%" height="15" fill="rgb(226,155,13)" fg:x="542" fg:w="2"/><text x="63.4939%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.58%)</title><rect x="63.8273%" y="629" width="0.5834%" height="15" fill="rgb(241,28,37)" fg:x="547" fg:w="5"/><text x="64.0773%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="613" width="0.5834%" height="15" fill="rgb(233,93,10)" fg:x="547" fg:w="5"/><text x="64.0773%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="597" width="0.5834%" height="15" fill="rgb(225,113,19)" fg:x="547" fg:w="5"/><text x="64.0773%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="581" width="0.5834%" height="15" fill="rgb(241,2,18)" fg:x="547" fg:w="5"/><text x="64.0773%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="565" width="0.5834%" height="15" fill="rgb(228,207,21)" fg:x="547" fg:w="5"/><text x="64.0773%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="549" width="0.5834%" height="15" fill="rgb(213,211,35)" fg:x="547" fg:w="5"/><text x="64.0773%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="533" width="0.5834%" height="15" fill="rgb(209,83,10)" fg:x="547" fg:w="5"/><text x="64.0773%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="517" width="0.5834%" height="15" fill="rgb(209,164,1)" fg:x="547" fg:w="5"/><text x="64.0773%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="501" width="0.5834%" height="15" fill="rgb(213,184,43)" fg:x="547" fg:w="5"/><text x="64.0773%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="485" width="0.5834%" height="15" fill="rgb(231,61,34)" fg:x="547" fg:w="5"/><text x="64.0773%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="469" width="0.5834%" height="15" fill="rgb(235,75,3)" fg:x="547" fg:w="5"/><text x="64.0773%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="453" width="0.5834%" height="15" fill="rgb(220,106,47)" fg:x="547" fg:w="5"/><text x="64.0773%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="437" width="0.5834%" height="15" fill="rgb(210,196,33)" fg:x="547" fg:w="5"/><text x="64.0773%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="63.8273%" y="421" width="0.5834%" height="15" fill="rgb(229,154,42)" fg:x="547" fg:w="5"/><text x="64.0773%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.12%)</title><rect x="64.5274%" y="613" width="0.1167%" height="15" fill="rgb(228,114,26)" fg:x="553" fg:w="1"/><text x="64.7774%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.12%)</title><rect x="64.5274%" y="597" width="0.1167%" height="15" fill="rgb(208,144,1)" fg:x="553" fg:w="1"/><text x="64.7774%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.12%)</title><rect x="64.5274%" y="581" width="0.1167%" height="15" fill="rgb(239,112,37)" fg:x="553" fg:w="1"/><text x="64.7774%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.12%)</title><rect x="64.5274%" y="565" width="0.1167%" height="15" fill="rgb(210,96,50)" fg:x="553" fg:w="1"/><text x="64.7774%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.12%)</title><rect x="64.5274%" y="549" width="0.1167%" height="15" fill="rgb(222,178,2)" fg:x="553" fg:w="1"/><text x="64.7774%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.12%)</title><rect x="64.5274%" y="533" width="0.1167%" height="15" fill="rgb(226,74,18)" fg:x="553" fg:w="1"/><text x="64.7774%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (4 samples, 0.47%)</title><rect x="64.6441%" y="613" width="0.4667%" height="15" fill="rgb(225,67,54)" fg:x="554" fg:w="4"/><text x="64.8941%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.47%)</title><rect x="64.6441%" y="597" width="0.4667%" height="15" fill="rgb(251,92,32)" fg:x="554" fg:w="4"/><text x="64.8941%" y="607.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (7 samples, 0.82%)</title><rect x="64.4107%" y="629" width="0.8168%" height="15" fill="rgb(228,149,22)" fg:x="552" fg:w="7"/><text x="64.6607%" y="639.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (1 samples, 0.12%)</title><rect x="65.1109%" y="613" width="0.1167%" height="15" fill="rgb(243,54,13)" fg:x="558" fg:w="1"/><text x="65.3609%" y="623.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.12%)</title><rect x="65.1109%" y="597" width="0.1167%" height="15" fill="rgb(243,180,28)" fg:x="558" fg:w="1"/><text x="65.3609%" y="607.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.12%)</title><rect x="65.1109%" y="581" width="0.1167%" height="15" fill="rgb(208,167,24)" fg:x="558" fg:w="1"/><text x="65.3609%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.12%)</title><rect x="65.1109%" y="565" width="0.1167%" height="15" fill="rgb(245,73,45)" fg:x="558" fg:w="1"/><text x="65.3609%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.12%)</title><rect x="65.2275%" y="613" width="0.1167%" height="15" fill="rgb(237,203,48)" fg:x="559" fg:w="1"/><text x="65.4775%" y="623.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="65.2275%" y="597" width="0.1167%" height="15" fill="rgb(211,197,16)" fg:x="559" fg:w="1"/><text x="65.4775%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.23%)</title><rect x="65.3442%" y="613" width="0.2334%" height="15" fill="rgb(243,99,51)" fg:x="560" fg:w="2"/><text x="65.5942%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.23%)</title><rect x="65.3442%" y="597" width="0.2334%" height="15" fill="rgb(215,123,29)" fg:x="560" fg:w="2"/><text x="65.5942%" y="607.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (20 samples, 2.33%)</title><rect x="63.4772%" y="661" width="2.3337%" height="15" fill="rgb(239,186,37)" fg:x="544" fg:w="20"/><text x="63.7272%" y="671.50">c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (18 samples, 2.10%)</title><rect x="63.7106%" y="645" width="2.1004%" height="15" fill="rgb(252,136,39)" fg:x="546" fg:w="18"/><text x="63.9606%" y="655.50">c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (5 samples, 0.58%)</title><rect x="65.2275%" y="629" width="0.5834%" height="15" fill="rgb(223,213,32)" fg:x="559" fg:w="5"/><text x="65.4775%" y="639.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (2 samples, 0.23%)</title><rect x="65.5776%" y="613" width="0.2334%" height="15" fill="rgb(233,115,5)" fg:x="562" fg:w="2"/><text x="65.8276%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2 samples, 0.23%)</title><rect x="65.5776%" y="597" width="0.2334%" height="15" fill="rgb(207,226,44)" fg:x="562" fg:w="2"/><text x="65.8276%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.23%)</title><rect x="65.5776%" y="581" width="0.2334%" height="15" fill="rgb(208,126,0)" fg:x="562" fg:w="2"/><text x="65.8276%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.12%)</title><rect x="65.8110%" y="645" width="0.1167%" height="15" fill="rgb(244,66,21)" fg:x="564" fg:w="1"/><text x="66.0610%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="65.8110%" y="629" width="0.1167%" height="15" fill="rgb(222,97,12)" fg:x="564" fg:w="1"/><text x="66.0610%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="65.8110%" y="613" width="0.1167%" height="15" fill="rgb(219,213,19)" fg:x="564" fg:w="1"/><text x="66.0610%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.12%)</title><rect x="65.8110%" y="597" width="0.1167%" height="15" fill="rgb(252,169,30)" fg:x="564" fg:w="1"/><text x="66.0610%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.12%)</title><rect x="65.8110%" y="581" width="0.1167%" height="15" fill="rgb(206,32,51)" fg:x="564" fg:w="1"/><text x="66.0610%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.12%)</title><rect x="65.8110%" y="565" width="0.1167%" height="15" fill="rgb(250,172,42)" fg:x="564" fg:w="1"/><text x="66.0610%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.12%)</title><rect x="65.8110%" y="549" width="0.1167%" height="15" fill="rgb(209,34,43)" fg:x="564" fg:w="1"/><text x="66.0610%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.12%)</title><rect x="65.8110%" y="533" width="0.1167%" height="15" fill="rgb(223,11,35)" fg:x="564" fg:w="1"/><text x="66.0610%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;lab4::package::Package&gt;&gt; (1 samples, 0.12%)</title><rect x="65.8110%" y="517" width="0.1167%" height="15" fill="rgb(251,219,26)" fg:x="564" fg:w="1"/><text x="66.0610%" y="527.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="65.8110%" y="501" width="0.1167%" height="15" fill="rgb(231,119,3)" fg:x="564" fg:w="1"/><text x="66.0610%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;lab4::package::Package,alloc::alloc::Global&gt;&gt; (1 samples, 0.12%)</title><rect x="65.8110%" y="485" width="0.1167%" height="15" fill="rgb(216,97,11)" fg:x="564" fg:w="1"/><text x="66.0610%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="65.8110%" y="469" width="0.1167%" height="15" fill="rgb(223,59,9)" fg:x="564" fg:w="1"/><text x="66.0610%" y="479.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.12%)</title><rect x="65.8110%" y="453" width="0.1167%" height="15" fill="rgb(233,93,31)" fg:x="564" fg:w="1"/><text x="66.0610%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="65.8110%" y="437" width="0.1167%" height="15" fill="rgb(239,81,33)" fg:x="564" fg:w="1"/><text x="66.0610%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;lab4::package::Package&gt;&gt; (1 samples, 0.12%)</title><rect x="65.9277%" y="645" width="0.1167%" height="15" fill="rgb(213,120,34)" fg:x="565" fg:w="1"/><text x="66.1777%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="65.9277%" y="629" width="0.1167%" height="15" fill="rgb(243,49,53)" fg:x="565" fg:w="1"/><text x="66.1777%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;[lab4::package::Package]&gt; (1 samples, 0.12%)</title><rect x="65.9277%" y="613" width="0.1167%" height="15" fill="rgb(247,216,33)" fg:x="565" fg:w="1"/><text x="66.1777%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::package::Package&gt; (1 samples, 0.12%)</title><rect x="65.9277%" y="597" width="0.1167%" height="15" fill="rgb(226,26,14)" fg:x="565" fg:w="1"/><text x="66.1777%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.12%)</title><rect x="65.9277%" y="581" width="0.1167%" height="15" fill="rgb(215,49,53)" fg:x="565" fg:w="1"/><text x="66.1777%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.12%)</title><rect x="65.9277%" y="565" width="0.1167%" height="15" fill="rgb(245,162,40)" fg:x="565" fg:w="1"/><text x="66.1777%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.12%)</title><rect x="65.9277%" y="549" width="0.1167%" height="15" fill="rgb(229,68,17)" fg:x="565" fg:w="1"/><text x="66.1777%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.12%)</title><rect x="65.9277%" y="533" width="0.1167%" height="15" fill="rgb(213,182,10)" fg:x="565" fg:w="1"/><text x="66.1777%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.12%)</title><rect x="65.9277%" y="517" width="0.1167%" height="15" fill="rgb(245,125,30)" fg:x="565" fg:w="1"/><text x="66.1777%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.12%)</title><rect x="65.9277%" y="501" width="0.1167%" height="15" fill="rgb(232,202,2)" fg:x="565" fg:w="1"/><text x="66.1777%" y="511.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="65.9277%" y="485" width="0.1167%" height="15" fill="rgb(237,140,51)" fg:x="565" fg:w="1"/><text x="66.1777%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (6 samples, 0.70%)</title><rect x="66.0443%" y="645" width="0.7001%" height="15" fill="rgb(236,157,25)" fg:x="566" fg:w="6"/><text x="66.2943%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.70%)</title><rect x="66.0443%" y="629" width="0.7001%" height="15" fill="rgb(219,209,0)" fg:x="566" fg:w="6"/><text x="66.2943%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (6 samples, 0.70%)</title><rect x="66.0443%" y="613" width="0.7001%" height="15" fill="rgb(240,116,54)" fg:x="566" fg:w="6"/><text x="66.2943%" y="623.50"></text></g><g><title>syscall (6 samples, 0.70%)</title><rect x="66.0443%" y="597" width="0.7001%" height="15" fill="rgb(216,10,36)" fg:x="566" fg:w="6"/><text x="66.2943%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="66.0443%" y="581" width="0.7001%" height="15" fill="rgb(222,72,44)" fg:x="566" fg:w="6"/><text x="66.2943%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="66.0443%" y="565" width="0.7001%" height="15" fill="rgb(232,159,9)" fg:x="566" fg:w="6"/><text x="66.2943%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="66.0443%" y="549" width="0.7001%" height="15" fill="rgb(210,39,32)" fg:x="566" fg:w="6"/><text x="66.2943%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="66.0443%" y="533" width="0.7001%" height="15" fill="rgb(216,194,45)" fg:x="566" fg:w="6"/><text x="66.2943%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="66.0443%" y="517" width="0.7001%" height="15" fill="rgb(218,18,35)" fg:x="566" fg:w="6"/><text x="66.2943%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="66.0443%" y="501" width="0.7001%" height="15" fill="rgb(207,83,51)" fg:x="566" fg:w="6"/><text x="66.2943%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="66.0443%" y="485" width="0.7001%" height="15" fill="rgb(225,63,43)" fg:x="566" fg:w="6"/><text x="66.2943%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="66.0443%" y="469" width="0.7001%" height="15" fill="rgb(207,57,36)" fg:x="566" fg:w="6"/><text x="66.2943%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="66.0443%" y="453" width="0.7001%" height="15" fill="rgb(216,99,33)" fg:x="566" fg:w="6"/><text x="66.2943%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="66.1610%" y="437" width="0.5834%" height="15" fill="rgb(225,42,16)" fg:x="567" fg:w="5"/><text x="66.4110%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="66.1610%" y="421" width="0.5834%" height="15" fill="rgb(220,201,45)" fg:x="567" fg:w="5"/><text x="66.4110%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="66.1610%" y="405" width="0.5834%" height="15" fill="rgb(225,33,4)" fg:x="567" fg:w="5"/><text x="66.4110%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.12%)</title><rect x="66.8611%" y="469" width="0.1167%" height="15" fill="rgb(224,33,50)" fg:x="573" fg:w="1"/><text x="67.1111%" y="479.50"></text></g><g><title>lab4::checksum::Checksum::update::{{closure}} (1 samples, 0.12%)</title><rect x="66.8611%" y="453" width="0.1167%" height="15" fill="rgb(246,198,51)" fg:x="573" fg:w="1"/><text x="67.1111%" y="463.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitXor&lt;&amp;u8&gt;&gt;::bitxor (1 samples, 0.12%)</title><rect x="66.8611%" y="437" width="0.1167%" height="15" fill="rgb(205,22,4)" fg:x="573" fg:w="1"/><text x="67.1111%" y="447.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.12%)</title><rect x="66.8611%" y="421" width="0.1167%" height="15" fill="rgb(206,3,8)" fg:x="573" fg:w="1"/><text x="67.1111%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.23%)</title><rect x="66.8611%" y="629" width="0.2334%" height="15" fill="rgb(251,23,15)" fg:x="573" fg:w="2"/><text x="67.1111%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="66.8611%" y="613" width="0.2334%" height="15" fill="rgb(252,88,28)" fg:x="573" fg:w="2"/><text x="67.1111%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="66.8611%" y="597" width="0.2334%" height="15" fill="rgb(212,127,14)" fg:x="573" fg:w="2"/><text x="67.1111%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.23%)</title><rect x="66.8611%" y="581" width="0.2334%" height="15" fill="rgb(247,145,37)" fg:x="573" fg:w="2"/><text x="67.1111%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.23%)</title><rect x="66.8611%" y="565" width="0.2334%" height="15" fill="rgb(209,117,53)" fg:x="573" fg:w="2"/><text x="67.1111%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.23%)</title><rect x="66.8611%" y="549" width="0.2334%" height="15" fill="rgb(212,90,42)" fg:x="573" fg:w="2"/><text x="67.1111%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.23%)</title><rect x="66.8611%" y="533" width="0.2334%" height="15" fill="rgb(218,164,37)" fg:x="573" fg:w="2"/><text x="67.1111%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.23%)</title><rect x="66.8611%" y="517" width="0.2334%" height="15" fill="rgb(246,65,34)" fg:x="573" fg:w="2"/><text x="67.1111%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.23%)</title><rect x="66.8611%" y="501" width="0.2334%" height="15" fill="rgb(231,100,33)" fg:x="573" fg:w="2"/><text x="67.1111%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (2 samples, 0.23%)</title><rect x="66.8611%" y="485" width="0.2334%" height="15" fill="rgb(228,126,14)" fg:x="573" fg:w="2"/><text x="67.1111%" y="495.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.12%)</title><rect x="66.9778%" y="469" width="0.1167%" height="15" fill="rgb(215,173,21)" fg:x="574" fg:w="1"/><text x="67.2278%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.12%)</title><rect x="66.9778%" y="453" width="0.1167%" height="15" fill="rgb(210,6,40)" fg:x="574" fg:w="1"/><text x="67.2278%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.23%)</title><rect x="67.0945%" y="629" width="0.2334%" height="15" fill="rgb(212,48,18)" fg:x="575" fg:w="2"/><text x="67.3445%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.23%)</title><rect x="67.0945%" y="613" width="0.2334%" height="15" fill="rgb(230,214,11)" fg:x="575" fg:w="2"/><text x="67.3445%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="67.0945%" y="597" width="0.2334%" height="15" fill="rgb(254,105,39)" fg:x="575" fg:w="2"/><text x="67.3445%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.23%)</title><rect x="67.0945%" y="581" width="0.2334%" height="15" fill="rgb(245,158,5)" fg:x="575" fg:w="2"/><text x="67.3445%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.23%)</title><rect x="67.0945%" y="565" width="0.2334%" height="15" fill="rgb(249,208,11)" fg:x="575" fg:w="2"/><text x="67.3445%" y="575.50"></text></g><g><title>_int_free (2 samples, 0.23%)</title><rect x="67.0945%" y="549" width="0.2334%" height="15" fill="rgb(210,39,28)" fg:x="575" fg:w="2"/><text x="67.3445%" y="559.50"></text></g><g><title>__GI___libc_free (4 samples, 0.47%)</title><rect x="67.3279%" y="517" width="0.4667%" height="15" fill="rgb(211,56,53)" fg:x="577" fg:w="4"/><text x="67.5779%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (5 samples, 0.58%)</title><rect x="67.3279%" y="629" width="0.5834%" height="15" fill="rgb(226,201,30)" fg:x="577" fg:w="5"/><text x="67.5779%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.58%)</title><rect x="67.3279%" y="613" width="0.5834%" height="15" fill="rgb(239,101,34)" fg:x="577" fg:w="5"/><text x="67.5779%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.58%)</title><rect x="67.3279%" y="597" width="0.5834%" height="15" fill="rgb(226,209,5)" fg:x="577" fg:w="5"/><text x="67.5779%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.58%)</title><rect x="67.3279%" y="581" width="0.5834%" height="15" fill="rgb(250,105,47)" fg:x="577" fg:w="5"/><text x="67.5779%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.58%)</title><rect x="67.3279%" y="565" width="0.5834%" height="15" fill="rgb(230,72,3)" fg:x="577" fg:w="5"/><text x="67.5779%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.58%)</title><rect x="67.3279%" y="549" width="0.5834%" height="15" fill="rgb(232,218,39)" fg:x="577" fg:w="5"/><text x="67.5779%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.58%)</title><rect x="67.3279%" y="533" width="0.5834%" height="15" fill="rgb(248,166,6)" fg:x="577" fg:w="5"/><text x="67.5779%" y="543.50"></text></g><g><title>__rust_dealloc (1 samples, 0.12%)</title><rect x="67.7946%" y="517" width="0.1167%" height="15" fill="rgb(247,89,20)" fg:x="581" fg:w="1"/><text x="68.0446%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (52 samples, 6.07%)</title><rect x="69.0782%" y="341" width="6.0677%" height="15" fill="rgb(248,130,54)" fg:x="592" fg:w="52"/><text x="69.3282%" y="351.50">&lt;core::i..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (46 samples, 5.37%)</title><rect x="69.7783%" y="325" width="5.3676%" height="15" fill="rgb(234,196,4)" fg:x="598" fg:w="46"/><text x="70.0283%" y="335.50">core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (46 samples, 5.37%)</title><rect x="69.7783%" y="309" width="5.3676%" height="15" fill="rgb(250,143,31)" fg:x="598" fg:w="46"/><text x="70.0283%" y="319.50">&lt;alloc:..</text></g><g><title>hex::val (38 samples, 4.43%)</title><rect x="70.7118%" y="293" width="4.4341%" height="15" fill="rgb(211,110,34)" fg:x="606" fg:w="38"/><text x="70.9618%" y="303.50">hex::..</text></g><g><title>core::cmp::min (4 samples, 0.47%)</title><rect x="75.9627%" y="325" width="0.4667%" height="15" fill="rgb(215,124,48)" fg:x="651" fg:w="4"/><text x="76.2127%" y="335.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.47%)</title><rect x="75.9627%" y="309" width="0.4667%" height="15" fill="rgb(216,46,13)" fg:x="651" fg:w="4"/><text x="76.2127%" y="319.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.47%)</title><rect x="75.9627%" y="293" width="0.4667%" height="15" fill="rgb(205,184,25)" fg:x="651" fg:w="4"/><text x="76.2127%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 7.58%)</title><rect x="69.0782%" y="437" width="7.5846%" height="15" fill="rgb(228,1,10)" fg:x="592" fg:w="65"/><text x="69.3282%" y="447.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (65 samples, 7.58%)</title><rect x="69.0782%" y="421" width="7.5846%" height="15" fill="rgb(213,116,27)" fg:x="592" fg:w="65"/><text x="69.3282%" y="431.50">core::iter..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (65 samples, 7.58%)</title><rect x="69.0782%" y="405" width="7.5846%" height="15" fill="rgb(241,95,50)" fg:x="592" fg:w="65"/><text x="69.3282%" y="415.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (65 samples, 7.58%)</title><rect x="69.0782%" y="389" width="7.5846%" height="15" fill="rgb(238,48,32)" fg:x="592" fg:w="65"/><text x="69.3282%" y="399.50">&lt;core::ite..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (65 samples, 7.58%)</title><rect x="69.0782%" y="373" width="7.5846%" height="15" fill="rgb(235,113,49)" fg:x="592" fg:w="65"/><text x="69.3282%" y="383.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (65 samples, 7.58%)</title><rect x="69.0782%" y="357" width="7.5846%" height="15" fill="rgb(205,127,43)" fg:x="592" fg:w="65"/><text x="69.3282%" y="367.50">core::iter..</text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.52%)</title><rect x="75.1459%" y="341" width="1.5169%" height="15" fill="rgb(250,162,2)" fg:x="644" fg:w="13"/><text x="75.3959%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (2 samples, 0.23%)</title><rect x="76.4294%" y="325" width="0.2334%" height="15" fill="rgb(220,13,41)" fg:x="655" fg:w="2"/><text x="76.6794%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.23%)</title><rect x="76.4294%" y="309" width="0.2334%" height="15" fill="rgb(249,221,25)" fg:x="655" fg:w="2"/><text x="76.6794%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.23%)</title><rect x="76.4294%" y="293" width="0.2334%" height="15" fill="rgb(215,208,19)" fg:x="655" fg:w="2"/><text x="76.6794%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.70%)</title><rect x="76.6628%" y="437" width="0.7001%" height="15" fill="rgb(236,175,2)" fg:x="657" fg:w="6"/><text x="76.9128%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.12%)</title><rect x="77.2462%" y="421" width="0.1167%" height="15" fill="rgb(241,52,2)" fg:x="662" fg:w="1"/><text x="77.4962%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.12%)</title><rect x="77.3629%" y="373" width="0.1167%" height="15" fill="rgb(248,140,14)" fg:x="663" fg:w="1"/><text x="77.6129%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="78.2964%" y="277" width="0.1167%" height="15" fill="rgb(253,22,42)" fg:x="671" fg:w="1"/><text x="78.5464%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 1.05%)</title><rect x="77.4796%" y="373" width="1.0502%" height="15" fill="rgb(234,61,47)" fg:x="664" fg:w="9"/><text x="77.7296%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 1.05%)</title><rect x="77.4796%" y="357" width="1.0502%" height="15" fill="rgb(208,226,15)" fg:x="664" fg:w="9"/><text x="77.7296%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 1.05%)</title><rect x="77.4796%" y="341" width="1.0502%" height="15" fill="rgb(217,221,4)" fg:x="664" fg:w="9"/><text x="77.7296%" y="351.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 1.05%)</title><rect x="77.4796%" y="325" width="1.0502%" height="15" fill="rgb(212,174,34)" fg:x="664" fg:w="9"/><text x="77.7296%" y="335.50"></text></g><g><title>__GI___libc_realloc (9 samples, 1.05%)</title><rect x="77.4796%" y="309" width="1.0502%" height="15" fill="rgb(253,83,4)" fg:x="664" fg:w="9"/><text x="77.7296%" y="319.50"></text></g><g><title>_int_realloc (3 samples, 0.35%)</title><rect x="78.1797%" y="293" width="0.3501%" height="15" fill="rgb(250,195,49)" fg:x="670" fg:w="3"/><text x="78.4297%" y="303.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="78.4131%" y="277" width="0.1167%" height="15" fill="rgb(241,192,25)" fg:x="672" fg:w="1"/><text x="78.6631%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 1.28%)</title><rect x="77.3629%" y="437" width="1.2835%" height="15" fill="rgb(208,124,10)" fg:x="663" fg:w="11"/><text x="77.6129%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 1.28%)</title><rect x="77.3629%" y="421" width="1.2835%" height="15" fill="rgb(222,33,0)" fg:x="663" fg:w="11"/><text x="77.6129%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 1.28%)</title><rect x="77.3629%" y="405" width="1.2835%" height="15" fill="rgb(234,209,28)" fg:x="663" fg:w="11"/><text x="77.6129%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 1.28%)</title><rect x="77.3629%" y="389" width="1.2835%" height="15" fill="rgb(224,11,23)" fg:x="663" fg:w="11"/><text x="77.6129%" y="399.50"></text></g><g><title>core::cmp::max (1 samples, 0.12%)</title><rect x="78.5298%" y="373" width="0.1167%" height="15" fill="rgb(232,99,1)" fg:x="673" fg:w="1"/><text x="78.7798%" y="383.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.12%)</title><rect x="78.5298%" y="357" width="0.1167%" height="15" fill="rgb(237,95,45)" fg:x="673" fg:w="1"/><text x="78.7798%" y="367.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.12%)</title><rect x="78.5298%" y="341" width="0.1167%" height="15" fill="rgb(208,109,11)" fg:x="673" fg:w="1"/><text x="78.7798%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (4 samples, 0.47%)</title><rect x="78.6464%" y="437" width="0.4667%" height="15" fill="rgb(216,190,48)" fg:x="674" fg:w="4"/><text x="78.8964%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (97 samples, 11.32%)</title><rect x="68.2614%" y="469" width="11.3186%" height="15" fill="rgb(251,171,36)" fg:x="585" fg:w="97"/><text x="68.5114%" y="479.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (97 samples, 11.32%)</title><rect x="68.2614%" y="453" width="11.3186%" height="15" fill="rgb(230,62,22)" fg:x="585" fg:w="97"/><text x="68.5114%" y="463.50">alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::write (4 samples, 0.47%)</title><rect x="79.1132%" y="437" width="0.4667%" height="15" fill="rgb(225,114,35)" fg:x="678" fg:w="4"/><text x="79.3632%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="79.5799%" y="469" width="0.1167%" height="15" fill="rgb(215,118,42)" fg:x="682" fg:w="1"/><text x="79.8299%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.12%)</title><rect x="79.5799%" y="453" width="0.1167%" height="15" fill="rgb(243,119,21)" fg:x="682" fg:w="1"/><text x="79.8299%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="79.5799%" y="437" width="0.1167%" height="15" fill="rgb(252,177,53)" fg:x="682" fg:w="1"/><text x="79.8299%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="79.5799%" y="421" width="0.1167%" height="15" fill="rgb(237,209,29)" fg:x="682" fg:w="1"/><text x="79.8299%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.12%)</title><rect x="79.5799%" y="405" width="0.1167%" height="15" fill="rgb(212,65,23)" fg:x="682" fg:w="1"/><text x="79.8299%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.12%)</title><rect x="79.5799%" y="389" width="0.1167%" height="15" fill="rgb(230,222,46)" fg:x="682" fg:w="1"/><text x="79.8299%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.12%)</title><rect x="79.5799%" y="373" width="0.1167%" height="15" fill="rgb(215,135,32)" fg:x="682" fg:w="1"/><text x="79.8299%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.12%)</title><rect x="79.5799%" y="357" width="0.1167%" height="15" fill="rgb(246,101,22)" fg:x="682" fg:w="1"/><text x="79.8299%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (1 samples, 0.12%)</title><rect x="79.5799%" y="341" width="0.1167%" height="15" fill="rgb(206,107,13)" fg:x="682" fg:w="1"/><text x="79.8299%" y="351.50"></text></g><g><title>hex::val (1 samples, 0.12%)</title><rect x="79.5799%" y="325" width="0.1167%" height="15" fill="rgb(250,100,44)" fg:x="682" fg:w="1"/><text x="79.8299%" y="335.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.35%)</title><rect x="79.6966%" y="357" width="0.3501%" height="15" fill="rgb(231,147,38)" fg:x="683" fg:w="3"/><text x="79.9466%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.12%)</title><rect x="80.0467%" y="357" width="0.1167%" height="15" fill="rgb(229,8,40)" fg:x="686" fg:w="1"/><text x="80.2967%" y="367.50"></text></g><g><title>hex::decode (106 samples, 12.37%)</title><rect x="67.9113%" y="629" width="12.3687%" height="15" fill="rgb(221,135,30)" fg:x="582" fg:w="106"/><text x="68.1613%" y="639.50">hex::decode</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (106 samples, 12.37%)</title><rect x="67.9113%" y="613" width="12.3687%" height="15" fill="rgb(249,193,18)" fg:x="582" fg:w="106"/><text x="68.1613%" y="623.50">&lt;alloc::vec::Vec&lt;u..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (106 samples, 12.37%)</title><rect x="67.9113%" y="597" width="12.3687%" height="15" fill="rgb(209,133,39)" fg:x="582" fg:w="106"/><text x="68.1613%" y="607.50">core::iter::traits..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (106 samples, 12.37%)</title><rect x="67.9113%" y="581" width="12.3687%" height="15" fill="rgb(232,100,14)" fg:x="582" fg:w="106"/><text x="68.1613%" y="591.50">&lt;core::result::Res..</text></g><g><title>core::iter::adapters::try_process (106 samples, 12.37%)</title><rect x="67.9113%" y="565" width="12.3687%" height="15" fill="rgb(224,185,1)" fg:x="582" fg:w="106"/><text x="68.1613%" y="575.50">core::iter::adapte..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (106 samples, 12.37%)</title><rect x="67.9113%" y="549" width="12.3687%" height="15" fill="rgb(223,139,8)" fg:x="582" fg:w="106"/><text x="68.1613%" y="559.50">&lt;core::result::Res..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (106 samples, 12.37%)</title><rect x="67.9113%" y="533" width="12.3687%" height="15" fill="rgb(232,213,38)" fg:x="582" fg:w="106"/><text x="68.1613%" y="543.50">core::iter::traits..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (106 samples, 12.37%)</title><rect x="67.9113%" y="517" width="12.3687%" height="15" fill="rgb(207,94,22)" fg:x="582" fg:w="106"/><text x="68.1613%" y="527.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (106 samples, 12.37%)</title><rect x="67.9113%" y="501" width="12.3687%" height="15" fill="rgb(219,183,54)" fg:x="582" fg:w="106"/><text x="68.1613%" y="511.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (106 samples, 12.37%)</title><rect x="67.9113%" y="485" width="12.3687%" height="15" fill="rgb(216,185,54)" fg:x="582" fg:w="106"/><text x="68.1613%" y="495.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.58%)</title><rect x="79.6966%" y="469" width="0.5834%" height="15" fill="rgb(254,217,39)" fg:x="683" fg:w="5"/><text x="79.9466%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.58%)</title><rect x="79.6966%" y="453" width="0.5834%" height="15" fill="rgb(240,178,23)" fg:x="683" fg:w="5"/><text x="79.9466%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.58%)</title><rect x="79.6966%" y="437" width="0.5834%" height="15" fill="rgb(218,11,47)" fg:x="683" fg:w="5"/><text x="79.9466%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.58%)</title><rect x="79.6966%" y="421" width="0.5834%" height="15" fill="rgb(218,51,51)" fg:x="683" fg:w="5"/><text x="79.9466%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.58%)</title><rect x="79.6966%" y="405" width="0.5834%" height="15" fill="rgb(238,126,27)" fg:x="683" fg:w="5"/><text x="79.9466%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.58%)</title><rect x="79.6966%" y="389" width="0.5834%" height="15" fill="rgb(249,202,22)" fg:x="683" fg:w="5"/><text x="79.9466%" y="399.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.58%)</title><rect x="79.6966%" y="373" width="0.5834%" height="15" fill="rgb(254,195,49)" fg:x="683" fg:w="5"/><text x="79.9466%" y="383.50"></text></g><g><title>__rust_alloc (1 samples, 0.12%)</title><rect x="80.1634%" y="357" width="0.1167%" height="15" fill="rgb(208,123,14)" fg:x="687" fg:w="1"/><text x="80.4134%" y="367.50"></text></g><g><title>alloc::string::String::reserve (1 samples, 0.12%)</title><rect x="80.2800%" y="533" width="0.1167%" height="15" fill="rgb(224,200,8)" fg:x="688" fg:w="1"/><text x="80.5300%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="80.2800%" y="517" width="0.1167%" height="15" fill="rgb(217,61,36)" fg:x="688" fg:w="1"/><text x="80.5300%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="80.2800%" y="501" width="0.1167%" height="15" fill="rgb(206,35,45)" fg:x="688" fg:w="1"/><text x="80.5300%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="80.2800%" y="485" width="0.1167%" height="15" fill="rgb(217,65,33)" fg:x="688" fg:w="1"/><text x="80.5300%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="80.2800%" y="469" width="0.1167%" height="15" fill="rgb(222,158,48)" fg:x="688" fg:w="1"/><text x="80.5300%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="80.2800%" y="453" width="0.1167%" height="15" fill="rgb(254,2,54)" fg:x="688" fg:w="1"/><text x="80.5300%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.12%)</title><rect x="80.2800%" y="437" width="0.1167%" height="15" fill="rgb(250,143,38)" fg:x="688" fg:w="1"/><text x="80.5300%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="80.5134%" y="485" width="0.1167%" height="15" fill="rgb(248,25,0)" fg:x="690" fg:w="1"/><text x="80.7634%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.12%)</title><rect x="80.5134%" y="469" width="0.1167%" height="15" fill="rgb(206,152,27)" fg:x="690" fg:w="1"/><text x="80.7634%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.35%)</title><rect x="80.6301%" y="485" width="0.3501%" height="15" fill="rgb(240,77,30)" fg:x="691" fg:w="3"/><text x="80.8801%" y="495.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.23%)</title><rect x="80.7468%" y="469" width="0.2334%" height="15" fill="rgb(231,5,3)" fg:x="692" fg:w="2"/><text x="80.9968%" y="479.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitAnd&lt;u8&gt;&gt;::bitand (1 samples, 0.12%)</title><rect x="80.8635%" y="453" width="0.1167%" height="15" fill="rgb(207,226,32)" fg:x="693" fg:w="1"/><text x="81.1135%" y="463.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.12%)</title><rect x="80.8635%" y="437" width="0.1167%" height="15" fill="rgb(222,207,47)" fg:x="693" fg:w="1"/><text x="81.1135%" y="447.50"></text></g><g><title>core::ptr::read (1 samples, 0.12%)</title><rect x="80.9802%" y="453" width="0.1167%" height="15" fill="rgb(229,115,45)" fg:x="694" fg:w="1"/><text x="81.2302%" y="463.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.70%)</title><rect x="80.5134%" y="501" width="0.7001%" height="15" fill="rgb(224,191,6)" fg:x="690" fg:w="6"/><text x="80.7634%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.23%)</title><rect x="80.9802%" y="485" width="0.2334%" height="15" fill="rgb(230,227,24)" fg:x="694" fg:w="2"/><text x="81.2302%" y="495.50"></text></g><g><title>core::mem::replace (2 samples, 0.23%)</title><rect x="80.9802%" y="469" width="0.2334%" height="15" fill="rgb(228,80,19)" fg:x="694" fg:w="2"/><text x="81.2302%" y="479.50"></text></g><g><title>core::ptr::write (1 samples, 0.12%)</title><rect x="81.0968%" y="453" width="0.1167%" height="15" fill="rgb(247,229,0)" fg:x="695" fg:w="1"/><text x="81.3468%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 2.10%)</title><rect x="81.2135%" y="453" width="2.1004%" height="15" fill="rgb(237,194,15)" fg:x="696" fg:w="18"/><text x="81.4635%" y="463.50">a..</text></g><g><title>core::ptr::write (9 samples, 1.05%)</title><rect x="82.2637%" y="437" width="1.0502%" height="15" fill="rgb(219,203,20)" fg:x="705" fg:w="9"/><text x="82.5137%" y="447.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (27 samples, 3.15%)</title><rect x="80.2800%" y="613" width="3.1505%" height="15" fill="rgb(234,128,8)" fg:x="688" fg:w="27"/><text x="80.5300%" y="623.50">&lt;T ..</text></g><g><title>hex::encode_to_iter (27 samples, 3.15%)</title><rect x="80.2800%" y="597" width="3.1505%" height="15" fill="rgb(248,202,8)" fg:x="688" fg:w="27"/><text x="80.5300%" y="607.50">hex..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (27 samples, 3.15%)</title><rect x="80.2800%" y="581" width="3.1505%" height="15" fill="rgb(206,104,37)" fg:x="688" fg:w="27"/><text x="80.5300%" y="591.50">cor..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (27 samples, 3.15%)</title><rect x="80.2800%" y="565" width="3.1505%" height="15" fill="rgb(223,8,27)" fg:x="688" fg:w="27"/><text x="80.5300%" y="575.50">&lt;al..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (27 samples, 3.15%)</title><rect x="80.2800%" y="549" width="3.1505%" height="15" fill="rgb(216,217,28)" fg:x="688" fg:w="27"/><text x="80.5300%" y="559.50">&lt;al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (26 samples, 3.03%)</title><rect x="80.3967%" y="533" width="3.0338%" height="15" fill="rgb(249,199,1)" fg:x="689" fg:w="26"/><text x="80.6467%" y="543.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 3.03%)</title><rect x="80.3967%" y="517" width="3.0338%" height="15" fill="rgb(240,85,17)" fg:x="689" fg:w="26"/><text x="80.6467%" y="527.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (19 samples, 2.22%)</title><rect x="81.2135%" y="501" width="2.2170%" height="15" fill="rgb(206,108,45)" fg:x="696" fg:w="19"/><text x="81.4635%" y="511.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (19 samples, 2.22%)</title><rect x="81.2135%" y="485" width="2.2170%" height="15" fill="rgb(245,210,41)" fg:x="696" fg:w="19"/><text x="81.4635%" y="495.50">&lt;..</text></g><g><title>alloc::string::String::push (19 samples, 2.22%)</title><rect x="81.2135%" y="469" width="2.2170%" height="15" fill="rgb(206,13,37)" fg:x="696" fg:w="19"/><text x="81.4635%" y="479.50">a..</text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.12%)</title><rect x="83.3139%" y="453" width="0.1167%" height="15" fill="rgb(250,61,18)" fg:x="714" fg:w="1"/><text x="83.5639%" y="463.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.12%)</title><rect x="83.3139%" y="437" width="0.1167%" height="15" fill="rgb(235,172,48)" fg:x="714" fg:w="1"/><text x="83.5639%" y="447.50"></text></g><g><title>__GI___libc_free (1 samples, 0.12%)</title><rect x="83.4306%" y="533" width="0.1167%" height="15" fill="rgb(249,201,17)" fg:x="715" fg:w="1"/><text x="83.6806%" y="543.50"></text></g><g><title>lab4::checksum::Checksum::update (145 samples, 16.92%)</title><rect x="66.7445%" y="645" width="16.9195%" height="15" fill="rgb(219,208,6)" fg:x="572" fg:w="145"/><text x="66.9945%" y="655.50">lab4::checksum::Checksum::..</text></g><g><title>hex::encode (29 samples, 3.38%)</title><rect x="80.2800%" y="629" width="3.3839%" height="15" fill="rgb(248,31,23)" fg:x="688" fg:w="29"/><text x="80.5300%" y="639.50">hex..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.23%)</title><rect x="83.4306%" y="613" width="0.2334%" height="15" fill="rgb(245,15,42)" fg:x="715" fg:w="2"/><text x="83.6806%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.23%)</title><rect x="83.4306%" y="597" width="0.2334%" height="15" fill="rgb(222,217,39)" fg:x="715" fg:w="2"/><text x="83.6806%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.23%)</title><rect x="83.4306%" y="581" width="0.2334%" height="15" fill="rgb(210,219,27)" fg:x="715" fg:w="2"/><text x="83.6806%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.23%)</title><rect x="83.4306%" y="565" width="0.2334%" height="15" fill="rgb(252,166,36)" fg:x="715" fg:w="2"/><text x="83.6806%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.23%)</title><rect x="83.4306%" y="549" width="0.2334%" height="15" fill="rgb(245,132,34)" fg:x="715" fg:w="2"/><text x="83.6806%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.12%)</title><rect x="83.5473%" y="533" width="0.1167%" height="15" fill="rgb(236,54,3)" fg:x="716" fg:w="1"/><text x="83.7973%" y="543.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as core::default::Default&gt;::default (2 samples, 0.23%)</title><rect x="83.6639%" y="613" width="0.2334%" height="15" fill="rgb(241,173,43)" fg:x="717" fg:w="2"/><text x="83.9139%" y="623.50"></text></g><g><title>sha2::sha256::Engine256::new (2 samples, 0.23%)</title><rect x="83.6639%" y="597" width="0.2334%" height="15" fill="rgb(215,190,9)" fg:x="717" fg:w="2"/><text x="83.9139%" y="607.50"></text></g><g><title>&lt;block_buffer::BlockBuffer&lt;BlockSize&gt; as core::default::Default&gt;::default (2 samples, 0.23%)</title><rect x="83.6639%" y="581" width="0.2334%" height="15" fill="rgb(242,101,16)" fg:x="717" fg:w="2"/><text x="83.9139%" y="591.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (2 samples, 0.23%)</title><rect x="83.6639%" y="565" width="0.2334%" height="15" fill="rgb(223,190,21)" fg:x="717" fg:w="2"/><text x="83.9139%" y="575.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (2 samples, 0.23%)</title><rect x="83.6639%" y="549" width="0.2334%" height="15" fill="rgb(215,228,25)" fg:x="717" fg:w="2"/><text x="83.9139%" y="559.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (2 samples, 0.23%)</title><rect x="83.6639%" y="533" width="0.2334%" height="15" fill="rgb(225,36,22)" fg:x="717" fg:w="2"/><text x="83.9139%" y="543.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.23%)</title><rect x="83.6639%" y="517" width="0.2334%" height="15" fill="rgb(251,106,46)" fg:x="717" fg:w="2"/><text x="83.9139%" y="527.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (2 samples, 0.23%)</title><rect x="83.6639%" y="501" width="0.2334%" height="15" fill="rgb(208,90,1)" fg:x="717" fg:w="2"/><text x="83.9139%" y="511.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.12%)</title><rect x="83.8973%" y="613" width="0.1167%" height="15" fill="rgb(243,10,4)" fg:x="719" fg:w="1"/><text x="84.1473%" y="623.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.12%)</title><rect x="83.8973%" y="597" width="0.1167%" height="15" fill="rgb(212,137,27)" fg:x="719" fg:w="1"/><text x="84.1473%" y="607.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.12%)</title><rect x="83.8973%" y="581" width="0.1167%" height="15" fill="rgb(231,220,49)" fg:x="719" fg:w="1"/><text x="84.1473%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.12%)</title><rect x="83.8973%" y="565" width="0.1167%" height="15" fill="rgb(237,96,20)" fg:x="719" fg:w="1"/><text x="84.1473%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.12%)</title><rect x="83.8973%" y="549" width="0.1167%" height="15" fill="rgb(239,229,30)" fg:x="719" fg:w="1"/><text x="84.1473%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.12%)</title><rect x="83.8973%" y="533" width="0.1167%" height="15" fill="rgb(219,65,33)" fg:x="719" fg:w="1"/><text x="84.1473%" y="543.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::digest_pad (1 samples, 0.12%)</title><rect x="84.0140%" y="533" width="0.1167%" height="15" fill="rgb(243,134,7)" fg:x="720" fg:w="1"/><text x="84.2640%" y="543.50"></text></g><g><title>block_buffer::set_zero (1 samples, 0.12%)</title><rect x="84.0140%" y="517" width="0.1167%" height="15" fill="rgb(216,177,54)" fg:x="720" fg:w="1"/><text x="84.2640%" y="527.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.12%)</title><rect x="84.0140%" y="501" width="0.1167%" height="15" fill="rgb(211,160,20)" fg:x="720" fg:w="1"/><text x="84.2640%" y="511.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.12%)</title><rect x="84.0140%" y="485" width="0.1167%" height="15" fill="rgb(239,85,39)" fg:x="720" fg:w="1"/><text x="84.2640%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (3 samples, 0.35%)</title><rect x="84.1307%" y="469" width="0.3501%" height="15" fill="rgb(232,125,22)" fg:x="721" fg:w="3"/><text x="84.3807%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (3 samples, 0.35%)</title><rect x="84.1307%" y="453" width="0.3501%" height="15" fill="rgb(244,57,34)" fg:x="721" fg:w="3"/><text x="84.3807%" y="463.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (3 samples, 0.35%)</title><rect x="84.1307%" y="437" width="0.3501%" height="15" fill="rgb(214,203,32)" fg:x="721" fg:w="3"/><text x="84.3807%" y="447.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.12%)</title><rect x="84.4807%" y="437" width="0.1167%" height="15" fill="rgb(207,58,43)" fg:x="724" fg:w="1"/><text x="84.7307%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.12%)</title><rect x="84.4807%" y="421" width="0.1167%" height="15" fill="rgb(215,193,15)" fg:x="724" fg:w="1"/><text x="84.7307%" y="431.50"></text></g><g><title>sha2::sha256::soft::or (3 samples, 0.35%)</title><rect x="84.5974%" y="405" width="0.3501%" height="15" fill="rgb(232,15,44)" fg:x="725" fg:w="3"/><text x="84.8474%" y="415.50"></text></g><g><title>sha2::sha256::soft::shl (1 samples, 0.12%)</title><rect x="84.9475%" y="405" width="0.1167%" height="15" fill="rgb(212,3,48)" fg:x="728" fg:w="1"/><text x="85.1975%" y="415.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (5 samples, 0.58%)</title><rect x="84.5974%" y="437" width="0.5834%" height="15" fill="rgb(218,128,7)" fg:x="725" fg:w="5"/><text x="84.8474%" y="447.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (5 samples, 0.58%)</title><rect x="84.5974%" y="421" width="0.5834%" height="15" fill="rgb(226,216,39)" fg:x="725" fg:w="5"/><text x="84.8474%" y="431.50"></text></g><g><title>sha2::sha256::soft::xor (1 samples, 0.12%)</title><rect x="85.0642%" y="405" width="0.1167%" height="15" fill="rgb(243,47,51)" fg:x="729" fg:w="1"/><text x="85.3142%" y="415.50"></text></g><g><title>sha2::sha256::soft::schedule (15 samples, 1.75%)</title><rect x="84.4807%" y="453" width="1.7503%" height="15" fill="rgb(241,183,40)" fg:x="724" fg:w="15"/><text x="84.7307%" y="463.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (9 samples, 1.05%)</title><rect x="85.1809%" y="437" width="1.0502%" height="15" fill="rgb(231,217,32)" fg:x="730" fg:w="9"/><text x="85.4309%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (6 samples, 0.70%)</title><rect x="85.5309%" y="421" width="0.7001%" height="15" fill="rgb(229,61,38)" fg:x="733" fg:w="6"/><text x="85.7809%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (5 samples, 0.58%)</title><rect x="87.6313%" y="437" width="0.5834%" height="15" fill="rgb(225,210,5)" fg:x="751" fg:w="5"/><text x="87.8813%" y="447.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (42 samples, 4.90%)</title><rect x="83.6639%" y="629" width="4.9008%" height="15" fill="rgb(231,79,45)" fg:x="717" fg:w="42"/><text x="83.9139%" y="639.50">&lt;D as ..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (39 samples, 4.55%)</title><rect x="84.0140%" y="613" width="4.5508%" height="15" fill="rgb(224,100,7)" fg:x="720" fg:w="39"/><text x="84.2640%" y="623.50">diges..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (39 samples, 4.55%)</title><rect x="84.0140%" y="597" width="4.5508%" height="15" fill="rgb(241,198,18)" fg:x="720" fg:w="39"/><text x="84.2640%" y="607.50">&lt;D as..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (39 samples, 4.55%)</title><rect x="84.0140%" y="581" width="4.5508%" height="15" fill="rgb(252,97,53)" fg:x="720" fg:w="39"/><text x="84.2640%" y="591.50">&lt;sha2..</text></g><g><title>sha2::sha256::Engine256::finish (39 samples, 4.55%)</title><rect x="84.0140%" y="565" width="4.5508%" height="15" fill="rgb(220,88,7)" fg:x="720" fg:w="39"/><text x="84.2640%" y="575.50">sha2:..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (39 samples, 4.55%)</title><rect x="84.0140%" y="549" width="4.5508%" height="15" fill="rgb(213,176,14)" fg:x="720" fg:w="39"/><text x="84.2640%" y="559.50">block..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (38 samples, 4.43%)</title><rect x="84.1307%" y="533" width="4.4341%" height="15" fill="rgb(246,73,7)" fg:x="721" fg:w="38"/><text x="84.3807%" y="543.50">sha2:..</text></g><g><title>sha2::sha256::compress256 (38 samples, 4.43%)</title><rect x="84.1307%" y="517" width="4.4341%" height="15" fill="rgb(245,64,36)" fg:x="721" fg:w="38"/><text x="84.3807%" y="527.50">sha2:..</text></g><g><title>sha2::sha256::x86::compress (38 samples, 4.43%)</title><rect x="84.1307%" y="501" width="4.4341%" height="15" fill="rgb(245,80,10)" fg:x="721" fg:w="38"/><text x="84.3807%" y="511.50">sha2:..</text></g><g><title>sha2::sha256::soft::compress (38 samples, 4.43%)</title><rect x="84.1307%" y="485" width="4.4341%" height="15" fill="rgb(232,107,50)" fg:x="721" fg:w="38"/><text x="84.3807%" y="495.50">sha2:..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (35 samples, 4.08%)</title><rect x="84.4807%" y="469" width="4.0840%" height="15" fill="rgb(253,3,0)" fg:x="724" fg:w="35"/><text x="84.7307%" y="479.50">sha2..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (20 samples, 2.33%)</title><rect x="86.2310%" y="453" width="2.3337%" height="15" fill="rgb(212,99,53)" fg:x="739" fg:w="20"/><text x="86.4810%" y="463.50">s..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (3 samples, 0.35%)</title><rect x="88.2147%" y="437" width="0.3501%" height="15" fill="rgb(249,111,54)" fg:x="756" fg:w="3"/><text x="88.4647%" y="447.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.23%)</title><rect x="88.5648%" y="533" width="0.2334%" height="15" fill="rgb(249,55,30)" fg:x="759" fg:w="2"/><text x="88.8148%" y="543.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.23%)</title><rect x="88.5648%" y="517" width="0.2334%" height="15" fill="rgb(237,47,42)" fg:x="759" fg:w="2"/><text x="88.8148%" y="527.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.12%)</title><rect x="88.6814%" y="501" width="0.1167%" height="15" fill="rgb(211,20,18)" fg:x="760" fg:w="1"/><text x="88.9314%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.12%)</title><rect x="88.6814%" y="485" width="0.1167%" height="15" fill="rgb(231,203,46)" fg:x="760" fg:w="1"/><text x="88.9314%" y="495.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.12%)</title><rect x="88.6814%" y="469" width="0.1167%" height="15" fill="rgb(237,142,3)" fg:x="760" fg:w="1"/><text x="88.9314%" y="479.50"></text></g><g><title>alloc::string::String::reserve (1 samples, 0.12%)</title><rect x="88.7981%" y="533" width="0.1167%" height="15" fill="rgb(241,107,1)" fg:x="761" fg:w="1"/><text x="89.0481%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="88.7981%" y="517" width="0.1167%" height="15" fill="rgb(229,83,13)" fg:x="761" fg:w="1"/><text x="89.0481%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.12%)</title><rect x="88.7981%" y="501" width="0.1167%" height="15" fill="rgb(241,91,40)" fg:x="761" fg:w="1"/><text x="89.0481%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.12%)</title><rect x="88.7981%" y="485" width="0.1167%" height="15" fill="rgb(225,3,45)" fg:x="761" fg:w="1"/><text x="89.0481%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.12%)</title><rect x="88.7981%" y="469" width="0.1167%" height="15" fill="rgb(244,223,14)" fg:x="761" fg:w="1"/><text x="89.0481%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.12%)</title><rect x="88.7981%" y="453" width="0.1167%" height="15" fill="rgb(224,124,37)" fg:x="761" fg:w="1"/><text x="89.0481%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.12%)</title><rect x="88.9148%" y="485" width="0.1167%" height="15" fill="rgb(251,171,30)" fg:x="762" fg:w="1"/><text x="89.1648%" y="495.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.12%)</title><rect x="88.9148%" y="469" width="0.1167%" height="15" fill="rgb(236,46,54)" fg:x="762" fg:w="1"/><text x="89.1648%" y="479.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitAnd&lt;u8&gt;&gt;::bitand (1 samples, 0.12%)</title><rect x="89.3816%" y="453" width="0.1167%" height="15" fill="rgb(245,213,5)" fg:x="766" fg:w="1"/><text x="89.6316%" y="463.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.12%)</title><rect x="89.3816%" y="437" width="0.1167%" height="15" fill="rgb(230,144,27)" fg:x="766" fg:w="1"/><text x="89.6316%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.58%)</title><rect x="89.0315%" y="485" width="0.5834%" height="15" fill="rgb(220,86,6)" fg:x="763" fg:w="5"/><text x="89.2815%" y="495.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (5 samples, 0.58%)</title><rect x="89.0315%" y="469" width="0.5834%" height="15" fill="rgb(240,20,13)" fg:x="763" fg:w="5"/><text x="89.2815%" y="479.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.12%)</title><rect x="89.4982%" y="453" width="0.1167%" height="15" fill="rgb(217,89,34)" fg:x="767" fg:w="1"/><text x="89.7482%" y="463.50"></text></g><g><title>&lt;u8 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.12%)</title><rect x="89.4982%" y="437" width="0.1167%" height="15" fill="rgb(229,13,5)" fg:x="767" fg:w="1"/><text x="89.7482%" y="447.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.93%)</title><rect x="88.9148%" y="501" width="0.9335%" height="15" fill="rgb(244,67,35)" fg:x="762" fg:w="8"/><text x="89.1648%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.23%)</title><rect x="89.6149%" y="485" width="0.2334%" height="15" fill="rgb(221,40,2)" fg:x="768" fg:w="2"/><text x="89.8649%" y="495.50"></text></g><g><title>core::mem::replace (2 samples, 0.23%)</title><rect x="89.6149%" y="469" width="0.2334%" height="15" fill="rgb(237,157,21)" fg:x="768" fg:w="2"/><text x="89.8649%" y="479.50"></text></g><g><title>core::ptr::write (2 samples, 0.23%)</title><rect x="89.6149%" y="453" width="0.2334%" height="15" fill="rgb(222,94,11)" fg:x="768" fg:w="2"/><text x="89.8649%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="90.5484%" y="437" width="0.7001%" height="15" fill="rgb(249,113,6)" fg:x="776" fg:w="6"/><text x="90.7984%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="90.5484%" y="421" width="0.7001%" height="15" fill="rgb(238,137,36)" fg:x="776" fg:w="6"/><text x="90.7984%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="90.5484%" y="405" width="0.7001%" height="15" fill="rgb(210,102,26)" fg:x="776" fg:w="6"/><text x="90.7984%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="90.5484%" y="389" width="0.7001%" height="15" fill="rgb(218,30,30)" fg:x="776" fg:w="6"/><text x="90.7984%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="90.5484%" y="373" width="0.7001%" height="15" fill="rgb(214,67,26)" fg:x="776" fg:w="6"/><text x="90.7984%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="90.5484%" y="357" width="0.7001%" height="15" fill="rgb(251,9,53)" fg:x="776" fg:w="6"/><text x="90.7984%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="90.6651%" y="341" width="0.5834%" height="15" fill="rgb(228,204,25)" fg:x="777" fg:w="5"/><text x="90.9151%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="90.6651%" y="325" width="0.5834%" height="15" fill="rgb(207,153,8)" fg:x="777" fg:w="5"/><text x="90.9151%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="90.6651%" y="309" width="0.5834%" height="15" fill="rgb(242,9,16)" fg:x="777" fg:w="5"/><text x="90.9151%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="90.6651%" y="293" width="0.5834%" height="15" fill="rgb(217,211,10)" fg:x="777" fg:w="5"/><text x="90.9151%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="90.6651%" y="277" width="0.5834%" height="15" fill="rgb(219,228,52)" fg:x="777" fg:w="5"/><text x="90.9151%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="90.6651%" y="261" width="0.5834%" height="15" fill="rgb(231,92,29)" fg:x="777" fg:w="5"/><text x="90.9151%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="90.6651%" y="245" width="0.5834%" height="15" fill="rgb(232,8,23)" fg:x="777" fg:w="5"/><text x="90.9151%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.12%)</title><rect x="91.2485%" y="437" width="0.1167%" height="15" fill="rgb(216,211,34)" fg:x="782" fg:w="1"/><text x="91.4985%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.12%)</title><rect x="91.2485%" y="421" width="0.1167%" height="15" fill="rgb(236,151,0)" fg:x="782" fg:w="1"/><text x="91.4985%" y="431.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (70 samples, 8.17%)</title><rect x="83.6639%" y="645" width="8.1680%" height="15" fill="rgb(209,168,3)" fg:x="717" fg:w="70"/><text x="83.9139%" y="655.50">lab4::check..</text></g><g><title>hex::encode (28 samples, 3.27%)</title><rect x="88.5648%" y="629" width="3.2672%" height="15" fill="rgb(208,129,28)" fg:x="759" fg:w="28"/><text x="88.8148%" y="639.50">hex..</text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (28 samples, 3.27%)</title><rect x="88.5648%" y="613" width="3.2672%" height="15" fill="rgb(229,78,22)" fg:x="759" fg:w="28"/><text x="88.8148%" y="623.50">&lt;T ..</text></g><g><title>hex::encode_to_iter (28 samples, 3.27%)</title><rect x="88.5648%" y="597" width="3.2672%" height="15" fill="rgb(228,187,13)" fg:x="759" fg:w="28"/><text x="88.8148%" y="607.50">hex..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 3.27%)</title><rect x="88.5648%" y="581" width="3.2672%" height="15" fill="rgb(240,119,24)" fg:x="759" fg:w="28"/><text x="88.8148%" y="591.50">cor..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (28 samples, 3.27%)</title><rect x="88.5648%" y="565" width="3.2672%" height="15" fill="rgb(209,194,42)" fg:x="759" fg:w="28"/><text x="88.8148%" y="575.50">&lt;al..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (28 samples, 3.27%)</title><rect x="88.5648%" y="549" width="3.2672%" height="15" fill="rgb(247,200,46)" fg:x="759" fg:w="28"/><text x="88.8148%" y="559.50">&lt;al..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 2.92%)</title><rect x="88.9148%" y="533" width="2.9172%" height="15" fill="rgb(218,76,16)" fg:x="762" fg:w="25"/><text x="89.1648%" y="543.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 2.92%)</title><rect x="88.9148%" y="517" width="2.9172%" height="15" fill="rgb(225,21,48)" fg:x="762" fg:w="25"/><text x="89.1648%" y="527.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (17 samples, 1.98%)</title><rect x="89.8483%" y="501" width="1.9837%" height="15" fill="rgb(239,223,50)" fg:x="770" fg:w="17"/><text x="90.0983%" y="511.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (17 samples, 1.98%)</title><rect x="89.8483%" y="485" width="1.9837%" height="15" fill="rgb(244,45,21)" fg:x="770" fg:w="17"/><text x="90.0983%" y="495.50">&lt;..</text></g><g><title>alloc::string::String::push (17 samples, 1.98%)</title><rect x="89.8483%" y="469" width="1.9837%" height="15" fill="rgb(232,33,43)" fg:x="770" fg:w="17"/><text x="90.0983%" y="479.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 1.98%)</title><rect x="89.8483%" y="453" width="1.9837%" height="15" fill="rgb(209,8,3)" fg:x="770" fg:w="17"/><text x="90.0983%" y="463.50">a..</text></g><g><title>core::ptr::write (4 samples, 0.47%)</title><rect x="91.3652%" y="437" width="0.4667%" height="15" fill="rgb(214,25,53)" fg:x="783" fg:w="4"/><text x="91.6152%" y="447.50"></text></g><g><title>std::sys::unix::futex::futex_wait (38 samples, 4.43%)</title><rect x="91.8320%" y="597" width="4.4341%" height="15" fill="rgb(254,186,54)" fg:x="787" fg:w="38"/><text x="92.0820%" y="607.50">std::..</text></g><g><title>syscall (38 samples, 4.43%)</title><rect x="91.8320%" y="581" width="4.4341%" height="15" fill="rgb(208,174,49)" fg:x="787" fg:w="38"/><text x="92.0820%" y="591.50">sysca..</text></g><g><title>[unknown] (38 samples, 4.43%)</title><rect x="91.8320%" y="565" width="4.4341%" height="15" fill="rgb(233,191,51)" fg:x="787" fg:w="38"/><text x="92.0820%" y="575.50">[unkn..</text></g><g><title>[unknown] (38 samples, 4.43%)</title><rect x="91.8320%" y="549" width="4.4341%" height="15" fill="rgb(222,134,10)" fg:x="787" fg:w="38"/><text x="92.0820%" y="559.50">[unkn..</text></g><g><title>[unknown] (38 samples, 4.43%)</title><rect x="91.8320%" y="533" width="4.4341%" height="15" fill="rgb(230,226,20)" fg:x="787" fg:w="38"/><text x="92.0820%" y="543.50">[unkn..</text></g><g><title>[unknown] (38 samples, 4.43%)</title><rect x="91.8320%" y="517" width="4.4341%" height="15" fill="rgb(251,111,25)" fg:x="787" fg:w="38"/><text x="92.0820%" y="527.50">[unkn..</text></g><g><title>[unknown] (37 samples, 4.32%)</title><rect x="91.9487%" y="501" width="4.3174%" height="15" fill="rgb(224,40,46)" fg:x="788" fg:w="37"/><text x="92.1987%" y="511.50">[unkn..</text></g><g><title>[unknown] (37 samples, 4.32%)</title><rect x="91.9487%" y="485" width="4.3174%" height="15" fill="rgb(236,108,47)" fg:x="788" fg:w="37"/><text x="92.1987%" y="495.50">[unkn..</text></g><g><title>[unknown] (37 samples, 4.32%)</title><rect x="91.9487%" y="469" width="4.3174%" height="15" fill="rgb(234,93,0)" fg:x="788" fg:w="37"/><text x="92.1987%" y="479.50">[unkn..</text></g><g><title>[unknown] (37 samples, 4.32%)</title><rect x="91.9487%" y="453" width="4.3174%" height="15" fill="rgb(224,213,32)" fg:x="788" fg:w="37"/><text x="92.1987%" y="463.50">[unkn..</text></g><g><title>[unknown] (37 samples, 4.32%)</title><rect x="91.9487%" y="437" width="4.3174%" height="15" fill="rgb(251,11,48)" fg:x="788" fg:w="37"/><text x="92.1987%" y="447.50">[unkn..</text></g><g><title>[unknown] (37 samples, 4.32%)</title><rect x="91.9487%" y="421" width="4.3174%" height="15" fill="rgb(236,173,5)" fg:x="788" fg:w="37"/><text x="92.1987%" y="431.50">[unkn..</text></g><g><title>[unknown] (37 samples, 4.32%)</title><rect x="91.9487%" y="405" width="4.3174%" height="15" fill="rgb(230,95,12)" fg:x="788" fg:w="37"/><text x="92.1987%" y="415.50">[unkn..</text></g><g><title>[unknown] (36 samples, 4.20%)</title><rect x="92.0653%" y="389" width="4.2007%" height="15" fill="rgb(232,209,1)" fg:x="789" fg:w="36"/><text x="92.3153%" y="399.50">[unkn..</text></g><g><title>[unknown] (36 samples, 4.20%)</title><rect x="92.0653%" y="373" width="4.2007%" height="15" fill="rgb(232,6,1)" fg:x="789" fg:w="36"/><text x="92.3153%" y="383.50">[unkn..</text></g><g><title>[unknown] (36 samples, 4.20%)</title><rect x="92.0653%" y="357" width="4.2007%" height="15" fill="rgb(210,224,50)" fg:x="789" fg:w="36"/><text x="92.3153%" y="367.50">[unkn..</text></g><g><title>std::panic::catch_unwind (756 samples, 88.21%)</title><rect x="8.2847%" y="789" width="88.2147%" height="15" fill="rgb(228,127,35)" fg:x="71" fg:w="756"/><text x="8.5347%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (756 samples, 88.21%)</title><rect x="8.2847%" y="773" width="88.2147%" height="15" fill="rgb(245,102,45)" fg:x="71" fg:w="756"/><text x="8.5347%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (756 samples, 88.21%)</title><rect x="8.2847%" y="757" width="88.2147%" height="15" fill="rgb(214,1,49)" fg:x="71" fg:w="756"/><text x="8.5347%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (756 samples, 88.21%)</title><rect x="8.2847%" y="741" width="88.2147%" height="15" fill="rgb(226,163,40)" fg:x="71" fg:w="756"/><text x="8.5347%" y="751.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (756 samples, 88.21%)</title><rect x="8.2847%" y="725" width="88.2147%" height="15" fill="rgb(239,212,28)" fg:x="71" fg:w="756"/><text x="8.5347%" y="735.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (756 samples, 88.21%)</title><rect x="8.2847%" y="709" width="88.2147%" height="15" fill="rgb(220,20,13)" fg:x="71" fg:w="756"/><text x="8.5347%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (756 samples, 88.21%)</title><rect x="8.2847%" y="693" width="88.2147%" height="15" fill="rgb(210,164,35)" fg:x="71" fg:w="756"/><text x="8.5347%" y="703.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (334 samples, 38.97%)</title><rect x="57.5263%" y="677" width="38.9732%" height="15" fill="rgb(248,109,41)" fg:x="493" fg:w="334"/><text x="57.7763%" y="687.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (263 samples, 30.69%)</title><rect x="65.8110%" y="661" width="30.6884%" height="15" fill="rgb(238,23,50)" fg:x="564" fg:w="263"/><text x="66.0610%" y="671.50">lab4::student::Student::build_idea</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (40 samples, 4.67%)</title><rect x="91.8320%" y="645" width="4.6674%" height="15" fill="rgb(211,48,49)" fg:x="787" fg:w="40"/><text x="92.0820%" y="655.50">std::..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (40 samples, 4.67%)</title><rect x="91.8320%" y="629" width="4.6674%" height="15" fill="rgb(223,36,21)" fg:x="787" fg:w="40"/><text x="92.0820%" y="639.50">std::..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (40 samples, 4.67%)</title><rect x="91.8320%" y="613" width="4.6674%" height="15" fill="rgb(207,123,46)" fg:x="787" fg:w="40"/><text x="92.0820%" y="623.50">std::..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (2 samples, 0.23%)</title><rect x="96.2660%" y="597" width="0.2334%" height="15" fill="rgb(240,218,32)" fg:x="825" fg:w="2"/><text x="96.5160%" y="607.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.23%)</title><rect x="96.2660%" y="581" width="0.2334%" height="15" fill="rgb(252,5,43)" fg:x="825" fg:w="2"/><text x="96.5160%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.23%)</title><rect x="96.2660%" y="565" width="0.2334%" height="15" fill="rgb(252,84,19)" fg:x="825" fg:w="2"/><text x="96.5160%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (757 samples, 88.33%)</title><rect x="8.2847%" y="853" width="88.3314%" height="15" fill="rgb(243,152,39)" fg:x="71" fg:w="757"/><text x="8.5347%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (757 samples, 88.33%)</title><rect x="8.2847%" y="837" width="88.3314%" height="15" fill="rgb(234,160,15)" fg:x="71" fg:w="757"/><text x="8.5347%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (757 samples, 88.33%)</title><rect x="8.2847%" y="821" width="88.3314%" height="15" fill="rgb(237,34,20)" fg:x="71" fg:w="757"/><text x="8.5347%" y="831.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (757 samples, 88.33%)</title><rect x="8.2847%" y="805" width="88.3314%" height="15" fill="rgb(229,97,13)" fg:x="71" fg:w="757"/><text x="8.5347%" y="815.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::thread::Thread::cname (1 samples, 0.12%)</title><rect x="96.4994%" y="789" width="0.1167%" height="15" fill="rgb(234,71,50)" fg:x="827" fg:w="1"/><text x="96.7494%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (1 samples, 0.12%)</title><rect x="96.4994%" y="773" width="0.1167%" height="15" fill="rgb(253,155,4)" fg:x="827" fg:w="1"/><text x="96.7494%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.12%)</title><rect x="96.4994%" y="757" width="0.1167%" height="15" fill="rgb(222,185,37)" fg:x="827" fg:w="1"/><text x="96.7494%" y="767.50"></text></g><g><title>__sigaltstack (1 samples, 0.12%)</title><rect x="96.6161%" y="821" width="0.1167%" height="15" fill="rgb(251,177,13)" fg:x="828" fg:w="1"/><text x="96.8661%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="96.6161%" y="805" width="0.1167%" height="15" fill="rgb(250,179,40)" fg:x="828" fg:w="1"/><text x="96.8661%" y="815.50"></text></g><g><title>__GI___mmap64 (14 samples, 1.63%)</title><rect x="96.7328%" y="789" width="1.6336%" height="15" fill="rgb(242,44,2)" fg:x="829" fg:w="14"/><text x="96.9828%" y="799.50"></text></g><g><title>[unknown] (14 samples, 1.63%)</title><rect x="96.7328%" y="773" width="1.6336%" height="15" fill="rgb(216,177,13)" fg:x="829" fg:w="14"/><text x="96.9828%" y="783.50"></text></g><g><title>[unknown] (14 samples, 1.63%)</title><rect x="96.7328%" y="757" width="1.6336%" height="15" fill="rgb(216,106,43)" fg:x="829" fg:w="14"/><text x="96.9828%" y="767.50"></text></g><g><title>[unknown] (14 samples, 1.63%)</title><rect x="96.7328%" y="741" width="1.6336%" height="15" fill="rgb(216,183,2)" fg:x="829" fg:w="14"/><text x="96.9828%" y="751.50"></text></g><g><title>[unknown] (14 samples, 1.63%)</title><rect x="96.7328%" y="725" width="1.6336%" height="15" fill="rgb(249,75,3)" fg:x="829" fg:w="14"/><text x="96.9828%" y="735.50"></text></g><g><title>[unknown] (14 samples, 1.63%)</title><rect x="96.7328%" y="709" width="1.6336%" height="15" fill="rgb(219,67,39)" fg:x="829" fg:w="14"/><text x="96.9828%" y="719.50"></text></g><g><title>[unknown] (14 samples, 1.63%)</title><rect x="96.7328%" y="693" width="1.6336%" height="15" fill="rgb(253,228,2)" fg:x="829" fg:w="14"/><text x="96.9828%" y="703.50"></text></g><g><title>[unknown] (14 samples, 1.63%)</title><rect x="96.7328%" y="677" width="1.6336%" height="15" fill="rgb(235,138,27)" fg:x="829" fg:w="14"/><text x="96.9828%" y="687.50"></text></g><g><title>[unknown] (12 samples, 1.40%)</title><rect x="96.9662%" y="661" width="1.4002%" height="15" fill="rgb(236,97,51)" fg:x="831" fg:w="12"/><text x="97.2162%" y="671.50"></text></g><g><title>[unknown] (12 samples, 1.40%)</title><rect x="96.9662%" y="645" width="1.4002%" height="15" fill="rgb(240,80,30)" fg:x="831" fg:w="12"/><text x="97.2162%" y="655.50"></text></g><g><title>[unknown] (11 samples, 1.28%)</title><rect x="97.0828%" y="629" width="1.2835%" height="15" fill="rgb(230,178,19)" fg:x="832" fg:w="11"/><text x="97.3328%" y="639.50"></text></g><g><title>[unknown] (10 samples, 1.17%)</title><rect x="97.1995%" y="613" width="1.1669%" height="15" fill="rgb(210,190,27)" fg:x="833" fg:w="10"/><text x="97.4495%" y="623.50"></text></g><g><title>[unknown] (10 samples, 1.17%)</title><rect x="97.1995%" y="597" width="1.1669%" height="15" fill="rgb(222,107,31)" fg:x="833" fg:w="10"/><text x="97.4495%" y="607.50"></text></g><g><title>[unknown] (10 samples, 1.17%)</title><rect x="97.1995%" y="581" width="1.1669%" height="15" fill="rgb(216,127,34)" fg:x="833" fg:w="10"/><text x="97.4495%" y="591.50"></text></g><g><title>[unknown] (10 samples, 1.17%)</title><rect x="97.1995%" y="565" width="1.1669%" height="15" fill="rgb(234,116,52)" fg:x="833" fg:w="10"/><text x="97.4495%" y="575.50"></text></g><g><title>[unknown] (10 samples, 1.17%)</title><rect x="97.1995%" y="549" width="1.1669%" height="15" fill="rgb(222,124,15)" fg:x="833" fg:w="10"/><text x="97.4495%" y="559.50"></text></g><g><title>__GI___clone (803 samples, 93.70%)</title><rect x="4.7841%" y="901" width="93.6989%" height="15" fill="rgb(231,179,28)" fg:x="41" fg:w="803"/><text x="5.0341%" y="911.50">__GI___clone</text></g><g><title>start_thread (773 samples, 90.20%)</title><rect x="8.2847%" y="885" width="90.1984%" height="15" fill="rgb(226,93,45)" fg:x="71" fg:w="773"/><text x="8.5347%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (773 samples, 90.20%)</title><rect x="8.2847%" y="869" width="90.1984%" height="15" fill="rgb(215,8,51)" fg:x="71" fg:w="773"/><text x="8.5347%" y="879.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (16 samples, 1.87%)</title><rect x="96.6161%" y="853" width="1.8670%" height="15" fill="rgb(223,106,5)" fg:x="828" fg:w="16"/><text x="96.8661%" y="863.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (16 samples, 1.87%)</title><rect x="96.6161%" y="837" width="1.8670%" height="15" fill="rgb(250,191,5)" fg:x="828" fg:w="16"/><text x="96.8661%" y="847.50">s..</text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (15 samples, 1.75%)</title><rect x="96.7328%" y="821" width="1.7503%" height="15" fill="rgb(242,132,44)" fg:x="829" fg:w="15"/><text x="96.9828%" y="831.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (15 samples, 1.75%)</title><rect x="96.7328%" y="805" width="1.7503%" height="15" fill="rgb(251,152,29)" fg:x="829" fg:w="15"/><text x="96.9828%" y="815.50"></text></g><g><title>__GI___mprotect (1 samples, 0.12%)</title><rect x="98.3664%" y="789" width="0.1167%" height="15" fill="rgb(218,179,5)" fg:x="843" fg:w="1"/><text x="98.6164%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.3664%" y="773" width="0.1167%" height="15" fill="rgb(227,67,19)" fg:x="843" fg:w="1"/><text x="98.6164%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.3664%" y="757" width="0.1167%" height="15" fill="rgb(233,119,31)" fg:x="843" fg:w="1"/><text x="98.6164%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.3664%" y="741" width="0.1167%" height="15" fill="rgb(241,120,22)" fg:x="843" fg:w="1"/><text x="98.6164%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.3664%" y="725" width="0.1167%" height="15" fill="rgb(224,102,30)" fg:x="843" fg:w="1"/><text x="98.6164%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.3664%" y="709" width="0.1167%" height="15" fill="rgb(210,164,37)" fg:x="843" fg:w="1"/><text x="98.6164%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.3664%" y="693" width="0.1167%" height="15" fill="rgb(226,191,16)" fg:x="843" fg:w="1"/><text x="98.6164%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="98.3664%" y="677" width="0.1167%" height="15" fill="rgb(214,40,45)" fg:x="843" fg:w="1"/><text x="98.6164%" y="687.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.12%)</title><rect x="98.4831%" y="901" width="0.1167%" height="15" fill="rgb(244,29,26)" fg:x="844" fg:w="1"/><text x="98.7331%" y="911.50"></text></g><g><title>__rdl_realloc (5 samples, 0.58%)</title><rect x="98.5998%" y="901" width="0.5834%" height="15" fill="rgb(216,16,5)" fg:x="845" fg:w="5"/><text x="98.8498%" y="911.50"></text></g><g><title>lab4 (851 samples, 99.30%)</title><rect x="0.0000%" y="917" width="99.2999%" height="15" fill="rgb(249,76,35)" fg:x="0" fg:w="851"/><text x="0.2500%" y="927.50">lab4</text></g><g><title>_dl_start_user (1 samples, 0.12%)</title><rect x="99.1832%" y="901" width="0.1167%" height="15" fill="rgb(207,11,44)" fg:x="850" fg:w="1"/><text x="99.4332%" y="911.50"></text></g><g><title>_dl_init (1 samples, 0.12%)</title><rect x="99.1832%" y="885" width="0.1167%" height="15" fill="rgb(228,190,49)" fg:x="850" fg:w="1"/><text x="99.4332%" y="895.50"></text></g><g><title>call_init.part.0 (1 samples, 0.12%)</title><rect x="99.1832%" y="869" width="0.1167%" height="15" fill="rgb(214,173,12)" fg:x="850" fg:w="1"/><text x="99.4332%" y="879.50"></text></g><g><title>_init (1 samples, 0.12%)</title><rect x="99.1832%" y="853" width="0.1167%" height="15" fill="rgb(218,26,35)" fg:x="850" fg:w="1"/><text x="99.4332%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.12%)</title><rect x="99.1832%" y="837" width="0.1167%" height="15" fill="rgb(220,200,19)" fg:x="850" fg:w="1"/><text x="99.4332%" y="847.50"></text></g><g><title>all (857 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(239,95,49)" fg:x="0" fg:w="857"/><text x="0.2500%" y="943.50"></text></g><g><title>perf-exec (6 samples, 0.70%)</title><rect x="99.2999%" y="917" width="0.7001%" height="15" fill="rgb(235,85,53)" fg:x="851" fg:w="6"/><text x="99.5499%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="99.2999%" y="901" width="0.7001%" height="15" fill="rgb(233,133,31)" fg:x="851" fg:w="6"/><text x="99.5499%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="99.2999%" y="885" width="0.7001%" height="15" fill="rgb(218,25,20)" fg:x="851" fg:w="6"/><text x="99.5499%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="99.2999%" y="869" width="0.7001%" height="15" fill="rgb(252,210,38)" fg:x="851" fg:w="6"/><text x="99.5499%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="99.2999%" y="853" width="0.7001%" height="15" fill="rgb(242,134,21)" fg:x="851" fg:w="6"/><text x="99.5499%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="99.2999%" y="837" width="0.7001%" height="15" fill="rgb(213,28,48)" fg:x="851" fg:w="6"/><text x="99.5499%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="99.2999%" y="821" width="0.7001%" height="15" fill="rgb(250,196,2)" fg:x="851" fg:w="6"/><text x="99.5499%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="99.2999%" y="805" width="0.7001%" height="15" fill="rgb(227,5,17)" fg:x="851" fg:w="6"/><text x="99.5499%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="99.2999%" y="789" width="0.7001%" height="15" fill="rgb(221,226,24)" fg:x="851" fg:w="6"/><text x="99.5499%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="99.2999%" y="773" width="0.7001%" height="15" fill="rgb(211,5,48)" fg:x="851" fg:w="6"/><text x="99.5499%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="99.2999%" y="757" width="0.7001%" height="15" fill="rgb(219,150,6)" fg:x="851" fg:w="6"/><text x="99.5499%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.70%)</title><rect x="99.2999%" y="741" width="0.7001%" height="15" fill="rgb(251,46,16)" fg:x="851" fg:w="6"/><text x="99.5499%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="99.4166%" y="725" width="0.5834%" height="15" fill="rgb(220,204,40)" fg:x="852" fg:w="5"/><text x="99.6666%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="99.4166%" y="709" width="0.5834%" height="15" fill="rgb(211,85,2)" fg:x="852" fg:w="5"/><text x="99.6666%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.58%)</title><rect x="99.4166%" y="693" width="0.5834%" height="15" fill="rgb(229,17,7)" fg:x="852" fg:w="5"/><text x="99.6666%" y="703.50"></text></g></svg></svg>