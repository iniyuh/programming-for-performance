<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1013.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="956"><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.42%)</title><rect x="0.0000%" y="949" width="0.4184%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="959.50"></text></g><g><title>[[heap]] (2 samples, 0.21%)</title><rect x="0.4184%" y="949" width="0.2092%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="2"/><text x="0.6684%" y="959.50"></text></g><g><title>__GI___libc_free (2 samples, 0.21%)</title><rect x="0.4184%" y="933" width="0.2092%" height="15" fill="rgb(221,193,54)" fg:x="4" fg:w="2"/><text x="0.6684%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (7 samples, 0.73%)</title><rect x="0.6276%" y="933" width="0.7322%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="7"/><text x="0.8776%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (7 samples, 0.73%)</title><rect x="0.6276%" y="917" width="0.7322%" height="15" fill="rgb(208,68,35)" fg:x="6" fg:w="7"/><text x="0.8776%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.73%)</title><rect x="0.6276%" y="901" width="0.7322%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="7"/><text x="0.8776%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.73%)</title><rect x="0.6276%" y="885" width="0.7322%" height="15" fill="rgb(207,160,47)" fg:x="6" fg:w="7"/><text x="0.8776%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.42%)</title><rect x="1.4644%" y="901" width="0.4184%" height="15" fill="rgb(228,23,34)" fg:x="14" fg:w="4"/><text x="1.7144%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.42%)</title><rect x="1.4644%" y="885" width="0.4184%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="4"/><text x="1.7144%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.42%)</title><rect x="1.4644%" y="869" width="0.4184%" height="15" fill="rgb(220,122,19)" fg:x="14" fg:w="4"/><text x="1.7144%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.42%)</title><rect x="1.4644%" y="853" width="0.4184%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="4"/><text x="1.7144%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.42%)</title><rect x="1.4644%" y="837" width="0.4184%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="4"/><text x="1.7144%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.63%)</title><rect x="1.3598%" y="933" width="0.6276%" height="15" fill="rgb(216,20,37)" fg:x="13" fg:w="6"/><text x="1.6098%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.52%)</title><rect x="1.4644%" y="917" width="0.5230%" height="15" fill="rgb(206,188,39)" fg:x="14" fg:w="5"/><text x="1.7144%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="1.8828%" y="901" width="0.1046%" height="15" fill="rgb(217,207,13)" fg:x="18" fg:w="1"/><text x="2.1328%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.10%)</title><rect x="1.8828%" y="885" width="0.1046%" height="15" fill="rgb(231,73,38)" fg:x="18" fg:w="1"/><text x="2.1328%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="1.8828%" y="869" width="0.1046%" height="15" fill="rgb(225,20,46)" fg:x="18" fg:w="1"/><text x="2.1328%" y="879.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="1.9874%" y="933" width="0.2092%" height="15" fill="rgb(210,31,41)" fg:x="19" fg:w="2"/><text x="2.2374%" y="943.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="2.1967%" y="933" width="0.1046%" height="15" fill="rgb(221,200,47)" fg:x="21" fg:w="1"/><text x="2.4467%" y="943.50"></text></g><g><title>_int_realloc (1 samples, 0.10%)</title><rect x="2.3013%" y="933" width="0.1046%" height="15" fill="rgb(226,26,5)" fg:x="22" fg:w="1"/><text x="2.5513%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.10%)</title><rect x="2.4059%" y="933" width="0.1046%" height="15" fill="rgb(249,33,26)" fg:x="23" fg:w="1"/><text x="2.6559%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.10%)</title><rect x="2.5105%" y="933" width="0.1046%" height="15" fill="rgb(235,183,28)" fg:x="24" fg:w="1"/><text x="2.7605%" y="943.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 0.10%)</title><rect x="2.6151%" y="933" width="0.1046%" height="15" fill="rgb(221,5,38)" fg:x="25" fg:w="1"/><text x="2.8651%" y="943.50"></text></g><g><title>sha2::sha256::Engine256::finish (1 samples, 0.10%)</title><rect x="2.7197%" y="933" width="0.1046%" height="15" fill="rgb(247,18,42)" fg:x="26" fg:w="1"/><text x="2.9697%" y="943.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (1 samples, 0.10%)</title><rect x="2.7197%" y="917" width="0.1046%" height="15" fill="rgb(241,131,45)" fg:x="26" fg:w="1"/><text x="2.9697%" y="927.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::digest_pad (1 samples, 0.10%)</title><rect x="2.7197%" y="901" width="0.1046%" height="15" fill="rgb(249,31,29)" fg:x="26" fg:w="1"/><text x="2.9697%" y="911.50"></text></g><g><title>block_buffer::set_zero (1 samples, 0.10%)</title><rect x="2.7197%" y="885" width="0.1046%" height="15" fill="rgb(225,111,53)" fg:x="26" fg:w="1"/><text x="2.9697%" y="895.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.10%)</title><rect x="2.7197%" y="869" width="0.1046%" height="15" fill="rgb(238,160,17)" fg:x="26" fg:w="1"/><text x="2.9697%" y="879.50"></text></g><g><title>[anon] (22 samples, 2.30%)</title><rect x="0.6276%" y="949" width="2.3013%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="22"/><text x="0.8776%" y="959.50">[..</text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.10%)</title><rect x="2.8243%" y="933" width="0.1046%" height="15" fill="rgb(232,36,49)" fg:x="27" fg:w="1"/><text x="3.0743%" y="943.50"></text></g><g><title>[lab4] (1 samples, 0.10%)</title><rect x="2.9289%" y="949" width="0.1046%" height="15" fill="rgb(209,103,24)" fg:x="28" fg:w="1"/><text x="3.1789%" y="959.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="2.9289%" y="933" width="0.1046%" height="15" fill="rgb(229,88,8)" fg:x="28" fg:w="1"/><text x="3.1789%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="3.1381%" y="933" width="0.1046%" height="15" fill="rgb(213,181,19)" fg:x="30" fg:w="1"/><text x="3.3881%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.10%)</title><rect x="3.1381%" y="917" width="0.1046%" height="15" fill="rgb(254,191,54)" fg:x="30" fg:w="1"/><text x="3.3881%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="3.1381%" y="901" width="0.1046%" height="15" fill="rgb(241,83,37)" fg:x="30" fg:w="1"/><text x="3.3881%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="3.1381%" y="885" width="0.1046%" height="15" fill="rgb(233,36,39)" fg:x="30" fg:w="1"/><text x="3.3881%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.21%)</title><rect x="3.2427%" y="933" width="0.2092%" height="15" fill="rgb(226,3,54)" fg:x="31" fg:w="2"/><text x="3.4927%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.21%)</title><rect x="3.2427%" y="917" width="0.2092%" height="15" fill="rgb(245,192,40)" fg:x="31" fg:w="2"/><text x="3.4927%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.21%)</title><rect x="3.2427%" y="901" width="0.2092%" height="15" fill="rgb(238,167,29)" fg:x="31" fg:w="2"/><text x="3.4927%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.21%)</title><rect x="3.2427%" y="885" width="0.2092%" height="15" fill="rgb(232,182,51)" fg:x="31" fg:w="2"/><text x="3.4927%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="3.2427%" y="869" width="0.2092%" height="15" fill="rgb(231,60,39)" fg:x="31" fg:w="2"/><text x="3.4927%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.21%)</title><rect x="3.2427%" y="853" width="0.2092%" height="15" fill="rgb(208,69,12)" fg:x="31" fg:w="2"/><text x="3.4927%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.21%)</title><rect x="3.2427%" y="837" width="0.2092%" height="15" fill="rgb(235,93,37)" fg:x="31" fg:w="2"/><text x="3.4927%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.52%)</title><rect x="3.4519%" y="933" width="0.5230%" height="15" fill="rgb(213,116,39)" fg:x="33" fg:w="5"/><text x="3.7019%" y="943.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.57%)</title><rect x="3.9749%" y="933" width="1.5690%" height="15" fill="rgb(222,207,29)" fg:x="38" fg:w="15"/><text x="4.2249%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.5439%" y="933" width="0.2092%" height="15" fill="rgb(206,96,30)" fg:x="53" fg:w="2"/><text x="5.7939%" y="943.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.5439%" y="917" width="0.2092%" height="15" fill="rgb(218,138,4)" fg:x="53" fg:w="2"/><text x="5.7939%" y="927.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.5439%" y="901" width="0.2092%" height="15" fill="rgb(250,191,14)" fg:x="53" fg:w="2"/><text x="5.7939%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.5439%" y="885" width="0.2092%" height="15" fill="rgb(239,60,40)" fg:x="53" fg:w="2"/><text x="5.7939%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.5439%" y="869" width="0.2092%" height="15" fill="rgb(206,27,48)" fg:x="53" fg:w="2"/><text x="5.7939%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.5439%" y="853" width="0.2092%" height="15" fill="rgb(225,35,8)" fg:x="53" fg:w="2"/><text x="5.7939%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.5439%" y="837" width="0.2092%" height="15" fill="rgb(250,213,24)" fg:x="53" fg:w="2"/><text x="5.7939%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.5439%" y="821" width="0.2092%" height="15" fill="rgb(247,123,22)" fg:x="53" fg:w="2"/><text x="5.7939%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.5439%" y="805" width="0.2092%" height="15" fill="rgb(231,138,38)" fg:x="53" fg:w="2"/><text x="5.7939%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.5439%" y="789" width="0.2092%" height="15" fill="rgb(231,145,46)" fg:x="53" fg:w="2"/><text x="5.7939%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="5.5439%" y="773" width="0.2092%" height="15" fill="rgb(251,118,11)" fg:x="53" fg:w="2"/><text x="5.7939%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="5.6485%" y="757" width="0.1046%" height="15" fill="rgb(217,147,25)" fg:x="54" fg:w="1"/><text x="5.8985%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="5.7531%" y="933" width="0.1046%" height="15" fill="rgb(247,81,37)" fg:x="55" fg:w="1"/><text x="6.0031%" y="943.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="5.8577%" y="933" width="0.1046%" height="15" fill="rgb(209,12,38)" fg:x="56" fg:w="1"/><text x="6.1077%" y="943.50"></text></g><g><title>_int_free (3 samples, 0.31%)</title><rect x="5.9623%" y="933" width="0.3138%" height="15" fill="rgb(227,1,9)" fg:x="57" fg:w="3"/><text x="6.2123%" y="943.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="6.2762%" y="933" width="0.2092%" height="15" fill="rgb(248,47,43)" fg:x="60" fg:w="2"/><text x="6.5262%" y="943.50"></text></g><g><title>_int_realloc (3 samples, 0.31%)</title><rect x="6.4854%" y="933" width="0.3138%" height="15" fill="rgb(221,10,30)" fg:x="62" fg:w="3"/><text x="6.7354%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.10%)</title><rect x="6.7992%" y="933" width="0.1046%" height="15" fill="rgb(210,229,1)" fg:x="65" fg:w="1"/><text x="7.0492%" y="943.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.10%)</title><rect x="6.9038%" y="933" width="0.1046%" height="15" fill="rgb(222,148,37)" fg:x="66" fg:w="1"/><text x="7.1538%" y="943.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (1 samples, 0.10%)</title><rect x="7.0084%" y="933" width="0.1046%" height="15" fill="rgb(234,67,33)" fg:x="67" fg:w="1"/><text x="7.2584%" y="943.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1 samples, 0.10%)</title><rect x="7.1130%" y="933" width="0.1046%" height="15" fill="rgb(247,98,35)" fg:x="68" fg:w="1"/><text x="7.3630%" y="943.50"></text></g><g><title>lab4::checksum::Checksum::update (3 samples, 0.31%)</title><rect x="7.2176%" y="933" width="0.3138%" height="15" fill="rgb(247,138,52)" fg:x="69" fg:w="3"/><text x="7.4676%" y="943.50"></text></g><g><title>hex::decode (1 samples, 0.10%)</title><rect x="7.4268%" y="917" width="0.1046%" height="15" fill="rgb(213,79,30)" fg:x="71" fg:w="1"/><text x="7.6768%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (1 samples, 0.10%)</title><rect x="7.4268%" y="901" width="0.1046%" height="15" fill="rgb(246,177,23)" fg:x="71" fg:w="1"/><text x="7.6768%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="7.4268%" y="885" width="0.1046%" height="15" fill="rgb(230,62,27)" fg:x="71" fg:w="1"/><text x="7.6768%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="7.4268%" y="869" width="0.1046%" height="15" fill="rgb(216,154,8)" fg:x="71" fg:w="1"/><text x="7.6768%" y="879.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.10%)</title><rect x="7.4268%" y="853" width="0.1046%" height="15" fill="rgb(244,35,45)" fg:x="71" fg:w="1"/><text x="7.6768%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.10%)</title><rect x="7.4268%" y="837" width="0.1046%" height="15" fill="rgb(251,115,12)" fg:x="71" fg:w="1"/><text x="7.6768%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="7.4268%" y="821" width="0.1046%" height="15" fill="rgb(240,54,50)" fg:x="71" fg:w="1"/><text x="7.6768%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="7.4268%" y="805" width="0.1046%" height="15" fill="rgb(233,84,52)" fg:x="71" fg:w="1"/><text x="7.6768%" y="815.50"></text></g><g><title>[unknown] (44 samples, 4.60%)</title><rect x="3.0335%" y="949" width="4.6025%" height="15" fill="rgb(207,117,47)" fg:x="29" fg:w="44"/><text x="3.2835%" y="959.50">[unkn..</text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.10%)</title><rect x="7.5314%" y="933" width="0.1046%" height="15" fill="rgb(249,43,39)" fg:x="72" fg:w="1"/><text x="7.7814%" y="943.50"></text></g><g><title>[unknown] (17 samples, 1.78%)</title><rect x="7.6360%" y="933" width="1.7782%" height="15" fill="rgb(209,38,44)" fg:x="73" fg:w="17"/><text x="7.8860%" y="943.50">[..</text></g><g><title>[unknown] (17 samples, 1.78%)</title><rect x="7.6360%" y="917" width="1.7782%" height="15" fill="rgb(236,212,23)" fg:x="73" fg:w="17"/><text x="7.8860%" y="927.50">[..</text></g><g><title>[unknown] (17 samples, 1.78%)</title><rect x="7.6360%" y="901" width="1.7782%" height="15" fill="rgb(242,79,21)" fg:x="73" fg:w="17"/><text x="7.8860%" y="911.50">[..</text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="7.7406%" y="885" width="1.6736%" height="15" fill="rgb(211,96,35)" fg:x="74" fg:w="16"/><text x="7.9906%" y="895.50"></text></g><g><title>[unknown] (15 samples, 1.57%)</title><rect x="7.8452%" y="869" width="1.5690%" height="15" fill="rgb(253,215,40)" fg:x="75" fg:w="15"/><text x="8.0952%" y="879.50"></text></g><g><title>[unknown] (15 samples, 1.57%)</title><rect x="7.8452%" y="853" width="1.5690%" height="15" fill="rgb(211,81,21)" fg:x="75" fg:w="15"/><text x="8.0952%" y="863.50"></text></g><g><title>[unknown] (15 samples, 1.57%)</title><rect x="7.8452%" y="837" width="1.5690%" height="15" fill="rgb(208,190,38)" fg:x="75" fg:w="15"/><text x="8.0952%" y="847.50"></text></g><g><title>[unknown] (15 samples, 1.57%)</title><rect x="7.8452%" y="821" width="1.5690%" height="15" fill="rgb(235,213,38)" fg:x="75" fg:w="15"/><text x="8.0952%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="9.4142%" y="917" width="0.6276%" height="15" fill="rgb(237,122,38)" fg:x="90" fg:w="6"/><text x="9.6642%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="9.4142%" y="901" width="0.6276%" height="15" fill="rgb(244,218,35)" fg:x="90" fg:w="6"/><text x="9.6642%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="9.4142%" y="885" width="0.6276%" height="15" fill="rgb(240,68,47)" fg:x="90" fg:w="6"/><text x="9.6642%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="9.4142%" y="869" width="0.6276%" height="15" fill="rgb(210,16,53)" fg:x="90" fg:w="6"/><text x="9.6642%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="9.4142%" y="853" width="0.6276%" height="15" fill="rgb(235,124,12)" fg:x="90" fg:w="6"/><text x="9.6642%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="9.4142%" y="837" width="0.6276%" height="15" fill="rgb(224,169,11)" fg:x="90" fg:w="6"/><text x="9.6642%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="9.5188%" y="821" width="0.5230%" height="15" fill="rgb(250,166,2)" fg:x="91" fg:w="5"/><text x="9.7688%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="9.5188%" y="805" width="0.5230%" height="15" fill="rgb(242,216,29)" fg:x="91" fg:w="5"/><text x="9.7688%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="9.5188%" y="789" width="0.5230%" height="15" fill="rgb(230,116,27)" fg:x="91" fg:w="5"/><text x="9.7688%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="9.5188%" y="773" width="0.5230%" height="15" fill="rgb(228,99,48)" fg:x="91" fg:w="5"/><text x="9.7688%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="9.5188%" y="757" width="0.5230%" height="15" fill="rgb(253,11,6)" fg:x="91" fg:w="5"/><text x="9.7688%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="9.5188%" y="741" width="0.5230%" height="15" fill="rgb(247,143,39)" fg:x="91" fg:w="5"/><text x="9.7688%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="9.5188%" y="725" width="0.5230%" height="15" fill="rgb(236,97,10)" fg:x="91" fg:w="5"/><text x="9.7688%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="9.5188%" y="709" width="0.5230%" height="15" fill="rgb(233,208,19)" fg:x="91" fg:w="5"/><text x="9.7688%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="9.5188%" y="693" width="0.5230%" height="15" fill="rgb(216,164,2)" fg:x="91" fg:w="5"/><text x="9.7688%" y="703.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 0.10%)</title><rect x="10.0418%" y="709" width="0.1046%" height="15" fill="rgb(220,129,5)" fg:x="96" fg:w="1"/><text x="10.2918%" y="719.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1 samples, 0.10%)</title><rect x="10.0418%" y="693" width="0.1046%" height="15" fill="rgb(242,17,10)" fg:x="96" fg:w="1"/><text x="10.2918%" y="703.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (1 samples, 0.10%)</title><rect x="10.0418%" y="677" width="0.1046%" height="15" fill="rgb(242,107,0)" fg:x="96" fg:w="1"/><text x="10.2918%" y="687.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (1 samples, 0.10%)</title><rect x="10.0418%" y="661" width="0.1046%" height="15" fill="rgb(251,28,31)" fg:x="96" fg:w="1"/><text x="10.2918%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.10%)</title><rect x="10.0418%" y="645" width="0.1046%" height="15" fill="rgb(233,223,10)" fg:x="96" fg:w="1"/><text x="10.2918%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.10%)</title><rect x="10.0418%" y="629" width="0.1046%" height="15" fill="rgb(215,21,27)" fg:x="96" fg:w="1"/><text x="10.2918%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.10%)</title><rect x="10.0418%" y="613" width="0.1046%" height="15" fill="rgb(232,23,21)" fg:x="96" fg:w="1"/><text x="10.2918%" y="623.50"></text></g><g><title>lab4::checksum::Checksum::update (1 samples, 0.10%)</title><rect x="10.1464%" y="709" width="0.1046%" height="15" fill="rgb(244,5,23)" fg:x="97" fg:w="1"/><text x="10.3964%" y="719.50"></text></g><g><title>hex::encode (1 samples, 0.10%)</title><rect x="10.1464%" y="693" width="0.1046%" height="15" fill="rgb(226,81,46)" fg:x="97" fg:w="1"/><text x="10.3964%" y="703.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (1 samples, 0.10%)</title><rect x="10.1464%" y="677" width="0.1046%" height="15" fill="rgb(247,70,30)" fg:x="97" fg:w="1"/><text x="10.3964%" y="687.50"></text></g><g><title>hex::encode_to_iter (1 samples, 0.10%)</title><rect x="10.1464%" y="661" width="0.1046%" height="15" fill="rgb(212,68,19)" fg:x="97" fg:w="1"/><text x="10.3964%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.10%)</title><rect x="10.1464%" y="645" width="0.1046%" height="15" fill="rgb(240,187,13)" fg:x="97" fg:w="1"/><text x="10.3964%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.10%)</title><rect x="10.1464%" y="629" width="0.1046%" height="15" fill="rgb(223,113,26)" fg:x="97" fg:w="1"/><text x="10.3964%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.10%)</title><rect x="10.1464%" y="613" width="0.1046%" height="15" fill="rgb(206,192,2)" fg:x="97" fg:w="1"/><text x="10.3964%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.10%)</title><rect x="10.1464%" y="597" width="0.1046%" height="15" fill="rgb(241,108,4)" fg:x="97" fg:w="1"/><text x="10.3964%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.10%)</title><rect x="10.1464%" y="581" width="0.1046%" height="15" fill="rgb(247,173,49)" fg:x="97" fg:w="1"/><text x="10.3964%" y="591.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="10.1464%" y="565" width="0.1046%" height="15" fill="rgb(224,114,35)" fg:x="97" fg:w="1"/><text x="10.3964%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.10%)</title><rect x="10.1464%" y="549" width="0.1046%" height="15" fill="rgb(245,159,27)" fg:x="97" fg:w="1"/><text x="10.3964%" y="559.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.10%)</title><rect x="10.1464%" y="533" width="0.1046%" height="15" fill="rgb(245,172,44)" fg:x="97" fg:w="1"/><text x="10.3964%" y="543.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.10%)</title><rect x="10.2510%" y="693" width="0.1046%" height="15" fill="rgb(236,23,11)" fg:x="98" fg:w="1"/><text x="10.5010%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (1 samples, 0.10%)</title><rect x="10.2510%" y="677" width="0.1046%" height="15" fill="rgb(205,117,38)" fg:x="98" fg:w="1"/><text x="10.5010%" y="687.50"></text></g><g><title>alloc::fmt::format::{{closure}} (1 samples, 0.10%)</title><rect x="10.2510%" y="661" width="0.1046%" height="15" fill="rgb(237,72,25)" fg:x="98" fg:w="1"/><text x="10.5010%" y="671.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.10%)</title><rect x="10.2510%" y="645" width="0.1046%" height="15" fill="rgb(244,70,9)" fg:x="98" fg:w="1"/><text x="10.5010%" y="655.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.10%)</title><rect x="10.2510%" y="629" width="0.1046%" height="15" fill="rgb(217,125,39)" fg:x="98" fg:w="1"/><text x="10.5010%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (1 samples, 0.10%)</title><rect x="10.2510%" y="613" width="0.1046%" height="15" fill="rgb(235,36,10)" fg:x="98" fg:w="1"/><text x="10.5010%" y="623.50"></text></g><g><title>core::fmt::write (1 samples, 0.10%)</title><rect x="10.2510%" y="597" width="0.1046%" height="15" fill="rgb(251,123,47)" fg:x="98" fg:w="1"/><text x="10.5010%" y="607.50"></text></g><g><title>core::fmt::rt::Argument::fmt (1 samples, 0.10%)</title><rect x="10.2510%" y="581" width="0.1046%" height="15" fill="rgb(221,13,13)" fg:x="98" fg:w="1"/><text x="10.5010%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (1 samples, 0.10%)</title><rect x="10.2510%" y="565" width="0.1046%" height="15" fill="rgb(238,131,9)" fg:x="98" fg:w="1"/><text x="10.5010%" y="575.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="10.3556%" y="533" width="0.1046%" height="15" fill="rgb(211,50,8)" fg:x="99" fg:w="1"/><text x="10.6056%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.52%)</title><rect x="10.3556%" y="677" width="0.5230%" height="15" fill="rgb(245,182,24)" fg:x="99" fg:w="5"/><text x="10.6056%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::string::String,alloc::string::String)]&gt; (5 samples, 0.52%)</title><rect x="10.3556%" y="661" width="0.5230%" height="15" fill="rgb(242,14,37)" fg:x="99" fg:w="5"/><text x="10.6056%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (5 samples, 0.52%)</title><rect x="10.3556%" y="645" width="0.5230%" height="15" fill="rgb(246,228,12)" fg:x="99" fg:w="5"/><text x="10.6056%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.52%)</title><rect x="10.3556%" y="629" width="0.5230%" height="15" fill="rgb(213,55,15)" fg:x="99" fg:w="5"/><text x="10.6056%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.52%)</title><rect x="10.3556%" y="613" width="0.5230%" height="15" fill="rgb(209,9,3)" fg:x="99" fg:w="5"/><text x="10.6056%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.52%)</title><rect x="10.3556%" y="597" width="0.5230%" height="15" fill="rgb(230,59,30)" fg:x="99" fg:w="5"/><text x="10.6056%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.52%)</title><rect x="10.3556%" y="581" width="0.5230%" height="15" fill="rgb(209,121,21)" fg:x="99" fg:w="5"/><text x="10.6056%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.52%)</title><rect x="10.3556%" y="565" width="0.5230%" height="15" fill="rgb(220,109,13)" fg:x="99" fg:w="5"/><text x="10.6056%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.52%)</title><rect x="10.3556%" y="549" width="0.5230%" height="15" fill="rgb(232,18,1)" fg:x="99" fg:w="5"/><text x="10.6056%" y="559.50"></text></g><g><title>_int_free (4 samples, 0.42%)</title><rect x="10.4603%" y="533" width="0.4184%" height="15" fill="rgb(215,41,42)" fg:x="100" fg:w="4"/><text x="10.7103%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (7 samples, 0.73%)</title><rect x="10.3556%" y="693" width="0.7322%" height="15" fill="rgb(224,123,36)" fg:x="99" fg:w="7"/><text x="10.6056%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (2 samples, 0.21%)</title><rect x="10.8787%" y="677" width="0.2092%" height="15" fill="rgb(240,125,3)" fg:x="104" fg:w="2"/><text x="11.1287%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="10.8787%" y="661" width="0.2092%" height="15" fill="rgb(205,98,50)" fg:x="104" fg:w="2"/><text x="11.1287%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.21%)</title><rect x="10.8787%" y="645" width="0.2092%" height="15" fill="rgb(205,185,37)" fg:x="104" fg:w="2"/><text x="11.1287%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.21%)</title><rect x="10.8787%" y="629" width="0.2092%" height="15" fill="rgb(238,207,15)" fg:x="104" fg:w="2"/><text x="11.1287%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="10.8787%" y="613" width="0.2092%" height="15" fill="rgb(213,199,42)" fg:x="104" fg:w="2"/><text x="11.1287%" y="623.50"></text></g><g><title>malloc_consolidate (2 samples, 0.21%)</title><rect x="10.8787%" y="597" width="0.2092%" height="15" fill="rgb(235,201,11)" fg:x="104" fg:w="2"/><text x="11.1287%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.21%)</title><rect x="11.0879%" y="421" width="0.2092%" height="15" fill="rgb(207,46,11)" fg:x="106" fg:w="2"/><text x="11.3379%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.21%)</title><rect x="11.0879%" y="405" width="0.2092%" height="15" fill="rgb(241,35,35)" fg:x="106" fg:w="2"/><text x="11.3379%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.21%)</title><rect x="11.0879%" y="389" width="0.2092%" height="15" fill="rgb(243,32,47)" fg:x="106" fg:w="2"/><text x="11.3379%" y="399.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.21%)</title><rect x="11.0879%" y="373" width="0.2092%" height="15" fill="rgb(247,202,23)" fg:x="106" fg:w="2"/><text x="11.3379%" y="383.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.52%)</title><rect x="11.0879%" y="501" width="0.5230%" height="15" fill="rgb(219,102,11)" fg:x="106" fg:w="5"/><text x="11.3379%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.52%)</title><rect x="11.0879%" y="485" width="0.5230%" height="15" fill="rgb(243,110,44)" fg:x="106" fg:w="5"/><text x="11.3379%" y="495.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.52%)</title><rect x="11.0879%" y="469" width="0.5230%" height="15" fill="rgb(222,74,54)" fg:x="106" fg:w="5"/><text x="11.3379%" y="479.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (5 samples, 0.52%)</title><rect x="11.0879%" y="453" width="0.5230%" height="15" fill="rgb(216,99,12)" fg:x="106" fg:w="5"/><text x="11.3379%" y="463.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.52%)</title><rect x="11.0879%" y="437" width="0.5230%" height="15" fill="rgb(226,22,26)" fg:x="106" fg:w="5"/><text x="11.3379%" y="447.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.31%)</title><rect x="11.2971%" y="421" width="0.3138%" height="15" fill="rgb(217,163,10)" fg:x="108" fg:w="3"/><text x="11.5471%" y="431.50"></text></g><g><title>core::slice::memchr::memchr_aligned (3 samples, 0.31%)</title><rect x="11.2971%" y="405" width="0.3138%" height="15" fill="rgb(213,25,53)" fg:x="108" fg:w="3"/><text x="11.5471%" y="415.50"></text></g><g><title>core::slice::memchr::memchr_naive (3 samples, 0.31%)</title><rect x="11.2971%" y="389" width="0.3138%" height="15" fill="rgb(252,105,26)" fg:x="108" fg:w="3"/><text x="11.5471%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.42%)</title><rect x="11.6109%" y="357" width="0.4184%" height="15" fill="rgb(220,39,43)" fg:x="111" fg:w="4"/><text x="11.8609%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.42%)</title><rect x="11.6109%" y="341" width="0.4184%" height="15" fill="rgb(229,68,48)" fg:x="111" fg:w="4"/><text x="11.8609%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.42%)</title><rect x="11.6109%" y="325" width="0.4184%" height="15" fill="rgb(252,8,32)" fg:x="111" fg:w="4"/><text x="11.8609%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.42%)</title><rect x="11.6109%" y="309" width="0.4184%" height="15" fill="rgb(223,20,43)" fg:x="111" fg:w="4"/><text x="11.8609%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.42%)</title><rect x="11.6109%" y="293" width="0.4184%" height="15" fill="rgb(229,81,49)" fg:x="111" fg:w="4"/><text x="11.8609%" y="303.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.42%)</title><rect x="11.6109%" y="277" width="0.4184%" height="15" fill="rgb(236,28,36)" fg:x="111" fg:w="4"/><text x="11.8609%" y="287.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.42%)</title><rect x="11.6109%" y="261" width="0.4184%" height="15" fill="rgb(249,185,26)" fg:x="111" fg:w="4"/><text x="11.8609%" y="271.50"></text></g><g><title>_int_malloc (3 samples, 0.31%)</title><rect x="11.7155%" y="245" width="0.3138%" height="15" fill="rgb(249,174,33)" fg:x="112" fg:w="3"/><text x="11.9655%" y="255.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product (11 samples, 1.15%)</title><rect x="11.0879%" y="693" width="1.1506%" height="15" fill="rgb(233,201,37)" fg:x="106" fg:w="11"/><text x="11.3379%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 1.15%)</title><rect x="11.0879%" y="677" width="1.1506%" height="15" fill="rgb(221,78,26)" fg:x="106" fg:w="11"/><text x="11.3379%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (11 samples, 1.15%)</title><rect x="11.0879%" y="661" width="1.1506%" height="15" fill="rgb(250,127,30)" fg:x="106" fg:w="11"/><text x="11.3379%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 1.15%)</title><rect x="11.0879%" y="645" width="1.1506%" height="15" fill="rgb(230,49,44)" fg:x="106" fg:w="11"/><text x="11.3379%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 1.15%)</title><rect x="11.0879%" y="629" width="1.1506%" height="15" fill="rgb(229,67,23)" fg:x="106" fg:w="11"/><text x="11.3379%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (11 samples, 1.15%)</title><rect x="11.0879%" y="613" width="1.1506%" height="15" fill="rgb(249,83,47)" fg:x="106" fg:w="11"/><text x="11.3379%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (11 samples, 1.15%)</title><rect x="11.0879%" y="597" width="1.1506%" height="15" fill="rgb(215,43,3)" fg:x="106" fg:w="11"/><text x="11.3379%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.15%)</title><rect x="11.0879%" y="581" width="1.1506%" height="15" fill="rgb(238,154,13)" fg:x="106" fg:w="11"/><text x="11.3379%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.15%)</title><rect x="11.0879%" y="565" width="1.1506%" height="15" fill="rgb(219,56,2)" fg:x="106" fg:w="11"/><text x="11.3379%" y="575.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (11 samples, 1.15%)</title><rect x="11.0879%" y="549" width="1.1506%" height="15" fill="rgb(233,0,4)" fg:x="106" fg:w="11"/><text x="11.3379%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 1.15%)</title><rect x="11.0879%" y="533" width="1.1506%" height="15" fill="rgb(235,30,7)" fg:x="106" fg:w="11"/><text x="11.3379%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.15%)</title><rect x="11.0879%" y="517" width="1.1506%" height="15" fill="rgb(250,79,13)" fg:x="106" fg:w="11"/><text x="11.3379%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.63%)</title><rect x="11.6109%" y="501" width="0.6276%" height="15" fill="rgb(211,146,34)" fg:x="111" fg:w="6"/><text x="11.8609%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.63%)</title><rect x="11.6109%" y="485" width="0.6276%" height="15" fill="rgb(228,22,38)" fg:x="111" fg:w="6"/><text x="11.8609%" y="495.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product::{{closure}}::{{closure}} (6 samples, 0.63%)</title><rect x="11.6109%" y="469" width="0.6276%" height="15" fill="rgb(235,168,5)" fg:x="111" fg:w="6"/><text x="11.8609%" y="479.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (6 samples, 0.63%)</title><rect x="11.6109%" y="453" width="0.6276%" height="15" fill="rgb(221,155,16)" fg:x="111" fg:w="6"/><text x="11.8609%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (6 samples, 0.63%)</title><rect x="11.6109%" y="437" width="0.6276%" height="15" fill="rgb(215,215,53)" fg:x="111" fg:w="6"/><text x="11.8609%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.63%)</title><rect x="11.6109%" y="421" width="0.6276%" height="15" fill="rgb(223,4,10)" fg:x="111" fg:w="6"/><text x="11.8609%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.63%)</title><rect x="11.6109%" y="405" width="0.6276%" height="15" fill="rgb(234,103,6)" fg:x="111" fg:w="6"/><text x="11.8609%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.63%)</title><rect x="11.6109%" y="389" width="0.6276%" height="15" fill="rgb(227,97,0)" fg:x="111" fg:w="6"/><text x="11.8609%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.63%)</title><rect x="11.6109%" y="373" width="0.6276%" height="15" fill="rgb(234,150,53)" fg:x="111" fg:w="6"/><text x="11.8609%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.21%)</title><rect x="12.0293%" y="357" width="0.2092%" height="15" fill="rgb(228,201,54)" fg:x="115" fg:w="2"/><text x="12.2793%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.21%)</title><rect x="12.0293%" y="341" width="0.2092%" height="15" fill="rgb(222,22,37)" fg:x="115" fg:w="2"/><text x="12.2793%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="12.1339%" y="325" width="0.1046%" height="15" fill="rgb(237,53,32)" fg:x="116" fg:w="1"/><text x="12.3839%" y="335.50"></text></g><g><title>std::fs::File::metadata (2 samples, 0.21%)</title><rect x="12.2385%" y="661" width="0.2092%" height="15" fill="rgb(233,25,53)" fg:x="117" fg:w="2"/><text x="12.4885%" y="671.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (2 samples, 0.21%)</title><rect x="12.2385%" y="645" width="0.2092%" height="15" fill="rgb(210,40,34)" fg:x="117" fg:w="2"/><text x="12.4885%" y="655.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.21%)</title><rect x="12.2385%" y="629" width="0.2092%" height="15" fill="rgb(241,220,44)" fg:x="117" fg:w="2"/><text x="12.4885%" y="639.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.21%)</title><rect x="12.2385%" y="613" width="0.2092%" height="15" fill="rgb(235,28,35)" fg:x="117" fg:w="2"/><text x="12.4885%" y="623.50"></text></g><g><title>statx (2 samples, 0.21%)</title><rect x="12.2385%" y="597" width="0.2092%" height="15" fill="rgb(210,56,17)" fg:x="117" fg:w="2"/><text x="12.4885%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="12.2385%" y="581" width="0.2092%" height="15" fill="rgb(224,130,29)" fg:x="117" fg:w="2"/><text x="12.4885%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="12.2385%" y="565" width="0.2092%" height="15" fill="rgb(235,212,8)" fg:x="117" fg:w="2"/><text x="12.4885%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="12.2385%" y="549" width="0.2092%" height="15" fill="rgb(223,33,50)" fg:x="117" fg:w="2"/><text x="12.4885%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="12.2385%" y="533" width="0.2092%" height="15" fill="rgb(219,149,13)" fg:x="117" fg:w="2"/><text x="12.4885%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="12.2385%" y="517" width="0.2092%" height="15" fill="rgb(250,156,29)" fg:x="117" fg:w="2"/><text x="12.4885%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="12.2385%" y="501" width="0.2092%" height="15" fill="rgb(216,193,19)" fg:x="117" fg:w="2"/><text x="12.4885%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="12.3431%" y="485" width="0.1046%" height="15" fill="rgb(216,135,14)" fg:x="118" fg:w="1"/><text x="12.5931%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="12.3431%" y="469" width="0.1046%" height="15" fill="rgb(241,47,5)" fg:x="118" fg:w="1"/><text x="12.5931%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="12.3431%" y="453" width="0.1046%" height="15" fill="rgb(233,42,35)" fg:x="118" fg:w="1"/><text x="12.5931%" y="463.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (52 samples, 5.44%)</title><rect x="10.0418%" y="725" width="5.4393%" height="15" fill="rgb(231,13,6)" fg:x="96" fg:w="52"/><text x="10.2918%" y="735.50">lab4::i..</text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name (50 samples, 5.23%)</title><rect x="10.2510%" y="709" width="5.2301%" height="15" fill="rgb(207,181,40)" fg:x="98" fg:w="50"/><text x="10.5010%" y="719.50">lab4::..</text></g><g><title>std::fs::read_to_string (31 samples, 3.24%)</title><rect x="12.2385%" y="693" width="3.2427%" height="15" fill="rgb(254,173,49)" fg:x="117" fg:w="31"/><text x="12.4885%" y="703.50">std..</text></g><g><title>std::fs::read_to_string::inner (31 samples, 3.24%)</title><rect x="12.2385%" y="677" width="3.2427%" height="15" fill="rgb(221,1,38)" fg:x="117" fg:w="31"/><text x="12.4885%" y="687.50">std..</text></g><g><title>std::fs::File::open (29 samples, 3.03%)</title><rect x="12.4477%" y="661" width="3.0335%" height="15" fill="rgb(206,124,46)" fg:x="119" fg:w="29"/><text x="12.6977%" y="671.50">std..</text></g><g><title>std::fs::OpenOptions::open (29 samples, 3.03%)</title><rect x="12.4477%" y="645" width="3.0335%" height="15" fill="rgb(249,21,11)" fg:x="119" fg:w="29"/><text x="12.6977%" y="655.50">std..</text></g><g><title>std::fs::OpenOptions::_open (29 samples, 3.03%)</title><rect x="12.4477%" y="629" width="3.0335%" height="15" fill="rgb(222,201,40)" fg:x="119" fg:w="29"/><text x="12.6977%" y="639.50">std..</text></g><g><title>std::sys::unix::fs::File::open (29 samples, 3.03%)</title><rect x="12.4477%" y="613" width="3.0335%" height="15" fill="rgb(235,61,29)" fg:x="119" fg:w="29"/><text x="12.6977%" y="623.50">std..</text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (29 samples, 3.03%)</title><rect x="12.4477%" y="597" width="3.0335%" height="15" fill="rgb(219,207,3)" fg:x="119" fg:w="29"/><text x="12.6977%" y="607.50">std..</text></g><g><title>std::sys::common::small_c_string::run_with_cstr (29 samples, 3.03%)</title><rect x="12.4477%" y="581" width="3.0335%" height="15" fill="rgb(222,56,46)" fg:x="119" fg:w="29"/><text x="12.6977%" y="591.50">std..</text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (29 samples, 3.03%)</title><rect x="12.4477%" y="565" width="3.0335%" height="15" fill="rgb(239,76,54)" fg:x="119" fg:w="29"/><text x="12.6977%" y="575.50">std..</text></g><g><title>std::sys::unix::fs::File::open_c (29 samples, 3.03%)</title><rect x="12.4477%" y="549" width="3.0335%" height="15" fill="rgb(231,124,27)" fg:x="119" fg:w="29"/><text x="12.6977%" y="559.50">std..</text></g><g><title>std::sys::unix::cvt_r (29 samples, 3.03%)</title><rect x="12.4477%" y="533" width="3.0335%" height="15" fill="rgb(249,195,6)" fg:x="119" fg:w="29"/><text x="12.6977%" y="543.50">std..</text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (29 samples, 3.03%)</title><rect x="12.4477%" y="517" width="3.0335%" height="15" fill="rgb(237,174,47)" fg:x="119" fg:w="29"/><text x="12.6977%" y="527.50">std..</text></g><g><title>__libc_open64 (29 samples, 3.03%)</title><rect x="12.4477%" y="501" width="3.0335%" height="15" fill="rgb(206,201,31)" fg:x="119" fg:w="29"/><text x="12.6977%" y="511.50">__l..</text></g><g><title>[unknown] (29 samples, 3.03%)</title><rect x="12.4477%" y="485" width="3.0335%" height="15" fill="rgb(231,57,52)" fg:x="119" fg:w="29"/><text x="12.6977%" y="495.50">[un..</text></g><g><title>[unknown] (28 samples, 2.93%)</title><rect x="12.5523%" y="469" width="2.9289%" height="15" fill="rgb(248,177,22)" fg:x="120" fg:w="28"/><text x="12.8023%" y="479.50">[u..</text></g><g><title>[unknown] (28 samples, 2.93%)</title><rect x="12.5523%" y="453" width="2.9289%" height="15" fill="rgb(215,211,37)" fg:x="120" fg:w="28"/><text x="12.8023%" y="463.50">[u..</text></g><g><title>[unknown] (28 samples, 2.93%)</title><rect x="12.5523%" y="437" width="2.9289%" height="15" fill="rgb(241,128,51)" fg:x="120" fg:w="28"/><text x="12.8023%" y="447.50">[u..</text></g><g><title>[unknown] (28 samples, 2.93%)</title><rect x="12.5523%" y="421" width="2.9289%" height="15" fill="rgb(227,165,31)" fg:x="120" fg:w="28"/><text x="12.8023%" y="431.50">[u..</text></g><g><title>[unknown] (28 samples, 2.93%)</title><rect x="12.5523%" y="405" width="2.9289%" height="15" fill="rgb(228,167,24)" fg:x="120" fg:w="28"/><text x="12.8023%" y="415.50">[u..</text></g><g><title>[unknown] (27 samples, 2.82%)</title><rect x="12.6569%" y="389" width="2.8243%" height="15" fill="rgb(228,143,12)" fg:x="121" fg:w="27"/><text x="12.9069%" y="399.50">[u..</text></g><g><title>[unknown] (27 samples, 2.82%)</title><rect x="12.6569%" y="373" width="2.8243%" height="15" fill="rgb(249,149,8)" fg:x="121" fg:w="27"/><text x="12.9069%" y="383.50">[u..</text></g><g><title>[unknown] (27 samples, 2.82%)</title><rect x="12.6569%" y="357" width="2.8243%" height="15" fill="rgb(243,35,44)" fg:x="121" fg:w="27"/><text x="12.9069%" y="367.50">[u..</text></g><g><title>[unknown] (27 samples, 2.82%)</title><rect x="12.6569%" y="341" width="2.8243%" height="15" fill="rgb(246,89,9)" fg:x="121" fg:w="27"/><text x="12.9069%" y="351.50">[u..</text></g><g><title>[unknown] (27 samples, 2.82%)</title><rect x="12.6569%" y="325" width="2.8243%" height="15" fill="rgb(233,213,13)" fg:x="121" fg:w="27"/><text x="12.9069%" y="335.50">[u..</text></g><g><title>[unknown] (27 samples, 2.82%)</title><rect x="12.6569%" y="309" width="2.8243%" height="15" fill="rgb(233,141,41)" fg:x="121" fg:w="27"/><text x="12.9069%" y="319.50">[u..</text></g><g><title>[unknown] (27 samples, 2.82%)</title><rect x="12.6569%" y="293" width="2.8243%" height="15" fill="rgb(239,167,4)" fg:x="121" fg:w="27"/><text x="12.9069%" y="303.50">[u..</text></g><g><title>[unknown] (27 samples, 2.82%)</title><rect x="12.6569%" y="277" width="2.8243%" height="15" fill="rgb(209,217,16)" fg:x="121" fg:w="27"/><text x="12.9069%" y="287.50">[u..</text></g><g><title>[unknown] (25 samples, 2.62%)</title><rect x="12.8661%" y="261" width="2.6151%" height="15" fill="rgb(219,88,35)" fg:x="123" fg:w="25"/><text x="13.1161%" y="271.50">[u..</text></g><g><title>[unknown] (25 samples, 2.62%)</title><rect x="12.8661%" y="245" width="2.6151%" height="15" fill="rgb(220,193,23)" fg:x="123" fg:w="25"/><text x="13.1161%" y="255.50">[u..</text></g><g><title>[unknown] (25 samples, 2.62%)</title><rect x="12.8661%" y="229" width="2.6151%" height="15" fill="rgb(230,90,52)" fg:x="123" fg:w="25"/><text x="13.1161%" y="239.50">[u..</text></g><g><title>[unknown] (24 samples, 2.51%)</title><rect x="12.9707%" y="213" width="2.5105%" height="15" fill="rgb(252,106,19)" fg:x="124" fg:w="24"/><text x="13.2207%" y="223.50">[u..</text></g><g><title>[unknown] (24 samples, 2.51%)</title><rect x="12.9707%" y="197" width="2.5105%" height="15" fill="rgb(206,74,20)" fg:x="124" fg:w="24"/><text x="13.2207%" y="207.50">[u..</text></g><g><title>[unknown] (24 samples, 2.51%)</title><rect x="12.9707%" y="181" width="2.5105%" height="15" fill="rgb(230,138,44)" fg:x="124" fg:w="24"/><text x="13.2207%" y="191.50">[u..</text></g><g><title>[unknown] (23 samples, 2.41%)</title><rect x="13.0753%" y="165" width="2.4059%" height="15" fill="rgb(235,182,43)" fg:x="125" fg:w="23"/><text x="13.3253%" y="175.50">[u..</text></g><g><title>[unknown] (23 samples, 2.41%)</title><rect x="13.0753%" y="149" width="2.4059%" height="15" fill="rgb(242,16,51)" fg:x="125" fg:w="23"/><text x="13.3253%" y="159.50">[u..</text></g><g><title>[unknown] (23 samples, 2.41%)</title><rect x="13.0753%" y="133" width="2.4059%" height="15" fill="rgb(248,9,4)" fg:x="125" fg:w="23"/><text x="13.3253%" y="143.50">[u..</text></g><g><title>[unknown] (23 samples, 2.41%)</title><rect x="13.0753%" y="117" width="2.4059%" height="15" fill="rgb(210,31,22)" fg:x="125" fg:w="23"/><text x="13.3253%" y="127.50">[u..</text></g><g><title>[unknown] (23 samples, 2.41%)</title><rect x="13.0753%" y="101" width="2.4059%" height="15" fill="rgb(239,54,39)" fg:x="125" fg:w="23"/><text x="13.3253%" y="111.50">[u..</text></g><g><title>[unknown] (23 samples, 2.41%)</title><rect x="13.0753%" y="85" width="2.4059%" height="15" fill="rgb(230,99,41)" fg:x="125" fg:w="23"/><text x="13.3253%" y="95.50">[u..</text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="15.3766%" y="69" width="0.1046%" height="15" fill="rgb(253,106,12)" fg:x="147" fg:w="1"/><text x="15.6266%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="15.3766%" y="53" width="0.1046%" height="15" fill="rgb(213,46,41)" fg:x="147" fg:w="1"/><text x="15.6266%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="15.3766%" y="37" width="0.1046%" height="15" fill="rgb(215,133,35)" fg:x="147" fg:w="1"/><text x="15.6266%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.84%)</title><rect x="15.6904%" y="629" width="0.8368%" height="15" fill="rgb(213,28,5)" fg:x="150" fg:w="8"/><text x="15.9404%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.84%)</title><rect x="15.6904%" y="613" width="0.8368%" height="15" fill="rgb(215,77,49)" fg:x="150" fg:w="8"/><text x="15.9404%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.84%)</title><rect x="15.6904%" y="597" width="0.8368%" height="15" fill="rgb(248,100,22)" fg:x="150" fg:w="8"/><text x="15.9404%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.84%)</title><rect x="15.6904%" y="581" width="0.8368%" height="15" fill="rgb(208,67,9)" fg:x="150" fg:w="8"/><text x="15.9404%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.84%)</title><rect x="15.6904%" y="565" width="0.8368%" height="15" fill="rgb(219,133,21)" fg:x="150" fg:w="8"/><text x="15.9404%" y="575.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.84%)</title><rect x="15.6904%" y="549" width="0.8368%" height="15" fill="rgb(246,46,29)" fg:x="150" fg:w="8"/><text x="15.9404%" y="559.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.84%)</title><rect x="15.6904%" y="533" width="0.8368%" height="15" fill="rgb(246,185,52)" fg:x="150" fg:w="8"/><text x="15.9404%" y="543.50"></text></g><g><title>_int_malloc (4 samples, 0.42%)</title><rect x="16.1088%" y="517" width="0.4184%" height="15" fill="rgb(252,136,11)" fg:x="154" fg:w="4"/><text x="16.3588%" y="527.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.10%)</title><rect x="16.4226%" y="501" width="0.1046%" height="15" fill="rgb(219,138,53)" fg:x="157" fg:w="1"/><text x="16.6726%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.94%)</title><rect x="15.6904%" y="709" width="0.9414%" height="15" fill="rgb(211,51,23)" fg:x="150" fg:w="9"/><text x="15.9404%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.94%)</title><rect x="15.6904%" y="693" width="0.9414%" height="15" fill="rgb(247,221,28)" fg:x="150" fg:w="9"/><text x="15.9404%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.94%)</title><rect x="15.6904%" y="677" width="0.9414%" height="15" fill="rgb(251,222,45)" fg:x="150" fg:w="9"/><text x="15.9404%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.94%)</title><rect x="15.6904%" y="661" width="0.9414%" height="15" fill="rgb(217,162,53)" fg:x="150" fg:w="9"/><text x="15.9404%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.94%)</title><rect x="15.6904%" y="645" width="0.9414%" height="15" fill="rgb(229,93,14)" fg:x="150" fg:w="9"/><text x="15.9404%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.10%)</title><rect x="16.5272%" y="629" width="0.1046%" height="15" fill="rgb(209,67,49)" fg:x="158" fg:w="1"/><text x="16.7772%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="16.5272%" y="613" width="0.1046%" height="15" fill="rgb(213,87,29)" fg:x="158" fg:w="1"/><text x="16.7772%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="16.5272%" y="597" width="0.1046%" height="15" fill="rgb(205,151,52)" fg:x="158" fg:w="1"/><text x="16.7772%" y="607.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="16.6318%" y="597" width="0.1046%" height="15" fill="rgb(253,215,39)" fg:x="159" fg:w="1"/><text x="16.8818%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="16.6318%" y="581" width="0.1046%" height="15" fill="rgb(221,220,41)" fg:x="159" fg:w="1"/><text x="16.8818%" y="591.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="16.6318%" y="565" width="0.1046%" height="15" fill="rgb(218,133,21)" fg:x="159" fg:w="1"/><text x="16.8818%" y="575.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1 samples, 0.10%)</title><rect x="16.6318%" y="549" width="0.1046%" height="15" fill="rgb(221,193,43)" fg:x="159" fg:w="1"/><text x="16.8818%" y="559.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.10%)</title><rect x="16.6318%" y="533" width="0.1046%" height="15" fill="rgb(240,128,52)" fg:x="159" fg:w="1"/><text x="16.8818%" y="543.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.10%)</title><rect x="16.6318%" y="517" width="0.1046%" height="15" fill="rgb(253,114,12)" fg:x="159" fg:w="1"/><text x="16.8818%" y="527.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.10%)</title><rect x="16.6318%" y="501" width="0.1046%" height="15" fill="rgb(215,223,47)" fg:x="159" fg:w="1"/><text x="16.8818%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.21%)</title><rect x="16.6318%" y="709" width="0.2092%" height="15" fill="rgb(248,225,23)" fg:x="159" fg:w="2"/><text x="16.8818%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.21%)</title><rect x="16.6318%" y="693" width="0.2092%" height="15" fill="rgb(250,108,0)" fg:x="159" fg:w="2"/><text x="16.8818%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.21%)</title><rect x="16.6318%" y="677" width="0.2092%" height="15" fill="rgb(228,208,7)" fg:x="159" fg:w="2"/><text x="16.8818%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.21%)</title><rect x="16.6318%" y="661" width="0.2092%" height="15" fill="rgb(244,45,10)" fg:x="159" fg:w="2"/><text x="16.8818%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.21%)</title><rect x="16.6318%" y="645" width="0.2092%" height="15" fill="rgb(207,125,25)" fg:x="159" fg:w="2"/><text x="16.8818%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.21%)</title><rect x="16.6318%" y="629" width="0.2092%" height="15" fill="rgb(210,195,18)" fg:x="159" fg:w="2"/><text x="16.8818%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="16.6318%" y="613" width="0.2092%" height="15" fill="rgb(249,80,12)" fg:x="159" fg:w="2"/><text x="16.8818%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.10%)</title><rect x="16.7364%" y="597" width="0.1046%" height="15" fill="rgb(221,65,9)" fg:x="160" fg:w="1"/><text x="16.9864%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.10%)</title><rect x="16.7364%" y="581" width="0.1046%" height="15" fill="rgb(235,49,36)" fg:x="160" fg:w="1"/><text x="16.9864%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.10%)</title><rect x="16.7364%" y="565" width="0.1046%" height="15" fill="rgb(225,32,20)" fg:x="160" fg:w="1"/><text x="16.9864%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.10%)</title><rect x="16.7364%" y="549" width="0.1046%" height="15" fill="rgb(215,141,46)" fg:x="160" fg:w="1"/><text x="16.9864%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.10%)</title><rect x="16.7364%" y="533" width="0.1046%" height="15" fill="rgb(250,160,47)" fg:x="160" fg:w="1"/><text x="16.9864%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.10%)</title><rect x="16.7364%" y="517" width="0.1046%" height="15" fill="rgb(216,222,40)" fg:x="160" fg:w="1"/><text x="16.9864%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.10%)</title><rect x="16.7364%" y="501" width="0.1046%" height="15" fill="rgb(234,217,39)" fg:x="160" fg:w="1"/><text x="16.9864%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.10%)</title><rect x="16.7364%" y="485" width="0.1046%" height="15" fill="rgb(207,178,40)" fg:x="160" fg:w="1"/><text x="16.9864%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.10%)</title><rect x="16.7364%" y="469" width="0.1046%" height="15" fill="rgb(221,136,13)" fg:x="160" fg:w="1"/><text x="16.9864%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="16.7364%" y="453" width="0.1046%" height="15" fill="rgb(249,199,10)" fg:x="160" fg:w="1"/><text x="16.9864%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.10%)</title><rect x="16.7364%" y="437" width="0.1046%" height="15" fill="rgb(249,222,13)" fg:x="160" fg:w="1"/><text x="16.9864%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.10%)</title><rect x="16.7364%" y="421" width="0.1046%" height="15" fill="rgb(244,185,38)" fg:x="160" fg:w="1"/><text x="16.9864%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.10%)</title><rect x="16.7364%" y="405" width="0.1046%" height="15" fill="rgb(236,202,9)" fg:x="160" fg:w="1"/><text x="16.9864%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.10%)</title><rect x="16.7364%" y="389" width="0.1046%" height="15" fill="rgb(250,229,37)" fg:x="160" fg:w="1"/><text x="16.9864%" y="399.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.10%)</title><rect x="16.7364%" y="373" width="0.1046%" height="15" fill="rgb(206,174,23)" fg:x="160" fg:w="1"/><text x="16.9864%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="16.7364%" y="357" width="0.1046%" height="15" fill="rgb(211,33,43)" fg:x="160" fg:w="1"/><text x="16.9864%" y="367.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="16.7364%" y="341" width="0.1046%" height="15" fill="rgb(245,58,50)" fg:x="160" fg:w="1"/><text x="16.9864%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="16.7364%" y="325" width="0.1046%" height="15" fill="rgb(244,68,36)" fg:x="160" fg:w="1"/><text x="16.9864%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="16.7364%" y="309" width="0.1046%" height="15" fill="rgb(232,229,15)" fg:x="160" fg:w="1"/><text x="16.9864%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="16.7364%" y="293" width="0.1046%" height="15" fill="rgb(254,30,23)" fg:x="160" fg:w="1"/><text x="16.9864%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="16.7364%" y="277" width="0.1046%" height="15" fill="rgb(235,160,14)" fg:x="160" fg:w="1"/><text x="16.9864%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="16.7364%" y="261" width="0.1046%" height="15" fill="rgb(212,155,44)" fg:x="160" fg:w="1"/><text x="16.9864%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="16.7364%" y="245" width="0.1046%" height="15" fill="rgb(226,2,50)" fg:x="160" fg:w="1"/><text x="16.9864%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="16.7364%" y="229" width="0.1046%" height="15" fill="rgb(234,177,6)" fg:x="160" fg:w="1"/><text x="16.9864%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="16.7364%" y="213" width="0.1046%" height="15" fill="rgb(217,24,9)" fg:x="160" fg:w="1"/><text x="16.9864%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="16.7364%" y="197" width="0.1046%" height="15" fill="rgb(220,13,46)" fg:x="160" fg:w="1"/><text x="16.9864%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="16.7364%" y="181" width="0.1046%" height="15" fill="rgb(239,221,27)" fg:x="160" fg:w="1"/><text x="16.9864%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="16.7364%" y="165" width="0.1046%" height="15" fill="rgb(222,198,25)" fg:x="160" fg:w="1"/><text x="16.9864%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (17 samples, 1.78%)</title><rect x="16.8410%" y="709" width="1.7782%" height="15" fill="rgb(211,99,13)" fg:x="161" fg:w="17"/><text x="17.0910%" y="719.50">c..</text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.78%)</title><rect x="16.8410%" y="693" width="1.7782%" height="15" fill="rgb(232,111,31)" fg:x="161" fg:w="17"/><text x="17.0910%" y="703.50">&lt;..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (17 samples, 1.78%)</title><rect x="16.8410%" y="677" width="1.7782%" height="15" fill="rgb(245,82,37)" fg:x="161" fg:w="17"/><text x="17.0910%" y="687.50">s..</text></g><g><title>syscall (17 samples, 1.78%)</title><rect x="16.8410%" y="661" width="1.7782%" height="15" fill="rgb(227,149,46)" fg:x="161" fg:w="17"/><text x="17.0910%" y="671.50">s..</text></g><g><title>[unknown] (17 samples, 1.78%)</title><rect x="16.8410%" y="645" width="1.7782%" height="15" fill="rgb(218,36,50)" fg:x="161" fg:w="17"/><text x="17.0910%" y="655.50">[..</text></g><g><title>[unknown] (17 samples, 1.78%)</title><rect x="16.8410%" y="629" width="1.7782%" height="15" fill="rgb(226,80,48)" fg:x="161" fg:w="17"/><text x="17.0910%" y="639.50">[..</text></g><g><title>[unknown] (17 samples, 1.78%)</title><rect x="16.8410%" y="613" width="1.7782%" height="15" fill="rgb(238,224,15)" fg:x="161" fg:w="17"/><text x="17.0910%" y="623.50">[..</text></g><g><title>[unknown] (17 samples, 1.78%)</title><rect x="16.8410%" y="597" width="1.7782%" height="15" fill="rgb(241,136,10)" fg:x="161" fg:w="17"/><text x="17.0910%" y="607.50">[..</text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="16.9456%" y="581" width="1.6736%" height="15" fill="rgb(208,32,45)" fg:x="162" fg:w="16"/><text x="17.1956%" y="591.50"></text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="16.9456%" y="565" width="1.6736%" height="15" fill="rgb(207,135,9)" fg:x="162" fg:w="16"/><text x="17.1956%" y="575.50"></text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="16.9456%" y="549" width="1.6736%" height="15" fill="rgb(206,86,44)" fg:x="162" fg:w="16"/><text x="17.1956%" y="559.50"></text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="16.9456%" y="533" width="1.6736%" height="15" fill="rgb(245,177,15)" fg:x="162" fg:w="16"/><text x="17.1956%" y="543.50"></text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="16.9456%" y="517" width="1.6736%" height="15" fill="rgb(206,64,50)" fg:x="162" fg:w="16"/><text x="17.1956%" y="527.50"></text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="16.9456%" y="501" width="1.6736%" height="15" fill="rgb(234,36,40)" fg:x="162" fg:w="16"/><text x="17.1956%" y="511.50"></text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="16.9456%" y="485" width="1.6736%" height="15" fill="rgb(213,64,8)" fg:x="162" fg:w="16"/><text x="17.1956%" y="495.50"></text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="16.9456%" y="469" width="1.6736%" height="15" fill="rgb(210,75,36)" fg:x="162" fg:w="16"/><text x="17.1956%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="18.6192%" y="565" width="0.6276%" height="15" fill="rgb(229,88,21)" fg:x="178" fg:w="6"/><text x="18.8692%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="18.6192%" y="549" width="0.6276%" height="15" fill="rgb(252,204,47)" fg:x="178" fg:w="6"/><text x="18.8692%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="18.6192%" y="533" width="0.6276%" height="15" fill="rgb(208,77,27)" fg:x="178" fg:w="6"/><text x="18.8692%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="18.6192%" y="517" width="0.6276%" height="15" fill="rgb(221,76,26)" fg:x="178" fg:w="6"/><text x="18.8692%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="18.6192%" y="501" width="0.6276%" height="15" fill="rgb(225,139,18)" fg:x="178" fg:w="6"/><text x="18.8692%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="18.6192%" y="485" width="0.6276%" height="15" fill="rgb(230,137,11)" fg:x="178" fg:w="6"/><text x="18.8692%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="18.6192%" y="469" width="0.6276%" height="15" fill="rgb(212,28,1)" fg:x="178" fg:w="6"/><text x="18.8692%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="18.6192%" y="453" width="0.6276%" height="15" fill="rgb(248,164,17)" fg:x="178" fg:w="6"/><text x="18.8692%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="18.6192%" y="437" width="0.6276%" height="15" fill="rgb(222,171,42)" fg:x="178" fg:w="6"/><text x="18.8692%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="18.6192%" y="421" width="0.6276%" height="15" fill="rgb(243,84,45)" fg:x="178" fg:w="6"/><text x="18.8692%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="18.7238%" y="405" width="0.5230%" height="15" fill="rgb(252,49,23)" fg:x="179" fg:w="5"/><text x="18.9738%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="18.7238%" y="389" width="0.5230%" height="15" fill="rgb(215,19,7)" fg:x="179" fg:w="5"/><text x="18.9738%" y="399.50"></text></g><g><title>malloc_consolidate (3 samples, 0.31%)</title><rect x="19.5607%" y="549" width="0.3138%" height="15" fill="rgb(238,81,41)" fg:x="187" fg:w="3"/><text x="19.8107%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 1.36%)</title><rect x="18.6192%" y="661" width="1.3598%" height="15" fill="rgb(210,199,37)" fg:x="178" fg:w="13"/><text x="18.8692%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 1.36%)</title><rect x="18.6192%" y="645" width="1.3598%" height="15" fill="rgb(244,192,49)" fg:x="178" fg:w="13"/><text x="18.8692%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 1.36%)</title><rect x="18.6192%" y="629" width="1.3598%" height="15" fill="rgb(226,211,11)" fg:x="178" fg:w="13"/><text x="18.8692%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 1.36%)</title><rect x="18.6192%" y="613" width="1.3598%" height="15" fill="rgb(236,162,54)" fg:x="178" fg:w="13"/><text x="18.8692%" y="623.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 1.36%)</title><rect x="18.6192%" y="597" width="1.3598%" height="15" fill="rgb(220,229,9)" fg:x="178" fg:w="13"/><text x="18.8692%" y="607.50"></text></g><g><title>__GI___libc_malloc (13 samples, 1.36%)</title><rect x="18.6192%" y="581" width="1.3598%" height="15" fill="rgb(250,87,22)" fg:x="178" fg:w="13"/><text x="18.8692%" y="591.50"></text></g><g><title>_int_malloc (7 samples, 0.73%)</title><rect x="19.2469%" y="565" width="0.7322%" height="15" fill="rgb(239,43,17)" fg:x="184" fg:w="7"/><text x="19.4969%" y="575.50"></text></g><g><title>sysmalloc (1 samples, 0.10%)</title><rect x="19.8745%" y="549" width="0.1046%" height="15" fill="rgb(231,177,25)" fg:x="190" fg:w="1"/><text x="20.1245%" y="559.50"></text></g><g><title>__GI___mprotect (1 samples, 0.10%)</title><rect x="19.8745%" y="533" width="0.1046%" height="15" fill="rgb(219,179,1)" fg:x="190" fg:w="1"/><text x="20.1245%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="19.8745%" y="517" width="0.1046%" height="15" fill="rgb(238,219,53)" fg:x="190" fg:w="1"/><text x="20.1245%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="19.8745%" y="501" width="0.1046%" height="15" fill="rgb(232,167,36)" fg:x="190" fg:w="1"/><text x="20.1245%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="19.8745%" y="485" width="0.1046%" height="15" fill="rgb(244,19,51)" fg:x="190" fg:w="1"/><text x="20.1245%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="19.8745%" y="469" width="0.1046%" height="15" fill="rgb(224,6,22)" fg:x="190" fg:w="1"/><text x="20.1245%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="19.8745%" y="453" width="0.1046%" height="15" fill="rgb(224,145,5)" fg:x="190" fg:w="1"/><text x="20.1245%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="19.8745%" y="437" width="0.1046%" height="15" fill="rgb(234,130,49)" fg:x="190" fg:w="1"/><text x="20.1245%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.10%)</title><rect x="19.9791%" y="661" width="0.1046%" height="15" fill="rgb(254,6,2)" fg:x="191" fg:w="1"/><text x="20.2291%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.10%)</title><rect x="19.9791%" y="645" width="0.1046%" height="15" fill="rgb(208,96,46)" fg:x="191" fg:w="1"/><text x="20.2291%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.10%)</title><rect x="20.0837%" y="661" width="0.1046%" height="15" fill="rgb(239,3,39)" fg:x="192" fg:w="1"/><text x="20.3337%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.10%)</title><rect x="20.0837%" y="645" width="0.1046%" height="15" fill="rgb(233,210,1)" fg:x="192" fg:w="1"/><text x="20.3337%" y="655.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (6 samples, 0.63%)</title><rect x="20.1883%" y="661" width="0.6276%" height="15" fill="rgb(244,137,37)" fg:x="193" fg:w="6"/><text x="20.4383%" y="671.50"></text></g><g><title>__GI___sched_yield (6 samples, 0.63%)</title><rect x="20.1883%" y="645" width="0.6276%" height="15" fill="rgb(240,136,2)" fg:x="193" fg:w="6"/><text x="20.4383%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="629" width="0.6276%" height="15" fill="rgb(239,18,37)" fg:x="193" fg:w="6"/><text x="20.4383%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="613" width="0.6276%" height="15" fill="rgb(218,185,22)" fg:x="193" fg:w="6"/><text x="20.4383%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="597" width="0.6276%" height="15" fill="rgb(225,218,4)" fg:x="193" fg:w="6"/><text x="20.4383%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="581" width="0.6276%" height="15" fill="rgb(230,182,32)" fg:x="193" fg:w="6"/><text x="20.4383%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="565" width="0.6276%" height="15" fill="rgb(242,56,43)" fg:x="193" fg:w="6"/><text x="20.4383%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="549" width="0.6276%" height="15" fill="rgb(233,99,24)" fg:x="193" fg:w="6"/><text x="20.4383%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="533" width="0.6276%" height="15" fill="rgb(234,209,42)" fg:x="193" fg:w="6"/><text x="20.4383%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="517" width="0.6276%" height="15" fill="rgb(227,7,12)" fg:x="193" fg:w="6"/><text x="20.4383%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="501" width="0.6276%" height="15" fill="rgb(245,203,43)" fg:x="193" fg:w="6"/><text x="20.4383%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="485" width="0.6276%" height="15" fill="rgb(238,205,33)" fg:x="193" fg:w="6"/><text x="20.4383%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="469" width="0.6276%" height="15" fill="rgb(231,56,7)" fg:x="193" fg:w="6"/><text x="20.4383%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="20.1883%" y="453" width="0.6276%" height="15" fill="rgb(244,186,29)" fg:x="193" fg:w="6"/><text x="20.4383%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.10%)</title><rect x="20.8159%" y="645" width="0.1046%" height="15" fill="rgb(234,111,31)" fg:x="199" fg:w="1"/><text x="21.0659%" y="655.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.10%)</title><rect x="20.8159%" y="629" width="0.1046%" height="15" fill="rgb(241,149,10)" fg:x="199" fg:w="1"/><text x="21.0659%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.10%)</title><rect x="20.8159%" y="613" width="0.1046%" height="15" fill="rgb(249,206,44)" fg:x="199" fg:w="1"/><text x="21.0659%" y="623.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (23 samples, 2.41%)</title><rect x="18.6192%" y="709" width="2.4059%" height="15" fill="rgb(251,153,30)" fg:x="178" fg:w="23"/><text x="18.8692%" y="719.50">cr..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (23 samples, 2.41%)</title><rect x="18.6192%" y="693" width="2.4059%" height="15" fill="rgb(239,152,38)" fg:x="178" fg:w="23"/><text x="18.8692%" y="703.50">cr..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (23 samples, 2.41%)</title><rect x="18.6192%" y="677" width="2.4059%" height="15" fill="rgb(249,139,47)" fg:x="178" fg:w="23"/><text x="18.8692%" y="687.50">cr..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (2 samples, 0.21%)</title><rect x="20.8159%" y="661" width="0.2092%" height="15" fill="rgb(244,64,35)" fg:x="199" fg:w="2"/><text x="21.0659%" y="671.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.10%)</title><rect x="20.9205%" y="645" width="0.1046%" height="15" fill="rgb(216,46,15)" fg:x="200" fg:w="1"/><text x="21.1705%" y="655.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.10%)</title><rect x="20.9205%" y="629" width="0.1046%" height="15" fill="rgb(250,74,19)" fg:x="200" fg:w="1"/><text x="21.1705%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.10%)</title><rect x="20.9205%" y="613" width="0.1046%" height="15" fill="rgb(249,42,33)" fg:x="200" fg:w="1"/><text x="21.1705%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.21%)</title><rect x="21.1297%" y="693" width="0.2092%" height="15" fill="rgb(242,149,17)" fg:x="202" fg:w="2"/><text x="21.3797%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.21%)</title><rect x="21.1297%" y="677" width="0.2092%" height="15" fill="rgb(244,29,21)" fg:x="202" fg:w="2"/><text x="21.3797%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="21.1297%" y="661" width="0.2092%" height="15" fill="rgb(220,130,37)" fg:x="202" fg:w="2"/><text x="21.3797%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.21%)</title><rect x="21.1297%" y="645" width="0.2092%" height="15" fill="rgb(211,67,2)" fg:x="202" fg:w="2"/><text x="21.3797%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.21%)</title><rect x="21.1297%" y="629" width="0.2092%" height="15" fill="rgb(235,68,52)" fg:x="202" fg:w="2"/><text x="21.3797%" y="639.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="21.1297%" y="613" width="0.2092%" height="15" fill="rgb(246,142,3)" fg:x="202" fg:w="2"/><text x="21.3797%" y="623.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="21.3389%" y="581" width="0.1046%" height="15" fill="rgb(241,25,7)" fg:x="204" fg:w="1"/><text x="21.5889%" y="591.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.10%)</title><rect x="21.4435%" y="581" width="0.1046%" height="15" fill="rgb(242,119,39)" fg:x="205" fg:w="1"/><text x="21.6935%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.10%)</title><rect x="21.4435%" y="565" width="0.1046%" height="15" fill="rgb(241,98,45)" fg:x="205" fg:w="1"/><text x="21.6935%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (3 samples, 0.31%)</title><rect x="21.3389%" y="693" width="0.3138%" height="15" fill="rgb(254,28,30)" fg:x="204" fg:w="3"/><text x="21.5889%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.31%)</title><rect x="21.3389%" y="677" width="0.3138%" height="15" fill="rgb(241,142,54)" fg:x="204" fg:w="3"/><text x="21.5889%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.31%)</title><rect x="21.3389%" y="661" width="0.3138%" height="15" fill="rgb(222,85,15)" fg:x="204" fg:w="3"/><text x="21.5889%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.31%)</title><rect x="21.3389%" y="645" width="0.3138%" height="15" fill="rgb(210,85,47)" fg:x="204" fg:w="3"/><text x="21.5889%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.31%)</title><rect x="21.3389%" y="629" width="0.3138%" height="15" fill="rgb(224,206,25)" fg:x="204" fg:w="3"/><text x="21.5889%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.31%)</title><rect x="21.3389%" y="613" width="0.3138%" height="15" fill="rgb(243,201,19)" fg:x="204" fg:w="3"/><text x="21.5889%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.31%)</title><rect x="21.3389%" y="597" width="0.3138%" height="15" fill="rgb(236,59,4)" fg:x="204" fg:w="3"/><text x="21.5889%" y="607.50"></text></g><g><title>__rust_dealloc (1 samples, 0.10%)</title><rect x="21.5481%" y="581" width="0.1046%" height="15" fill="rgb(254,179,45)" fg:x="206" fg:w="1"/><text x="21.7981%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (63 samples, 6.59%)</title><rect x="23.0126%" y="405" width="6.5900%" height="15" fill="rgb(226,14,10)" fg:x="220" fg:w="63"/><text x="23.2626%" y="415.50">&lt;core::it..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (57 samples, 5.96%)</title><rect x="23.6402%" y="389" width="5.9623%" height="15" fill="rgb(244,27,41)" fg:x="226" fg:w="57"/><text x="23.8902%" y="399.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (57 samples, 5.96%)</title><rect x="23.6402%" y="373" width="5.9623%" height="15" fill="rgb(235,35,32)" fg:x="226" fg:w="57"/><text x="23.8902%" y="383.50">&lt;alloc::..</text></g><g><title>hex::val (45 samples, 4.71%)</title><rect x="24.8954%" y="357" width="4.7071%" height="15" fill="rgb(218,68,31)" fg:x="238" fg:w="45"/><text x="25.1454%" y="367.50">hex::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (67 samples, 7.01%)</title><rect x="23.0126%" y="437" width="7.0084%" height="15" fill="rgb(207,120,37)" fg:x="220" fg:w="67"/><text x="23.2626%" y="447.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (67 samples, 7.01%)</title><rect x="23.0126%" y="421" width="7.0084%" height="15" fill="rgb(227,98,0)" fg:x="220" fg:w="67"/><text x="23.2626%" y="431.50">core::ite..</text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.42%)</title><rect x="29.6025%" y="405" width="0.4184%" height="15" fill="rgb(207,7,3)" fg:x="283" fg:w="4"/><text x="29.8525%" y="415.50"></text></g><g><title>core::cmp::min (2 samples, 0.21%)</title><rect x="29.8117%" y="389" width="0.2092%" height="15" fill="rgb(206,98,19)" fg:x="285" fg:w="2"/><text x="30.0617%" y="399.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.21%)</title><rect x="29.8117%" y="373" width="0.2092%" height="15" fill="rgb(217,5,26)" fg:x="285" fg:w="2"/><text x="30.0617%" y="383.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.21%)</title><rect x="29.8117%" y="357" width="0.2092%" height="15" fill="rgb(235,190,38)" fg:x="285" fg:w="2"/><text x="30.0617%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (69 samples, 7.22%)</title><rect x="22.9079%" y="453" width="7.2176%" height="15" fill="rgb(247,86,24)" fg:x="219" fg:w="69"/><text x="23.1579%" y="463.50">&lt;core::ite..</text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="30.0209%" y="437" width="0.1046%" height="15" fill="rgb(205,101,16)" fg:x="287" fg:w="1"/><text x="30.2709%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="30.0209%" y="421" width="0.1046%" height="15" fill="rgb(246,168,33)" fg:x="287" fg:w="1"/><text x="30.2709%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="30.0209%" y="405" width="0.1046%" height="15" fill="rgb(231,114,1)" fg:x="287" fg:w="1"/><text x="30.2709%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="30.0209%" y="389" width="0.1046%" height="15" fill="rgb(207,184,53)" fg:x="287" fg:w="1"/><text x="30.2709%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="30.0209%" y="373" width="0.1046%" height="15" fill="rgb(224,95,51)" fg:x="287" fg:w="1"/><text x="30.2709%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="30.0209%" y="357" width="0.1046%" height="15" fill="rgb(212,188,45)" fg:x="287" fg:w="1"/><text x="30.2709%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 8.05%)</title><rect x="22.6987%" y="501" width="8.0544%" height="15" fill="rgb(223,154,38)" fg:x="217" fg:w="77"/><text x="22.9487%" y="511.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (77 samples, 8.05%)</title><rect x="22.6987%" y="485" width="8.0544%" height="15" fill="rgb(251,22,52)" fg:x="217" fg:w="77"/><text x="22.9487%" y="495.50">core::iter:..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (77 samples, 8.05%)</title><rect x="22.6987%" y="469" width="8.0544%" height="15" fill="rgb(229,209,22)" fg:x="217" fg:w="77"/><text x="22.9487%" y="479.50">&lt;core::iter..</text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="30.1255%" y="453" width="0.6276%" height="15" fill="rgb(234,138,34)" fg:x="288" fg:w="6"/><text x="30.3755%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="30.1255%" y="437" width="0.6276%" height="15" fill="rgb(212,95,11)" fg:x="288" fg:w="6"/><text x="30.3755%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="30.1255%" y="421" width="0.6276%" height="15" fill="rgb(240,179,47)" fg:x="288" fg:w="6"/><text x="30.3755%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="30.1255%" y="405" width="0.6276%" height="15" fill="rgb(240,163,11)" fg:x="288" fg:w="6"/><text x="30.3755%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="30.1255%" y="389" width="0.6276%" height="15" fill="rgb(236,37,12)" fg:x="288" fg:w="6"/><text x="30.3755%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="30.1255%" y="373" width="0.6276%" height="15" fill="rgb(232,164,16)" fg:x="288" fg:w="6"/><text x="30.3755%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="30.1255%" y="357" width="0.6276%" height="15" fill="rgb(244,205,15)" fg:x="288" fg:w="6"/><text x="30.3755%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="30.1255%" y="341" width="0.6276%" height="15" fill="rgb(223,117,47)" fg:x="288" fg:w="6"/><text x="30.3755%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="30.1255%" y="325" width="0.6276%" height="15" fill="rgb(244,107,35)" fg:x="288" fg:w="6"/><text x="30.3755%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="30.2301%" y="309" width="0.5230%" height="15" fill="rgb(205,140,8)" fg:x="289" fg:w="5"/><text x="30.4801%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="30.2301%" y="293" width="0.5230%" height="15" fill="rgb(228,84,46)" fg:x="289" fg:w="5"/><text x="30.4801%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="30.2301%" y="277" width="0.5230%" height="15" fill="rgb(254,188,9)" fg:x="289" fg:w="5"/><text x="30.4801%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="30.2301%" y="261" width="0.5230%" height="15" fill="rgb(206,112,54)" fg:x="289" fg:w="5"/><text x="30.4801%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.21%)</title><rect x="30.7531%" y="501" width="0.2092%" height="15" fill="rgb(216,84,49)" fg:x="294" fg:w="2"/><text x="31.0031%" y="511.50"></text></g><g><title>__GI___libc_realloc (9 samples, 0.94%)</title><rect x="31.0669%" y="373" width="0.9414%" height="15" fill="rgb(214,194,35)" fg:x="297" fg:w="9"/><text x="31.3169%" y="383.50"></text></g><g><title>_int_realloc (3 samples, 0.31%)</title><rect x="31.6946%" y="357" width="0.3138%" height="15" fill="rgb(249,28,3)" fg:x="303" fg:w="3"/><text x="31.9446%" y="367.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="31.9038%" y="341" width="0.1046%" height="15" fill="rgb(222,56,52)" fg:x="305" fg:w="1"/><text x="32.1538%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 1.05%)</title><rect x="31.0669%" y="421" width="1.0460%" height="15" fill="rgb(245,217,50)" fg:x="297" fg:w="10"/><text x="31.3169%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 1.05%)</title><rect x="31.0669%" y="405" width="1.0460%" height="15" fill="rgb(213,201,24)" fg:x="297" fg:w="10"/><text x="31.3169%" y="415.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 1.05%)</title><rect x="31.0669%" y="389" width="1.0460%" height="15" fill="rgb(248,116,28)" fg:x="297" fg:w="10"/><text x="31.3169%" y="399.50"></text></g><g><title>__rdl_realloc (1 samples, 0.10%)</title><rect x="32.0084%" y="373" width="0.1046%" height="15" fill="rgb(219,72,43)" fg:x="306" fg:w="1"/><text x="32.2584%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.10%)</title><rect x="32.0084%" y="357" width="0.1046%" height="15" fill="rgb(209,138,14)" fg:x="306" fg:w="1"/><text x="32.2584%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 1.26%)</title><rect x="30.9623%" y="437" width="1.2552%" height="15" fill="rgb(222,18,33)" fg:x="296" fg:w="12"/><text x="31.2123%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.10%)</title><rect x="32.1130%" y="421" width="0.1046%" height="15" fill="rgb(213,199,7)" fg:x="307" fg:w="1"/><text x="32.3630%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 1.36%)</title><rect x="30.9623%" y="501" width="1.3598%" height="15" fill="rgb(250,110,10)" fg:x="296" fg:w="13"/><text x="31.2123%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 1.36%)</title><rect x="30.9623%" y="485" width="1.3598%" height="15" fill="rgb(248,123,6)" fg:x="296" fg:w="13"/><text x="31.2123%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 1.36%)</title><rect x="30.9623%" y="469" width="1.3598%" height="15" fill="rgb(206,91,31)" fg:x="296" fg:w="13"/><text x="31.2123%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 1.36%)</title><rect x="30.9623%" y="453" width="1.3598%" height="15" fill="rgb(211,154,13)" fg:x="296" fg:w="13"/><text x="31.2123%" y="463.50"></text></g><g><title>core::cmp::max (1 samples, 0.10%)</title><rect x="32.2176%" y="437" width="0.1046%" height="15" fill="rgb(225,148,7)" fg:x="308" fg:w="1"/><text x="32.4676%" y="447.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.10%)</title><rect x="32.2176%" y="421" width="0.1046%" height="15" fill="rgb(220,160,43)" fg:x="308" fg:w="1"/><text x="32.4676%" y="431.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.10%)</title><rect x="32.2176%" y="405" width="0.1046%" height="15" fill="rgb(213,52,39)" fg:x="308" fg:w="1"/><text x="32.4676%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.10%)</title><rect x="32.3222%" y="501" width="0.1046%" height="15" fill="rgb(243,137,7)" fg:x="309" fg:w="1"/><text x="32.5722%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (109 samples, 11.40%)</title><rect x="21.6527%" y="533" width="11.4017%" height="15" fill="rgb(230,79,13)" fg:x="207" fg:w="109"/><text x="21.9027%" y="543.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (109 samples, 11.40%)</title><rect x="21.6527%" y="517" width="11.4017%" height="15" fill="rgb(247,105,23)" fg:x="207" fg:w="109"/><text x="21.9027%" y="527.50">alloc::vec::Vec&lt;T..</text></g><g><title>core::ptr::write (6 samples, 0.63%)</title><rect x="32.4268%" y="501" width="0.6276%" height="15" fill="rgb(223,179,41)" fg:x="310" fg:w="6"/><text x="32.6768%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.31%)</title><rect x="33.0544%" y="533" width="0.3138%" height="15" fill="rgb(218,9,34)" fg:x="316" fg:w="3"/><text x="33.3044%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.31%)</title><rect x="33.0544%" y="517" width="0.3138%" height="15" fill="rgb(222,106,8)" fg:x="316" fg:w="3"/><text x="33.3044%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.31%)</title><rect x="33.0544%" y="501" width="0.3138%" height="15" fill="rgb(211,220,0)" fg:x="316" fg:w="3"/><text x="33.3044%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.31%)</title><rect x="33.0544%" y="485" width="0.3138%" height="15" fill="rgb(229,52,16)" fg:x="316" fg:w="3"/><text x="33.3044%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.31%)</title><rect x="33.0544%" y="469" width="0.3138%" height="15" fill="rgb(212,155,18)" fg:x="316" fg:w="3"/><text x="33.3044%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.31%)</title><rect x="33.0544%" y="453" width="0.3138%" height="15" fill="rgb(242,21,14)" fg:x="316" fg:w="3"/><text x="33.3044%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (3 samples, 0.31%)</title><rect x="33.0544%" y="437" width="0.3138%" height="15" fill="rgb(222,19,48)" fg:x="316" fg:w="3"/><text x="33.3044%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3 samples, 0.31%)</title><rect x="33.0544%" y="421" width="0.3138%" height="15" fill="rgb(232,45,27)" fg:x="316" fg:w="3"/><text x="33.3044%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (3 samples, 0.31%)</title><rect x="33.0544%" y="405" width="0.3138%" height="15" fill="rgb(249,103,42)" fg:x="316" fg:w="3"/><text x="33.3044%" y="415.50"></text></g><g><title>hex::val (3 samples, 0.31%)</title><rect x="33.0544%" y="389" width="0.3138%" height="15" fill="rgb(246,81,33)" fg:x="316" fg:w="3"/><text x="33.3044%" y="399.50"></text></g><g><title>__GI___libc_malloc (11 samples, 1.15%)</title><rect x="33.3682%" y="421" width="1.1506%" height="15" fill="rgb(252,33,42)" fg:x="319" fg:w="11"/><text x="33.6182%" y="431.50"></text></g><g><title>_int_malloc (8 samples, 0.84%)</title><rect x="33.6820%" y="405" width="0.8368%" height="15" fill="rgb(209,212,41)" fg:x="322" fg:w="8"/><text x="33.9320%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="34.5188%" y="421" width="0.1046%" height="15" fill="rgb(207,154,6)" fg:x="330" fg:w="1"/><text x="34.7688%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.10%)</title><rect x="34.5188%" y="405" width="0.1046%" height="15" fill="rgb(223,64,47)" fg:x="330" fg:w="1"/><text x="34.7688%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 1.36%)</title><rect x="33.3682%" y="533" width="1.3598%" height="15" fill="rgb(211,161,38)" fg:x="319" fg:w="13"/><text x="33.6182%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 1.36%)</title><rect x="33.3682%" y="517" width="1.3598%" height="15" fill="rgb(219,138,40)" fg:x="319" fg:w="13"/><text x="33.6182%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 1.36%)</title><rect x="33.3682%" y="501" width="1.3598%" height="15" fill="rgb(241,228,46)" fg:x="319" fg:w="13"/><text x="33.6182%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 1.36%)</title><rect x="33.3682%" y="485" width="1.3598%" height="15" fill="rgb(223,209,38)" fg:x="319" fg:w="13"/><text x="33.6182%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 1.36%)</title><rect x="33.3682%" y="469" width="1.3598%" height="15" fill="rgb(236,164,45)" fg:x="319" fg:w="13"/><text x="33.6182%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 1.36%)</title><rect x="33.3682%" y="453" width="1.3598%" height="15" fill="rgb(231,15,5)" fg:x="319" fg:w="13"/><text x="33.6182%" y="463.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 1.36%)</title><rect x="33.3682%" y="437" width="1.3598%" height="15" fill="rgb(252,35,15)" fg:x="319" fg:w="13"/><text x="33.6182%" y="447.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="34.6234%" y="421" width="0.1046%" height="15" fill="rgb(248,181,18)" fg:x="331" fg:w="1"/><text x="34.8734%" y="431.50"></text></g><g><title>hex::decode (126 samples, 13.18%)</title><rect x="21.6527%" y="693" width="13.1799%" height="15" fill="rgb(233,39,42)" fg:x="207" fg:w="126"/><text x="21.9027%" y="703.50">hex::decode</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (126 samples, 13.18%)</title><rect x="21.6527%" y="677" width="13.1799%" height="15" fill="rgb(238,110,33)" fg:x="207" fg:w="126"/><text x="21.9027%" y="687.50">&lt;alloc::vec::Vec&lt;u8&gt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (126 samples, 13.18%)</title><rect x="21.6527%" y="661" width="13.1799%" height="15" fill="rgb(233,195,10)" fg:x="207" fg:w="126"/><text x="21.9027%" y="671.50">core::iter::traits::..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (126 samples, 13.18%)</title><rect x="21.6527%" y="645" width="13.1799%" height="15" fill="rgb(254,105,3)" fg:x="207" fg:w="126"/><text x="21.9027%" y="655.50">&lt;core::result::Resul..</text></g><g><title>core::iter::adapters::try_process (126 samples, 13.18%)</title><rect x="21.6527%" y="629" width="13.1799%" height="15" fill="rgb(221,225,9)" fg:x="207" fg:w="126"/><text x="21.9027%" y="639.50">core::iter::adapters..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (126 samples, 13.18%)</title><rect x="21.6527%" y="613" width="13.1799%" height="15" fill="rgb(224,227,45)" fg:x="207" fg:w="126"/><text x="21.9027%" y="623.50">&lt;core::result::Resul..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (126 samples, 13.18%)</title><rect x="21.6527%" y="597" width="13.1799%" height="15" fill="rgb(229,198,43)" fg:x="207" fg:w="126"/><text x="21.9027%" y="607.50">core::iter::traits::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (126 samples, 13.18%)</title><rect x="21.6527%" y="581" width="13.1799%" height="15" fill="rgb(206,209,35)" fg:x="207" fg:w="126"/><text x="21.9027%" y="591.50">&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (126 samples, 13.18%)</title><rect x="21.6527%" y="565" width="13.1799%" height="15" fill="rgb(245,195,53)" fg:x="207" fg:w="126"/><text x="21.9027%" y="575.50">&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (126 samples, 13.18%)</title><rect x="21.6527%" y="549" width="13.1799%" height="15" fill="rgb(240,92,26)" fg:x="207" fg:w="126"/><text x="21.9027%" y="559.50">&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="34.7280%" y="533" width="0.1046%" height="15" fill="rgb(207,40,23)" fg:x="332" fg:w="1"/><text x="34.9780%" y="543.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.10%)</title><rect x="34.8326%" y="597" width="0.1046%" height="15" fill="rgb(223,111,35)" fg:x="333" fg:w="1"/><text x="35.0826%" y="607.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.10%)</title><rect x="34.8326%" y="581" width="0.1046%" height="15" fill="rgb(229,147,28)" fg:x="333" fg:w="1"/><text x="35.0826%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.10%)</title><rect x="34.8326%" y="565" width="0.1046%" height="15" fill="rgb(211,29,28)" fg:x="333" fg:w="1"/><text x="35.0826%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.10%)</title><rect x="34.8326%" y="549" width="0.1046%" height="15" fill="rgb(228,72,33)" fg:x="333" fg:w="1"/><text x="35.0826%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.10%)</title><rect x="34.8326%" y="533" width="0.1046%" height="15" fill="rgb(205,214,31)" fg:x="333" fg:w="1"/><text x="35.0826%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.21%)</title><rect x="35.0418%" y="501" width="0.2092%" height="15" fill="rgb(224,111,15)" fg:x="335" fg:w="2"/><text x="35.2918%" y="511.50"></text></g><g><title>alloc::string::String::reserve (4 samples, 0.42%)</title><rect x="34.9372%" y="597" width="0.4184%" height="15" fill="rgb(253,21,26)" fg:x="334" fg:w="4"/><text x="35.1872%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.42%)</title><rect x="34.9372%" y="581" width="0.4184%" height="15" fill="rgb(245,139,43)" fg:x="334" fg:w="4"/><text x="35.1872%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.42%)</title><rect x="34.9372%" y="565" width="0.4184%" height="15" fill="rgb(252,170,7)" fg:x="334" fg:w="4"/><text x="35.1872%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.42%)</title><rect x="34.9372%" y="549" width="0.4184%" height="15" fill="rgb(231,118,14)" fg:x="334" fg:w="4"/><text x="35.1872%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.42%)</title><rect x="34.9372%" y="533" width="0.4184%" height="15" fill="rgb(238,83,0)" fg:x="334" fg:w="4"/><text x="35.1872%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.31%)</title><rect x="35.0418%" y="517" width="0.3138%" height="15" fill="rgb(221,39,39)" fg:x="335" fg:w="3"/><text x="35.2918%" y="527.50"></text></g><g><title>__rdl_alloc (1 samples, 0.10%)</title><rect x="35.2510%" y="501" width="0.1046%" height="15" fill="rgb(222,119,46)" fg:x="337" fg:w="1"/><text x="35.5010%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="35.6695%" y="549" width="0.2092%" height="15" fill="rgb(222,165,49)" fg:x="341" fg:w="2"/><text x="35.9195%" y="559.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.21%)</title><rect x="35.6695%" y="533" width="0.2092%" height="15" fill="rgb(219,113,52)" fg:x="341" fg:w="2"/><text x="35.9195%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.42%)</title><rect x="35.8787%" y="549" width="0.4184%" height="15" fill="rgb(214,7,15)" fg:x="343" fg:w="4"/><text x="36.1287%" y="559.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (4 samples, 0.42%)</title><rect x="35.8787%" y="533" width="0.4184%" height="15" fill="rgb(235,32,4)" fg:x="343" fg:w="4"/><text x="36.1287%" y="543.50"></text></g><g><title>core::ptr::read (3 samples, 0.31%)</title><rect x="36.2971%" y="517" width="0.3138%" height="15" fill="rgb(238,90,54)" fg:x="347" fg:w="3"/><text x="36.5471%" y="527.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.36%)</title><rect x="35.4603%" y="565" width="1.3598%" height="15" fill="rgb(213,208,19)" fg:x="339" fg:w="13"/><text x="35.7103%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.52%)</title><rect x="36.2971%" y="549" width="0.5230%" height="15" fill="rgb(233,156,4)" fg:x="347" fg:w="5"/><text x="36.5471%" y="559.50"></text></g><g><title>core::mem::replace (5 samples, 0.52%)</title><rect x="36.2971%" y="533" width="0.5230%" height="15" fill="rgb(207,194,5)" fg:x="347" fg:w="5"/><text x="36.5471%" y="543.50"></text></g><g><title>core::ptr::write (2 samples, 0.21%)</title><rect x="36.6109%" y="517" width="0.2092%" height="15" fill="rgb(206,111,30)" fg:x="350" fg:w="2"/><text x="36.8609%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="37.6569%" y="501" width="0.1046%" height="15" fill="rgb(243,70,54)" fg:x="360" fg:w="1"/><text x="37.9069%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="37.6569%" y="485" width="0.1046%" height="15" fill="rgb(242,28,8)" fg:x="360" fg:w="1"/><text x="37.9069%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 1.99%)</title><rect x="36.8201%" y="517" width="1.9874%" height="15" fill="rgb(219,106,18)" fg:x="352" fg:w="19"/><text x="37.0701%" y="527.50">a..</text></g><g><title>core::ptr::write (10 samples, 1.05%)</title><rect x="37.7615%" y="501" width="1.0460%" height="15" fill="rgb(244,222,10)" fg:x="361" fg:w="10"/><text x="38.0115%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (40 samples, 4.18%)</title><rect x="34.8326%" y="645" width="4.1841%" height="15" fill="rgb(236,179,52)" fg:x="333" fg:w="40"/><text x="35.0826%" y="655.50">core:..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (40 samples, 4.18%)</title><rect x="34.8326%" y="629" width="4.1841%" height="15" fill="rgb(213,23,39)" fg:x="333" fg:w="40"/><text x="35.0826%" y="639.50">&lt;allo..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (40 samples, 4.18%)</title><rect x="34.8326%" y="613" width="4.1841%" height="15" fill="rgb(238,48,10)" fg:x="333" fg:w="40"/><text x="35.0826%" y="623.50">&lt;allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (35 samples, 3.66%)</title><rect x="35.3556%" y="597" width="3.6611%" height="15" fill="rgb(251,196,23)" fg:x="338" fg:w="35"/><text x="35.6056%" y="607.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (35 samples, 3.66%)</title><rect x="35.3556%" y="581" width="3.6611%" height="15" fill="rgb(250,152,24)" fg:x="338" fg:w="35"/><text x="35.6056%" y="591.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (21 samples, 2.20%)</title><rect x="36.8201%" y="565" width="2.1967%" height="15" fill="rgb(209,150,17)" fg:x="352" fg:w="21"/><text x="37.0701%" y="575.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (21 samples, 2.20%)</title><rect x="36.8201%" y="549" width="2.1967%" height="15" fill="rgb(234,202,34)" fg:x="352" fg:w="21"/><text x="37.0701%" y="559.50">&lt;..</text></g><g><title>alloc::string::String::push (21 samples, 2.20%)</title><rect x="36.8201%" y="533" width="2.1967%" height="15" fill="rgb(253,148,53)" fg:x="352" fg:w="21"/><text x="37.0701%" y="543.50">a..</text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (2 samples, 0.21%)</title><rect x="38.8075%" y="517" width="0.2092%" height="15" fill="rgb(218,129,16)" fg:x="371" fg:w="2"/><text x="39.0575%" y="527.50"></text></g><g><title>core::char::methods::len_utf8 (2 samples, 0.21%)</title><rect x="38.8075%" y="501" width="0.2092%" height="15" fill="rgb(216,85,19)" fg:x="371" fg:w="2"/><text x="39.0575%" y="511.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (42 samples, 4.39%)</title><rect x="34.8326%" y="677" width="4.3933%" height="15" fill="rgb(235,228,7)" fg:x="333" fg:w="42"/><text x="35.0826%" y="687.50">&lt;T as..</text></g><g><title>hex::encode_to_iter (42 samples, 4.39%)</title><rect x="34.8326%" y="661" width="4.3933%" height="15" fill="rgb(245,175,0)" fg:x="333" fg:w="42"/><text x="35.0826%" y="671.50">hex::..</text></g><g><title>hex::BytesToHexChars::new (2 samples, 0.21%)</title><rect x="39.0167%" y="645" width="0.2092%" height="15" fill="rgb(208,168,36)" fg:x="373" fg:w="2"/><text x="39.2667%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.10%)</title><rect x="39.2259%" y="597" width="0.1046%" height="15" fill="rgb(246,171,24)" fg:x="375" fg:w="1"/><text x="39.4759%" y="607.50"></text></g><g><title>__rust_dealloc (2 samples, 0.21%)</title><rect x="39.3305%" y="597" width="0.2092%" height="15" fill="rgb(215,142,24)" fg:x="376" fg:w="2"/><text x="39.5805%" y="607.50"></text></g><g><title>lab4::checksum::Checksum::update (179 samples, 18.72%)</title><rect x="21.0251%" y="709" width="18.7238%" height="15" fill="rgb(250,187,7)" fg:x="201" fg:w="179"/><text x="21.2751%" y="719.50">lab4::checksum::Checksum::upd..</text></g><g><title>hex::encode (47 samples, 4.92%)</title><rect x="34.8326%" y="693" width="4.9163%" height="15" fill="rgb(228,66,33)" fg:x="333" fg:w="47"/><text x="35.0826%" y="703.50">hex::e..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.52%)</title><rect x="39.2259%" y="677" width="0.5230%" height="15" fill="rgb(234,215,21)" fg:x="375" fg:w="5"/><text x="39.4759%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.52%)</title><rect x="39.2259%" y="661" width="0.5230%" height="15" fill="rgb(222,191,20)" fg:x="375" fg:w="5"/><text x="39.4759%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.52%)</title><rect x="39.2259%" y="645" width="0.5230%" height="15" fill="rgb(245,79,54)" fg:x="375" fg:w="5"/><text x="39.4759%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.52%)</title><rect x="39.2259%" y="629" width="0.5230%" height="15" fill="rgb(240,10,37)" fg:x="375" fg:w="5"/><text x="39.4759%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.52%)</title><rect x="39.2259%" y="613" width="0.5230%" height="15" fill="rgb(214,192,32)" fg:x="375" fg:w="5"/><text x="39.4759%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="39.5397%" y="597" width="0.2092%" height="15" fill="rgb(209,36,54)" fg:x="378" fg:w="2"/><text x="39.7897%" y="607.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.10%)</title><rect x="39.7490%" y="677" width="0.1046%" height="15" fill="rgb(220,10,11)" fg:x="380" fg:w="1"/><text x="39.9990%" y="687.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.10%)</title><rect x="39.7490%" y="661" width="0.1046%" height="15" fill="rgb(221,106,17)" fg:x="380" fg:w="1"/><text x="39.9990%" y="671.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.10%)</title><rect x="39.7490%" y="645" width="0.1046%" height="15" fill="rgb(251,142,44)" fg:x="380" fg:w="1"/><text x="39.9990%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="39.7490%" y="629" width="0.1046%" height="15" fill="rgb(238,13,15)" fg:x="380" fg:w="1"/><text x="39.9990%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="39.7490%" y="613" width="0.1046%" height="15" fill="rgb(208,107,27)" fg:x="380" fg:w="1"/><text x="39.9990%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="39.7490%" y="597" width="0.1046%" height="15" fill="rgb(205,136,37)" fg:x="380" fg:w="1"/><text x="39.9990%" y="607.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.10%)</title><rect x="39.8536%" y="517" width="0.1046%" height="15" fill="rgb(250,205,27)" fg:x="381" fg:w="1"/><text x="40.1036%" y="527.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.10%)</title><rect x="39.8536%" y="501" width="0.1046%" height="15" fill="rgb(210,80,43)" fg:x="381" fg:w="1"/><text x="40.1036%" y="511.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.10%)</title><rect x="39.9582%" y="501" width="0.1046%" height="15" fill="rgb(247,160,36)" fg:x="382" fg:w="1"/><text x="40.2082%" y="511.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.10%)</title><rect x="39.9582%" y="485" width="0.1046%" height="15" fill="rgb(234,13,49)" fg:x="382" fg:w="1"/><text x="40.2082%" y="495.50"></text></g><g><title>sha2::sha256::soft::add (2 samples, 0.21%)</title><rect x="40.0628%" y="485" width="0.2092%" height="15" fill="rgb(234,122,0)" fg:x="383" fg:w="2"/><text x="40.3128%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.21%)</title><rect x="40.0628%" y="469" width="0.2092%" height="15" fill="rgb(207,146,38)" fg:x="383" fg:w="2"/><text x="40.3128%" y="479.50"></text></g><g><title>sha2::sha256::soft::or (4 samples, 0.42%)</title><rect x="40.2720%" y="469" width="0.4184%" height="15" fill="rgb(207,177,25)" fg:x="385" fg:w="4"/><text x="40.5220%" y="479.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (11 samples, 1.15%)</title><rect x="40.0628%" y="501" width="1.1506%" height="15" fill="rgb(211,178,42)" fg:x="383" fg:w="11"/><text x="40.3128%" y="511.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (9 samples, 0.94%)</title><rect x="40.2720%" y="485" width="0.9414%" height="15" fill="rgb(230,69,54)" fg:x="385" fg:w="9"/><text x="40.5220%" y="495.50"></text></g><g><title>sha2::sha256::soft::xor (5 samples, 0.52%)</title><rect x="40.6904%" y="469" width="0.5230%" height="15" fill="rgb(214,135,41)" fg:x="389" fg:w="5"/><text x="40.9404%" y="479.50"></text></g><g><title>sha2::sha256::soft::schedule (17 samples, 1.78%)</title><rect x="39.9582%" y="517" width="1.7782%" height="15" fill="rgb(237,67,25)" fg:x="382" fg:w="17"/><text x="40.2082%" y="527.50">s..</text></g><g><title>sha2::sha256::soft::sha256msg2 (5 samples, 0.52%)</title><rect x="41.2134%" y="501" width="0.5230%" height="15" fill="rgb(222,189,50)" fg:x="394" fg:w="5"/><text x="41.4634%" y="511.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.21%)</title><rect x="41.5272%" y="485" width="0.2092%" height="15" fill="rgb(245,148,34)" fg:x="397" fg:w="2"/><text x="41.7772%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (11 samples, 1.15%)</title><rect x="43.0962%" y="501" width="1.1506%" height="15" fill="rgb(222,29,6)" fg:x="412" fg:w="11"/><text x="43.3462%" y="511.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (52 samples, 5.44%)</title><rect x="39.7490%" y="693" width="5.4393%" height="15" fill="rgb(221,189,43)" fg:x="380" fg:w="52"/><text x="39.9990%" y="703.50">&lt;D as d..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (51 samples, 5.33%)</title><rect x="39.8536%" y="677" width="5.3347%" height="15" fill="rgb(207,36,27)" fg:x="381" fg:w="51"/><text x="40.1036%" y="687.50">digest:..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (51 samples, 5.33%)</title><rect x="39.8536%" y="661" width="5.3347%" height="15" fill="rgb(217,90,24)" fg:x="381" fg:w="51"/><text x="40.1036%" y="671.50">&lt;D as d..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (51 samples, 5.33%)</title><rect x="39.8536%" y="645" width="5.3347%" height="15" fill="rgb(224,66,35)" fg:x="381" fg:w="51"/><text x="40.1036%" y="655.50">&lt;sha2::..</text></g><g><title>sha2::sha256::Engine256::finish (51 samples, 5.33%)</title><rect x="39.8536%" y="629" width="5.3347%" height="15" fill="rgb(221,13,50)" fg:x="381" fg:w="51"/><text x="40.1036%" y="639.50">sha2::s..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (51 samples, 5.33%)</title><rect x="39.8536%" y="613" width="5.3347%" height="15" fill="rgb(236,68,49)" fg:x="381" fg:w="51"/><text x="40.1036%" y="623.50">block_b..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (51 samples, 5.33%)</title><rect x="39.8536%" y="597" width="5.3347%" height="15" fill="rgb(229,146,28)" fg:x="381" fg:w="51"/><text x="40.1036%" y="607.50">sha2::s..</text></g><g><title>sha2::sha256::compress256 (51 samples, 5.33%)</title><rect x="39.8536%" y="581" width="5.3347%" height="15" fill="rgb(225,31,38)" fg:x="381" fg:w="51"/><text x="40.1036%" y="591.50">sha2::s..</text></g><g><title>sha2::sha256::x86::compress (51 samples, 5.33%)</title><rect x="39.8536%" y="565" width="5.3347%" height="15" fill="rgb(250,208,3)" fg:x="381" fg:w="51"/><text x="40.1036%" y="575.50">sha2::s..</text></g><g><title>sha2::sha256::soft::compress (51 samples, 5.33%)</title><rect x="39.8536%" y="549" width="5.3347%" height="15" fill="rgb(246,54,23)" fg:x="381" fg:w="51"/><text x="40.1036%" y="559.50">sha2::s..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (51 samples, 5.33%)</title><rect x="39.8536%" y="533" width="5.3347%" height="15" fill="rgb(243,76,11)" fg:x="381" fg:w="51"/><text x="40.1036%" y="543.50">sha2::s..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (33 samples, 3.45%)</title><rect x="41.7364%" y="517" width="3.4519%" height="15" fill="rgb(245,21,50)" fg:x="399" fg:w="33"/><text x="41.9864%" y="527.50">sha..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (9 samples, 0.94%)</title><rect x="44.2469%" y="501" width="0.9414%" height="15" fill="rgb(228,9,43)" fg:x="423" fg:w="9"/><text x="44.4969%" y="511.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.10%)</title><rect x="45.1883%" y="597" width="0.1046%" height="15" fill="rgb(208,100,47)" fg:x="432" fg:w="1"/><text x="45.4383%" y="607.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.10%)</title><rect x="45.1883%" y="581" width="0.1046%" height="15" fill="rgb(232,26,8)" fg:x="432" fg:w="1"/><text x="45.4383%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.10%)</title><rect x="45.1883%" y="565" width="0.1046%" height="15" fill="rgb(216,166,38)" fg:x="432" fg:w="1"/><text x="45.4383%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (1 samples, 0.10%)</title><rect x="45.1883%" y="549" width="0.1046%" height="15" fill="rgb(251,202,51)" fg:x="432" fg:w="1"/><text x="45.4383%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.10%)</title><rect x="45.1883%" y="533" width="0.1046%" height="15" fill="rgb(254,216,34)" fg:x="432" fg:w="1"/><text x="45.4383%" y="543.50"></text></g><g><title>alloc::string::String::reserve (2 samples, 0.21%)</title><rect x="45.2929%" y="597" width="0.2092%" height="15" fill="rgb(251,32,27)" fg:x="433" fg:w="2"/><text x="45.5429%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="45.2929%" y="581" width="0.2092%" height="15" fill="rgb(208,127,28)" fg:x="433" fg:w="2"/><text x="45.5429%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="45.2929%" y="565" width="0.2092%" height="15" fill="rgb(224,137,22)" fg:x="433" fg:w="2"/><text x="45.5429%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.21%)</title><rect x="45.2929%" y="549" width="0.2092%" height="15" fill="rgb(254,70,32)" fg:x="433" fg:w="2"/><text x="45.5429%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.21%)</title><rect x="45.2929%" y="533" width="0.2092%" height="15" fill="rgb(229,75,37)" fg:x="433" fg:w="2"/><text x="45.5429%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.21%)</title><rect x="45.2929%" y="517" width="0.2092%" height="15" fill="rgb(252,64,23)" fg:x="433" fg:w="2"/><text x="45.5429%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="45.3975%" y="501" width="0.1046%" height="15" fill="rgb(232,162,48)" fg:x="434" fg:w="1"/><text x="45.6475%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="46.1297%" y="549" width="0.2092%" height="15" fill="rgb(246,160,12)" fg:x="441" fg:w="2"/><text x="46.3797%" y="559.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.21%)</title><rect x="46.1297%" y="533" width="0.2092%" height="15" fill="rgb(247,166,0)" fg:x="441" fg:w="2"/><text x="46.3797%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.42%)</title><rect x="46.3389%" y="549" width="0.4184%" height="15" fill="rgb(249,219,21)" fg:x="443" fg:w="4"/><text x="46.5889%" y="559.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (3 samples, 0.31%)</title><rect x="46.4435%" y="533" width="0.3138%" height="15" fill="rgb(205,209,3)" fg:x="444" fg:w="3"/><text x="46.6935%" y="543.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 1.36%)</title><rect x="45.7113%" y="565" width="1.3598%" height="15" fill="rgb(243,44,1)" fg:x="437" fg:w="13"/><text x="45.9613%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.31%)</title><rect x="46.7573%" y="549" width="0.3138%" height="15" fill="rgb(206,159,16)" fg:x="447" fg:w="3"/><text x="47.0073%" y="559.50"></text></g><g><title>core::mem::replace (3 samples, 0.31%)</title><rect x="46.7573%" y="533" width="0.3138%" height="15" fill="rgb(244,77,30)" fg:x="447" fg:w="3"/><text x="47.0073%" y="543.50"></text></g><g><title>core::ptr::read (3 samples, 0.31%)</title><rect x="46.7573%" y="517" width="0.3138%" height="15" fill="rgb(218,69,12)" fg:x="447" fg:w="3"/><text x="47.0073%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (34 samples, 3.56%)</title><rect x="45.1883%" y="645" width="3.5565%" height="15" fill="rgb(212,87,7)" fg:x="432" fg:w="34"/><text x="45.4383%" y="655.50">core..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (34 samples, 3.56%)</title><rect x="45.1883%" y="629" width="3.5565%" height="15" fill="rgb(245,114,25)" fg:x="432" fg:w="34"/><text x="45.4383%" y="639.50">&lt;all..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (34 samples, 3.56%)</title><rect x="45.1883%" y="613" width="3.5565%" height="15" fill="rgb(210,61,42)" fg:x="432" fg:w="34"/><text x="45.4383%" y="623.50">&lt;all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (31 samples, 3.24%)</title><rect x="45.5021%" y="597" width="3.2427%" height="15" fill="rgb(211,52,33)" fg:x="435" fg:w="31"/><text x="45.7521%" y="607.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (31 samples, 3.24%)</title><rect x="45.5021%" y="581" width="3.2427%" height="15" fill="rgb(234,58,33)" fg:x="435" fg:w="31"/><text x="45.7521%" y="591.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (16 samples, 1.67%)</title><rect x="47.0711%" y="565" width="1.6736%" height="15" fill="rgb(220,115,36)" fg:x="450" fg:w="16"/><text x="47.3211%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (16 samples, 1.67%)</title><rect x="47.0711%" y="549" width="1.6736%" height="15" fill="rgb(243,153,54)" fg:x="450" fg:w="16"/><text x="47.3211%" y="559.50"></text></g><g><title>alloc::string::String::push (16 samples, 1.67%)</title><rect x="47.0711%" y="533" width="1.6736%" height="15" fill="rgb(251,47,18)" fg:x="450" fg:w="16"/><text x="47.3211%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 1.67%)</title><rect x="47.0711%" y="517" width="1.6736%" height="15" fill="rgb(242,102,42)" fg:x="450" fg:w="16"/><text x="47.3211%" y="527.50"></text></g><g><title>core::ptr::write (7 samples, 0.73%)</title><rect x="48.0126%" y="501" width="0.7322%" height="15" fill="rgb(234,31,38)" fg:x="459" fg:w="7"/><text x="48.2626%" y="511.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (87 samples, 9.10%)</title><rect x="39.7490%" y="709" width="9.1004%" height="15" fill="rgb(221,117,51)" fg:x="380" fg:w="87"/><text x="39.9990%" y="719.50">lab4::checksu..</text></g><g><title>hex::encode (35 samples, 3.66%)</title><rect x="45.1883%" y="693" width="3.6611%" height="15" fill="rgb(212,20,18)" fg:x="432" fg:w="35"/><text x="45.4383%" y="703.50">hex:..</text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (35 samples, 3.66%)</title><rect x="45.1883%" y="677" width="3.6611%" height="15" fill="rgb(245,133,36)" fg:x="432" fg:w="35"/><text x="45.4383%" y="687.50">&lt;T a..</text></g><g><title>hex::encode_to_iter (35 samples, 3.66%)</title><rect x="45.1883%" y="661" width="3.6611%" height="15" fill="rgb(212,6,19)" fg:x="432" fg:w="35"/><text x="45.4383%" y="671.50">hex:..</text></g><g><title>hex::BytesToHexChars::new (1 samples, 0.10%)</title><rect x="48.7448%" y="645" width="0.1046%" height="15" fill="rgb(218,1,36)" fg:x="466" fg:w="1"/><text x="48.9948%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (6 samples, 0.63%)</title><rect x="48.8494%" y="677" width="0.6276%" height="15" fill="rgb(246,84,54)" fg:x="467" fg:w="6"/><text x="49.0994%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (6 samples, 0.63%)</title><rect x="48.8494%" y="661" width="0.6276%" height="15" fill="rgb(242,110,6)" fg:x="467" fg:w="6"/><text x="49.0994%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (6 samples, 0.63%)</title><rect x="48.8494%" y="645" width="0.6276%" height="15" fill="rgb(214,47,5)" fg:x="467" fg:w="6"/><text x="49.0994%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (6 samples, 0.63%)</title><rect x="48.8494%" y="629" width="0.6276%" height="15" fill="rgb(218,159,25)" fg:x="467" fg:w="6"/><text x="49.0994%" y="639.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (6 samples, 0.63%)</title><rect x="48.8494%" y="613" width="0.6276%" height="15" fill="rgb(215,211,28)" fg:x="467" fg:w="6"/><text x="49.0994%" y="623.50"></text></g><g><title>__close (6 samples, 0.63%)</title><rect x="48.8494%" y="597" width="0.6276%" height="15" fill="rgb(238,59,32)" fg:x="467" fg:w="6"/><text x="49.0994%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="581" width="0.6276%" height="15" fill="rgb(226,82,3)" fg:x="467" fg:w="6"/><text x="49.0994%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="565" width="0.6276%" height="15" fill="rgb(240,164,32)" fg:x="467" fg:w="6"/><text x="49.0994%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="549" width="0.6276%" height="15" fill="rgb(232,46,7)" fg:x="467" fg:w="6"/><text x="49.0994%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="533" width="0.6276%" height="15" fill="rgb(229,129,53)" fg:x="467" fg:w="6"/><text x="49.0994%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="517" width="0.6276%" height="15" fill="rgb(234,188,29)" fg:x="467" fg:w="6"/><text x="49.0994%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="501" width="0.6276%" height="15" fill="rgb(246,141,4)" fg:x="467" fg:w="6"/><text x="49.0994%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="485" width="0.6276%" height="15" fill="rgb(229,23,39)" fg:x="467" fg:w="6"/><text x="49.0994%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="469" width="0.6276%" height="15" fill="rgb(206,12,3)" fg:x="467" fg:w="6"/><text x="49.0994%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="453" width="0.6276%" height="15" fill="rgb(252,226,20)" fg:x="467" fg:w="6"/><text x="49.0994%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="437" width="0.6276%" height="15" fill="rgb(216,123,35)" fg:x="467" fg:w="6"/><text x="49.0994%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="421" width="0.6276%" height="15" fill="rgb(212,68,40)" fg:x="467" fg:w="6"/><text x="49.0994%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="405" width="0.6276%" height="15" fill="rgb(254,125,32)" fg:x="467" fg:w="6"/><text x="49.0994%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="389" width="0.6276%" height="15" fill="rgb(253,97,22)" fg:x="467" fg:w="6"/><text x="49.0994%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="373" width="0.6276%" height="15" fill="rgb(241,101,14)" fg:x="467" fg:w="6"/><text x="49.0994%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="357" width="0.6276%" height="15" fill="rgb(238,103,29)" fg:x="467" fg:w="6"/><text x="49.0994%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="341" width="0.6276%" height="15" fill="rgb(233,195,47)" fg:x="467" fg:w="6"/><text x="49.0994%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="325" width="0.6276%" height="15" fill="rgb(246,218,30)" fg:x="467" fg:w="6"/><text x="49.0994%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="309" width="0.6276%" height="15" fill="rgb(219,145,47)" fg:x="467" fg:w="6"/><text x="49.0994%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="293" width="0.6276%" height="15" fill="rgb(243,12,26)" fg:x="467" fg:w="6"/><text x="49.0994%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="277" width="0.6276%" height="15" fill="rgb(214,87,16)" fg:x="467" fg:w="6"/><text x="49.0994%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="261" width="0.6276%" height="15" fill="rgb(208,99,42)" fg:x="467" fg:w="6"/><text x="49.0994%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="245" width="0.6276%" height="15" fill="rgb(253,99,2)" fg:x="467" fg:w="6"/><text x="49.0994%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="229" width="0.6276%" height="15" fill="rgb(220,168,23)" fg:x="467" fg:w="6"/><text x="49.0994%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="213" width="0.6276%" height="15" fill="rgb(242,38,24)" fg:x="467" fg:w="6"/><text x="49.0994%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="197" width="0.6276%" height="15" fill="rgb(225,182,9)" fg:x="467" fg:w="6"/><text x="49.0994%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="48.8494%" y="181" width="0.6276%" height="15" fill="rgb(243,178,37)" fg:x="467" fg:w="6"/><text x="49.0994%" y="191.50"></text></g><g><title>std::fs::read_to_string (14 samples, 1.46%)</title><rect x="48.8494%" y="709" width="1.4644%" height="15" fill="rgb(232,139,19)" fg:x="467" fg:w="14"/><text x="49.0994%" y="719.50"></text></g><g><title>std::fs::read_to_string::inner (14 samples, 1.46%)</title><rect x="48.8494%" y="693" width="1.4644%" height="15" fill="rgb(225,201,24)" fg:x="467" fg:w="14"/><text x="49.0994%" y="703.50"></text></g><g><title>std::fs::File::open (8 samples, 0.84%)</title><rect x="49.4770%" y="677" width="0.8368%" height="15" fill="rgb(221,47,46)" fg:x="473" fg:w="8"/><text x="49.7270%" y="687.50"></text></g><g><title>std::fs::OpenOptions::open (8 samples, 0.84%)</title><rect x="49.4770%" y="661" width="0.8368%" height="15" fill="rgb(249,23,13)" fg:x="473" fg:w="8"/><text x="49.7270%" y="671.50"></text></g><g><title>std::fs::OpenOptions::_open (8 samples, 0.84%)</title><rect x="49.4770%" y="645" width="0.8368%" height="15" fill="rgb(219,9,5)" fg:x="473" fg:w="8"/><text x="49.7270%" y="655.50"></text></g><g><title>std::sys::unix::fs::File::open (8 samples, 0.84%)</title><rect x="49.4770%" y="629" width="0.8368%" height="15" fill="rgb(254,171,16)" fg:x="473" fg:w="8"/><text x="49.7270%" y="639.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (8 samples, 0.84%)</title><rect x="49.4770%" y="613" width="0.8368%" height="15" fill="rgb(230,171,20)" fg:x="473" fg:w="8"/><text x="49.7270%" y="623.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (8 samples, 0.84%)</title><rect x="49.4770%" y="597" width="0.8368%" height="15" fill="rgb(210,71,41)" fg:x="473" fg:w="8"/><text x="49.7270%" y="607.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (8 samples, 0.84%)</title><rect x="49.4770%" y="581" width="0.8368%" height="15" fill="rgb(206,173,20)" fg:x="473" fg:w="8"/><text x="49.7270%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::open_c (8 samples, 0.84%)</title><rect x="49.4770%" y="565" width="0.8368%" height="15" fill="rgb(233,88,34)" fg:x="473" fg:w="8"/><text x="49.7270%" y="575.50"></text></g><g><title>std::sys::unix::cvt_r (8 samples, 0.84%)</title><rect x="49.4770%" y="549" width="0.8368%" height="15" fill="rgb(223,209,46)" fg:x="473" fg:w="8"/><text x="49.7270%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (8 samples, 0.84%)</title><rect x="49.4770%" y="533" width="0.8368%" height="15" fill="rgb(250,43,18)" fg:x="473" fg:w="8"/><text x="49.7270%" y="543.50"></text></g><g><title>__libc_open64 (8 samples, 0.84%)</title><rect x="49.4770%" y="517" width="0.8368%" height="15" fill="rgb(208,13,10)" fg:x="473" fg:w="8"/><text x="49.7270%" y="527.50"></text></g><g><title>[unknown] (8 samples, 0.84%)</title><rect x="49.4770%" y="501" width="0.8368%" height="15" fill="rgb(212,200,36)" fg:x="473" fg:w="8"/><text x="49.7270%" y="511.50"></text></g><g><title>[unknown] (8 samples, 0.84%)</title><rect x="49.4770%" y="485" width="0.8368%" height="15" fill="rgb(225,90,30)" fg:x="473" fg:w="8"/><text x="49.7270%" y="495.50"></text></g><g><title>[unknown] (8 samples, 0.84%)</title><rect x="49.4770%" y="469" width="0.8368%" height="15" fill="rgb(236,182,39)" fg:x="473" fg:w="8"/><text x="49.7270%" y="479.50"></text></g><g><title>[unknown] (8 samples, 0.84%)</title><rect x="49.4770%" y="453" width="0.8368%" height="15" fill="rgb(212,144,35)" fg:x="473" fg:w="8"/><text x="49.7270%" y="463.50"></text></g><g><title>[unknown] (8 samples, 0.84%)</title><rect x="49.4770%" y="437" width="0.8368%" height="15" fill="rgb(228,63,44)" fg:x="473" fg:w="8"/><text x="49.7270%" y="447.50"></text></g><g><title>[unknown] (8 samples, 0.84%)</title><rect x="49.4770%" y="421" width="0.8368%" height="15" fill="rgb(228,109,6)" fg:x="473" fg:w="8"/><text x="49.7270%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.84%)</title><rect x="49.4770%" y="405" width="0.8368%" height="15" fill="rgb(238,117,24)" fg:x="473" fg:w="8"/><text x="49.7270%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.84%)</title><rect x="49.4770%" y="389" width="0.8368%" height="15" fill="rgb(242,26,26)" fg:x="473" fg:w="8"/><text x="49.7270%" y="399.50"></text></g><g><title>[unknown] (8 samples, 0.84%)</title><rect x="49.4770%" y="373" width="0.8368%" height="15" fill="rgb(221,92,48)" fg:x="473" fg:w="8"/><text x="49.7270%" y="383.50"></text></g><g><title>[unknown] (8 samples, 0.84%)</title><rect x="49.4770%" y="357" width="0.8368%" height="15" fill="rgb(209,209,32)" fg:x="473" fg:w="8"/><text x="49.7270%" y="367.50"></text></g><g><title>[unknown] (8 samples, 0.84%)</title><rect x="49.4770%" y="341" width="0.8368%" height="15" fill="rgb(221,70,22)" fg:x="473" fg:w="8"/><text x="49.7270%" y="351.50"></text></g><g><title>[unknown] (7 samples, 0.73%)</title><rect x="49.5816%" y="325" width="0.7322%" height="15" fill="rgb(248,145,5)" fg:x="474" fg:w="7"/><text x="49.8316%" y="335.50"></text></g><g><title>[unknown] (7 samples, 0.73%)</title><rect x="49.5816%" y="309" width="0.7322%" height="15" fill="rgb(226,116,26)" fg:x="474" fg:w="7"/><text x="49.8316%" y="319.50"></text></g><g><title>[unknown] (7 samples, 0.73%)</title><rect x="49.5816%" y="293" width="0.7322%" height="15" fill="rgb(244,5,17)" fg:x="474" fg:w="7"/><text x="49.8316%" y="303.50"></text></g><g><title>[unknown] (7 samples, 0.73%)</title><rect x="49.5816%" y="277" width="0.7322%" height="15" fill="rgb(252,159,33)" fg:x="474" fg:w="7"/><text x="49.8316%" y="287.50"></text></g><g><title>[unknown] (7 samples, 0.73%)</title><rect x="49.5816%" y="261" width="0.7322%" height="15" fill="rgb(206,71,0)" fg:x="474" fg:w="7"/><text x="49.8316%" y="271.50"></text></g><g><title>[unknown] (7 samples, 0.73%)</title><rect x="49.5816%" y="245" width="0.7322%" height="15" fill="rgb(233,118,54)" fg:x="474" fg:w="7"/><text x="49.8316%" y="255.50"></text></g><g><title>[unknown] (7 samples, 0.73%)</title><rect x="49.5816%" y="229" width="0.7322%" height="15" fill="rgb(234,83,48)" fg:x="474" fg:w="7"/><text x="49.8316%" y="239.50"></text></g><g><title>[unknown] (7 samples, 0.73%)</title><rect x="49.5816%" y="213" width="0.7322%" height="15" fill="rgb(228,3,54)" fg:x="474" fg:w="7"/><text x="49.8316%" y="223.50"></text></g><g><title>[unknown] (7 samples, 0.73%)</title><rect x="49.5816%" y="197" width="0.7322%" height="15" fill="rgb(226,155,13)" fg:x="474" fg:w="7"/><text x="49.8316%" y="207.50"></text></g><g><title>[unknown] (7 samples, 0.73%)</title><rect x="49.5816%" y="181" width="0.7322%" height="15" fill="rgb(241,28,37)" fg:x="474" fg:w="7"/><text x="49.8316%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="49.6862%" y="165" width="0.6276%" height="15" fill="rgb(233,93,10)" fg:x="475" fg:w="6"/><text x="49.9362%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="49.6862%" y="149" width="0.6276%" height="15" fill="rgb(225,113,19)" fg:x="475" fg:w="6"/><text x="49.9362%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="49.6862%" y="133" width="0.6276%" height="15" fill="rgb(241,2,18)" fg:x="475" fg:w="6"/><text x="49.9362%" y="143.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="49.6862%" y="117" width="0.6276%" height="15" fill="rgb(228,207,21)" fg:x="475" fg:w="6"/><text x="49.9362%" y="127.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="49.6862%" y="101" width="0.6276%" height="15" fill="rgb(213,211,35)" fg:x="475" fg:w="6"/><text x="49.9362%" y="111.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.10%)</title><rect x="50.3138%" y="693" width="0.1046%" height="15" fill="rgb(209,83,10)" fg:x="481" fg:w="1"/><text x="50.5638%" y="703.50"></text></g><g><title>std::sync::poison::Flag::guard (1 samples, 0.10%)</title><rect x="50.3138%" y="677" width="0.1046%" height="15" fill="rgb(209,164,1)" fg:x="481" fg:w="1"/><text x="50.5638%" y="687.50"></text></g><g><title>std::thread::panicking (1 samples, 0.10%)</title><rect x="50.3138%" y="661" width="0.1046%" height="15" fill="rgb(213,184,43)" fg:x="481" fg:w="1"/><text x="50.5638%" y="671.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.10%)</title><rect x="50.3138%" y="645" width="0.1046%" height="15" fill="rgb(231,61,34)" fg:x="481" fg:w="1"/><text x="50.5638%" y="655.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.10%)</title><rect x="50.3138%" y="629" width="0.1046%" height="15" fill="rgb(235,75,3)" fg:x="481" fg:w="1"/><text x="50.5638%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.10%)</title><rect x="50.3138%" y="613" width="0.1046%" height="15" fill="rgb(220,106,47)" fg:x="481" fg:w="1"/><text x="50.5638%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="50.3138%" y="597" width="0.1046%" height="15" fill="rgb(210,196,33)" fg:x="481" fg:w="1"/><text x="50.5638%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (59 samples, 6.17%)</title><rect x="50.5230%" y="661" width="6.1715%" height="15" fill="rgb(229,154,42)" fg:x="483" fg:w="59"/><text x="50.7730%" y="671.50">std::sys..</text></g><g><title>syscall (59 samples, 6.17%)</title><rect x="50.5230%" y="645" width="6.1715%" height="15" fill="rgb(228,114,26)" fg:x="483" fg:w="59"/><text x="50.7730%" y="655.50">syscall</text></g><g><title>[unknown] (59 samples, 6.17%)</title><rect x="50.5230%" y="629" width="6.1715%" height="15" fill="rgb(208,144,1)" fg:x="483" fg:w="59"/><text x="50.7730%" y="639.50">[unknown]</text></g><g><title>[unknown] (58 samples, 6.07%)</title><rect x="50.6276%" y="613" width="6.0669%" height="15" fill="rgb(239,112,37)" fg:x="484" fg:w="58"/><text x="50.8776%" y="623.50">[unknown]</text></g><g><title>[unknown] (58 samples, 6.07%)</title><rect x="50.6276%" y="597" width="6.0669%" height="15" fill="rgb(210,96,50)" fg:x="484" fg:w="58"/><text x="50.8776%" y="607.50">[unknown]</text></g><g><title>[unknown] (58 samples, 6.07%)</title><rect x="50.6276%" y="581" width="6.0669%" height="15" fill="rgb(222,178,2)" fg:x="484" fg:w="58"/><text x="50.8776%" y="591.50">[unknown]</text></g><g><title>[unknown] (57 samples, 5.96%)</title><rect x="50.7322%" y="565" width="5.9623%" height="15" fill="rgb(226,74,18)" fg:x="485" fg:w="57"/><text x="50.9822%" y="575.50">[unknown]</text></g><g><title>[unknown] (53 samples, 5.54%)</title><rect x="51.1506%" y="549" width="5.5439%" height="15" fill="rgb(225,67,54)" fg:x="489" fg:w="53"/><text x="51.4006%" y="559.50">[unknow..</text></g><g><title>[unknown] (53 samples, 5.54%)</title><rect x="51.1506%" y="533" width="5.5439%" height="15" fill="rgb(251,92,32)" fg:x="489" fg:w="53"/><text x="51.4006%" y="543.50">[unknow..</text></g><g><title>[unknown] (53 samples, 5.54%)</title><rect x="51.1506%" y="517" width="5.5439%" height="15" fill="rgb(228,149,22)" fg:x="489" fg:w="53"/><text x="51.4006%" y="527.50">[unknow..</text></g><g><title>[unknown] (53 samples, 5.54%)</title><rect x="51.1506%" y="501" width="5.5439%" height="15" fill="rgb(243,54,13)" fg:x="489" fg:w="53"/><text x="51.4006%" y="511.50">[unknow..</text></g><g><title>[unknown] (52 samples, 5.44%)</title><rect x="51.2552%" y="485" width="5.4393%" height="15" fill="rgb(243,180,28)" fg:x="490" fg:w="52"/><text x="51.5052%" y="495.50">[unknow..</text></g><g><title>[unknown] (52 samples, 5.44%)</title><rect x="51.2552%" y="469" width="5.4393%" height="15" fill="rgb(208,167,24)" fg:x="490" fg:w="52"/><text x="51.5052%" y="479.50">[unknow..</text></g><g><title>[unknown] (52 samples, 5.44%)</title><rect x="51.2552%" y="453" width="5.4393%" height="15" fill="rgb(245,73,45)" fg:x="490" fg:w="52"/><text x="51.5052%" y="463.50">[unknow..</text></g><g><title>[unknown] (52 samples, 5.44%)</title><rect x="51.2552%" y="437" width="5.4393%" height="15" fill="rgb(237,203,48)" fg:x="490" fg:w="52"/><text x="51.5052%" y="447.50">[unknow..</text></g><g><title>[unknown] (52 samples, 5.44%)</title><rect x="51.2552%" y="421" width="5.4393%" height="15" fill="rgb(211,197,16)" fg:x="490" fg:w="52"/><text x="51.5052%" y="431.50">[unknow..</text></g><g><title>core::hint::spin_loop (2 samples, 0.21%)</title><rect x="56.6946%" y="645" width="0.2092%" height="15" fill="rgb(243,99,51)" fg:x="542" fg:w="2"/><text x="56.9446%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.21%)</title><rect x="56.6946%" y="629" width="0.2092%" height="15" fill="rgb(215,123,29)" fg:x="542" fg:w="2"/><text x="56.9446%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (64 samples, 6.69%)</title><rect x="50.3138%" y="709" width="6.6946%" height="15" fill="rgb(239,186,37)" fg:x="481" fg:w="64"/><text x="50.5638%" y="719.50">std::sync..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (63 samples, 6.59%)</title><rect x="50.4184%" y="693" width="6.5900%" height="15" fill="rgb(252,136,39)" fg:x="482" fg:w="63"/><text x="50.6684%" y="703.50">std::sys:..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (62 samples, 6.49%)</title><rect x="50.5230%" y="677" width="6.4854%" height="15" fill="rgb(223,213,32)" fg:x="483" fg:w="62"/><text x="50.7730%" y="687.50">std::sys..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (3 samples, 0.31%)</title><rect x="56.6946%" y="661" width="0.3138%" height="15" fill="rgb(233,115,5)" fg:x="542" fg:w="3"/><text x="56.9446%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.10%)</title><rect x="56.9038%" y="645" width="0.1046%" height="15" fill="rgb(207,226,44)" fg:x="544" fg:w="1"/><text x="57.1538%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.10%)</title><rect x="56.9038%" y="629" width="0.1046%" height="15" fill="rgb(208,126,0)" fg:x="544" fg:w="1"/><text x="57.1538%" y="639.50"></text></g><g><title>lab4::package::PackageDownloader::run (398 samples, 41.63%)</title><rect x="15.4812%" y="725" width="41.6318%" height="15" fill="rgb(244,66,21)" fg:x="148" fg:w="398"/><text x="15.7312%" y="735.50">lab4::package::PackageDownloader::run</text></g><g><title>syscall (1 samples, 0.10%)</title><rect x="57.0084%" y="709" width="0.1046%" height="15" fill="rgb(222,97,12)" fg:x="545" fg:w="1"/><text x="57.2584%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="57.0084%" y="693" width="0.1046%" height="15" fill="rgb(219,213,19)" fg:x="545" fg:w="1"/><text x="57.2584%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (2 samples, 0.21%)</title><rect x="57.1130%" y="709" width="0.2092%" height="15" fill="rgb(252,169,30)" fg:x="546" fg:w="2"/><text x="57.3630%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.10%)</title><rect x="57.5314%" y="693" width="0.1046%" height="15" fill="rgb(206,32,51)" fg:x="550" fg:w="1"/><text x="57.7814%" y="703.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (2 samples, 0.21%)</title><rect x="58.1590%" y="677" width="0.2092%" height="15" fill="rgb(250,172,42)" fg:x="556" fg:w="2"/><text x="58.4090%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.10%)</title><rect x="58.3682%" y="677" width="0.1046%" height="15" fill="rgb(209,34,43)" fg:x="558" fg:w="1"/><text x="58.6182%" y="687.50"></text></g><g><title>__GI___sched_yield (7 samples, 0.73%)</title><rect x="58.4728%" y="565" width="0.7322%" height="15" fill="rgb(223,11,35)" fg:x="559" fg:w="7"/><text x="58.7228%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="549" width="0.6276%" height="15" fill="rgb(251,219,26)" fg:x="560" fg:w="6"/><text x="58.8274%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="533" width="0.6276%" height="15" fill="rgb(231,119,3)" fg:x="560" fg:w="6"/><text x="58.8274%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="517" width="0.6276%" height="15" fill="rgb(216,97,11)" fg:x="560" fg:w="6"/><text x="58.8274%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="501" width="0.6276%" height="15" fill="rgb(223,59,9)" fg:x="560" fg:w="6"/><text x="58.8274%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="485" width="0.6276%" height="15" fill="rgb(233,93,31)" fg:x="560" fg:w="6"/><text x="58.8274%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="469" width="0.6276%" height="15" fill="rgb(239,81,33)" fg:x="560" fg:w="6"/><text x="58.8274%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="453" width="0.6276%" height="15" fill="rgb(213,120,34)" fg:x="560" fg:w="6"/><text x="58.8274%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="437" width="0.6276%" height="15" fill="rgb(243,49,53)" fg:x="560" fg:w="6"/><text x="58.8274%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="421" width="0.6276%" height="15" fill="rgb(247,216,33)" fg:x="560" fg:w="6"/><text x="58.8274%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="405" width="0.6276%" height="15" fill="rgb(226,26,14)" fg:x="560" fg:w="6"/><text x="58.8274%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="389" width="0.6276%" height="15" fill="rgb(215,49,53)" fg:x="560" fg:w="6"/><text x="58.8274%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="58.5774%" y="373" width="0.6276%" height="15" fill="rgb(245,162,40)" fg:x="560" fg:w="6"/><text x="58.8274%" y="383.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (8 samples, 0.84%)</title><rect x="58.4728%" y="581" width="0.8368%" height="15" fill="rgb(229,68,17)" fg:x="559" fg:w="8"/><text x="58.7228%" y="591.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.10%)</title><rect x="59.2050%" y="565" width="0.1046%" height="15" fill="rgb(213,182,10)" fg:x="566" fg:w="1"/><text x="59.4550%" y="575.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.10%)</title><rect x="59.2050%" y="549" width="0.1046%" height="15" fill="rgb(245,125,30)" fg:x="566" fg:w="1"/><text x="59.4550%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.10%)</title><rect x="59.2050%" y="533" width="0.1046%" height="15" fill="rgb(232,202,2)" fg:x="566" fg:w="1"/><text x="59.4550%" y="543.50"></text></g><g><title>crossbeam_channel::context::Context::with (20 samples, 2.09%)</title><rect x="58.4728%" y="677" width="2.0921%" height="15" fill="rgb(237,140,51)" fg:x="559" fg:w="20"/><text x="58.7228%" y="687.50">c..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 2.09%)</title><rect x="58.4728%" y="661" width="2.0921%" height="15" fill="rgb(236,157,25)" fg:x="559" fg:w="20"/><text x="58.7228%" y="671.50">s..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (20 samples, 2.09%)</title><rect x="58.4728%" y="645" width="2.0921%" height="15" fill="rgb(219,209,0)" fg:x="559" fg:w="20"/><text x="58.7228%" y="655.50">c..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (20 samples, 2.09%)</title><rect x="58.4728%" y="629" width="2.0921%" height="15" fill="rgb(240,116,54)" fg:x="559" fg:w="20"/><text x="58.7228%" y="639.50">c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (20 samples, 2.09%)</title><rect x="58.4728%" y="613" width="2.0921%" height="15" fill="rgb(216,10,36)" fg:x="559" fg:w="20"/><text x="58.7228%" y="623.50">c..</text></g><g><title>crossbeam_channel::context::Context::wait_until (20 samples, 2.09%)</title><rect x="58.4728%" y="597" width="2.0921%" height="15" fill="rgb(222,72,44)" fg:x="559" fg:w="20"/><text x="58.7228%" y="607.50">c..</text></g><g><title>std::thread::park (12 samples, 1.26%)</title><rect x="59.3096%" y="581" width="1.2552%" height="15" fill="rgb(232,159,9)" fg:x="567" fg:w="12"/><text x="59.5596%" y="591.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (12 samples, 1.26%)</title><rect x="59.3096%" y="565" width="1.2552%" height="15" fill="rgb(210,39,32)" fg:x="567" fg:w="12"/><text x="59.5596%" y="575.50"></text></g><g><title>std::sys::unix::futex::futex_wait (12 samples, 1.26%)</title><rect x="59.3096%" y="549" width="1.2552%" height="15" fill="rgb(216,194,45)" fg:x="567" fg:w="12"/><text x="59.5596%" y="559.50"></text></g><g><title>syscall (12 samples, 1.26%)</title><rect x="59.3096%" y="533" width="1.2552%" height="15" fill="rgb(218,18,35)" fg:x="567" fg:w="12"/><text x="59.5596%" y="543.50"></text></g><g><title>[unknown] (12 samples, 1.26%)</title><rect x="59.3096%" y="517" width="1.2552%" height="15" fill="rgb(207,83,51)" fg:x="567" fg:w="12"/><text x="59.5596%" y="527.50"></text></g><g><title>[unknown] (12 samples, 1.26%)</title><rect x="59.3096%" y="501" width="1.2552%" height="15" fill="rgb(225,63,43)" fg:x="567" fg:w="12"/><text x="59.5596%" y="511.50"></text></g><g><title>[unknown] (12 samples, 1.26%)</title><rect x="59.3096%" y="485" width="1.2552%" height="15" fill="rgb(207,57,36)" fg:x="567" fg:w="12"/><text x="59.5596%" y="495.50"></text></g><g><title>[unknown] (12 samples, 1.26%)</title><rect x="59.3096%" y="469" width="1.2552%" height="15" fill="rgb(216,99,33)" fg:x="567" fg:w="12"/><text x="59.5596%" y="479.50"></text></g><g><title>[unknown] (11 samples, 1.15%)</title><rect x="59.4142%" y="453" width="1.1506%" height="15" fill="rgb(225,42,16)" fg:x="568" fg:w="11"/><text x="59.6642%" y="463.50"></text></g><g><title>[unknown] (11 samples, 1.15%)</title><rect x="59.4142%" y="437" width="1.1506%" height="15" fill="rgb(220,201,45)" fg:x="568" fg:w="11"/><text x="59.6642%" y="447.50"></text></g><g><title>[unknown] (11 samples, 1.15%)</title><rect x="59.4142%" y="421" width="1.1506%" height="15" fill="rgb(225,33,4)" fg:x="568" fg:w="11"/><text x="59.6642%" y="431.50"></text></g><g><title>[unknown] (11 samples, 1.15%)</title><rect x="59.4142%" y="405" width="1.1506%" height="15" fill="rgb(224,33,50)" fg:x="568" fg:w="11"/><text x="59.6642%" y="415.50"></text></g><g><title>[unknown] (11 samples, 1.15%)</title><rect x="59.4142%" y="389" width="1.1506%" height="15" fill="rgb(246,198,51)" fg:x="568" fg:w="11"/><text x="59.6642%" y="399.50"></text></g><g><title>[unknown] (10 samples, 1.05%)</title><rect x="59.5188%" y="373" width="1.0460%" height="15" fill="rgb(205,22,4)" fg:x="569" fg:w="10"/><text x="59.7688%" y="383.50"></text></g><g><title>[unknown] (10 samples, 1.05%)</title><rect x="59.5188%" y="357" width="1.0460%" height="15" fill="rgb(206,3,8)" fg:x="569" fg:w="10"/><text x="59.7688%" y="367.50"></text></g><g><title>[unknown] (10 samples, 1.05%)</title><rect x="59.5188%" y="341" width="1.0460%" height="15" fill="rgb(251,23,15)" fg:x="569" fg:w="10"/><text x="59.7688%" y="351.50"></text></g><g><title>[unknown] (10 samples, 1.05%)</title><rect x="59.5188%" y="325" width="1.0460%" height="15" fill="rgb(252,88,28)" fg:x="569" fg:w="10"/><text x="59.7688%" y="335.50"></text></g><g><title>[unknown] (10 samples, 1.05%)</title><rect x="59.5188%" y="309" width="1.0460%" height="15" fill="rgb(212,127,14)" fg:x="569" fg:w="10"/><text x="59.7688%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (6 samples, 0.63%)</title><rect x="60.6695%" y="661" width="0.6276%" height="15" fill="rgb(247,145,37)" fg:x="580" fg:w="6"/><text x="60.9195%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_or (6 samples, 0.63%)</title><rect x="60.6695%" y="645" width="0.6276%" height="15" fill="rgb(209,117,53)" fg:x="580" fg:w="6"/><text x="60.9195%" y="655.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (9 samples, 0.94%)</title><rect x="60.5649%" y="677" width="0.9414%" height="15" fill="rgb(212,90,42)" fg:x="579" fg:w="9"/><text x="60.8149%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::destroy (2 samples, 0.21%)</title><rect x="61.2971%" y="661" width="0.2092%" height="15" fill="rgb(218,164,37)" fg:x="586" fg:w="2"/><text x="61.5471%" y="671.50"></text></g><g><title>core::mem::drop (2 samples, 0.21%)</title><rect x="61.2971%" y="645" width="0.2092%" height="15" fill="rgb(246,65,34)" fg:x="586" fg:w="2"/><text x="61.5471%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (2 samples, 0.21%)</title><rect x="61.2971%" y="629" width="0.2092%" height="15" fill="rgb(231,100,33)" fg:x="586" fg:w="2"/><text x="61.5471%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.21%)</title><rect x="61.2971%" y="613" width="0.2092%" height="15" fill="rgb(228,126,14)" fg:x="586" fg:w="2"/><text x="61.5471%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.21%)</title><rect x="61.2971%" y="597" width="0.2092%" height="15" fill="rgb(215,173,21)" fg:x="586" fg:w="2"/><text x="61.5471%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.21%)</title><rect x="61.2971%" y="581" width="0.2092%" height="15" fill="rgb(210,6,40)" fg:x="586" fg:w="2"/><text x="61.5471%" y="591.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="61.2971%" y="565" width="0.2092%" height="15" fill="rgb(212,48,18)" fg:x="586" fg:w="2"/><text x="61.5471%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="661" width="0.6276%" height="15" fill="rgb(230,214,11)" fg:x="591" fg:w="6"/><text x="62.0701%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="645" width="0.6276%" height="15" fill="rgb(254,105,39)" fg:x="591" fg:w="6"/><text x="62.0701%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="629" width="0.6276%" height="15" fill="rgb(245,158,5)" fg:x="591" fg:w="6"/><text x="62.0701%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="613" width="0.6276%" height="15" fill="rgb(249,208,11)" fg:x="591" fg:w="6"/><text x="62.0701%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="597" width="0.6276%" height="15" fill="rgb(210,39,28)" fg:x="591" fg:w="6"/><text x="62.0701%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="581" width="0.6276%" height="15" fill="rgb(211,56,53)" fg:x="591" fg:w="6"/><text x="62.0701%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="565" width="0.6276%" height="15" fill="rgb(226,201,30)" fg:x="591" fg:w="6"/><text x="62.0701%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="549" width="0.6276%" height="15" fill="rgb(239,101,34)" fg:x="591" fg:w="6"/><text x="62.0701%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="533" width="0.6276%" height="15" fill="rgb(226,209,5)" fg:x="591" fg:w="6"/><text x="62.0701%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="517" width="0.6276%" height="15" fill="rgb(250,105,47)" fg:x="591" fg:w="6"/><text x="62.0701%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="501" width="0.6276%" height="15" fill="rgb(230,72,3)" fg:x="591" fg:w="6"/><text x="62.0701%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="485" width="0.6276%" height="15" fill="rgb(232,218,39)" fg:x="591" fg:w="6"/><text x="62.0701%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="61.8201%" y="469" width="0.6276%" height="15" fill="rgb(248,166,6)" fg:x="591" fg:w="6"/><text x="62.0701%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.52%)</title><rect x="62.4477%" y="661" width="0.5230%" height="15" fill="rgb(247,89,20)" fg:x="597" fg:w="5"/><text x="62.6977%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.52%)</title><rect x="62.4477%" y="645" width="0.5230%" height="15" fill="rgb(248,130,54)" fg:x="597" fg:w="5"/><text x="62.6977%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.31%)</title><rect x="62.9707%" y="661" width="0.3138%" height="15" fill="rgb(234,196,4)" fg:x="602" fg:w="3"/><text x="63.2207%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.31%)</title><rect x="62.9707%" y="645" width="0.3138%" height="15" fill="rgb(250,143,31)" fg:x="602" fg:w="3"/><text x="63.2207%" y="655.50"></text></g><g><title>core::sync::atomic::fence (5 samples, 0.52%)</title><rect x="63.2845%" y="661" width="0.5230%" height="15" fill="rgb(211,110,34)" fg:x="605" fg:w="5"/><text x="63.5345%" y="671.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (3 samples, 0.31%)</title><rect x="63.8075%" y="661" width="0.3138%" height="15" fill="rgb(215,124,48)" fg:x="610" fg:w="3"/><text x="64.0575%" y="671.50"></text></g><g><title>__GI___sched_yield (3 samples, 0.31%)</title><rect x="63.8075%" y="645" width="0.3138%" height="15" fill="rgb(216,46,13)" fg:x="610" fg:w="3"/><text x="64.0575%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.31%)</title><rect x="63.8075%" y="629" width="0.3138%" height="15" fill="rgb(205,184,25)" fg:x="610" fg:w="3"/><text x="64.0575%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="63.9121%" y="613" width="0.2092%" height="15" fill="rgb(228,1,10)" fg:x="611" fg:w="2"/><text x="64.1621%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="63.9121%" y="597" width="0.2092%" height="15" fill="rgb(213,116,27)" fg:x="611" fg:w="2"/><text x="64.1621%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="63.9121%" y="581" width="0.2092%" height="15" fill="rgb(241,95,50)" fg:x="611" fg:w="2"/><text x="64.1621%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.21%)</title><rect x="63.9121%" y="565" width="0.2092%" height="15" fill="rgb(238,48,32)" fg:x="611" fg:w="2"/><text x="64.1621%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="64.0167%" y="549" width="0.1046%" height="15" fill="rgb(235,113,49)" fg:x="612" fg:w="1"/><text x="64.2667%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="64.0167%" y="533" width="0.1046%" height="15" fill="rgb(205,127,43)" fg:x="612" fg:w="1"/><text x="64.2667%" y="543.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (26 samples, 2.72%)</title><rect x="61.5063%" y="677" width="2.7197%" height="15" fill="rgb(250,162,2)" fg:x="588" fg:w="26"/><text x="61.7563%" y="687.50">cr..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (1 samples, 0.10%)</title><rect x="64.1213%" y="661" width="0.1046%" height="15" fill="rgb(220,13,41)" fg:x="613" fg:w="1"/><text x="64.3713%" y="671.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.10%)</title><rect x="64.1213%" y="645" width="0.1046%" height="15" fill="rgb(249,221,25)" fg:x="613" fg:w="1"/><text x="64.3713%" y="655.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.10%)</title><rect x="64.1213%" y="629" width="0.1046%" height="15" fill="rgb(215,208,19)" fg:x="613" fg:w="1"/><text x="64.3713%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.10%)</title><rect x="64.1213%" y="613" width="0.1046%" height="15" fill="rgb(236,175,2)" fg:x="613" fg:w="1"/><text x="64.3713%" y="623.50"></text></g><g><title>__GI___sched_yield (19 samples, 1.99%)</title><rect x="64.2259%" y="661" width="1.9874%" height="15" fill="rgb(241,52,2)" fg:x="614" fg:w="19"/><text x="64.4759%" y="671.50">_..</text></g><g><title>[unknown] (19 samples, 1.99%)</title><rect x="64.2259%" y="645" width="1.9874%" height="15" fill="rgb(248,140,14)" fg:x="614" fg:w="19"/><text x="64.4759%" y="655.50">[..</text></g><g><title>[unknown] (19 samples, 1.99%)</title><rect x="64.2259%" y="629" width="1.9874%" height="15" fill="rgb(253,22,42)" fg:x="614" fg:w="19"/><text x="64.4759%" y="639.50">[..</text></g><g><title>[unknown] (18 samples, 1.88%)</title><rect x="64.3305%" y="613" width="1.8828%" height="15" fill="rgb(234,61,47)" fg:x="615" fg:w="18"/><text x="64.5805%" y="623.50">[..</text></g><g><title>[unknown] (18 samples, 1.88%)</title><rect x="64.3305%" y="597" width="1.8828%" height="15" fill="rgb(208,226,15)" fg:x="615" fg:w="18"/><text x="64.5805%" y="607.50">[..</text></g><g><title>[unknown] (18 samples, 1.88%)</title><rect x="64.3305%" y="581" width="1.8828%" height="15" fill="rgb(217,221,4)" fg:x="615" fg:w="18"/><text x="64.5805%" y="591.50">[..</text></g><g><title>[unknown] (18 samples, 1.88%)</title><rect x="64.3305%" y="565" width="1.8828%" height="15" fill="rgb(212,174,34)" fg:x="615" fg:w="18"/><text x="64.5805%" y="575.50">[..</text></g><g><title>[unknown] (17 samples, 1.78%)</title><rect x="64.4351%" y="549" width="1.7782%" height="15" fill="rgb(253,83,4)" fg:x="616" fg:w="17"/><text x="64.6851%" y="559.50">[..</text></g><g><title>[unknown] (17 samples, 1.78%)</title><rect x="64.4351%" y="533" width="1.7782%" height="15" fill="rgb(250,195,49)" fg:x="616" fg:w="17"/><text x="64.6851%" y="543.50">[..</text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="64.5397%" y="517" width="1.6736%" height="15" fill="rgb(241,192,25)" fg:x="617" fg:w="16"/><text x="64.7897%" y="527.50"></text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="64.5397%" y="501" width="1.6736%" height="15" fill="rgb(208,124,10)" fg:x="617" fg:w="16"/><text x="64.7897%" y="511.50"></text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="64.5397%" y="485" width="1.6736%" height="15" fill="rgb(222,33,0)" fg:x="617" fg:w="16"/><text x="64.7897%" y="495.50"></text></g><g><title>[unknown] (16 samples, 1.67%)</title><rect x="64.5397%" y="469" width="1.6736%" height="15" fill="rgb(234,209,28)" fg:x="617" fg:w="16"/><text x="64.7897%" y="479.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (86 samples, 9.00%)</title><rect x="57.3222%" y="709" width="8.9958%" height="15" fill="rgb(224,11,23)" fg:x="548" fg:w="86"/><text x="57.5722%" y="719.50">crossbeam_cha..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (83 samples, 8.68%)</title><rect x="57.6360%" y="693" width="8.6820%" height="15" fill="rgb(232,99,1)" fg:x="551" fg:w="83"/><text x="57.8860%" y="703.50">crossbeam_ch..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (20 samples, 2.09%)</title><rect x="64.2259%" y="677" width="2.0921%" height="15" fill="rgb(237,95,45)" fg:x="614" fg:w="20"/><text x="64.4759%" y="687.50">c..</text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.10%)</title><rect x="66.2134%" y="661" width="0.1046%" height="15" fill="rgb(208,109,11)" fg:x="633" fg:w="1"/><text x="66.4634%" y="671.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.10%)</title><rect x="66.2134%" y="645" width="0.1046%" height="15" fill="rgb(216,190,48)" fg:x="633" fg:w="1"/><text x="66.4634%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.10%)</title><rect x="66.2134%" y="629" width="0.1046%" height="15" fill="rgb(251,171,36)" fg:x="633" fg:w="1"/><text x="66.4634%" y="639.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.10%)</title><rect x="66.7364%" y="645" width="0.1046%" height="15" fill="rgb(230,62,22)" fg:x="638" fg:w="1"/><text x="66.9864%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.42%)</title><rect x="66.7364%" y="661" width="0.4184%" height="15" fill="rgb(225,114,35)" fg:x="638" fg:w="4"/><text x="66.9864%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.31%)</title><rect x="66.8410%" y="645" width="0.3138%" height="15" fill="rgb(215,118,42)" fg:x="639" fg:w="3"/><text x="67.0910%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.31%)</title><rect x="66.8410%" y="629" width="0.3138%" height="15" fill="rgb(243,119,21)" fg:x="639" fg:w="3"/><text x="67.0910%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.31%)</title><rect x="66.8410%" y="613" width="0.3138%" height="15" fill="rgb(252,177,53)" fg:x="639" fg:w="3"/><text x="67.0910%" y="623.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.31%)</title><rect x="66.8410%" y="597" width="0.3138%" height="15" fill="rgb(237,209,29)" fg:x="639" fg:w="3"/><text x="67.0910%" y="607.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.31%)</title><rect x="66.8410%" y="581" width="0.3138%" height="15" fill="rgb(212,65,23)" fg:x="639" fg:w="3"/><text x="67.0910%" y="591.50"></text></g><g><title>_int_malloc (2 samples, 0.21%)</title><rect x="66.9456%" y="565" width="0.2092%" height="15" fill="rgb(230,222,46)" fg:x="640" fg:w="2"/><text x="67.1956%" y="575.50"></text></g><g><title>sysmalloc (1 samples, 0.10%)</title><rect x="67.0502%" y="549" width="0.1046%" height="15" fill="rgb(215,135,32)" fg:x="641" fg:w="1"/><text x="67.3002%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="67.0502%" y="533" width="0.1046%" height="15" fill="rgb(246,101,22)" fg:x="641" fg:w="1"/><text x="67.3002%" y="543.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (8 samples, 0.84%)</title><rect x="66.6318%" y="677" width="0.8368%" height="15" fill="rgb(206,107,13)" fg:x="637" fg:w="8"/><text x="66.8818%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.31%)</title><rect x="67.1548%" y="661" width="0.3138%" height="15" fill="rgb(250,100,44)" fg:x="642" fg:w="3"/><text x="67.4048%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.31%)</title><rect x="67.1548%" y="645" width="0.3138%" height="15" fill="rgb(231,147,38)" fg:x="642" fg:w="3"/><text x="67.4048%" y="655.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (16 samples, 1.67%)</title><rect x="66.3180%" y="709" width="1.6736%" height="15" fill="rgb(229,8,40)" fg:x="634" fg:w="16"/><text x="66.5680%" y="719.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (13 samples, 1.36%)</title><rect x="66.6318%" y="693" width="1.3598%" height="15" fill="rgb(221,135,30)" fg:x="637" fg:w="13"/><text x="66.8818%" y="703.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (5 samples, 0.52%)</title><rect x="67.4686%" y="677" width="0.5230%" height="15" fill="rgb(249,193,18)" fg:x="645" fg:w="5"/><text x="67.7186%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (5 samples, 0.52%)</title><rect x="67.4686%" y="661" width="0.5230%" height="15" fill="rgb(209,133,39)" fg:x="645" fg:w="5"/><text x="67.7186%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_or (5 samples, 0.52%)</title><rect x="67.4686%" y="645" width="0.5230%" height="15" fill="rgb(232,100,14)" fg:x="645" fg:w="5"/><text x="67.7186%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.21%)</title><rect x="67.9916%" y="693" width="0.2092%" height="15" fill="rgb(224,185,1)" fg:x="650" fg:w="2"/><text x="68.2416%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.21%)</title><rect x="67.9916%" y="677" width="0.2092%" height="15" fill="rgb(223,139,8)" fg:x="650" fg:w="2"/><text x="68.2416%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.10%)</title><rect x="68.0962%" y="661" width="0.1046%" height="15" fill="rgb(232,213,38)" fg:x="651" fg:w="1"/><text x="68.3462%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="68.0962%" y="645" width="0.1046%" height="15" fill="rgb(207,94,22)" fg:x="651" fg:w="1"/><text x="68.3462%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (1 samples, 0.10%)</title><rect x="68.2008%" y="693" width="0.1046%" height="15" fill="rgb(219,183,54)" fg:x="652" fg:w="1"/><text x="68.4508%" y="703.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="68.2008%" y="677" width="0.1046%" height="15" fill="rgb(216,185,54)" fg:x="652" fg:w="1"/><text x="68.4508%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.10%)</title><rect x="68.2008%" y="661" width="0.1046%" height="15" fill="rgb(254,217,39)" fg:x="652" fg:w="1"/><text x="68.4508%" y="671.50"></text></g><g><title>syscall (1 samples, 0.10%)</title><rect x="68.2008%" y="645" width="0.1046%" height="15" fill="rgb(240,178,23)" fg:x="652" fg:w="1"/><text x="68.4508%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="68.2008%" y="629" width="0.1046%" height="15" fill="rgb(218,11,47)" fg:x="652" fg:w="1"/><text x="68.4508%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="68.2008%" y="613" width="0.1046%" height="15" fill="rgb(218,51,51)" fg:x="652" fg:w="1"/><text x="68.4508%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="68.2008%" y="597" width="0.1046%" height="15" fill="rgb(238,126,27)" fg:x="652" fg:w="1"/><text x="68.4508%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="68.3054%" y="677" width="0.1046%" height="15" fill="rgb(249,202,22)" fg:x="653" fg:w="1"/><text x="68.5554%" y="687.50"></text></g><g><title>__GI___libc_free (2 samples, 0.21%)</title><rect x="68.4100%" y="597" width="0.2092%" height="15" fill="rgb(254,195,49)" fg:x="654" fg:w="2"/><text x="68.6600%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.42%)</title><rect x="68.4100%" y="677" width="0.4184%" height="15" fill="rgb(208,123,14)" fg:x="654" fg:w="4"/><text x="68.6600%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.42%)</title><rect x="68.4100%" y="661" width="0.4184%" height="15" fill="rgb(224,200,8)" fg:x="654" fg:w="4"/><text x="68.6600%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.42%)</title><rect x="68.4100%" y="645" width="0.4184%" height="15" fill="rgb(217,61,36)" fg:x="654" fg:w="4"/><text x="68.6600%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.42%)</title><rect x="68.4100%" y="629" width="0.4184%" height="15" fill="rgb(206,35,45)" fg:x="654" fg:w="4"/><text x="68.6600%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.42%)</title><rect x="68.4100%" y="613" width="0.4184%" height="15" fill="rgb(217,65,33)" fg:x="654" fg:w="4"/><text x="68.6600%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.21%)</title><rect x="68.6192%" y="597" width="0.2092%" height="15" fill="rgb(222,158,48)" fg:x="656" fg:w="2"/><text x="68.8692%" y="607.50"></text></g><g><title>__GI___libc_free (3 samples, 0.31%)</title><rect x="68.8285%" y="565" width="0.3138%" height="15" fill="rgb(254,2,54)" fg:x="658" fg:w="3"/><text x="69.0785%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (4 samples, 0.42%)</title><rect x="68.8285%" y="677" width="0.4184%" height="15" fill="rgb(250,143,38)" fg:x="658" fg:w="4"/><text x="69.0785%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.42%)</title><rect x="68.8285%" y="661" width="0.4184%" height="15" fill="rgb(248,25,0)" fg:x="658" fg:w="4"/><text x="69.0785%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.42%)</title><rect x="68.8285%" y="645" width="0.4184%" height="15" fill="rgb(206,152,27)" fg:x="658" fg:w="4"/><text x="69.0785%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.42%)</title><rect x="68.8285%" y="629" width="0.4184%" height="15" fill="rgb(240,77,30)" fg:x="658" fg:w="4"/><text x="69.0785%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.42%)</title><rect x="68.8285%" y="613" width="0.4184%" height="15" fill="rgb(231,5,3)" fg:x="658" fg:w="4"/><text x="69.0785%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.42%)</title><rect x="68.8285%" y="597" width="0.4184%" height="15" fill="rgb(207,226,32)" fg:x="658" fg:w="4"/><text x="69.0785%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.42%)</title><rect x="68.8285%" y="581" width="0.4184%" height="15" fill="rgb(222,207,47)" fg:x="658" fg:w="4"/><text x="69.0785%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.10%)</title><rect x="69.1423%" y="565" width="0.1046%" height="15" fill="rgb(229,115,45)" fg:x="661" fg:w="1"/><text x="69.3923%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (64 samples, 6.69%)</title><rect x="70.3975%" y="389" width="6.6946%" height="15" fill="rgb(224,191,6)" fg:x="673" fg:w="64"/><text x="70.6475%" y="399.50">&lt;core::it..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (60 samples, 6.28%)</title><rect x="70.8159%" y="373" width="6.2762%" height="15" fill="rgb(230,227,24)" fg:x="677" fg:w="60"/><text x="71.0659%" y="383.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (60 samples, 6.28%)</title><rect x="70.8159%" y="357" width="6.2762%" height="15" fill="rgb(228,80,19)" fg:x="677" fg:w="60"/><text x="71.0659%" y="367.50">&lt;alloc::..</text></g><g><title>hex::val (48 samples, 5.02%)</title><rect x="72.0711%" y="341" width="5.0209%" height="15" fill="rgb(247,229,0)" fg:x="689" fg:w="48"/><text x="72.3211%" y="351.50">hex::v..</text></g><g><title>core::cmp::min (1 samples, 0.10%)</title><rect x="77.7197%" y="373" width="0.1046%" height="15" fill="rgb(237,194,15)" fg:x="743" fg:w="1"/><text x="77.9697%" y="383.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.10%)</title><rect x="77.7197%" y="357" width="0.1046%" height="15" fill="rgb(219,203,20)" fg:x="743" fg:w="1"/><text x="77.9697%" y="367.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.10%)</title><rect x="77.7197%" y="341" width="0.1046%" height="15" fill="rgb(234,128,8)" fg:x="743" fg:w="1"/><text x="77.9697%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 8.37%)</title><rect x="69.6653%" y="485" width="8.3682%" height="15" fill="rgb(248,202,8)" fg:x="666" fg:w="80"/><text x="69.9153%" y="495.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (80 samples, 8.37%)</title><rect x="69.6653%" y="469" width="8.3682%" height="15" fill="rgb(206,104,37)" fg:x="666" fg:w="80"/><text x="69.9153%" y="479.50">core::iter::..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (80 samples, 8.37%)</title><rect x="69.6653%" y="453" width="8.3682%" height="15" fill="rgb(223,8,27)" fg:x="666" fg:w="80"/><text x="69.9153%" y="463.50">&lt;core::iter:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (77 samples, 8.05%)</title><rect x="69.9791%" y="437" width="8.0544%" height="15" fill="rgb(216,217,28)" fg:x="669" fg:w="77"/><text x="70.2291%" y="447.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73 samples, 7.64%)</title><rect x="70.3975%" y="421" width="7.6360%" height="15" fill="rgb(249,199,1)" fg:x="673" fg:w="73"/><text x="70.6475%" y="431.50">&lt;core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (73 samples, 7.64%)</title><rect x="70.3975%" y="405" width="7.6360%" height="15" fill="rgb(240,85,17)" fg:x="673" fg:w="73"/><text x="70.6475%" y="415.50">core::iter..</text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.94%)</title><rect x="77.0921%" y="389" width="0.9414%" height="15" fill="rgb(206,108,45)" fg:x="737" fg:w="9"/><text x="77.3421%" y="399.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (2 samples, 0.21%)</title><rect x="77.8243%" y="373" width="0.2092%" height="15" fill="rgb(245,210,41)" fg:x="744" fg:w="2"/><text x="78.0743%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.21%)</title><rect x="77.8243%" y="357" width="0.2092%" height="15" fill="rgb(206,13,37)" fg:x="744" fg:w="2"/><text x="78.0743%" y="367.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.21%)</title><rect x="77.8243%" y="341" width="0.2092%" height="15" fill="rgb(250,61,18)" fg:x="744" fg:w="2"/><text x="78.0743%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (3 samples, 0.31%)</title><rect x="78.0335%" y="485" width="0.3138%" height="15" fill="rgb(235,172,48)" fg:x="746" fg:w="3"/><text x="78.2835%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.10%)</title><rect x="78.2427%" y="469" width="0.1046%" height="15" fill="rgb(249,201,17)" fg:x="748" fg:w="1"/><text x="78.4927%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.10%)</title><rect x="78.3473%" y="485" width="0.1046%" height="15" fill="rgb(219,208,6)" fg:x="749" fg:w="1"/><text x="78.5973%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.10%)</title><rect x="78.3473%" y="469" width="0.1046%" height="15" fill="rgb(248,31,23)" fg:x="749" fg:w="1"/><text x="78.5973%" y="479.50"></text></g><g><title>__lll_lock_wait_private (5 samples, 0.52%)</title><rect x="79.6025%" y="341" width="0.5230%" height="15" fill="rgb(245,15,42)" fg:x="761" fg:w="5"/><text x="79.8525%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="325" width="0.5230%" height="15" fill="rgb(222,217,39)" fg:x="761" fg:w="5"/><text x="79.8525%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="309" width="0.5230%" height="15" fill="rgb(210,219,27)" fg:x="761" fg:w="5"/><text x="79.8525%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="293" width="0.5230%" height="15" fill="rgb(252,166,36)" fg:x="761" fg:w="5"/><text x="79.8525%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="277" width="0.5230%" height="15" fill="rgb(245,132,34)" fg:x="761" fg:w="5"/><text x="79.8525%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="261" width="0.5230%" height="15" fill="rgb(236,54,3)" fg:x="761" fg:w="5"/><text x="79.8525%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="245" width="0.5230%" height="15" fill="rgb(241,173,43)" fg:x="761" fg:w="5"/><text x="79.8525%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="229" width="0.5230%" height="15" fill="rgb(215,190,9)" fg:x="761" fg:w="5"/><text x="79.8525%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="213" width="0.5230%" height="15" fill="rgb(242,101,16)" fg:x="761" fg:w="5"/><text x="79.8525%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="197" width="0.5230%" height="15" fill="rgb(223,190,21)" fg:x="761" fg:w="5"/><text x="79.8525%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="181" width="0.5230%" height="15" fill="rgb(215,228,25)" fg:x="761" fg:w="5"/><text x="79.8525%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="165" width="0.5230%" height="15" fill="rgb(225,36,22)" fg:x="761" fg:w="5"/><text x="79.8525%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="149" width="0.5230%" height="15" fill="rgb(251,106,46)" fg:x="761" fg:w="5"/><text x="79.8525%" y="159.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="133" width="0.5230%" height="15" fill="rgb(208,90,1)" fg:x="761" fg:w="5"/><text x="79.8525%" y="143.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="79.6025%" y="117" width="0.5230%" height="15" fill="rgb(243,10,4)" fg:x="761" fg:w="5"/><text x="79.8525%" y="127.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="80.4393%" y="325" width="0.1046%" height="15" fill="rgb(212,137,27)" fg:x="769" fg:w="1"/><text x="80.6893%" y="335.50"></text></g><g><title>_int_free (3 samples, 0.31%)</title><rect x="80.5439%" y="325" width="0.3138%" height="15" fill="rgb(231,220,49)" fg:x="770" fg:w="3"/><text x="80.7939%" y="335.50"></text></g><g><title>__GI___libc_realloc (23 samples, 2.41%)</title><rect x="78.5565%" y="357" width="2.4059%" height="15" fill="rgb(237,96,20)" fg:x="751" fg:w="23"/><text x="78.8065%" y="367.50">__..</text></g><g><title>_int_realloc (8 samples, 0.84%)</title><rect x="80.1255%" y="341" width="0.8368%" height="15" fill="rgb(239,229,30)" fg:x="766" fg:w="8"/><text x="80.3755%" y="351.50"></text></g><g><title>_int_malloc (1 samples, 0.10%)</title><rect x="80.8577%" y="325" width="0.1046%" height="15" fill="rgb(219,65,33)" fg:x="773" fg:w="1"/><text x="81.1077%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (26 samples, 2.72%)</title><rect x="78.5565%" y="405" width="2.7197%" height="15" fill="rgb(243,134,7)" fg:x="751" fg:w="26"/><text x="78.8065%" y="415.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (26 samples, 2.72%)</title><rect x="78.5565%" y="389" width="2.7197%" height="15" fill="rgb(216,177,54)" fg:x="751" fg:w="26"/><text x="78.8065%" y="399.50">al..</text></g><g><title>alloc::alloc::realloc (26 samples, 2.72%)</title><rect x="78.5565%" y="373" width="2.7197%" height="15" fill="rgb(211,160,20)" fg:x="751" fg:w="26"/><text x="78.8065%" y="383.50">al..</text></g><g><title>__rust_realloc (3 samples, 0.31%)</title><rect x="80.9623%" y="357" width="0.3138%" height="15" fill="rgb(239,85,39)" fg:x="774" fg:w="3"/><text x="81.2123%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 2.93%)</title><rect x="78.4519%" y="421" width="2.9289%" height="15" fill="rgb(232,125,22)" fg:x="750" fg:w="28"/><text x="78.7019%" y="431.50">al..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.10%)</title><rect x="81.2762%" y="405" width="0.1046%" height="15" fill="rgb(244,57,34)" fg:x="777" fg:w="1"/><text x="81.5262%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (29 samples, 3.03%)</title><rect x="78.4519%" y="485" width="3.0335%" height="15" fill="rgb(214,203,32)" fg:x="750" fg:w="29"/><text x="78.7019%" y="495.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 3.03%)</title><rect x="78.4519%" y="469" width="3.0335%" height="15" fill="rgb(207,58,43)" fg:x="750" fg:w="29"/><text x="78.7019%" y="479.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 3.03%)</title><rect x="78.4519%" y="453" width="3.0335%" height="15" fill="rgb(215,193,15)" fg:x="750" fg:w="29"/><text x="78.7019%" y="463.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 3.03%)</title><rect x="78.4519%" y="437" width="3.0335%" height="15" fill="rgb(232,15,44)" fg:x="750" fg:w="29"/><text x="78.7019%" y="447.50">all..</text></g><g><title>core::cmp::max (1 samples, 0.10%)</title><rect x="81.3808%" y="421" width="0.1046%" height="15" fill="rgb(212,3,48)" fg:x="778" fg:w="1"/><text x="81.6308%" y="431.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.10%)</title><rect x="81.3808%" y="405" width="0.1046%" height="15" fill="rgb(218,128,7)" fg:x="778" fg:w="1"/><text x="81.6308%" y="415.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.10%)</title><rect x="81.3808%" y="389" width="0.1046%" height="15" fill="rgb(226,216,39)" fg:x="778" fg:w="1"/><text x="81.6308%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.21%)</title><rect x="81.4854%" y="485" width="0.2092%" height="15" fill="rgb(243,47,51)" fg:x="779" fg:w="2"/><text x="81.7354%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (124 samples, 12.97%)</title><rect x="69.3515%" y="517" width="12.9707%" height="15" fill="rgb(241,183,40)" fg:x="663" fg:w="124"/><text x="69.6015%" y="527.50">&lt;alloc::vec::Vec&lt;T,..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (124 samples, 12.97%)</title><rect x="69.3515%" y="501" width="12.9707%" height="15" fill="rgb(231,217,32)" fg:x="663" fg:w="124"/><text x="69.6015%" y="511.50">alloc::vec::Vec&lt;T,A..</text></g><g><title>core::ptr::write (6 samples, 0.63%)</title><rect x="81.6946%" y="485" width="0.6276%" height="15" fill="rgb(229,61,38)" fg:x="781" fg:w="6"/><text x="81.9446%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="82.3222%" y="517" width="0.1046%" height="15" fill="rgb(225,210,5)" fg:x="787" fg:w="1"/><text x="82.5722%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.10%)</title><rect x="82.3222%" y="501" width="0.1046%" height="15" fill="rgb(231,79,45)" fg:x="787" fg:w="1"/><text x="82.5722%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="82.3222%" y="485" width="0.1046%" height="15" fill="rgb(224,100,7)" fg:x="787" fg:w="1"/><text x="82.5722%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="82.3222%" y="469" width="0.1046%" height="15" fill="rgb(241,198,18)" fg:x="787" fg:w="1"/><text x="82.5722%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.10%)</title><rect x="82.3222%" y="453" width="0.1046%" height="15" fill="rgb(252,97,53)" fg:x="787" fg:w="1"/><text x="82.5722%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.10%)</title><rect x="82.3222%" y="437" width="0.1046%" height="15" fill="rgb(220,88,7)" fg:x="787" fg:w="1"/><text x="82.5722%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.10%)</title><rect x="82.3222%" y="421" width="0.1046%" height="15" fill="rgb(213,176,14)" fg:x="787" fg:w="1"/><text x="82.5722%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.10%)</title><rect x="82.3222%" y="405" width="0.1046%" height="15" fill="rgb(246,73,7)" fg:x="787" fg:w="1"/><text x="82.5722%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (1 samples, 0.10%)</title><rect x="82.3222%" y="389" width="0.1046%" height="15" fill="rgb(245,64,36)" fg:x="787" fg:w="1"/><text x="82.5722%" y="399.50"></text></g><g><title>hex::val (1 samples, 0.10%)</title><rect x="82.3222%" y="373" width="0.1046%" height="15" fill="rgb(245,80,10)" fg:x="787" fg:w="1"/><text x="82.5722%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.10%)</title><rect x="82.4268%" y="517" width="0.1046%" height="15" fill="rgb(232,107,50)" fg:x="788" fg:w="1"/><text x="82.6768%" y="527.50"></text></g><g><title>hex::decode (134 samples, 14.02%)</title><rect x="69.2469%" y="677" width="14.0167%" height="15" fill="rgb(253,3,0)" fg:x="662" fg:w="134"/><text x="69.4969%" y="687.50">hex::decode</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (134 samples, 14.02%)</title><rect x="69.2469%" y="661" width="14.0167%" height="15" fill="rgb(212,99,53)" fg:x="662" fg:w="134"/><text x="69.4969%" y="671.50">&lt;alloc::vec::Vec&lt;u8&gt; ..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (134 samples, 14.02%)</title><rect x="69.2469%" y="645" width="14.0167%" height="15" fill="rgb(249,111,54)" fg:x="662" fg:w="134"/><text x="69.4969%" y="655.50">core::iter::traits::i..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (134 samples, 14.02%)</title><rect x="69.2469%" y="629" width="14.0167%" height="15" fill="rgb(249,55,30)" fg:x="662" fg:w="134"/><text x="69.4969%" y="639.50">&lt;core::result::Result..</text></g><g><title>core::iter::adapters::try_process (134 samples, 14.02%)</title><rect x="69.2469%" y="613" width="14.0167%" height="15" fill="rgb(237,47,42)" fg:x="662" fg:w="134"/><text x="69.4969%" y="623.50">core::iter::adapters:..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (134 samples, 14.02%)</title><rect x="69.2469%" y="597" width="14.0167%" height="15" fill="rgb(211,20,18)" fg:x="662" fg:w="134"/><text x="69.4969%" y="607.50">&lt;core::result::Result..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (134 samples, 14.02%)</title><rect x="69.2469%" y="581" width="14.0167%" height="15" fill="rgb(231,203,46)" fg:x="662" fg:w="134"/><text x="69.4969%" y="591.50">core::iter::traits::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (134 samples, 14.02%)</title><rect x="69.2469%" y="565" width="14.0167%" height="15" fill="rgb(237,142,3)" fg:x="662" fg:w="134"/><text x="69.4969%" y="575.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (134 samples, 14.02%)</title><rect x="69.2469%" y="549" width="14.0167%" height="15" fill="rgb(241,107,1)" fg:x="662" fg:w="134"/><text x="69.4969%" y="559.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (134 samples, 14.02%)</title><rect x="69.2469%" y="533" width="14.0167%" height="15" fill="rgb(229,83,13)" fg:x="662" fg:w="134"/><text x="69.4969%" y="543.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.73%)</title><rect x="82.5314%" y="517" width="0.7322%" height="15" fill="rgb(241,91,40)" fg:x="789" fg:w="7"/><text x="82.7814%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.73%)</title><rect x="82.5314%" y="501" width="0.7322%" height="15" fill="rgb(225,3,45)" fg:x="789" fg:w="7"/><text x="82.7814%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.73%)</title><rect x="82.5314%" y="485" width="0.7322%" height="15" fill="rgb(244,223,14)" fg:x="789" fg:w="7"/><text x="82.7814%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.73%)</title><rect x="82.5314%" y="469" width="0.7322%" height="15" fill="rgb(224,124,37)" fg:x="789" fg:w="7"/><text x="82.7814%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.73%)</title><rect x="82.5314%" y="453" width="0.7322%" height="15" fill="rgb(251,171,30)" fg:x="789" fg:w="7"/><text x="82.7814%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.73%)</title><rect x="82.5314%" y="437" width="0.7322%" height="15" fill="rgb(236,46,54)" fg:x="789" fg:w="7"/><text x="82.7814%" y="447.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.73%)</title><rect x="82.5314%" y="421" width="0.7322%" height="15" fill="rgb(245,213,5)" fg:x="789" fg:w="7"/><text x="82.7814%" y="431.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.73%)</title><rect x="82.5314%" y="405" width="0.7322%" height="15" fill="rgb(230,144,27)" fg:x="789" fg:w="7"/><text x="82.7814%" y="415.50"></text></g><g><title>alloc::string::String::reserve (4 samples, 0.42%)</title><rect x="83.2636%" y="581" width="0.4184%" height="15" fill="rgb(220,86,6)" fg:x="796" fg:w="4"/><text x="83.5136%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.42%)</title><rect x="83.2636%" y="565" width="0.4184%" height="15" fill="rgb(240,20,13)" fg:x="796" fg:w="4"/><text x="83.5136%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.42%)</title><rect x="83.2636%" y="549" width="0.4184%" height="15" fill="rgb(217,89,34)" fg:x="796" fg:w="4"/><text x="83.5136%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.42%)</title><rect x="83.2636%" y="533" width="0.4184%" height="15" fill="rgb(229,13,5)" fg:x="796" fg:w="4"/><text x="83.5136%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.42%)</title><rect x="83.2636%" y="517" width="0.4184%" height="15" fill="rgb(244,67,35)" fg:x="796" fg:w="4"/><text x="83.5136%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.31%)</title><rect x="83.3682%" y="501" width="0.3138%" height="15" fill="rgb(221,40,2)" fg:x="797" fg:w="3"/><text x="83.6182%" y="511.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.31%)</title><rect x="83.3682%" y="485" width="0.3138%" height="15" fill="rgb(237,157,21)" fg:x="797" fg:w="3"/><text x="83.6182%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.21%)</title><rect x="83.9958%" y="533" width="0.2092%" height="15" fill="rgb(222,94,11)" fg:x="803" fg:w="2"/><text x="84.2458%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.21%)</title><rect x="83.9958%" y="517" width="0.2092%" height="15" fill="rgb(249,113,6)" fg:x="803" fg:w="2"/><text x="84.2458%" y="527.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitAnd&lt;u8&gt;&gt;::bitand (1 samples, 0.10%)</title><rect x="85.0418%" y="501" width="0.1046%" height="15" fill="rgb(238,137,36)" fg:x="813" fg:w="1"/><text x="85.2918%" y="511.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.10%)</title><rect x="85.0418%" y="485" width="0.1046%" height="15" fill="rgb(210,102,26)" fg:x="813" fg:w="1"/><text x="85.2918%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 1.05%)</title><rect x="84.2050%" y="533" width="1.0460%" height="15" fill="rgb(218,30,30)" fg:x="805" fg:w="10"/><text x="84.4550%" y="543.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (10 samples, 1.05%)</title><rect x="84.2050%" y="517" width="1.0460%" height="15" fill="rgb(214,67,26)" fg:x="805" fg:w="10"/><text x="84.4550%" y="527.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.10%)</title><rect x="85.1464%" y="501" width="0.1046%" height="15" fill="rgb(251,9,53)" fg:x="814" fg:w="1"/><text x="85.3964%" y="511.50"></text></g><g><title>&lt;u8 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.10%)</title><rect x="85.1464%" y="485" width="0.1046%" height="15" fill="rgb(228,204,25)" fg:x="814" fg:w="1"/><text x="85.3964%" y="495.50"></text></g><g><title>core::ptr::read (1 samples, 0.10%)</title><rect x="85.2510%" y="501" width="0.1046%" height="15" fill="rgb(207,153,8)" fg:x="815" fg:w="1"/><text x="85.5010%" y="511.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 1.67%)</title><rect x="83.7866%" y="549" width="1.6736%" height="15" fill="rgb(242,9,16)" fg:x="801" fg:w="16"/><text x="84.0366%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.21%)</title><rect x="85.2510%" y="533" width="0.2092%" height="15" fill="rgb(217,211,10)" fg:x="815" fg:w="2"/><text x="85.5010%" y="543.50"></text></g><g><title>core::mem::replace (2 samples, 0.21%)</title><rect x="85.2510%" y="517" width="0.2092%" height="15" fill="rgb(219,228,52)" fg:x="815" fg:w="2"/><text x="85.5010%" y="527.50"></text></g><g><title>core::ptr::write (1 samples, 0.10%)</title><rect x="85.3556%" y="501" width="0.1046%" height="15" fill="rgb(231,92,29)" fg:x="816" fg:w="1"/><text x="85.6056%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.31%)</title><rect x="86.1925%" y="485" width="0.3138%" height="15" fill="rgb(232,8,23)" fg:x="824" fg:w="3"/><text x="86.4425%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.31%)</title><rect x="86.1925%" y="469" width="0.3138%" height="15" fill="rgb(216,211,34)" fg:x="824" fg:w="3"/><text x="86.4425%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 1.78%)</title><rect x="85.4603%" y="501" width="1.7782%" height="15" fill="rgb(236,151,0)" fg:x="817" fg:w="17"/><text x="85.7103%" y="511.50">a..</text></g><g><title>core::ptr::write (7 samples, 0.73%)</title><rect x="86.5063%" y="485" width="0.7322%" height="15" fill="rgb(209,168,3)" fg:x="827" fg:w="7"/><text x="86.7563%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (39 samples, 4.08%)</title><rect x="83.2636%" y="629" width="4.0795%" height="15" fill="rgb(208,129,28)" fg:x="796" fg:w="39"/><text x="83.5136%" y="639.50">core..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (39 samples, 4.08%)</title><rect x="83.2636%" y="613" width="4.0795%" height="15" fill="rgb(229,78,22)" fg:x="796" fg:w="39"/><text x="83.5136%" y="623.50">&lt;all..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (39 samples, 4.08%)</title><rect x="83.2636%" y="597" width="4.0795%" height="15" fill="rgb(228,187,13)" fg:x="796" fg:w="39"/><text x="83.5136%" y="607.50">&lt;all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (35 samples, 3.66%)</title><rect x="83.6820%" y="581" width="3.6611%" height="15" fill="rgb(240,119,24)" fg:x="800" fg:w="35"/><text x="83.9320%" y="591.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (35 samples, 3.66%)</title><rect x="83.6820%" y="565" width="3.6611%" height="15" fill="rgb(209,194,42)" fg:x="800" fg:w="35"/><text x="83.9320%" y="575.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (18 samples, 1.88%)</title><rect x="85.4603%" y="549" width="1.8828%" height="15" fill="rgb(247,200,46)" fg:x="817" fg:w="18"/><text x="85.7103%" y="559.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (18 samples, 1.88%)</title><rect x="85.4603%" y="533" width="1.8828%" height="15" fill="rgb(218,76,16)" fg:x="817" fg:w="18"/><text x="85.7103%" y="543.50">&lt;..</text></g><g><title>alloc::string::String::push (18 samples, 1.88%)</title><rect x="85.4603%" y="517" width="1.8828%" height="15" fill="rgb(225,21,48)" fg:x="817" fg:w="18"/><text x="85.7103%" y="527.50">a..</text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.10%)</title><rect x="87.2385%" y="501" width="0.1046%" height="15" fill="rgb(239,223,50)" fg:x="834" fg:w="1"/><text x="87.4885%" y="511.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.10%)</title><rect x="87.2385%" y="485" width="0.1046%" height="15" fill="rgb(244,45,21)" fg:x="834" fg:w="1"/><text x="87.4885%" y="495.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (40 samples, 4.18%)</title><rect x="83.2636%" y="661" width="4.1841%" height="15" fill="rgb(232,33,43)" fg:x="796" fg:w="40"/><text x="83.5136%" y="671.50">&lt;T as..</text></g><g><title>hex::encode_to_iter (40 samples, 4.18%)</title><rect x="83.2636%" y="645" width="4.1841%" height="15" fill="rgb(209,8,3)" fg:x="796" fg:w="40"/><text x="83.5136%" y="655.50">hex::..</text></g><g><title>hex::BytesToHexChars::new (1 samples, 0.10%)</title><rect x="87.3431%" y="629" width="0.1046%" height="15" fill="rgb(214,25,53)" fg:x="835" fg:w="1"/><text x="87.5931%" y="639.50"></text></g><g><title>__GI___libc_free (3 samples, 0.31%)</title><rect x="87.4477%" y="581" width="0.3138%" height="15" fill="rgb(254,186,54)" fg:x="836" fg:w="3"/><text x="87.6977%" y="591.50"></text></g><g><title>lab4::checksum::Checksum::update (189 samples, 19.77%)</title><rect x="68.3054%" y="693" width="19.7699%" height="15" fill="rgb(208,174,49)" fg:x="653" fg:w="189"/><text x="68.5554%" y="703.50">lab4::checksum::Checksum::update</text></g><g><title>hex::encode (46 samples, 4.81%)</title><rect x="83.2636%" y="677" width="4.8117%" height="15" fill="rgb(233,191,51)" fg:x="796" fg:w="46"/><text x="83.5136%" y="687.50">hex::e..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.63%)</title><rect x="87.4477%" y="661" width="0.6276%" height="15" fill="rgb(222,134,10)" fg:x="836" fg:w="6"/><text x="87.6977%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.63%)</title><rect x="87.4477%" y="645" width="0.6276%" height="15" fill="rgb(230,226,20)" fg:x="836" fg:w="6"/><text x="87.6977%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.63%)</title><rect x="87.4477%" y="629" width="0.6276%" height="15" fill="rgb(251,111,25)" fg:x="836" fg:w="6"/><text x="87.6977%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.63%)</title><rect x="87.4477%" y="613" width="0.6276%" height="15" fill="rgb(224,40,46)" fg:x="836" fg:w="6"/><text x="87.6977%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.63%)</title><rect x="87.4477%" y="597" width="0.6276%" height="15" fill="rgb(236,108,47)" fg:x="836" fg:w="6"/><text x="87.6977%" y="607.50"></text></g><g><title>_int_free (3 samples, 0.31%)</title><rect x="87.7615%" y="581" width="0.3138%" height="15" fill="rgb(234,93,0)" fg:x="839" fg:w="3"/><text x="88.0115%" y="591.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (2 samples, 0.21%)</title><rect x="88.0753%" y="661" width="0.2092%" height="15" fill="rgb(224,213,32)" fg:x="842" fg:w="2"/><text x="88.3253%" y="671.50"></text></g><g><title>sha2::sha256::Engine256::update (2 samples, 0.21%)</title><rect x="88.0753%" y="645" width="0.2092%" height="15" fill="rgb(251,11,48)" fg:x="842" fg:w="2"/><text x="88.3253%" y="655.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (2 samples, 0.21%)</title><rect x="88.0753%" y="629" width="0.2092%" height="15" fill="rgb(236,173,5)" fg:x="842" fg:w="2"/><text x="88.3253%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.21%)</title><rect x="88.0753%" y="613" width="0.2092%" height="15" fill="rgb(230,95,12)" fg:x="842" fg:w="2"/><text x="88.3253%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.21%)</title><rect x="88.0753%" y="597" width="0.2092%" height="15" fill="rgb(232,209,1)" fg:x="842" fg:w="2"/><text x="88.3253%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.21%)</title><rect x="88.0753%" y="581" width="0.2092%" height="15" fill="rgb(232,6,1)" fg:x="842" fg:w="2"/><text x="88.3253%" y="591.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::digest_pad (1 samples, 0.10%)</title><rect x="88.2845%" y="581" width="0.1046%" height="15" fill="rgb(210,224,50)" fg:x="844" fg:w="1"/><text x="88.5345%" y="591.50"></text></g><g><title>block_buffer::set_zero (1 samples, 0.10%)</title><rect x="88.2845%" y="565" width="0.1046%" height="15" fill="rgb(228,127,35)" fg:x="844" fg:w="1"/><text x="88.5345%" y="575.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.10%)</title><rect x="88.2845%" y="549" width="0.1046%" height="15" fill="rgb(245,102,45)" fg:x="844" fg:w="1"/><text x="88.5345%" y="559.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.10%)</title><rect x="88.2845%" y="533" width="0.1046%" height="15" fill="rgb(214,1,49)" fg:x="844" fg:w="1"/><text x="88.5345%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (1 samples, 0.10%)</title><rect x="88.3891%" y="517" width="0.1046%" height="15" fill="rgb(226,163,40)" fg:x="845" fg:w="1"/><text x="88.6391%" y="527.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (1 samples, 0.10%)</title><rect x="88.3891%" y="501" width="0.1046%" height="15" fill="rgb(239,212,28)" fg:x="845" fg:w="1"/><text x="88.6391%" y="511.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.10%)</title><rect x="88.3891%" y="485" width="0.1046%" height="15" fill="rgb(220,20,13)" fg:x="845" fg:w="1"/><text x="88.6391%" y="495.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.10%)</title><rect x="88.4937%" y="501" width="0.1046%" height="15" fill="rgb(210,164,35)" fg:x="846" fg:w="1"/><text x="88.7437%" y="511.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.10%)</title><rect x="88.4937%" y="485" width="0.1046%" height="15" fill="rgb(248,109,41)" fg:x="846" fg:w="1"/><text x="88.7437%" y="495.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.10%)</title><rect x="88.5983%" y="485" width="0.1046%" height="15" fill="rgb(238,23,50)" fg:x="847" fg:w="1"/><text x="88.8483%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.10%)</title><rect x="88.5983%" y="469" width="0.1046%" height="15" fill="rgb(211,48,49)" fg:x="847" fg:w="1"/><text x="88.8483%" y="479.50"></text></g><g><title>sha2::sha256::soft::or (5 samples, 0.52%)</title><rect x="88.7029%" y="453" width="0.5230%" height="15" fill="rgb(223,36,21)" fg:x="848" fg:w="5"/><text x="88.9529%" y="463.50"></text></g><g><title>sha2::sha256::soft::shl (1 samples, 0.10%)</title><rect x="89.2259%" y="453" width="0.1046%" height="15" fill="rgb(207,123,46)" fg:x="853" fg:w="1"/><text x="89.4759%" y="463.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (7 samples, 0.73%)</title><rect x="88.7029%" y="485" width="0.7322%" height="15" fill="rgb(240,218,32)" fg:x="848" fg:w="7"/><text x="88.9529%" y="495.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (7 samples, 0.73%)</title><rect x="88.7029%" y="469" width="0.7322%" height="15" fill="rgb(252,5,43)" fg:x="848" fg:w="7"/><text x="88.9529%" y="479.50"></text></g><g><title>sha2::sha256::soft::xor (1 samples, 0.10%)</title><rect x="89.3305%" y="453" width="0.1046%" height="15" fill="rgb(252,84,19)" fg:x="854" fg:w="1"/><text x="89.5805%" y="463.50"></text></g><g><title>sha2::sha256::soft::schedule (13 samples, 1.36%)</title><rect x="88.5983%" y="501" width="1.3598%" height="15" fill="rgb(243,152,39)" fg:x="847" fg:w="13"/><text x="88.8483%" y="511.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (5 samples, 0.52%)</title><rect x="89.4351%" y="485" width="0.5230%" height="15" fill="rgb(234,160,15)" fg:x="855" fg:w="5"/><text x="89.6851%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.21%)</title><rect x="89.7490%" y="469" width="0.2092%" height="15" fill="rgb(237,34,20)" fg:x="858" fg:w="2"/><text x="89.9990%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (10 samples, 1.05%)</title><rect x="91.1088%" y="485" width="1.0460%" height="15" fill="rgb(229,97,13)" fg:x="871" fg:w="10"/><text x="91.3588%" y="495.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (45 samples, 4.71%)</title><rect x="88.0753%" y="677" width="4.7071%" height="15" fill="rgb(234,71,50)" fg:x="842" fg:w="45"/><text x="88.3253%" y="687.50">&lt;D as..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (43 samples, 4.50%)</title><rect x="88.2845%" y="661" width="4.4979%" height="15" fill="rgb(253,155,4)" fg:x="844" fg:w="43"/><text x="88.5345%" y="671.50">diges..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (43 samples, 4.50%)</title><rect x="88.2845%" y="645" width="4.4979%" height="15" fill="rgb(222,185,37)" fg:x="844" fg:w="43"/><text x="88.5345%" y="655.50">&lt;D as..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (43 samples, 4.50%)</title><rect x="88.2845%" y="629" width="4.4979%" height="15" fill="rgb(251,177,13)" fg:x="844" fg:w="43"/><text x="88.5345%" y="639.50">&lt;sha2..</text></g><g><title>sha2::sha256::Engine256::finish (43 samples, 4.50%)</title><rect x="88.2845%" y="613" width="4.4979%" height="15" fill="rgb(250,179,40)" fg:x="844" fg:w="43"/><text x="88.5345%" y="623.50">sha2:..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (43 samples, 4.50%)</title><rect x="88.2845%" y="597" width="4.4979%" height="15" fill="rgb(242,44,2)" fg:x="844" fg:w="43"/><text x="88.5345%" y="607.50">block..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (42 samples, 4.39%)</title><rect x="88.3891%" y="581" width="4.3933%" height="15" fill="rgb(216,177,13)" fg:x="845" fg:w="42"/><text x="88.6391%" y="591.50">sha2:..</text></g><g><title>sha2::sha256::compress256 (42 samples, 4.39%)</title><rect x="88.3891%" y="565" width="4.3933%" height="15" fill="rgb(216,106,43)" fg:x="845" fg:w="42"/><text x="88.6391%" y="575.50">sha2:..</text></g><g><title>sha2::sha256::x86::compress (42 samples, 4.39%)</title><rect x="88.3891%" y="549" width="4.3933%" height="15" fill="rgb(216,183,2)" fg:x="845" fg:w="42"/><text x="88.6391%" y="559.50">sha2:..</text></g><g><title>sha2::sha256::soft::compress (42 samples, 4.39%)</title><rect x="88.3891%" y="533" width="4.3933%" height="15" fill="rgb(249,75,3)" fg:x="845" fg:w="42"/><text x="88.6391%" y="543.50">sha2:..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (41 samples, 4.29%)</title><rect x="88.4937%" y="517" width="4.2887%" height="15" fill="rgb(219,67,39)" fg:x="846" fg:w="41"/><text x="88.7437%" y="527.50">sha2:..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (27 samples, 2.82%)</title><rect x="89.9582%" y="501" width="2.8243%" height="15" fill="rgb(253,228,2)" fg:x="860" fg:w="27"/><text x="90.2082%" y="511.50">sh..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (6 samples, 0.63%)</title><rect x="92.1548%" y="485" width="0.6276%" height="15" fill="rgb(235,138,27)" fg:x="881" fg:w="6"/><text x="92.4048%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="92.8870%" y="485" width="0.1046%" height="15" fill="rgb(236,97,51)" fg:x="888" fg:w="1"/><text x="93.1370%" y="495.50"></text></g><g><title>alloc::string::String::reserve (2 samples, 0.21%)</title><rect x="92.8870%" y="581" width="0.2092%" height="15" fill="rgb(240,80,30)" fg:x="888" fg:w="2"/><text x="93.1370%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="92.8870%" y="565" width="0.2092%" height="15" fill="rgb(230,178,19)" fg:x="888" fg:w="2"/><text x="93.1370%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.21%)</title><rect x="92.8870%" y="549" width="0.2092%" height="15" fill="rgb(210,190,27)" fg:x="888" fg:w="2"/><text x="93.1370%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.21%)</title><rect x="92.8870%" y="533" width="0.2092%" height="15" fill="rgb(222,107,31)" fg:x="888" fg:w="2"/><text x="93.1370%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.21%)</title><rect x="92.8870%" y="517" width="0.2092%" height="15" fill="rgb(216,127,34)" fg:x="888" fg:w="2"/><text x="93.1370%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.21%)</title><rect x="92.8870%" y="501" width="0.2092%" height="15" fill="rgb(234,116,52)" fg:x="888" fg:w="2"/><text x="93.1370%" y="511.50"></text></g><g><title>__rust_alloc (1 samples, 0.10%)</title><rect x="92.9916%" y="485" width="0.1046%" height="15" fill="rgb(222,124,15)" fg:x="889" fg:w="1"/><text x="93.2416%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.10%)</title><rect x="93.5146%" y="533" width="0.1046%" height="15" fill="rgb(231,179,28)" fg:x="894" fg:w="1"/><text x="93.7646%" y="543.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.10%)</title><rect x="93.5146%" y="517" width="0.1046%" height="15" fill="rgb(226,93,45)" fg:x="894" fg:w="1"/><text x="93.7646%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.94%)</title><rect x="93.6192%" y="533" width="0.9414%" height="15" fill="rgb(215,8,51)" fg:x="895" fg:w="9"/><text x="93.8692%" y="543.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (9 samples, 0.94%)</title><rect x="93.6192%" y="517" width="0.9414%" height="15" fill="rgb(223,106,5)" fg:x="895" fg:w="9"/><text x="93.8692%" y="527.50"></text></g><g><title>core::ptr::read (2 samples, 0.21%)</title><rect x="94.5607%" y="501" width="0.2092%" height="15" fill="rgb(250,191,5)" fg:x="904" fg:w="2"/><text x="94.8107%" y="511.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 1.99%)</title><rect x="93.4100%" y="549" width="1.9874%" height="15" fill="rgb(242,132,44)" fg:x="893" fg:w="19"/><text x="93.6600%" y="559.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::take (8 samples, 0.84%)</title><rect x="94.5607%" y="533" width="0.8368%" height="15" fill="rgb(251,152,29)" fg:x="904" fg:w="8"/><text x="94.8107%" y="543.50"></text></g><g><title>core::mem::replace (8 samples, 0.84%)</title><rect x="94.5607%" y="517" width="0.8368%" height="15" fill="rgb(218,179,5)" fg:x="904" fg:w="8"/><text x="94.8107%" y="527.50"></text></g><g><title>core::ptr::write (6 samples, 0.63%)</title><rect x="94.7699%" y="501" width="0.6276%" height="15" fill="rgb(227,67,19)" fg:x="906" fg:w="6"/><text x="95.0199%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="485" width="0.6276%" height="15" fill="rgb(233,119,31)" fg:x="906" fg:w="6"/><text x="95.0199%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="469" width="0.6276%" height="15" fill="rgb(241,120,22)" fg:x="906" fg:w="6"/><text x="95.0199%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="453" width="0.6276%" height="15" fill="rgb(224,102,30)" fg:x="906" fg:w="6"/><text x="95.0199%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="437" width="0.6276%" height="15" fill="rgb(210,164,37)" fg:x="906" fg:w="6"/><text x="95.0199%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="421" width="0.6276%" height="15" fill="rgb(226,191,16)" fg:x="906" fg:w="6"/><text x="95.0199%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="405" width="0.6276%" height="15" fill="rgb(214,40,45)" fg:x="906" fg:w="6"/><text x="95.0199%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="389" width="0.6276%" height="15" fill="rgb(244,29,26)" fg:x="906" fg:w="6"/><text x="95.0199%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="373" width="0.6276%" height="15" fill="rgb(216,16,5)" fg:x="906" fg:w="6"/><text x="95.0199%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="357" width="0.6276%" height="15" fill="rgb(249,76,35)" fg:x="906" fg:w="6"/><text x="95.0199%" y="367.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="341" width="0.6276%" height="15" fill="rgb(207,11,44)" fg:x="906" fg:w="6"/><text x="95.0199%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="325" width="0.6276%" height="15" fill="rgb(228,190,49)" fg:x="906" fg:w="6"/><text x="95.0199%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="309" width="0.6276%" height="15" fill="rgb(214,173,12)" fg:x="906" fg:w="6"/><text x="95.0199%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="94.7699%" y="293" width="0.6276%" height="15" fill="rgb(218,26,35)" fg:x="906" fg:w="6"/><text x="95.0199%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (42 samples, 4.39%)</title><rect x="92.8870%" y="597" width="4.3933%" height="15" fill="rgb(220,200,19)" fg:x="888" fg:w="42"/><text x="93.1370%" y="607.50">&lt;allo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (40 samples, 4.18%)</title><rect x="93.0962%" y="581" width="4.1841%" height="15" fill="rgb(239,95,49)" fg:x="890" fg:w="40"/><text x="93.3462%" y="591.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (40 samples, 4.18%)</title><rect x="93.0962%" y="565" width="4.1841%" height="15" fill="rgb(235,85,53)" fg:x="890" fg:w="40"/><text x="93.3462%" y="575.50">core:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (18 samples, 1.88%)</title><rect x="95.3975%" y="549" width="1.8828%" height="15" fill="rgb(233,133,31)" fg:x="912" fg:w="18"/><text x="95.6475%" y="559.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (18 samples, 1.88%)</title><rect x="95.3975%" y="533" width="1.8828%" height="15" fill="rgb(218,25,20)" fg:x="912" fg:w="18"/><text x="95.6475%" y="543.50">&lt;..</text></g><g><title>alloc::string::String::push (18 samples, 1.88%)</title><rect x="95.3975%" y="517" width="1.8828%" height="15" fill="rgb(252,210,38)" fg:x="912" fg:w="18"/><text x="95.6475%" y="527.50">a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 1.88%)</title><rect x="95.3975%" y="501" width="1.8828%" height="15" fill="rgb(242,134,21)" fg:x="912" fg:w="18"/><text x="95.6475%" y="511.50">a..</text></g><g><title>core::ptr::write (5 samples, 0.52%)</title><rect x="96.7573%" y="485" width="0.5230%" height="15" fill="rgb(213,28,48)" fg:x="925" fg:w="5"/><text x="97.0073%" y="495.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (89 samples, 9.31%)</title><rect x="88.0753%" y="693" width="9.3096%" height="15" fill="rgb(250,196,2)" fg:x="842" fg:w="89"/><text x="88.3253%" y="703.50">lab4::checksu..</text></g><g><title>hex::encode (44 samples, 4.60%)</title><rect x="92.7824%" y="677" width="4.6025%" height="15" fill="rgb(227,5,17)" fg:x="887" fg:w="44"/><text x="93.0324%" y="687.50">hex::..</text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (44 samples, 4.60%)</title><rect x="92.7824%" y="661" width="4.6025%" height="15" fill="rgb(221,226,24)" fg:x="887" fg:w="44"/><text x="93.0324%" y="671.50">&lt;T as..</text></g><g><title>hex::encode_to_iter (44 samples, 4.60%)</title><rect x="92.7824%" y="645" width="4.6025%" height="15" fill="rgb(211,5,48)" fg:x="887" fg:w="44"/><text x="93.0324%" y="655.50">hex::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (44 samples, 4.60%)</title><rect x="92.7824%" y="629" width="4.6025%" height="15" fill="rgb(219,150,6)" fg:x="887" fg:w="44"/><text x="93.0324%" y="639.50">core:..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (44 samples, 4.60%)</title><rect x="92.7824%" y="613" width="4.6025%" height="15" fill="rgb(251,46,16)" fg:x="887" fg:w="44"/><text x="93.0324%" y="623.50">&lt;allo..</text></g><g><title>alloc::string::String::new (1 samples, 0.10%)</title><rect x="97.2803%" y="597" width="0.1046%" height="15" fill="rgb(220,204,40)" fg:x="930" fg:w="1"/><text x="97.5303%" y="607.50"></text></g><g><title>std::panic::catch_unwind (841 samples, 87.97%)</title><rect x="10.0418%" y="837" width="87.9707%" height="15" fill="rgb(211,85,2)" fg:x="96" fg:w="841"/><text x="10.2918%" y="847.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (841 samples, 87.97%)</title><rect x="10.0418%" y="821" width="87.9707%" height="15" fill="rgb(229,17,7)" fg:x="96" fg:w="841"/><text x="10.2918%" y="831.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (841 samples, 87.97%)</title><rect x="10.0418%" y="805" width="87.9707%" height="15" fill="rgb(239,72,28)" fg:x="96" fg:w="841"/><text x="10.2918%" y="815.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (841 samples, 87.97%)</title><rect x="10.0418%" y="789" width="87.9707%" height="15" fill="rgb(230,47,54)" fg:x="96" fg:w="841"/><text x="10.2918%" y="799.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (841 samples, 87.97%)</title><rect x="10.0418%" y="773" width="87.9707%" height="15" fill="rgb(214,50,8)" fg:x="96" fg:w="841"/><text x="10.2918%" y="783.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (841 samples, 87.97%)</title><rect x="10.0418%" y="757" width="87.9707%" height="15" fill="rgb(216,198,43)" fg:x="96" fg:w="841"/><text x="10.2918%" y="767.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (841 samples, 87.97%)</title><rect x="10.0418%" y="741" width="87.9707%" height="15" fill="rgb(234,20,35)" fg:x="96" fg:w="841"/><text x="10.2918%" y="751.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (391 samples, 40.90%)</title><rect x="57.1130%" y="725" width="40.8996%" height="15" fill="rgb(254,45,19)" fg:x="546" fg:w="391"/><text x="57.3630%" y="735.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (287 samples, 30.02%)</title><rect x="67.9916%" y="709" width="30.0209%" height="15" fill="rgb(219,14,44)" fg:x="650" fg:w="287"/><text x="68.2416%" y="719.50">lab4::student::Student::build_idea</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.63%)</title><rect x="97.3849%" y="693" width="0.6276%" height="15" fill="rgb(217,220,26)" fg:x="931" fg:w="6"/><text x="97.6349%" y="703.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (6 samples, 0.63%)</title><rect x="97.3849%" y="677" width="0.6276%" height="15" fill="rgb(213,158,28)" fg:x="931" fg:w="6"/><text x="97.6349%" y="687.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (6 samples, 0.63%)</title><rect x="97.3849%" y="661" width="0.6276%" height="15" fill="rgb(252,51,52)" fg:x="931" fg:w="6"/><text x="97.6349%" y="671.50"></text></g><g><title>std::sys::unix::futex::futex_wait (6 samples, 0.63%)</title><rect x="97.3849%" y="645" width="0.6276%" height="15" fill="rgb(246,89,16)" fg:x="931" fg:w="6"/><text x="97.6349%" y="655.50"></text></g><g><title>syscall (6 samples, 0.63%)</title><rect x="97.3849%" y="629" width="0.6276%" height="15" fill="rgb(216,158,49)" fg:x="931" fg:w="6"/><text x="97.6349%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="97.3849%" y="613" width="0.6276%" height="15" fill="rgb(236,107,19)" fg:x="931" fg:w="6"/><text x="97.6349%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="97.3849%" y="597" width="0.6276%" height="15" fill="rgb(228,185,30)" fg:x="931" fg:w="6"/><text x="97.6349%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="97.3849%" y="581" width="0.6276%" height="15" fill="rgb(246,134,8)" fg:x="931" fg:w="6"/><text x="97.6349%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="97.3849%" y="565" width="0.6276%" height="15" fill="rgb(214,143,50)" fg:x="931" fg:w="6"/><text x="97.6349%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="97.3849%" y="549" width="0.6276%" height="15" fill="rgb(228,75,8)" fg:x="931" fg:w="6"/><text x="97.6349%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="97.3849%" y="533" width="0.6276%" height="15" fill="rgb(207,175,4)" fg:x="931" fg:w="6"/><text x="97.6349%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="97.3849%" y="517" width="0.6276%" height="15" fill="rgb(205,108,24)" fg:x="931" fg:w="6"/><text x="97.6349%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="97.3849%" y="501" width="0.6276%" height="15" fill="rgb(244,120,49)" fg:x="931" fg:w="6"/><text x="97.6349%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="97.3849%" y="485" width="0.6276%" height="15" fill="rgb(223,47,38)" fg:x="931" fg:w="6"/><text x="97.6349%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="97.3849%" y="469" width="0.6276%" height="15" fill="rgb(229,179,11)" fg:x="931" fg:w="6"/><text x="97.6349%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="97.4895%" y="453" width="0.5230%" height="15" fill="rgb(231,122,1)" fg:x="932" fg:w="5"/><text x="97.7395%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="97.4895%" y="437" width="0.5230%" height="15" fill="rgb(245,119,9)" fg:x="932" fg:w="5"/><text x="97.7395%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="97.4895%" y="421" width="0.5230%" height="15" fill="rgb(241,163,25)" fg:x="932" fg:w="5"/><text x="97.7395%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="97.4895%" y="405" width="0.5230%" height="15" fill="rgb(217,214,3)" fg:x="932" fg:w="5"/><text x="97.7395%" y="415.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.10%)</title><rect x="98.1172%" y="741" width="0.1046%" height="15" fill="rgb(240,86,28)" fg:x="938" fg:w="1"/><text x="98.3672%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.1172%" y="725" width="0.1046%" height="15" fill="rgb(215,47,9)" fg:x="938" fg:w="1"/><text x="98.3672%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.1172%" y="709" width="0.1046%" height="15" fill="rgb(252,25,45)" fg:x="938" fg:w="1"/><text x="98.3672%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.1172%" y="693" width="0.1046%" height="15" fill="rgb(251,164,9)" fg:x="938" fg:w="1"/><text x="98.3672%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.1172%" y="677" width="0.1046%" height="15" fill="rgb(233,194,0)" fg:x="938" fg:w="1"/><text x="98.3672%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.1172%" y="661" width="0.1046%" height="15" fill="rgb(249,111,24)" fg:x="938" fg:w="1"/><text x="98.3672%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.1172%" y="645" width="0.1046%" height="15" fill="rgb(250,223,3)" fg:x="938" fg:w="1"/><text x="98.3672%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.1172%" y="629" width="0.1046%" height="15" fill="rgb(236,178,37)" fg:x="938" fg:w="1"/><text x="98.3672%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.1172%" y="613" width="0.1046%" height="15" fill="rgb(241,158,50)" fg:x="938" fg:w="1"/><text x="98.3672%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.1172%" y="597" width="0.1046%" height="15" fill="rgb(213,121,41)" fg:x="938" fg:w="1"/><text x="98.3672%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (844 samples, 88.28%)</title><rect x="10.0418%" y="901" width="88.2845%" height="15" fill="rgb(240,92,3)" fg:x="96" fg:w="844"/><text x="10.2918%" y="911.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (844 samples, 88.28%)</title><rect x="10.0418%" y="885" width="88.2845%" height="15" fill="rgb(205,123,3)" fg:x="96" fg:w="844"/><text x="10.2918%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (844 samples, 88.28%)</title><rect x="10.0418%" y="869" width="88.2845%" height="15" fill="rgb(205,97,47)" fg:x="96" fg:w="844"/><text x="10.2918%" y="879.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (844 samples, 88.28%)</title><rect x="10.0418%" y="853" width="88.2845%" height="15" fill="rgb(247,152,14)" fg:x="96" fg:w="844"/><text x="10.2918%" y="863.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (3 samples, 0.31%)</title><rect x="98.0126%" y="837" width="0.3138%" height="15" fill="rgb(248,195,53)" fg:x="937" fg:w="3"/><text x="98.2626%" y="847.50"></text></g><g><title>pthread_getattr_np (3 samples, 0.31%)</title><rect x="98.0126%" y="821" width="0.3138%" height="15" fill="rgb(226,201,16)" fg:x="937" fg:w="3"/><text x="98.2626%" y="831.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.31%)</title><rect x="98.0126%" y="805" width="0.3138%" height="15" fill="rgb(205,98,0)" fg:x="937" fg:w="3"/><text x="98.2626%" y="815.50"></text></g><g><title>tcache_init.part.0 (2 samples, 0.21%)</title><rect x="98.1172%" y="789" width="0.2092%" height="15" fill="rgb(214,191,48)" fg:x="938" fg:w="2"/><text x="98.3672%" y="799.50"></text></g><g><title>arena_get2.part.0 (2 samples, 0.21%)</title><rect x="98.1172%" y="773" width="0.2092%" height="15" fill="rgb(237,112,39)" fg:x="938" fg:w="2"/><text x="98.3672%" y="783.50"></text></g><g><title>new_heap (2 samples, 0.21%)</title><rect x="98.1172%" y="757" width="0.2092%" height="15" fill="rgb(247,203,27)" fg:x="938" fg:w="2"/><text x="98.3672%" y="767.50"></text></g><g><title>__GI___mprotect (1 samples, 0.10%)</title><rect x="98.2218%" y="741" width="0.1046%" height="15" fill="rgb(235,124,28)" fg:x="939" fg:w="1"/><text x="98.4718%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.2218%" y="725" width="0.1046%" height="15" fill="rgb(208,207,46)" fg:x="939" fg:w="1"/><text x="98.4718%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.2218%" y="709" width="0.1046%" height="15" fill="rgb(234,176,4)" fg:x="939" fg:w="1"/><text x="98.4718%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.2218%" y="693" width="0.1046%" height="15" fill="rgb(230,133,28)" fg:x="939" fg:w="1"/><text x="98.4718%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.2218%" y="677" width="0.1046%" height="15" fill="rgb(211,137,40)" fg:x="939" fg:w="1"/><text x="98.4718%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.2218%" y="661" width="0.1046%" height="15" fill="rgb(254,35,13)" fg:x="939" fg:w="1"/><text x="98.4718%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.2218%" y="645" width="0.1046%" height="15" fill="rgb(225,49,51)" fg:x="939" fg:w="1"/><text x="98.4718%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.2218%" y="629" width="0.1046%" height="15" fill="rgb(251,10,15)" fg:x="939" fg:w="1"/><text x="98.4718%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.2218%" y="613" width="0.1046%" height="15" fill="rgb(228,207,15)" fg:x="939" fg:w="1"/><text x="98.4718%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.2218%" y="597" width="0.1046%" height="15" fill="rgb(241,99,19)" fg:x="939" fg:w="1"/><text x="98.4718%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.2218%" y="581" width="0.1046%" height="15" fill="rgb(207,104,49)" fg:x="939" fg:w="1"/><text x="98.4718%" y="591.50"></text></g><g><title>__GI___clone (868 samples, 90.79%)</title><rect x="7.6360%" y="949" width="90.7950%" height="15" fill="rgb(234,99,18)" fg:x="73" fg:w="868"/><text x="7.8860%" y="959.50">__GI___clone</text></g><g><title>start_thread (851 samples, 89.02%)</title><rect x="9.4142%" y="933" width="89.0167%" height="15" fill="rgb(213,191,49)" fg:x="90" fg:w="851"/><text x="9.6642%" y="943.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (845 samples, 88.39%)</title><rect x="10.0418%" y="917" width="88.3891%" height="15" fill="rgb(210,226,19)" fg:x="96" fg:w="845"/><text x="10.2918%" y="927.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.10%)</title><rect x="98.3264%" y="901" width="0.1046%" height="15" fill="rgb(229,97,18)" fg:x="940" fg:w="1"/><text x="98.5764%" y="911.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.10%)</title><rect x="98.3264%" y="885" width="0.1046%" height="15" fill="rgb(211,167,15)" fg:x="940" fg:w="1"/><text x="98.5764%" y="895.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.10%)</title><rect x="98.3264%" y="869" width="0.1046%" height="15" fill="rgb(210,169,34)" fg:x="940" fg:w="1"/><text x="98.5764%" y="879.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.10%)</title><rect x="98.3264%" y="853" width="0.1046%" height="15" fill="rgb(241,121,31)" fg:x="940" fg:w="1"/><text x="98.5764%" y="863.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.10%)</title><rect x="98.3264%" y="837" width="0.1046%" height="15" fill="rgb(232,40,11)" fg:x="940" fg:w="1"/><text x="98.5764%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.3264%" y="821" width="0.1046%" height="15" fill="rgb(205,86,26)" fg:x="940" fg:w="1"/><text x="98.5764%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.3264%" y="805" width="0.1046%" height="15" fill="rgb(231,126,28)" fg:x="940" fg:w="1"/><text x="98.5764%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.3264%" y="789" width="0.1046%" height="15" fill="rgb(219,221,18)" fg:x="940" fg:w="1"/><text x="98.5764%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.3264%" y="773" width="0.1046%" height="15" fill="rgb(211,40,0)" fg:x="940" fg:w="1"/><text x="98.5764%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.3264%" y="757" width="0.1046%" height="15" fill="rgb(239,85,43)" fg:x="940" fg:w="1"/><text x="98.5764%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.3264%" y="741" width="0.1046%" height="15" fill="rgb(231,55,21)" fg:x="940" fg:w="1"/><text x="98.5764%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.3264%" y="725" width="0.1046%" height="15" fill="rgb(225,184,43)" fg:x="940" fg:w="1"/><text x="98.5764%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="98.3264%" y="709" width="0.1046%" height="15" fill="rgb(251,158,41)" fg:x="940" fg:w="1"/><text x="98.5764%" y="719.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.42%)</title><rect x="98.4310%" y="949" width="0.4184%" height="15" fill="rgb(234,159,37)" fg:x="941" fg:w="4"/><text x="98.6810%" y="959.50"></text></g><g><title>__rdl_realloc (4 samples, 0.42%)</title><rect x="98.8494%" y="949" width="0.4184%" height="15" fill="rgb(216,204,22)" fg:x="945" fg:w="4"/><text x="99.0994%" y="959.50"></text></g><g><title>lab4 (950 samples, 99.37%)</title><rect x="0.0000%" y="965" width="99.3724%" height="15" fill="rgb(214,17,3)" fg:x="0" fg:w="950"/><text x="0.2500%" y="975.50">lab4</text></g><g><title>_start (1 samples, 0.10%)</title><rect x="99.2678%" y="949" width="0.1046%" height="15" fill="rgb(212,111,17)" fg:x="949" fg:w="1"/><text x="99.5178%" y="959.50"></text></g><g><title>_dl_start (1 samples, 0.10%)</title><rect x="99.2678%" y="933" width="0.1046%" height="15" fill="rgb(221,157,24)" fg:x="949" fg:w="1"/><text x="99.5178%" y="943.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.10%)</title><rect x="99.2678%" y="917" width="0.1046%" height="15" fill="rgb(252,16,13)" fg:x="949" fg:w="1"/><text x="99.5178%" y="927.50"></text></g><g><title>dl_main (1 samples, 0.10%)</title><rect x="99.2678%" y="901" width="0.1046%" height="15" fill="rgb(221,62,2)" fg:x="949" fg:w="1"/><text x="99.5178%" y="911.50"></text></g><g><title>init_tls (1 samples, 0.10%)</title><rect x="99.2678%" y="885" width="0.1046%" height="15" fill="rgb(247,87,22)" fg:x="949" fg:w="1"/><text x="99.5178%" y="895.50"></text></g><g><title>malloc (1 samples, 0.10%)</title><rect x="99.2678%" y="869" width="0.1046%" height="15" fill="rgb(215,73,9)" fg:x="949" fg:w="1"/><text x="99.5178%" y="879.50"></text></g><g><title>__mmap (1 samples, 0.10%)</title><rect x="99.2678%" y="853" width="0.1046%" height="15" fill="rgb(207,175,33)" fg:x="949" fg:w="1"/><text x="99.5178%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.2678%" y="837" width="0.1046%" height="15" fill="rgb(243,129,54)" fg:x="949" fg:w="1"/><text x="99.5178%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.2678%" y="821" width="0.1046%" height="15" fill="rgb(227,119,45)" fg:x="949" fg:w="1"/><text x="99.5178%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.2678%" y="805" width="0.1046%" height="15" fill="rgb(205,109,36)" fg:x="949" fg:w="1"/><text x="99.5178%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.2678%" y="789" width="0.1046%" height="15" fill="rgb(205,6,39)" fg:x="949" fg:w="1"/><text x="99.5178%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.2678%" y="773" width="0.1046%" height="15" fill="rgb(221,32,16)" fg:x="949" fg:w="1"/><text x="99.5178%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.2678%" y="757" width="0.1046%" height="15" fill="rgb(228,144,50)" fg:x="949" fg:w="1"/><text x="99.5178%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.2678%" y="741" width="0.1046%" height="15" fill="rgb(229,201,53)" fg:x="949" fg:w="1"/><text x="99.5178%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.2678%" y="725" width="0.1046%" height="15" fill="rgb(249,153,27)" fg:x="949" fg:w="1"/><text x="99.5178%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.10%)</title><rect x="99.2678%" y="709" width="0.1046%" height="15" fill="rgb(227,106,25)" fg:x="949" fg:w="1"/><text x="99.5178%" y="719.50"></text></g><g><title>all (956 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(230,65,29)" fg:x="0" fg:w="956"/><text x="0.2500%" y="991.50"></text></g><g><title>perf-exec (6 samples, 0.63%)</title><rect x="99.3724%" y="965" width="0.6276%" height="15" fill="rgb(221,57,46)" fg:x="950" fg:w="6"/><text x="99.6224%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="99.3724%" y="949" width="0.6276%" height="15" fill="rgb(229,161,17)" fg:x="950" fg:w="6"/><text x="99.6224%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="99.3724%" y="933" width="0.6276%" height="15" fill="rgb(222,213,11)" fg:x="950" fg:w="6"/><text x="99.6224%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="99.3724%" y="917" width="0.6276%" height="15" fill="rgb(235,35,13)" fg:x="950" fg:w="6"/><text x="99.6224%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="99.3724%" y="901" width="0.6276%" height="15" fill="rgb(233,158,34)" fg:x="950" fg:w="6"/><text x="99.6224%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="99.3724%" y="885" width="0.6276%" height="15" fill="rgb(215,151,48)" fg:x="950" fg:w="6"/><text x="99.6224%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="99.3724%" y="869" width="0.6276%" height="15" fill="rgb(229,84,14)" fg:x="950" fg:w="6"/><text x="99.6224%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="99.3724%" y="853" width="0.6276%" height="15" fill="rgb(229,68,14)" fg:x="950" fg:w="6"/><text x="99.6224%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="99.3724%" y="837" width="0.6276%" height="15" fill="rgb(243,106,26)" fg:x="950" fg:w="6"/><text x="99.6224%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.63%)</title><rect x="99.3724%" y="821" width="0.6276%" height="15" fill="rgb(206,45,38)" fg:x="950" fg:w="6"/><text x="99.6224%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4770%" y="805" width="0.5230%" height="15" fill="rgb(226,6,15)" fg:x="951" fg:w="5"/><text x="99.7270%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4770%" y="789" width="0.5230%" height="15" fill="rgb(232,22,54)" fg:x="951" fg:w="5"/><text x="99.7270%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4770%" y="773" width="0.5230%" height="15" fill="rgb(229,222,32)" fg:x="951" fg:w="5"/><text x="99.7270%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4770%" y="757" width="0.5230%" height="15" fill="rgb(228,62,29)" fg:x="951" fg:w="5"/><text x="99.7270%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.52%)</title><rect x="99.4770%" y="741" width="0.5230%" height="15" fill="rgb(251,103,34)" fg:x="951" fg:w="5"/><text x="99.7270%" y="751.50"></text></g></svg></svg>