<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1094" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1077.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1077.00"> </text><svg id="frames" x="10" width="1180" total_samples="1988"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.05%)</title><rect x="0.0000%" y="997" width="0.0503%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (4 samples, 0.20%)</title><rect x="0.0503%" y="997" width="0.2012%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="4"/><text x="0.3003%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (4 samples, 0.20%)</title><rect x="0.0503%" y="981" width="0.2012%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="4"/><text x="0.3003%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.20%)</title><rect x="0.0503%" y="965" width="0.2012%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="4"/><text x="0.3003%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.20%)</title><rect x="0.0503%" y="949" width="0.2012%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="4"/><text x="0.3003%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.10%)</title><rect x="0.2515%" y="997" width="0.1006%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="2"/><text x="0.5015%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.10%)</title><rect x="0.2515%" y="981" width="0.1006%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="2"/><text x="0.5015%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.10%)</title><rect x="0.2515%" y="965" width="0.1006%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="2"/><text x="0.5015%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.10%)</title><rect x="0.2515%" y="949" width="0.1006%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="2"/><text x="0.5015%" y="959.50"></text></g><g><title>[[heap]] (10 samples, 0.50%)</title><rect x="0.0000%" y="1013" width="0.5030%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="10"/><text x="0.2500%" y="1023.50"></text></g><g><title>lab4::checksum::Checksum::update (3 samples, 0.15%)</title><rect x="0.3521%" y="997" width="0.1509%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="3"/><text x="0.6021%" y="1007.50"></text></g><g><title>hex::decode (1 samples, 0.05%)</title><rect x="0.4527%" y="981" width="0.0503%" height="15" fill="rgb(240,193,28)" fg:x="9" fg:w="1"/><text x="0.7027%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (1 samples, 0.05%)</title><rect x="0.4527%" y="965" width="0.0503%" height="15" fill="rgb(216,20,37)" fg:x="9" fg:w="1"/><text x="0.7027%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.05%)</title><rect x="0.4527%" y="949" width="0.0503%" height="15" fill="rgb(206,188,39)" fg:x="9" fg:w="1"/><text x="0.7027%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="0.4527%" y="933" width="0.0503%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="1"/><text x="0.7027%" y="943.50"></text></g><g><title>core::iter::adapters::try_process (1 samples, 0.05%)</title><rect x="0.4527%" y="917" width="0.0503%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="1"/><text x="0.7027%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.05%)</title><rect x="0.4527%" y="901" width="0.0503%" height="15" fill="rgb(225,20,46)" fg:x="9" fg:w="1"/><text x="0.7027%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.05%)</title><rect x="0.4527%" y="885" width="0.0503%" height="15" fill="rgb(210,31,41)" fg:x="9" fg:w="1"/><text x="0.7027%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="0.4527%" y="869" width="0.0503%" height="15" fill="rgb(221,200,47)" fg:x="9" fg:w="1"/><text x="0.7027%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.15%)</title><rect x="0.5030%" y="997" width="0.1509%" height="15" fill="rgb(226,26,5)" fg:x="10" fg:w="3"/><text x="0.7530%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (3 samples, 0.15%)</title><rect x="0.5030%" y="981" width="0.1509%" height="15" fill="rgb(249,33,26)" fg:x="10" fg:w="3"/><text x="0.7530%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.15%)</title><rect x="0.5030%" y="965" width="0.1509%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="3"/><text x="0.7530%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.15%)</title><rect x="0.5030%" y="949" width="0.1509%" height="15" fill="rgb(221,5,38)" fg:x="10" fg:w="3"/><text x="0.7530%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.45%)</title><rect x="0.6539%" y="997" width="0.4527%" height="15" fill="rgb(247,18,42)" fg:x="13" fg:w="9"/><text x="0.9039%" y="1007.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.25%)</title><rect x="1.1066%" y="997" width="0.2515%" height="15" fill="rgb(241,131,45)" fg:x="22" fg:w="5"/><text x="1.3566%" y="1007.50"></text></g><g><title>__GI___libc_free (1 samples, 0.05%)</title><rect x="1.3581%" y="997" width="0.0503%" height="15" fill="rgb(249,31,29)" fg:x="27" fg:w="1"/><text x="1.6081%" y="1007.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.10%)</title><rect x="1.4085%" y="997" width="0.1006%" height="15" fill="rgb(225,111,53)" fg:x="28" fg:w="2"/><text x="1.6585%" y="1007.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.05%)</title><rect x="1.5091%" y="997" width="0.0503%" height="15" fill="rgb(238,160,17)" fg:x="30" fg:w="1"/><text x="1.7591%" y="1007.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.05%)</title><rect x="1.5594%" y="997" width="0.0503%" height="15" fill="rgb(214,148,48)" fg:x="31" fg:w="1"/><text x="1.8094%" y="1007.50"></text></g><g><title>__rdl_realloc (2 samples, 0.10%)</title><rect x="1.6097%" y="997" width="0.1006%" height="15" fill="rgb(232,36,49)" fg:x="32" fg:w="2"/><text x="1.8597%" y="1007.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.10%)</title><rect x="1.6097%" y="981" width="0.1006%" height="15" fill="rgb(209,103,24)" fg:x="32" fg:w="2"/><text x="1.8597%" y="991.50"></text></g><g><title>_int_realloc (1 samples, 0.05%)</title><rect x="1.7103%" y="997" width="0.0503%" height="15" fill="rgb(229,88,8)" fg:x="34" fg:w="1"/><text x="1.9603%" y="1007.50"></text></g><g><title>[anon] (29 samples, 1.46%)</title><rect x="0.5030%" y="1013" width="1.4588%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="29"/><text x="0.7530%" y="1023.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (4 samples, 0.20%)</title><rect x="1.7606%" y="997" width="0.2012%" height="15" fill="rgb(254,191,54)" fg:x="35" fg:w="4"/><text x="2.0106%" y="1007.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="1.9618%" y="997" width="0.0503%" height="15" fill="rgb(241,83,37)" fg:x="39" fg:w="1"/><text x="2.2118%" y="1007.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="2.0121%" y="997" width="0.0503%" height="15" fill="rgb(233,36,39)" fg:x="40" fg:w="1"/><text x="2.2621%" y="1007.50"></text></g><g><title>[lab4] (3 samples, 0.15%)</title><rect x="1.9618%" y="1013" width="0.1509%" height="15" fill="rgb(226,3,54)" fg:x="39" fg:w="3"/><text x="2.2118%" y="1023.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1 samples, 0.05%)</title><rect x="2.0624%" y="997" width="0.0503%" height="15" fill="rgb(245,192,40)" fg:x="41" fg:w="1"/><text x="2.3124%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.15%)</title><rect x="2.6660%" y="997" width="0.1509%" height="15" fill="rgb(238,167,29)" fg:x="53" fg:w="3"/><text x="2.9160%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2 samples, 0.10%)</title><rect x="2.7163%" y="981" width="0.1006%" height="15" fill="rgb(232,182,51)" fg:x="54" fg:w="2"/><text x="2.9663%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.10%)</title><rect x="2.7163%" y="965" width="0.1006%" height="15" fill="rgb(231,60,39)" fg:x="54" fg:w="2"/><text x="2.9663%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.10%)</title><rect x="2.7163%" y="949" width="0.1006%" height="15" fill="rgb(208,69,12)" fg:x="54" fg:w="2"/><text x="2.9663%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.10%)</title><rect x="2.8169%" y="997" width="0.1006%" height="15" fill="rgb(235,93,37)" fg:x="56" fg:w="2"/><text x="3.0669%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.15%)</title><rect x="2.9175%" y="997" width="0.1509%" height="15" fill="rgb(213,116,39)" fg:x="58" fg:w="3"/><text x="3.1675%" y="1007.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.30%)</title><rect x="3.0684%" y="997" width="0.3018%" height="15" fill="rgb(222,207,29)" fg:x="61" fg:w="6"/><text x="3.3184%" y="1007.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.05%)</title><rect x="3.3702%" y="997" width="0.0503%" height="15" fill="rgb(206,96,30)" fg:x="67" fg:w="1"/><text x="3.6202%" y="1007.50"></text></g><g><title>&lt;std::sync::remutex::ReentrantMutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="3.3702%" y="981" width="0.0503%" height="15" fill="rgb(218,138,4)" fg:x="67" fg:w="1"/><text x="3.6202%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="997" width="0.0503%" height="15" fill="rgb(250,191,14)" fg:x="68" fg:w="1"/><text x="3.6705%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="981" width="0.0503%" height="15" fill="rgb(239,60,40)" fg:x="68" fg:w="1"/><text x="3.6705%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="965" width="0.0503%" height="15" fill="rgb(206,27,48)" fg:x="68" fg:w="1"/><text x="3.6705%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="949" width="0.0503%" height="15" fill="rgb(225,35,8)" fg:x="68" fg:w="1"/><text x="3.6705%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="933" width="0.0503%" height="15" fill="rgb(250,213,24)" fg:x="68" fg:w="1"/><text x="3.6705%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="917" width="0.0503%" height="15" fill="rgb(247,123,22)" fg:x="68" fg:w="1"/><text x="3.6705%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="901" width="0.0503%" height="15" fill="rgb(231,138,38)" fg:x="68" fg:w="1"/><text x="3.6705%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="885" width="0.0503%" height="15" fill="rgb(231,145,46)" fg:x="68" fg:w="1"/><text x="3.6705%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="869" width="0.0503%" height="15" fill="rgb(251,118,11)" fg:x="68" fg:w="1"/><text x="3.6705%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="853" width="0.0503%" height="15" fill="rgb(217,147,25)" fg:x="68" fg:w="1"/><text x="3.6705%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="837" width="0.0503%" height="15" fill="rgb(247,81,37)" fg:x="68" fg:w="1"/><text x="3.6705%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="821" width="0.0503%" height="15" fill="rgb(209,12,38)" fg:x="68" fg:w="1"/><text x="3.6705%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="805" width="0.0503%" height="15" fill="rgb(227,1,9)" fg:x="68" fg:w="1"/><text x="3.6705%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="789" width="0.0503%" height="15" fill="rgb(248,47,43)" fg:x="68" fg:w="1"/><text x="3.6705%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="3.4205%" y="773" width="0.0503%" height="15" fill="rgb(221,10,30)" fg:x="68" fg:w="1"/><text x="3.6705%" y="783.50"></text></g><g><title>__GI___libc_free (1 samples, 0.05%)</title><rect x="3.4708%" y="997" width="0.0503%" height="15" fill="rgb(210,229,1)" fg:x="69" fg:w="1"/><text x="3.7208%" y="1007.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.05%)</title><rect x="3.5211%" y="997" width="0.0503%" height="15" fill="rgb(222,148,37)" fg:x="70" fg:w="1"/><text x="3.7711%" y="1007.50"></text></g><g><title>_int_free (3 samples, 0.15%)</title><rect x="3.5714%" y="997" width="0.1509%" height="15" fill="rgb(234,67,33)" fg:x="71" fg:w="3"/><text x="3.8214%" y="1007.50"></text></g><g><title>_int_malloc (2 samples, 0.10%)</title><rect x="3.7223%" y="997" width="0.1006%" height="15" fill="rgb(247,98,35)" fg:x="74" fg:w="2"/><text x="3.9723%" y="1007.50"></text></g><g><title>_int_realloc (1 samples, 0.05%)</title><rect x="3.8229%" y="997" width="0.0503%" height="15" fill="rgb(247,138,52)" fg:x="76" fg:w="1"/><text x="4.0729%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="3.8732%" y="997" width="0.0503%" height="15" fill="rgb(213,79,30)" fg:x="77" fg:w="1"/><text x="4.1232%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="3.8732%" y="981" width="0.0503%" height="15" fill="rgb(246,177,23)" fg:x="77" fg:w="1"/><text x="4.1232%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="3.9235%" y="997" width="0.0503%" height="15" fill="rgb(230,62,27)" fg:x="78" fg:w="1"/><text x="4.1735%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.10%)</title><rect x="3.9738%" y="997" width="0.1006%" height="15" fill="rgb(216,154,8)" fg:x="79" fg:w="2"/><text x="4.2238%" y="1007.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product::{{closure}}::{{closure}} (1 samples, 0.05%)</title><rect x="4.0241%" y="981" width="0.0503%" height="15" fill="rgb(244,35,45)" fg:x="80" fg:w="1"/><text x="4.2741%" y="991.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.05%)</title><rect x="4.0241%" y="965" width="0.0503%" height="15" fill="rgb(251,115,12)" fg:x="80" fg:w="1"/><text x="4.2741%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.05%)</title><rect x="4.0241%" y="949" width="0.0503%" height="15" fill="rgb(240,54,50)" fg:x="80" fg:w="1"/><text x="4.2741%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.05%)</title><rect x="4.0241%" y="933" width="0.0503%" height="15" fill="rgb(233,84,52)" fg:x="80" fg:w="1"/><text x="4.2741%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.05%)</title><rect x="4.0241%" y="917" width="0.0503%" height="15" fill="rgb(207,117,47)" fg:x="80" fg:w="1"/><text x="4.2741%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.05%)</title><rect x="4.0241%" y="901" width="0.0503%" height="15" fill="rgb(249,43,39)" fg:x="80" fg:w="1"/><text x="4.2741%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.05%)</title><rect x="4.0241%" y="885" width="0.0503%" height="15" fill="rgb(209,38,44)" fg:x="80" fg:w="1"/><text x="4.2741%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.05%)</title><rect x="4.0241%" y="869" width="0.0503%" height="15" fill="rgb(236,212,23)" fg:x="80" fg:w="1"/><text x="4.2741%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.05%)</title><rect x="4.0241%" y="853" width="0.0503%" height="15" fill="rgb(242,79,21)" fg:x="80" fg:w="1"/><text x="4.2741%" y="863.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (12 samples, 0.60%)</title><rect x="4.0744%" y="997" width="0.6036%" height="15" fill="rgb(211,96,35)" fg:x="81" fg:w="12"/><text x="4.3244%" y="1007.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 0.05%)</title><rect x="4.6781%" y="997" width="0.0503%" height="15" fill="rgb(253,215,40)" fg:x="93" fg:w="1"/><text x="4.9281%" y="1007.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (11 samples, 0.55%)</title><rect x="4.7284%" y="997" width="0.5533%" height="15" fill="rgb(211,81,21)" fg:x="94" fg:w="11"/><text x="4.9784%" y="1007.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (7 samples, 0.35%)</title><rect x="5.2817%" y="997" width="0.3521%" height="15" fill="rgb(208,190,38)" fg:x="105" fg:w="7"/><text x="5.5317%" y="1007.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (2 samples, 0.10%)</title><rect x="5.5332%" y="981" width="0.1006%" height="15" fill="rgb(235,213,38)" fg:x="110" fg:w="2"/><text x="5.7832%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.10%)</title><rect x="5.5332%" y="965" width="0.1006%" height="15" fill="rgb(237,122,38)" fg:x="110" fg:w="2"/><text x="5.7832%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.10%)</title><rect x="5.5332%" y="949" width="0.1006%" height="15" fill="rgb(244,218,35)" fg:x="110" fg:w="2"/><text x="5.7832%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.10%)</title><rect x="5.5332%" y="933" width="0.1006%" height="15" fill="rgb(240,68,47)" fg:x="110" fg:w="2"/><text x="5.7832%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.10%)</title><rect x="5.5332%" y="917" width="0.1006%" height="15" fill="rgb(210,16,53)" fg:x="110" fg:w="2"/><text x="5.7832%" y="927.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.10%)</title><rect x="5.5332%" y="901" width="0.1006%" height="15" fill="rgb(235,124,12)" fg:x="110" fg:w="2"/><text x="5.7832%" y="911.50"></text></g><g><title>lab4::checksum::Checksum::update (2 samples, 0.10%)</title><rect x="5.6338%" y="997" width="0.1006%" height="15" fill="rgb(224,169,11)" fg:x="112" fg:w="2"/><text x="5.8838%" y="1007.50"></text></g><g><title>[unknown] (73 samples, 3.67%)</title><rect x="2.1127%" y="1013" width="3.6720%" height="15" fill="rgb(250,166,2)" fg:x="42" fg:w="73"/><text x="2.3627%" y="1023.50">[unk..</text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.05%)</title><rect x="5.7344%" y="997" width="0.0503%" height="15" fill="rgb(242,216,29)" fg:x="114" fg:w="1"/><text x="5.9844%" y="1007.50"></text></g><g><title>[unknown] (36 samples, 1.81%)</title><rect x="5.7847%" y="997" width="1.8109%" height="15" fill="rgb(230,116,27)" fg:x="115" fg:w="36"/><text x="6.0347%" y="1007.50">[..</text></g><g><title>[unknown] (36 samples, 1.81%)</title><rect x="5.7847%" y="981" width="1.8109%" height="15" fill="rgb(228,99,48)" fg:x="115" fg:w="36"/><text x="6.0347%" y="991.50">[..</text></g><g><title>[unknown] (35 samples, 1.76%)</title><rect x="5.8350%" y="965" width="1.7606%" height="15" fill="rgb(253,11,6)" fg:x="116" fg:w="35"/><text x="6.0850%" y="975.50"></text></g><g><title>[unknown] (35 samples, 1.76%)</title><rect x="5.8350%" y="949" width="1.7606%" height="15" fill="rgb(247,143,39)" fg:x="116" fg:w="35"/><text x="6.0850%" y="959.50"></text></g><g><title>[unknown] (35 samples, 1.76%)</title><rect x="5.8350%" y="933" width="1.7606%" height="15" fill="rgb(236,97,10)" fg:x="116" fg:w="35"/><text x="6.0850%" y="943.50"></text></g><g><title>[unknown] (34 samples, 1.71%)</title><rect x="5.8853%" y="917" width="1.7103%" height="15" fill="rgb(233,208,19)" fg:x="117" fg:w="34"/><text x="6.1353%" y="927.50"></text></g><g><title>[unknown] (34 samples, 1.71%)</title><rect x="5.8853%" y="901" width="1.7103%" height="15" fill="rgb(216,164,2)" fg:x="117" fg:w="34"/><text x="6.1353%" y="911.50"></text></g><g><title>[unknown] (34 samples, 1.71%)</title><rect x="5.8853%" y="885" width="1.7103%" height="15" fill="rgb(220,129,5)" fg:x="117" fg:w="34"/><text x="6.1353%" y="895.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (4 samples, 0.20%)</title><rect x="7.5956%" y="773" width="0.2012%" height="15" fill="rgb(242,17,10)" fg:x="151" fg:w="4"/><text x="7.8456%" y="783.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (4 samples, 0.20%)</title><rect x="7.5956%" y="757" width="0.2012%" height="15" fill="rgb(242,107,0)" fg:x="151" fg:w="4"/><text x="7.8456%" y="767.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (4 samples, 0.20%)</title><rect x="7.5956%" y="741" width="0.2012%" height="15" fill="rgb(251,28,31)" fg:x="151" fg:w="4"/><text x="7.8456%" y="751.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (4 samples, 0.20%)</title><rect x="7.5956%" y="725" width="0.2012%" height="15" fill="rgb(233,223,10)" fg:x="151" fg:w="4"/><text x="7.8456%" y="735.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (4 samples, 0.20%)</title><rect x="7.5956%" y="709" width="0.2012%" height="15" fill="rgb(215,21,27)" fg:x="151" fg:w="4"/><text x="7.8456%" y="719.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (4 samples, 0.20%)</title><rect x="7.5956%" y="693" width="0.2012%" height="15" fill="rgb(232,23,21)" fg:x="151" fg:w="4"/><text x="7.8456%" y="703.50"></text></g><g><title>__GI___sched_yield (4 samples, 0.20%)</title><rect x="7.5956%" y="677" width="0.2012%" height="15" fill="rgb(244,5,23)" fg:x="151" fg:w="4"/><text x="7.8456%" y="687.50"></text></g><g><title>[unknown] (4 samples, 0.20%)</title><rect x="7.5956%" y="661" width="0.2012%" height="15" fill="rgb(226,81,46)" fg:x="151" fg:w="4"/><text x="7.8456%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.20%)</title><rect x="7.5956%" y="645" width="0.2012%" height="15" fill="rgb(247,70,30)" fg:x="151" fg:w="4"/><text x="7.8456%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.20%)</title><rect x="7.5956%" y="629" width="0.2012%" height="15" fill="rgb(212,68,19)" fg:x="151" fg:w="4"/><text x="7.8456%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.20%)</title><rect x="7.5956%" y="613" width="0.2012%" height="15" fill="rgb(240,187,13)" fg:x="151" fg:w="4"/><text x="7.8456%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.20%)</title><rect x="7.5956%" y="597" width="0.2012%" height="15" fill="rgb(223,113,26)" fg:x="151" fg:w="4"/><text x="7.8456%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.20%)</title><rect x="7.5956%" y="581" width="0.2012%" height="15" fill="rgb(206,192,2)" fg:x="151" fg:w="4"/><text x="7.8456%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.20%)</title><rect x="7.5956%" y="565" width="0.2012%" height="15" fill="rgb(241,108,4)" fg:x="151" fg:w="4"/><text x="7.8456%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.15%)</title><rect x="7.6459%" y="549" width="0.1509%" height="15" fill="rgb(247,173,49)" fg:x="152" fg:w="3"/><text x="7.8959%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.15%)</title><rect x="7.6459%" y="533" width="0.1509%" height="15" fill="rgb(224,114,35)" fg:x="152" fg:w="3"/><text x="7.8959%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.15%)</title><rect x="7.6459%" y="517" width="0.1509%" height="15" fill="rgb(245,159,27)" fg:x="152" fg:w="3"/><text x="7.8959%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.15%)</title><rect x="7.6459%" y="501" width="0.1509%" height="15" fill="rgb(245,172,44)" fg:x="152" fg:w="3"/><text x="7.8959%" y="511.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="7.7968%" y="597" width="0.0503%" height="15" fill="rgb(236,23,11)" fg:x="155" fg:w="1"/><text x="8.0468%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.10%)</title><rect x="7.7968%" y="741" width="0.1006%" height="15" fill="rgb(205,117,38)" fg:x="155" fg:w="2"/><text x="8.0468%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::string::String,alloc::string::String)]&gt; (2 samples, 0.10%)</title><rect x="7.7968%" y="725" width="0.1006%" height="15" fill="rgb(237,72,25)" fg:x="155" fg:w="2"/><text x="8.0468%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (2 samples, 0.10%)</title><rect x="7.7968%" y="709" width="0.1006%" height="15" fill="rgb(244,70,9)" fg:x="155" fg:w="2"/><text x="8.0468%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.10%)</title><rect x="7.7968%" y="693" width="0.1006%" height="15" fill="rgb(217,125,39)" fg:x="155" fg:w="2"/><text x="8.0468%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.10%)</title><rect x="7.7968%" y="677" width="0.1006%" height="15" fill="rgb(235,36,10)" fg:x="155" fg:w="2"/><text x="8.0468%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.10%)</title><rect x="7.7968%" y="661" width="0.1006%" height="15" fill="rgb(251,123,47)" fg:x="155" fg:w="2"/><text x="8.0468%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.10%)</title><rect x="7.7968%" y="645" width="0.1006%" height="15" fill="rgb(221,13,13)" fg:x="155" fg:w="2"/><text x="8.0468%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.10%)</title><rect x="7.7968%" y="629" width="0.1006%" height="15" fill="rgb(238,131,9)" fg:x="155" fg:w="2"/><text x="8.0468%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.10%)</title><rect x="7.7968%" y="613" width="0.1006%" height="15" fill="rgb(211,50,8)" fg:x="155" fg:w="2"/><text x="8.0468%" y="623.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="7.8471%" y="597" width="0.0503%" height="15" fill="rgb(245,182,24)" fg:x="156" fg:w="1"/><text x="8.0971%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (3 samples, 0.15%)</title><rect x="7.7968%" y="757" width="0.1509%" height="15" fill="rgb(242,14,37)" fg:x="155" fg:w="3"/><text x="8.0468%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (1 samples, 0.05%)</title><rect x="7.8974%" y="741" width="0.0503%" height="15" fill="rgb(246,228,12)" fg:x="157" fg:w="1"/><text x="8.1474%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="7.8974%" y="725" width="0.0503%" height="15" fill="rgb(213,55,15)" fg:x="157" fg:w="1"/><text x="8.1474%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="7.8974%" y="709" width="0.0503%" height="15" fill="rgb(209,9,3)" fg:x="157" fg:w="1"/><text x="8.1474%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="7.8974%" y="693" width="0.0503%" height="15" fill="rgb(230,59,30)" fg:x="157" fg:w="1"/><text x="8.1474%" y="703.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="7.8974%" y="677" width="0.0503%" height="15" fill="rgb(209,121,21)" fg:x="157" fg:w="1"/><text x="8.1474%" y="687.50"></text></g><g><title>malloc_consolidate (1 samples, 0.05%)</title><rect x="7.8974%" y="661" width="0.0503%" height="15" fill="rgb(220,109,13)" fg:x="157" fg:w="1"/><text x="8.1474%" y="671.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="7.9477%" y="565" width="0.0503%" height="15" fill="rgb(232,18,1)" fg:x="158" fg:w="1"/><text x="8.1977%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="7.9477%" y="549" width="0.0503%" height="15" fill="rgb(215,41,42)" fg:x="158" fg:w="1"/><text x="8.1977%" y="559.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="7.9477%" y="533" width="0.0503%" height="15" fill="rgb(224,123,36)" fg:x="158" fg:w="1"/><text x="8.1977%" y="543.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1 samples, 0.05%)</title><rect x="7.9477%" y="517" width="0.0503%" height="15" fill="rgb(240,125,3)" fg:x="158" fg:w="1"/><text x="8.1977%" y="527.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.05%)</title><rect x="7.9477%" y="501" width="0.0503%" height="15" fill="rgb(205,98,50)" fg:x="158" fg:w="1"/><text x="8.1977%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.05%)</title><rect x="7.9477%" y="485" width="0.0503%" height="15" fill="rgb(205,185,37)" fg:x="158" fg:w="1"/><text x="8.1977%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.05%)</title><rect x="7.9477%" y="469" width="0.0503%" height="15" fill="rgb(238,207,15)" fg:x="158" fg:w="1"/><text x="8.1977%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.05%)</title><rect x="7.9477%" y="453" width="0.0503%" height="15" fill="rgb(213,199,42)" fg:x="158" fg:w="1"/><text x="8.1977%" y="463.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.05%)</title><rect x="7.9477%" y="437" width="0.0503%" height="15" fill="rgb(235,201,11)" fg:x="158" fg:w="1"/><text x="8.1977%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.70%)</title><rect x="7.9477%" y="645" width="0.7042%" height="15" fill="rgb(207,46,11)" fg:x="158" fg:w="14"/><text x="8.1977%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.70%)</title><rect x="7.9477%" y="629" width="0.7042%" height="15" fill="rgb(241,35,35)" fg:x="158" fg:w="14"/><text x="8.1977%" y="639.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (14 samples, 0.70%)</title><rect x="7.9477%" y="613" width="0.7042%" height="15" fill="rgb(243,32,47)" fg:x="158" fg:w="14"/><text x="8.1977%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.70%)</title><rect x="7.9477%" y="597" width="0.7042%" height="15" fill="rgb(247,202,23)" fg:x="158" fg:w="14"/><text x="8.1977%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.70%)</title><rect x="7.9477%" y="581" width="0.7042%" height="15" fill="rgb(219,102,11)" fg:x="158" fg:w="14"/><text x="8.1977%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.65%)</title><rect x="7.9980%" y="565" width="0.6539%" height="15" fill="rgb(243,110,44)" fg:x="159" fg:w="13"/><text x="8.2480%" y="575.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.65%)</title><rect x="7.9980%" y="549" width="0.6539%" height="15" fill="rgb(222,74,54)" fg:x="159" fg:w="13"/><text x="8.2480%" y="559.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product::{{closure}}::{{closure}} (13 samples, 0.65%)</title><rect x="7.9980%" y="533" width="0.6539%" height="15" fill="rgb(216,99,12)" fg:x="159" fg:w="13"/><text x="8.2480%" y="543.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (12 samples, 0.60%)</title><rect x="8.0483%" y="517" width="0.6036%" height="15" fill="rgb(226,22,26)" fg:x="160" fg:w="12"/><text x="8.2983%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (12 samples, 0.60%)</title><rect x="8.0483%" y="501" width="0.6036%" height="15" fill="rgb(217,163,10)" fg:x="160" fg:w="12"/><text x="8.2983%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.60%)</title><rect x="8.0483%" y="485" width="0.6036%" height="15" fill="rgb(213,25,53)" fg:x="160" fg:w="12"/><text x="8.2983%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.60%)</title><rect x="8.0483%" y="469" width="0.6036%" height="15" fill="rgb(252,105,26)" fg:x="160" fg:w="12"/><text x="8.2983%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.60%)</title><rect x="8.0483%" y="453" width="0.6036%" height="15" fill="rgb(220,39,43)" fg:x="160" fg:w="12"/><text x="8.2983%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.60%)</title><rect x="8.0483%" y="437" width="0.6036%" height="15" fill="rgb(229,68,48)" fg:x="160" fg:w="12"/><text x="8.2983%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.60%)</title><rect x="8.0483%" y="421" width="0.6036%" height="15" fill="rgb(252,8,32)" fg:x="160" fg:w="12"/><text x="8.2983%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.60%)</title><rect x="8.0483%" y="405" width="0.6036%" height="15" fill="rgb(223,20,43)" fg:x="160" fg:w="12"/><text x="8.2983%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.60%)</title><rect x="8.0483%" y="389" width="0.6036%" height="15" fill="rgb(229,81,49)" fg:x="160" fg:w="12"/><text x="8.2983%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.60%)</title><rect x="8.0483%" y="373" width="0.6036%" height="15" fill="rgb(236,28,36)" fg:x="160" fg:w="12"/><text x="8.2983%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.60%)</title><rect x="8.0483%" y="357" width="0.6036%" height="15" fill="rgb(249,185,26)" fg:x="160" fg:w="12"/><text x="8.2983%" y="367.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.60%)</title><rect x="8.0483%" y="341" width="0.6036%" height="15" fill="rgb(249,174,33)" fg:x="160" fg:w="12"/><text x="8.2983%" y="351.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.60%)</title><rect x="8.0483%" y="325" width="0.6036%" height="15" fill="rgb(233,201,37)" fg:x="160" fg:w="12"/><text x="8.2983%" y="335.50"></text></g><g><title>_int_malloc (7 samples, 0.35%)</title><rect x="8.2998%" y="309" width="0.3521%" height="15" fill="rgb(221,78,26)" fg:x="165" fg:w="7"/><text x="8.5498%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="8.6016%" y="293" width="0.0503%" height="15" fill="rgb(250,127,30)" fg:x="171" fg:w="1"/><text x="8.8516%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="8.6016%" y="277" width="0.0503%" height="15" fill="rgb(230,49,44)" fg:x="171" fg:w="1"/><text x="8.8516%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="8.6016%" y="261" width="0.0503%" height="15" fill="rgb(229,67,23)" fg:x="171" fg:w="1"/><text x="8.8516%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="8.6016%" y="245" width="0.0503%" height="15" fill="rgb(249,83,47)" fg:x="171" fg:w="1"/><text x="8.8516%" y="255.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product (15 samples, 0.75%)</title><rect x="7.9477%" y="757" width="0.7545%" height="15" fill="rgb(215,43,3)" fg:x="158" fg:w="15"/><text x="8.1977%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.75%)</title><rect x="7.9477%" y="741" width="0.7545%" height="15" fill="rgb(238,154,13)" fg:x="158" fg:w="15"/><text x="8.1977%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.75%)</title><rect x="7.9477%" y="725" width="0.7545%" height="15" fill="rgb(219,56,2)" fg:x="158" fg:w="15"/><text x="8.1977%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.75%)</title><rect x="7.9477%" y="709" width="0.7545%" height="15" fill="rgb(233,0,4)" fg:x="158" fg:w="15"/><text x="8.1977%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.75%)</title><rect x="7.9477%" y="693" width="0.7545%" height="15" fill="rgb(235,30,7)" fg:x="158" fg:w="15"/><text x="8.1977%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (15 samples, 0.75%)</title><rect x="7.9477%" y="677" width="0.7545%" height="15" fill="rgb(250,79,13)" fg:x="158" fg:w="15"/><text x="8.1977%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (15 samples, 0.75%)</title><rect x="7.9477%" y="661" width="0.7545%" height="15" fill="rgb(211,146,34)" fg:x="158" fg:w="15"/><text x="8.1977%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="8.6519%" y="645" width="0.0503%" height="15" fill="rgb(228,22,38)" fg:x="172" fg:w="1"/><text x="8.9019%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="8.6519%" y="629" width="0.0503%" height="15" fill="rgb(235,168,5)" fg:x="172" fg:w="1"/><text x="8.9019%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="8.6519%" y="613" width="0.0503%" height="15" fill="rgb(221,155,16)" fg:x="172" fg:w="1"/><text x="8.9019%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="8.6519%" y="597" width="0.0503%" height="15" fill="rgb(215,215,53)" fg:x="172" fg:w="1"/><text x="8.9019%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="8.6519%" y="581" width="0.0503%" height="15" fill="rgb(223,4,10)" fg:x="172" fg:w="1"/><text x="8.9019%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.05%)</title><rect x="8.6519%" y="565" width="0.0503%" height="15" fill="rgb(234,103,6)" fg:x="172" fg:w="1"/><text x="8.9019%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.05%)</title><rect x="8.6519%" y="549" width="0.0503%" height="15" fill="rgb(227,97,0)" fg:x="172" fg:w="1"/><text x="8.9019%" y="559.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.05%)</title><rect x="8.6519%" y="533" width="0.0503%" height="15" fill="rgb(234,150,53)" fg:x="172" fg:w="1"/><text x="8.9019%" y="543.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.05%)</title><rect x="8.6519%" y="517" width="0.0503%" height="15" fill="rgb(228,201,54)" fg:x="172" fg:w="1"/><text x="8.9019%" y="527.50"></text></g><g><title>_int_realloc (1 samples, 0.05%)</title><rect x="8.6519%" y="501" width="0.0503%" height="15" fill="rgb(222,22,37)" fg:x="172" fg:w="1"/><text x="8.9019%" y="511.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.05%)</title><rect x="8.6519%" y="485" width="0.0503%" height="15" fill="rgb(237,53,32)" fg:x="172" fg:w="1"/><text x="8.9019%" y="495.50"></text></g><g><title>std::fs::File::metadata (2 samples, 0.10%)</title><rect x="8.7022%" y="725" width="0.1006%" height="15" fill="rgb(233,25,53)" fg:x="173" fg:w="2"/><text x="8.9522%" y="735.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (2 samples, 0.10%)</title><rect x="8.7022%" y="709" width="0.1006%" height="15" fill="rgb(210,40,34)" fg:x="173" fg:w="2"/><text x="8.9522%" y="719.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.10%)</title><rect x="8.7022%" y="693" width="0.1006%" height="15" fill="rgb(241,220,44)" fg:x="173" fg:w="2"/><text x="8.9522%" y="703.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.10%)</title><rect x="8.7022%" y="677" width="0.1006%" height="15" fill="rgb(235,28,35)" fg:x="173" fg:w="2"/><text x="8.9522%" y="687.50"></text></g><g><title>statx (2 samples, 0.10%)</title><rect x="8.7022%" y="661" width="0.1006%" height="15" fill="rgb(210,56,17)" fg:x="173" fg:w="2"/><text x="8.9522%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="8.7022%" y="645" width="0.1006%" height="15" fill="rgb(224,130,29)" fg:x="173" fg:w="2"/><text x="8.9522%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="8.7022%" y="629" width="0.1006%" height="15" fill="rgb(235,212,8)" fg:x="173" fg:w="2"/><text x="8.9522%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="8.7022%" y="613" width="0.1006%" height="15" fill="rgb(223,33,50)" fg:x="173" fg:w="2"/><text x="8.9522%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="8.7022%" y="597" width="0.1006%" height="15" fill="rgb(219,149,13)" fg:x="173" fg:w="2"/><text x="8.9522%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="8.7022%" y="581" width="0.1006%" height="15" fill="rgb(250,156,29)" fg:x="173" fg:w="2"/><text x="8.9522%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="8.7022%" y="565" width="0.1006%" height="15" fill="rgb(216,193,19)" fg:x="173" fg:w="2"/><text x="8.9522%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="8.7022%" y="549" width="0.1006%" height="15" fill="rgb(216,135,14)" fg:x="173" fg:w="2"/><text x="8.9522%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="8.7525%" y="533" width="0.0503%" height="15" fill="rgb(241,47,5)" fg:x="174" fg:w="1"/><text x="9.0025%" y="543.50"></text></g><g><title>std::fs::File::open (39 samples, 1.96%)</title><rect x="8.8028%" y="725" width="1.9618%" height="15" fill="rgb(233,42,35)" fg:x="175" fg:w="39"/><text x="9.0528%" y="735.50">s..</text></g><g><title>std::fs::OpenOptions::open (39 samples, 1.96%)</title><rect x="8.8028%" y="709" width="1.9618%" height="15" fill="rgb(231,13,6)" fg:x="175" fg:w="39"/><text x="9.0528%" y="719.50">s..</text></g><g><title>std::fs::OpenOptions::_open (39 samples, 1.96%)</title><rect x="8.8028%" y="693" width="1.9618%" height="15" fill="rgb(207,181,40)" fg:x="175" fg:w="39"/><text x="9.0528%" y="703.50">s..</text></g><g><title>std::sys::unix::fs::File::open (39 samples, 1.96%)</title><rect x="8.8028%" y="677" width="1.9618%" height="15" fill="rgb(254,173,49)" fg:x="175" fg:w="39"/><text x="9.0528%" y="687.50">s..</text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (39 samples, 1.96%)</title><rect x="8.8028%" y="661" width="1.9618%" height="15" fill="rgb(221,1,38)" fg:x="175" fg:w="39"/><text x="9.0528%" y="671.50">s..</text></g><g><title>std::sys::common::small_c_string::run_with_cstr (39 samples, 1.96%)</title><rect x="8.8028%" y="645" width="1.9618%" height="15" fill="rgb(206,124,46)" fg:x="175" fg:w="39"/><text x="9.0528%" y="655.50">s..</text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (39 samples, 1.96%)</title><rect x="8.8028%" y="629" width="1.9618%" height="15" fill="rgb(249,21,11)" fg:x="175" fg:w="39"/><text x="9.0528%" y="639.50">s..</text></g><g><title>std::sys::unix::fs::File::open_c (39 samples, 1.96%)</title><rect x="8.8028%" y="613" width="1.9618%" height="15" fill="rgb(222,201,40)" fg:x="175" fg:w="39"/><text x="9.0528%" y="623.50">s..</text></g><g><title>std::sys::unix::cvt_r (39 samples, 1.96%)</title><rect x="8.8028%" y="597" width="1.9618%" height="15" fill="rgb(235,61,29)" fg:x="175" fg:w="39"/><text x="9.0528%" y="607.50">s..</text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (39 samples, 1.96%)</title><rect x="8.8028%" y="581" width="1.9618%" height="15" fill="rgb(219,207,3)" fg:x="175" fg:w="39"/><text x="9.0528%" y="591.50">s..</text></g><g><title>__libc_open64 (39 samples, 1.96%)</title><rect x="8.8028%" y="565" width="1.9618%" height="15" fill="rgb(222,56,46)" fg:x="175" fg:w="39"/><text x="9.0528%" y="575.50">_..</text></g><g><title>[unknown] (39 samples, 1.96%)</title><rect x="8.8028%" y="549" width="1.9618%" height="15" fill="rgb(239,76,54)" fg:x="175" fg:w="39"/><text x="9.0528%" y="559.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="533" width="1.9115%" height="15" fill="rgb(231,124,27)" fg:x="176" fg:w="38"/><text x="9.1031%" y="543.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="517" width="1.9115%" height="15" fill="rgb(249,195,6)" fg:x="176" fg:w="38"/><text x="9.1031%" y="527.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="501" width="1.9115%" height="15" fill="rgb(237,174,47)" fg:x="176" fg:w="38"/><text x="9.1031%" y="511.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="485" width="1.9115%" height="15" fill="rgb(206,201,31)" fg:x="176" fg:w="38"/><text x="9.1031%" y="495.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="469" width="1.9115%" height="15" fill="rgb(231,57,52)" fg:x="176" fg:w="38"/><text x="9.1031%" y="479.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="453" width="1.9115%" height="15" fill="rgb(248,177,22)" fg:x="176" fg:w="38"/><text x="9.1031%" y="463.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="437" width="1.9115%" height="15" fill="rgb(215,211,37)" fg:x="176" fg:w="38"/><text x="9.1031%" y="447.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="421" width="1.9115%" height="15" fill="rgb(241,128,51)" fg:x="176" fg:w="38"/><text x="9.1031%" y="431.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="405" width="1.9115%" height="15" fill="rgb(227,165,31)" fg:x="176" fg:w="38"/><text x="9.1031%" y="415.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="389" width="1.9115%" height="15" fill="rgb(228,167,24)" fg:x="176" fg:w="38"/><text x="9.1031%" y="399.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="373" width="1.9115%" height="15" fill="rgb(228,143,12)" fg:x="176" fg:w="38"/><text x="9.1031%" y="383.50">[..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="8.8531%" y="357" width="1.9115%" height="15" fill="rgb(249,149,8)" fg:x="176" fg:w="38"/><text x="9.1031%" y="367.50">[..</text></g><g><title>[unknown] (37 samples, 1.86%)</title><rect x="8.9034%" y="341" width="1.8612%" height="15" fill="rgb(243,35,44)" fg:x="177" fg:w="37"/><text x="9.1534%" y="351.50">[..</text></g><g><title>[unknown] (37 samples, 1.86%)</title><rect x="8.9034%" y="325" width="1.8612%" height="15" fill="rgb(246,89,9)" fg:x="177" fg:w="37"/><text x="9.1534%" y="335.50">[..</text></g><g><title>[unknown] (37 samples, 1.86%)</title><rect x="8.9034%" y="309" width="1.8612%" height="15" fill="rgb(233,213,13)" fg:x="177" fg:w="37"/><text x="9.1534%" y="319.50">[..</text></g><g><title>[unknown] (36 samples, 1.81%)</title><rect x="8.9537%" y="293" width="1.8109%" height="15" fill="rgb(233,141,41)" fg:x="178" fg:w="36"/><text x="9.2037%" y="303.50">[..</text></g><g><title>[unknown] (36 samples, 1.81%)</title><rect x="8.9537%" y="277" width="1.8109%" height="15" fill="rgb(239,167,4)" fg:x="178" fg:w="36"/><text x="9.2037%" y="287.50">[..</text></g><g><title>[unknown] (36 samples, 1.81%)</title><rect x="8.9537%" y="261" width="1.8109%" height="15" fill="rgb(209,217,16)" fg:x="178" fg:w="36"/><text x="9.2037%" y="271.50">[..</text></g><g><title>[unknown] (36 samples, 1.81%)</title><rect x="8.9537%" y="245" width="1.8109%" height="15" fill="rgb(219,88,35)" fg:x="178" fg:w="36"/><text x="9.2037%" y="255.50">[..</text></g><g><title>[unknown] (36 samples, 1.81%)</title><rect x="8.9537%" y="229" width="1.8109%" height="15" fill="rgb(220,193,23)" fg:x="178" fg:w="36"/><text x="9.2037%" y="239.50">[..</text></g><g><title>[unknown] (36 samples, 1.81%)</title><rect x="8.9537%" y="213" width="1.8109%" height="15" fill="rgb(230,90,52)" fg:x="178" fg:w="36"/><text x="9.2037%" y="223.50">[..</text></g><g><title>[unknown] (36 samples, 1.81%)</title><rect x="8.9537%" y="197" width="1.8109%" height="15" fill="rgb(252,106,19)" fg:x="178" fg:w="36"/><text x="9.2037%" y="207.50">[..</text></g><g><title>[unknown] (36 samples, 1.81%)</title><rect x="8.9537%" y="181" width="1.8109%" height="15" fill="rgb(206,74,20)" fg:x="178" fg:w="36"/><text x="9.2037%" y="191.50">[..</text></g><g><title>[unknown] (35 samples, 1.76%)</title><rect x="9.0040%" y="165" width="1.7606%" height="15" fill="rgb(230,138,44)" fg:x="179" fg:w="35"/><text x="9.2540%" y="175.50"></text></g><g><title>[unknown] (35 samples, 1.76%)</title><rect x="9.0040%" y="149" width="1.7606%" height="15" fill="rgb(235,182,43)" fg:x="179" fg:w="35"/><text x="9.2540%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7143%" y="133" width="0.0503%" height="15" fill="rgb(242,16,51)" fg:x="213" fg:w="1"/><text x="10.9643%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7143%" y="117" width="0.0503%" height="15" fill="rgb(248,9,4)" fg:x="213" fg:w="1"/><text x="10.9643%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7143%" y="101" width="0.0503%" height="15" fill="rgb(210,31,22)" fg:x="213" fg:w="1"/><text x="10.9643%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7143%" y="85" width="0.0503%" height="15" fill="rgb(239,54,39)" fg:x="213" fg:w="1"/><text x="10.9643%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7143%" y="69" width="0.0503%" height="15" fill="rgb(230,99,41)" fg:x="213" fg:w="1"/><text x="10.9643%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7143%" y="53" width="0.0503%" height="15" fill="rgb(253,106,12)" fg:x="213" fg:w="1"/><text x="10.9643%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7143%" y="37" width="0.0503%" height="15" fill="rgb(213,46,41)" fg:x="213" fg:w="1"/><text x="10.9643%" y="47.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (64 samples, 3.22%)</title><rect x="7.5956%" y="789" width="3.2193%" height="15" fill="rgb(215,133,35)" fg:x="151" fg:w="64"/><text x="7.8456%" y="799.50">lab..</text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name (60 samples, 3.02%)</title><rect x="7.7968%" y="773" width="3.0181%" height="15" fill="rgb(213,28,5)" fg:x="155" fg:w="60"/><text x="8.0468%" y="783.50">lab..</text></g><g><title>std::fs::read_to_string (42 samples, 2.11%)</title><rect x="8.7022%" y="757" width="2.1127%" height="15" fill="rgb(215,77,49)" fg:x="173" fg:w="42"/><text x="8.9522%" y="767.50">s..</text></g><g><title>std::fs::read_to_string::inner (42 samples, 2.11%)</title><rect x="8.7022%" y="741" width="2.1127%" height="15" fill="rgb(248,100,22)" fg:x="173" fg:w="42"/><text x="8.9522%" y="751.50">s..</text></g><g><title>std::io::default_read_to_string (1 samples, 0.05%)</title><rect x="10.7646%" y="725" width="0.0503%" height="15" fill="rgb(208,67,9)" fg:x="214" fg:w="1"/><text x="11.0146%" y="735.50"></text></g><g><title>std::io::append_to_string (1 samples, 0.05%)</title><rect x="10.7646%" y="709" width="0.0503%" height="15" fill="rgb(219,133,21)" fg:x="214" fg:w="1"/><text x="11.0146%" y="719.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (1 samples, 0.05%)</title><rect x="10.7646%" y="693" width="0.0503%" height="15" fill="rgb(246,46,29)" fg:x="214" fg:w="1"/><text x="11.0146%" y="703.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.05%)</title><rect x="10.7646%" y="677" width="0.0503%" height="15" fill="rgb(246,185,52)" fg:x="214" fg:w="1"/><text x="11.0146%" y="687.50"></text></g><g><title>std::io::default_read_to_end::small_probe_read (1 samples, 0.05%)</title><rect x="10.7646%" y="661" width="0.0503%" height="15" fill="rgb(252,136,11)" fg:x="214" fg:w="1"/><text x="11.0146%" y="671.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.05%)</title><rect x="10.7646%" y="645" width="0.0503%" height="15" fill="rgb(219,138,53)" fg:x="214" fg:w="1"/><text x="11.0146%" y="655.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (1 samples, 0.05%)</title><rect x="10.7646%" y="629" width="0.0503%" height="15" fill="rgb(211,51,23)" fg:x="214" fg:w="1"/><text x="11.0146%" y="639.50"></text></g><g><title>std::sys::unix::fs::File::read (1 samples, 0.05%)</title><rect x="10.7646%" y="613" width="0.0503%" height="15" fill="rgb(247,221,28)" fg:x="214" fg:w="1"/><text x="11.0146%" y="623.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (1 samples, 0.05%)</title><rect x="10.7646%" y="597" width="0.0503%" height="15" fill="rgb(251,222,45)" fg:x="214" fg:w="1"/><text x="11.0146%" y="607.50"></text></g><g><title>__libc_read (1 samples, 0.05%)</title><rect x="10.7646%" y="581" width="0.0503%" height="15" fill="rgb(217,162,53)" fg:x="214" fg:w="1"/><text x="11.0146%" y="591.50"></text></g><g><title>__libc_read (1 samples, 0.05%)</title><rect x="10.7646%" y="565" width="0.0503%" height="15" fill="rgb(229,93,14)" fg:x="214" fg:w="1"/><text x="11.0146%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7646%" y="549" width="0.0503%" height="15" fill="rgb(209,67,49)" fg:x="214" fg:w="1"/><text x="11.0146%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7646%" y="533" width="0.0503%" height="15" fill="rgb(213,87,29)" fg:x="214" fg:w="1"/><text x="11.0146%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7646%" y="517" width="0.0503%" height="15" fill="rgb(205,151,52)" fg:x="214" fg:w="1"/><text x="11.0146%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7646%" y="501" width="0.0503%" height="15" fill="rgb(253,215,39)" fg:x="214" fg:w="1"/><text x="11.0146%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="10.7646%" y="485" width="0.0503%" height="15" fill="rgb(221,220,41)" fg:x="214" fg:w="1"/><text x="11.0146%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.10%)</title><rect x="10.8652%" y="693" width="0.1006%" height="15" fill="rgb(218,133,21)" fg:x="216" fg:w="2"/><text x="11.1152%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.10%)</title><rect x="10.8652%" y="677" width="0.1006%" height="15" fill="rgb(221,193,43)" fg:x="216" fg:w="2"/><text x="11.1152%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.10%)</title><rect x="10.8652%" y="661" width="0.1006%" height="15" fill="rgb(240,128,52)" fg:x="216" fg:w="2"/><text x="11.1152%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.10%)</title><rect x="10.8652%" y="645" width="0.1006%" height="15" fill="rgb(253,114,12)" fg:x="216" fg:w="2"/><text x="11.1152%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.10%)</title><rect x="10.8652%" y="629" width="0.1006%" height="15" fill="rgb(215,223,47)" fg:x="216" fg:w="2"/><text x="11.1152%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.10%)</title><rect x="10.8652%" y="613" width="0.1006%" height="15" fill="rgb(248,225,23)" fg:x="216" fg:w="2"/><text x="11.1152%" y="623.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.10%)</title><rect x="10.8652%" y="597" width="0.1006%" height="15" fill="rgb(250,108,0)" fg:x="216" fg:w="2"/><text x="11.1152%" y="607.50"></text></g><g><title>_int_malloc (1 samples, 0.05%)</title><rect x="10.9155%" y="581" width="0.0503%" height="15" fill="rgb(228,208,7)" fg:x="217" fg:w="1"/><text x="11.1655%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.20%)</title><rect x="10.8652%" y="773" width="0.2012%" height="15" fill="rgb(244,45,10)" fg:x="216" fg:w="4"/><text x="11.1152%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.20%)</title><rect x="10.8652%" y="757" width="0.2012%" height="15" fill="rgb(207,125,25)" fg:x="216" fg:w="4"/><text x="11.1152%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.20%)</title><rect x="10.8652%" y="741" width="0.2012%" height="15" fill="rgb(210,195,18)" fg:x="216" fg:w="4"/><text x="11.1152%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.20%)</title><rect x="10.8652%" y="725" width="0.2012%" height="15" fill="rgb(249,80,12)" fg:x="216" fg:w="4"/><text x="11.1152%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.20%)</title><rect x="10.8652%" y="709" width="0.2012%" height="15" fill="rgb(221,65,9)" fg:x="216" fg:w="4"/><text x="11.1152%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.10%)</title><rect x="10.9658%" y="693" width="0.1006%" height="15" fill="rgb(235,49,36)" fg:x="218" fg:w="2"/><text x="11.2158%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.10%)</title><rect x="10.9658%" y="677" width="0.1006%" height="15" fill="rgb(225,32,20)" fg:x="218" fg:w="2"/><text x="11.2158%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.05%)</title><rect x="11.0664%" y="773" width="0.0503%" height="15" fill="rgb(215,141,46)" fg:x="220" fg:w="1"/><text x="11.3164%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="11.0664%" y="757" width="0.0503%" height="15" fill="rgb(250,160,47)" fg:x="220" fg:w="1"/><text x="11.3164%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="11.0664%" y="741" width="0.0503%" height="15" fill="rgb(216,222,40)" fg:x="220" fg:w="1"/><text x="11.3164%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="11.0664%" y="725" width="0.0503%" height="15" fill="rgb(234,217,39)" fg:x="220" fg:w="1"/><text x="11.3164%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="11.0664%" y="709" width="0.0503%" height="15" fill="rgb(207,178,40)" fg:x="220" fg:w="1"/><text x="11.3164%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.05%)</title><rect x="11.0664%" y="693" width="0.0503%" height="15" fill="rgb(221,136,13)" fg:x="220" fg:w="1"/><text x="11.3164%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="11.0664%" y="677" width="0.0503%" height="15" fill="rgb(249,199,10)" fg:x="220" fg:w="1"/><text x="11.3164%" y="687.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="11.0664%" y="661" width="0.0503%" height="15" fill="rgb(249,222,13)" fg:x="220" fg:w="1"/><text x="11.3164%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="11.0664%" y="645" width="0.0503%" height="15" fill="rgb(244,185,38)" fg:x="220" fg:w="1"/><text x="11.3164%" y="655.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="11.0664%" y="629" width="0.0503%" height="15" fill="rgb(236,202,9)" fg:x="220" fg:w="1"/><text x="11.3164%" y="639.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1 samples, 0.05%)</title><rect x="11.0664%" y="613" width="0.0503%" height="15" fill="rgb(250,229,37)" fg:x="220" fg:w="1"/><text x="11.3164%" y="623.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.05%)</title><rect x="11.0664%" y="597" width="0.0503%" height="15" fill="rgb(206,174,23)" fg:x="220" fg:w="1"/><text x="11.3164%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.05%)</title><rect x="11.0664%" y="581" width="0.0503%" height="15" fill="rgb(211,33,43)" fg:x="220" fg:w="1"/><text x="11.3164%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.05%)</title><rect x="11.0664%" y="565" width="0.0503%" height="15" fill="rgb(245,58,50)" fg:x="220" fg:w="1"/><text x="11.3164%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.05%)</title><rect x="11.0664%" y="549" width="0.0503%" height="15" fill="rgb(244,68,36)" fg:x="220" fg:w="1"/><text x="11.3164%" y="559.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.05%)</title><rect x="11.0664%" y="533" width="0.0503%" height="15" fill="rgb(232,229,15)" fg:x="220" fg:w="1"/><text x="11.3164%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.05%)</title><rect x="11.1167%" y="725" width="0.0503%" height="15" fill="rgb(254,30,23)" fg:x="221" fg:w="1"/><text x="11.3667%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.05%)</title><rect x="11.1167%" y="709" width="0.0503%" height="15" fill="rgb(235,160,14)" fg:x="221" fg:w="1"/><text x="11.3667%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (20 samples, 1.01%)</title><rect x="11.1167%" y="773" width="1.0060%" height="15" fill="rgb(212,155,44)" fg:x="221" fg:w="20"/><text x="11.3667%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 1.01%)</title><rect x="11.1167%" y="757" width="1.0060%" height="15" fill="rgb(226,2,50)" fg:x="221" fg:w="20"/><text x="11.3667%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (20 samples, 1.01%)</title><rect x="11.1167%" y="741" width="1.0060%" height="15" fill="rgb(234,177,6)" fg:x="221" fg:w="20"/><text x="11.3667%" y="751.50"></text></g><g><title>syscall (19 samples, 0.96%)</title><rect x="11.1670%" y="725" width="0.9557%" height="15" fill="rgb(217,24,9)" fg:x="222" fg:w="19"/><text x="11.4170%" y="735.50"></text></g><g><title>[unknown] (19 samples, 0.96%)</title><rect x="11.1670%" y="709" width="0.9557%" height="15" fill="rgb(220,13,46)" fg:x="222" fg:w="19"/><text x="11.4170%" y="719.50"></text></g><g><title>[unknown] (19 samples, 0.96%)</title><rect x="11.1670%" y="693" width="0.9557%" height="15" fill="rgb(239,221,27)" fg:x="222" fg:w="19"/><text x="11.4170%" y="703.50"></text></g><g><title>[unknown] (19 samples, 0.96%)</title><rect x="11.1670%" y="677" width="0.9557%" height="15" fill="rgb(222,198,25)" fg:x="222" fg:w="19"/><text x="11.4170%" y="687.50"></text></g><g><title>[unknown] (19 samples, 0.96%)</title><rect x="11.1670%" y="661" width="0.9557%" height="15" fill="rgb(211,99,13)" fg:x="222" fg:w="19"/><text x="11.4170%" y="671.50"></text></g><g><title>[unknown] (19 samples, 0.96%)</title><rect x="11.1670%" y="645" width="0.9557%" height="15" fill="rgb(232,111,31)" fg:x="222" fg:w="19"/><text x="11.4170%" y="655.50"></text></g><g><title>[unknown] (18 samples, 0.91%)</title><rect x="11.2173%" y="629" width="0.9054%" height="15" fill="rgb(245,82,37)" fg:x="223" fg:w="18"/><text x="11.4673%" y="639.50"></text></g><g><title>[unknown] (18 samples, 0.91%)</title><rect x="11.2173%" y="613" width="0.9054%" height="15" fill="rgb(227,149,46)" fg:x="223" fg:w="18"/><text x="11.4673%" y="623.50"></text></g><g><title>[unknown] (18 samples, 0.91%)</title><rect x="11.2173%" y="597" width="0.9054%" height="15" fill="rgb(218,36,50)" fg:x="223" fg:w="18"/><text x="11.4673%" y="607.50"></text></g><g><title>[unknown] (18 samples, 0.91%)</title><rect x="11.2173%" y="581" width="0.9054%" height="15" fill="rgb(226,80,48)" fg:x="223" fg:w="18"/><text x="11.4673%" y="591.50"></text></g><g><title>[unknown] (18 samples, 0.91%)</title><rect x="11.2173%" y="565" width="0.9054%" height="15" fill="rgb(238,224,15)" fg:x="223" fg:w="18"/><text x="11.4673%" y="575.50"></text></g><g><title>[unknown] (17 samples, 0.86%)</title><rect x="11.2676%" y="549" width="0.8551%" height="15" fill="rgb(241,136,10)" fg:x="224" fg:w="17"/><text x="11.5176%" y="559.50"></text></g><g><title>[unknown] (17 samples, 0.86%)</title><rect x="11.2676%" y="533" width="0.8551%" height="15" fill="rgb(208,32,45)" fg:x="224" fg:w="17"/><text x="11.5176%" y="543.50"></text></g><g><title>malloc_consolidate (1 samples, 0.05%)</title><rect x="12.2736%" y="613" width="0.0503%" height="15" fill="rgb(207,135,9)" fg:x="244" fg:w="1"/><text x="12.5236%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="12.3239%" y="597" width="0.1006%" height="15" fill="rgb(206,86,44)" fg:x="245" fg:w="2"/><text x="12.5739%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.3742%" y="581" width="0.0503%" height="15" fill="rgb(245,177,15)" fg:x="246" fg:w="1"/><text x="12.6242%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.3742%" y="565" width="0.0503%" height="15" fill="rgb(206,64,50)" fg:x="246" fg:w="1"/><text x="12.6242%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.3742%" y="549" width="0.0503%" height="15" fill="rgb(234,36,40)" fg:x="246" fg:w="1"/><text x="12.6242%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.3742%" y="533" width="0.0503%" height="15" fill="rgb(213,64,8)" fg:x="246" fg:w="1"/><text x="12.6242%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.3742%" y="517" width="0.0503%" height="15" fill="rgb(210,75,36)" fg:x="246" fg:w="1"/><text x="12.6242%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.3742%" y="501" width="0.0503%" height="15" fill="rgb(229,88,21)" fg:x="246" fg:w="1"/><text x="12.6242%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.3742%" y="485" width="0.0503%" height="15" fill="rgb(252,204,47)" fg:x="246" fg:w="1"/><text x="12.6242%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.3742%" y="469" width="0.0503%" height="15" fill="rgb(208,77,27)" fg:x="246" fg:w="1"/><text x="12.6242%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.3742%" y="453" width="0.0503%" height="15" fill="rgb(221,76,26)" fg:x="246" fg:w="1"/><text x="12.6242%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.3742%" y="437" width="0.0503%" height="15" fill="rgb(225,139,18)" fg:x="246" fg:w="1"/><text x="12.6242%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.70%)</title><rect x="12.1730%" y="725" width="0.7042%" height="15" fill="rgb(230,137,11)" fg:x="242" fg:w="14"/><text x="12.4230%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.70%)</title><rect x="12.1730%" y="709" width="0.7042%" height="15" fill="rgb(212,28,1)" fg:x="242" fg:w="14"/><text x="12.4230%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.70%)</title><rect x="12.1730%" y="693" width="0.7042%" height="15" fill="rgb(248,164,17)" fg:x="242" fg:w="14"/><text x="12.4230%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.70%)</title><rect x="12.1730%" y="677" width="0.7042%" height="15" fill="rgb(222,171,42)" fg:x="242" fg:w="14"/><text x="12.4230%" y="687.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.70%)</title><rect x="12.1730%" y="661" width="0.7042%" height="15" fill="rgb(243,84,45)" fg:x="242" fg:w="14"/><text x="12.4230%" y="671.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.70%)</title><rect x="12.1730%" y="645" width="0.7042%" height="15" fill="rgb(252,49,23)" fg:x="242" fg:w="14"/><text x="12.4230%" y="655.50"></text></g><g><title>_int_malloc (14 samples, 0.70%)</title><rect x="12.1730%" y="629" width="0.7042%" height="15" fill="rgb(215,19,7)" fg:x="242" fg:w="14"/><text x="12.4230%" y="639.50"></text></g><g><title>sysmalloc (11 samples, 0.55%)</title><rect x="12.3239%" y="613" width="0.5533%" height="15" fill="rgb(238,81,41)" fg:x="245" fg:w="11"/><text x="12.5739%" y="623.50"></text></g><g><title>__GI___mprotect (9 samples, 0.45%)</title><rect x="12.4245%" y="597" width="0.4527%" height="15" fill="rgb(210,199,37)" fg:x="247" fg:w="9"/><text x="12.6745%" y="607.50"></text></g><g><title>[unknown] (9 samples, 0.45%)</title><rect x="12.4245%" y="581" width="0.4527%" height="15" fill="rgb(244,192,49)" fg:x="247" fg:w="9"/><text x="12.6745%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="12.5755%" y="565" width="0.3018%" height="15" fill="rgb(226,211,11)" fg:x="250" fg:w="6"/><text x="12.8255%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="12.5755%" y="549" width="0.3018%" height="15" fill="rgb(236,162,54)" fg:x="250" fg:w="6"/><text x="12.8255%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="12.5755%" y="533" width="0.3018%" height="15" fill="rgb(220,229,9)" fg:x="250" fg:w="6"/><text x="12.8255%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="12.5755%" y="517" width="0.3018%" height="15" fill="rgb(250,87,22)" fg:x="250" fg:w="6"/><text x="12.8255%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="12.5755%" y="501" width="0.3018%" height="15" fill="rgb(239,43,17)" fg:x="250" fg:w="6"/><text x="12.8255%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.20%)</title><rect x="12.6761%" y="485" width="0.2012%" height="15" fill="rgb(231,177,25)" fg:x="252" fg:w="4"/><text x="12.9261%" y="495.50"></text></g><g><title>[unknown] (3 samples, 0.15%)</title><rect x="12.7264%" y="469" width="0.1509%" height="15" fill="rgb(219,179,1)" fg:x="253" fg:w="3"/><text x="12.9764%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="12.7767%" y="453" width="0.1006%" height="15" fill="rgb(238,219,53)" fg:x="254" fg:w="2"/><text x="13.0267%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="12.7767%" y="437" width="0.1006%" height="15" fill="rgb(232,167,36)" fg:x="254" fg:w="2"/><text x="13.0267%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.8270%" y="421" width="0.0503%" height="15" fill="rgb(244,19,51)" fg:x="255" fg:w="1"/><text x="13.0770%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="12.8270%" y="405" width="0.0503%" height="15" fill="rgb(224,6,22)" fg:x="255" fg:w="1"/><text x="13.0770%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.05%)</title><rect x="12.8773%" y="725" width="0.0503%" height="15" fill="rgb(224,145,5)" fg:x="256" fg:w="1"/><text x="13.1273%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.05%)</title><rect x="12.8773%" y="709" width="0.0503%" height="15" fill="rgb(234,130,49)" fg:x="256" fg:w="1"/><text x="13.1273%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.15%)</title><rect x="12.9276%" y="709" width="0.1509%" height="15" fill="rgb(254,6,2)" fg:x="257" fg:w="3"/><text x="13.1776%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (3 samples, 0.15%)</title><rect x="12.9276%" y="693" width="0.1509%" height="15" fill="rgb(208,96,46)" fg:x="257" fg:w="3"/><text x="13.1776%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (3 samples, 0.15%)</title><rect x="12.9276%" y="677" width="0.1509%" height="15" fill="rgb(239,3,39)" fg:x="257" fg:w="3"/><text x="13.1776%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0282%" y="661" width="0.0503%" height="15" fill="rgb(233,210,1)" fg:x="259" fg:w="1"/><text x="13.2782%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0282%" y="645" width="0.0503%" height="15" fill="rgb(244,137,37)" fg:x="259" fg:w="1"/><text x="13.2782%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0282%" y="629" width="0.0503%" height="15" fill="rgb(240,136,2)" fg:x="259" fg:w="1"/><text x="13.2782%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0282%" y="613" width="0.0503%" height="15" fill="rgb(239,18,37)" fg:x="259" fg:w="1"/><text x="13.2782%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0282%" y="597" width="0.0503%" height="15" fill="rgb(218,185,22)" fg:x="259" fg:w="1"/><text x="13.2782%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0282%" y="581" width="0.0503%" height="15" fill="rgb(225,218,4)" fg:x="259" fg:w="1"/><text x="13.2782%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0282%" y="565" width="0.0503%" height="15" fill="rgb(230,182,32)" fg:x="259" fg:w="1"/><text x="13.2782%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0282%" y="549" width="0.0503%" height="15" fill="rgb(242,56,43)" fg:x="259" fg:w="1"/><text x="13.2782%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0282%" y="533" width="0.0503%" height="15" fill="rgb(233,99,24)" fg:x="259" fg:w="1"/><text x="13.2782%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0282%" y="517" width="0.0503%" height="15" fill="rgb(234,209,42)" fg:x="259" fg:w="1"/><text x="13.2782%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="13.0282%" y="501" width="0.0503%" height="15" fill="rgb(227,7,12)" fg:x="259" fg:w="1"/><text x="13.2782%" y="511.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (19 samples, 0.96%)</title><rect x="12.1730%" y="741" width="0.9557%" height="15" fill="rgb(245,203,43)" fg:x="242" fg:w="19"/><text x="12.4230%" y="751.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (4 samples, 0.20%)</title><rect x="12.9276%" y="725" width="0.2012%" height="15" fill="rgb(238,205,33)" fg:x="257" fg:w="4"/><text x="13.1776%" y="735.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.05%)</title><rect x="13.0785%" y="709" width="0.0503%" height="15" fill="rgb(231,56,7)" fg:x="260" fg:w="1"/><text x="13.3285%" y="719.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.05%)</title><rect x="13.0785%" y="693" width="0.0503%" height="15" fill="rgb(244,186,29)" fg:x="260" fg:w="1"/><text x="13.3285%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.05%)</title><rect x="13.0785%" y="677" width="0.0503%" height="15" fill="rgb(234,111,31)" fg:x="260" fg:w="1"/><text x="13.3285%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (1 samples, 0.05%)</title><rect x="13.1288%" y="693" width="0.0503%" height="15" fill="rgb(241,149,10)" fg:x="261" fg:w="1"/><text x="13.3788%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.05%)</title><rect x="13.1288%" y="677" width="0.0503%" height="15" fill="rgb(249,206,44)" fg:x="261" fg:w="1"/><text x="13.3788%" y="687.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (59 samples, 2.97%)</title><rect x="12.1227%" y="773" width="2.9678%" height="15" fill="rgb(251,153,30)" fg:x="241" fg:w="59"/><text x="12.3727%" y="783.50">cro..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (58 samples, 2.92%)</title><rect x="12.1730%" y="757" width="2.9175%" height="15" fill="rgb(239,152,38)" fg:x="242" fg:w="58"/><text x="12.4230%" y="767.50">cr..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (39 samples, 1.96%)</title><rect x="13.1288%" y="741" width="1.9618%" height="15" fill="rgb(249,139,47)" fg:x="261" fg:w="39"/><text x="13.3788%" y="751.50">c..</text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (39 samples, 1.96%)</title><rect x="13.1288%" y="725" width="1.9618%" height="15" fill="rgb(244,64,35)" fg:x="261" fg:w="39"/><text x="13.3788%" y="735.50">c..</text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (39 samples, 1.96%)</title><rect x="13.1288%" y="709" width="1.9618%" height="15" fill="rgb(216,46,15)" fg:x="261" fg:w="39"/><text x="13.3788%" y="719.50">c..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (38 samples, 1.91%)</title><rect x="13.1791%" y="693" width="1.9115%" height="15" fill="rgb(250,74,19)" fg:x="262" fg:w="38"/><text x="13.4291%" y="703.50">c..</text></g><g><title>__GI___sched_yield (38 samples, 1.91%)</title><rect x="13.1791%" y="677" width="1.9115%" height="15" fill="rgb(249,42,33)" fg:x="262" fg:w="38"/><text x="13.4291%" y="687.50">_..</text></g><g><title>[unknown] (38 samples, 1.91%)</title><rect x="13.1791%" y="661" width="1.9115%" height="15" fill="rgb(242,149,17)" fg:x="262" fg:w="38"/><text x="13.4291%" y="671.50">[..</text></g><g><title>[unknown] (28 samples, 1.41%)</title><rect x="13.6821%" y="645" width="1.4085%" height="15" fill="rgb(244,29,21)" fg:x="272" fg:w="28"/><text x="13.9321%" y="655.50"></text></g><g><title>[unknown] (28 samples, 1.41%)</title><rect x="13.6821%" y="629" width="1.4085%" height="15" fill="rgb(220,130,37)" fg:x="272" fg:w="28"/><text x="13.9321%" y="639.50"></text></g><g><title>[unknown] (26 samples, 1.31%)</title><rect x="13.7827%" y="613" width="1.3078%" height="15" fill="rgb(211,67,2)" fg:x="274" fg:w="26"/><text x="14.0327%" y="623.50"></text></g><g><title>[unknown] (25 samples, 1.26%)</title><rect x="13.8330%" y="597" width="1.2575%" height="15" fill="rgb(235,68,52)" fg:x="275" fg:w="25"/><text x="14.0830%" y="607.50"></text></g><g><title>[unknown] (24 samples, 1.21%)</title><rect x="13.8833%" y="581" width="1.2072%" height="15" fill="rgb(246,142,3)" fg:x="276" fg:w="24"/><text x="14.1333%" y="591.50"></text></g><g><title>[unknown] (19 samples, 0.96%)</title><rect x="14.1348%" y="565" width="0.9557%" height="15" fill="rgb(241,25,7)" fg:x="281" fg:w="19"/><text x="14.3848%" y="575.50"></text></g><g><title>[unknown] (18 samples, 0.91%)</title><rect x="14.1851%" y="549" width="0.9054%" height="15" fill="rgb(242,119,39)" fg:x="282" fg:w="18"/><text x="14.4351%" y="559.50"></text></g><g><title>[unknown] (17 samples, 0.86%)</title><rect x="14.2354%" y="533" width="0.8551%" height="15" fill="rgb(241,98,45)" fg:x="283" fg:w="17"/><text x="14.4854%" y="543.50"></text></g><g><title>[unknown] (17 samples, 0.86%)</title><rect x="14.2354%" y="517" width="0.8551%" height="15" fill="rgb(254,28,30)" fg:x="283" fg:w="17"/><text x="14.4854%" y="527.50"></text></g><g><title>[unknown] (16 samples, 0.80%)</title><rect x="14.2857%" y="501" width="0.8048%" height="15" fill="rgb(241,142,54)" fg:x="284" fg:w="16"/><text x="14.5357%" y="511.50"></text></g><g><title>[unknown] (15 samples, 0.75%)</title><rect x="14.3360%" y="485" width="0.7545%" height="15" fill="rgb(222,85,15)" fg:x="285" fg:w="15"/><text x="14.5860%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.05%)</title><rect x="15.1408%" y="757" width="0.0503%" height="15" fill="rgb(210,85,47)" fg:x="301" fg:w="1"/><text x="15.3908%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="15.1408%" y="741" width="0.0503%" height="15" fill="rgb(224,206,25)" fg:x="301" fg:w="1"/><text x="15.3908%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="15.1408%" y="725" width="0.0503%" height="15" fill="rgb(243,201,19)" fg:x="301" fg:w="1"/><text x="15.3908%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.05%)</title><rect x="15.1408%" y="709" width="0.0503%" height="15" fill="rgb(236,59,4)" fg:x="301" fg:w="1"/><text x="15.3908%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="15.1408%" y="693" width="0.0503%" height="15" fill="rgb(254,179,45)" fg:x="301" fg:w="1"/><text x="15.3908%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.05%)</title><rect x="15.1408%" y="677" width="0.0503%" height="15" fill="rgb(226,14,10)" fg:x="301" fg:w="1"/><text x="15.3908%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.05%)</title><rect x="15.1408%" y="661" width="0.0503%" height="15" fill="rgb(244,27,41)" fg:x="301" fg:w="1"/><text x="15.3908%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="15.1408%" y="645" width="0.0503%" height="15" fill="rgb(235,35,32)" fg:x="301" fg:w="1"/><text x="15.3908%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="15.1408%" y="629" width="0.0503%" height="15" fill="rgb(218,68,31)" fg:x="301" fg:w="1"/><text x="15.3908%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1 samples, 0.05%)</title><rect x="15.1408%" y="613" width="0.0503%" height="15" fill="rgb(207,120,37)" fg:x="301" fg:w="1"/><text x="15.3908%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.05%)</title><rect x="15.1408%" y="597" width="0.0503%" height="15" fill="rgb(227,98,0)" fg:x="301" fg:w="1"/><text x="15.3908%" y="607.50"></text></g><g><title>lab4::checksum::Checksum::update::{{closure}} (1 samples, 0.05%)</title><rect x="15.1408%" y="581" width="0.0503%" height="15" fill="rgb(207,7,3)" fg:x="301" fg:w="1"/><text x="15.3908%" y="591.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitXor&lt;&amp;u8&gt;&gt;::bitxor (1 samples, 0.05%)</title><rect x="15.1408%" y="565" width="0.0503%" height="15" fill="rgb(206,98,19)" fg:x="301" fg:w="1"/><text x="15.3908%" y="575.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.05%)</title><rect x="15.1408%" y="549" width="0.0503%" height="15" fill="rgb(217,5,26)" fg:x="301" fg:w="1"/><text x="15.3908%" y="559.50"></text></g><g><title>__GI___libc_free (2 samples, 0.10%)</title><rect x="15.1911%" y="677" width="0.1006%" height="15" fill="rgb(235,190,38)" fg:x="302" fg:w="2"/><text x="15.4411%" y="687.50"></text></g><g><title>__rust_dealloc (2 samples, 0.10%)</title><rect x="15.2918%" y="677" width="0.1006%" height="15" fill="rgb(247,86,24)" fg:x="304" fg:w="2"/><text x="15.5418%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.40%)</title><rect x="15.1911%" y="757" width="0.4024%" height="15" fill="rgb(205,101,16)" fg:x="302" fg:w="8"/><text x="15.4411%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.40%)</title><rect x="15.1911%" y="741" width="0.4024%" height="15" fill="rgb(246,168,33)" fg:x="302" fg:w="8"/><text x="15.4411%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.40%)</title><rect x="15.1911%" y="725" width="0.4024%" height="15" fill="rgb(231,114,1)" fg:x="302" fg:w="8"/><text x="15.4411%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.40%)</title><rect x="15.1911%" y="709" width="0.4024%" height="15" fill="rgb(207,184,53)" fg:x="302" fg:w="8"/><text x="15.4411%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.40%)</title><rect x="15.1911%" y="693" width="0.4024%" height="15" fill="rgb(224,95,51)" fg:x="302" fg:w="8"/><text x="15.4411%" y="703.50"></text></g><g><title>_int_free (4 samples, 0.20%)</title><rect x="15.3924%" y="677" width="0.2012%" height="15" fill="rgb(212,188,45)" fg:x="306" fg:w="4"/><text x="15.6424%" y="687.50"></text></g><g><title>__GI___libc_free (2 samples, 0.10%)</title><rect x="15.5936%" y="645" width="0.1006%" height="15" fill="rgb(223,154,38)" fg:x="310" fg:w="2"/><text x="15.8436%" y="655.50"></text></g><g><title>__rust_dealloc (1 samples, 0.05%)</title><rect x="15.6942%" y="645" width="0.0503%" height="15" fill="rgb(251,22,52)" fg:x="312" fg:w="1"/><text x="15.9442%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (4 samples, 0.20%)</title><rect x="15.5936%" y="757" width="0.2012%" height="15" fill="rgb(229,209,22)" fg:x="310" fg:w="4"/><text x="15.8436%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.20%)</title><rect x="15.5936%" y="741" width="0.2012%" height="15" fill="rgb(234,138,34)" fg:x="310" fg:w="4"/><text x="15.8436%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.20%)</title><rect x="15.5936%" y="725" width="0.2012%" height="15" fill="rgb(212,95,11)" fg:x="310" fg:w="4"/><text x="15.8436%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.20%)</title><rect x="15.5936%" y="709" width="0.2012%" height="15" fill="rgb(240,179,47)" fg:x="310" fg:w="4"/><text x="15.8436%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.20%)</title><rect x="15.5936%" y="693" width="0.2012%" height="15" fill="rgb(240,163,11)" fg:x="310" fg:w="4"/><text x="15.8436%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.20%)</title><rect x="15.5936%" y="677" width="0.2012%" height="15" fill="rgb(236,37,12)" fg:x="310" fg:w="4"/><text x="15.8436%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.20%)</title><rect x="15.5936%" y="661" width="0.2012%" height="15" fill="rgb(232,164,16)" fg:x="310" fg:w="4"/><text x="15.8436%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="15.7445%" y="645" width="0.0503%" height="15" fill="rgb(244,205,15)" fg:x="313" fg:w="1"/><text x="15.9945%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (69 samples, 3.47%)</title><rect x="16.4990%" y="469" width="3.4708%" height="15" fill="rgb(223,117,47)" fg:x="328" fg:w="69"/><text x="16.7490%" y="479.50">&lt;co..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (63 samples, 3.17%)</title><rect x="16.8008%" y="453" width="3.1690%" height="15" fill="rgb(244,107,35)" fg:x="334" fg:w="63"/><text x="17.0508%" y="463.50">cor..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (63 samples, 3.17%)</title><rect x="16.8008%" y="437" width="3.1690%" height="15" fill="rgb(205,140,8)" fg:x="334" fg:w="63"/><text x="17.0508%" y="447.50">&lt;al..</text></g><g><title>hex::val (52 samples, 2.62%)</title><rect x="17.3541%" y="421" width="2.6157%" height="15" fill="rgb(228,84,46)" fg:x="345" fg:w="52"/><text x="17.6041%" y="431.50">he..</text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="19.6177%" y="405" width="0.3521%" height="15" fill="rgb(254,188,9)" fg:x="390" fg:w="7"/><text x="19.8677%" y="415.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="19.6177%" y="389" width="0.3521%" height="15" fill="rgb(206,112,54)" fg:x="390" fg:w="7"/><text x="19.8677%" y="399.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="19.6177%" y="373" width="0.3521%" height="15" fill="rgb(216,84,49)" fg:x="390" fg:w="7"/><text x="19.8677%" y="383.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="19.6177%" y="357" width="0.3521%" height="15" fill="rgb(214,194,35)" fg:x="390" fg:w="7"/><text x="19.8677%" y="367.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="19.6177%" y="341" width="0.3521%" height="15" fill="rgb(249,28,3)" fg:x="390" fg:w="7"/><text x="19.8677%" y="351.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="19.6177%" y="325" width="0.3521%" height="15" fill="rgb(222,56,52)" fg:x="390" fg:w="7"/><text x="19.8677%" y="335.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="19.6177%" y="309" width="0.3521%" height="15" fill="rgb(245,217,50)" fg:x="390" fg:w="7"/><text x="19.8677%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="19.6680%" y="293" width="0.3018%" height="15" fill="rgb(213,201,24)" fg:x="391" fg:w="6"/><text x="19.9180%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="19.6680%" y="277" width="0.3018%" height="15" fill="rgb(248,116,28)" fg:x="391" fg:w="6"/><text x="19.9180%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="19.6680%" y="261" width="0.3018%" height="15" fill="rgb(219,72,43)" fg:x="391" fg:w="6"/><text x="19.9180%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="19.6680%" y="245" width="0.3018%" height="15" fill="rgb(209,138,14)" fg:x="391" fg:w="6"/><text x="19.9180%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="19.6680%" y="229" width="0.3018%" height="15" fill="rgb(222,18,33)" fg:x="391" fg:w="6"/><text x="19.9180%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="19.6680%" y="213" width="0.3018%" height="15" fill="rgb(213,199,7)" fg:x="391" fg:w="6"/><text x="19.9180%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="453" width="0.0503%" height="15" fill="rgb(250,110,10)" fg:x="402" fg:w="1"/><text x="20.4713%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="437" width="0.0503%" height="15" fill="rgb(248,123,6)" fg:x="402" fg:w="1"/><text x="20.4713%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="421" width="0.0503%" height="15" fill="rgb(206,91,31)" fg:x="402" fg:w="1"/><text x="20.4713%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="405" width="0.0503%" height="15" fill="rgb(211,154,13)" fg:x="402" fg:w="1"/><text x="20.4713%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="389" width="0.0503%" height="15" fill="rgb(225,148,7)" fg:x="402" fg:w="1"/><text x="20.4713%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="373" width="0.0503%" height="15" fill="rgb(220,160,43)" fg:x="402" fg:w="1"/><text x="20.4713%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="357" width="0.0503%" height="15" fill="rgb(213,52,39)" fg:x="402" fg:w="1"/><text x="20.4713%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="341" width="0.0503%" height="15" fill="rgb(243,137,7)" fg:x="402" fg:w="1"/><text x="20.4713%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="325" width="0.0503%" height="15" fill="rgb(230,79,13)" fg:x="402" fg:w="1"/><text x="20.4713%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="309" width="0.0503%" height="15" fill="rgb(247,105,23)" fg:x="402" fg:w="1"/><text x="20.4713%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="293" width="0.0503%" height="15" fill="rgb(223,179,41)" fg:x="402" fg:w="1"/><text x="20.4713%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="20.2213%" y="277" width="0.0503%" height="15" fill="rgb(218,9,34)" fg:x="402" fg:w="1"/><text x="20.4713%" y="287.50"></text></g><g><title>core::cmp::min (1 samples, 0.05%)</title><rect x="20.2716%" y="453" width="0.0503%" height="15" fill="rgb(222,106,8)" fg:x="403" fg:w="1"/><text x="20.5216%" y="463.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.05%)</title><rect x="20.2716%" y="437" width="0.0503%" height="15" fill="rgb(211,220,0)" fg:x="403" fg:w="1"/><text x="20.5216%" y="447.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.05%)</title><rect x="20.2716%" y="421" width="0.0503%" height="15" fill="rgb(229,52,16)" fg:x="403" fg:w="1"/><text x="20.5216%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (79 samples, 3.97%)</title><rect x="16.3984%" y="565" width="3.9738%" height="15" fill="rgb(212,155,18)" fg:x="326" fg:w="79"/><text x="16.6484%" y="575.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (77 samples, 3.87%)</title><rect x="16.4990%" y="549" width="3.8732%" height="15" fill="rgb(242,21,14)" fg:x="328" fg:w="77"/><text x="16.7490%" y="559.50">core..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (77 samples, 3.87%)</title><rect x="16.4990%" y="533" width="3.8732%" height="15" fill="rgb(222,19,48)" fg:x="328" fg:w="77"/><text x="16.7490%" y="543.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (77 samples, 3.87%)</title><rect x="16.4990%" y="517" width="3.8732%" height="15" fill="rgb(232,45,27)" fg:x="328" fg:w="77"/><text x="16.7490%" y="527.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (77 samples, 3.87%)</title><rect x="16.4990%" y="501" width="3.8732%" height="15" fill="rgb(249,103,42)" fg:x="328" fg:w="77"/><text x="16.7490%" y="511.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (77 samples, 3.87%)</title><rect x="16.4990%" y="485" width="3.8732%" height="15" fill="rgb(246,81,33)" fg:x="328" fg:w="77"/><text x="16.7490%" y="495.50">core..</text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.40%)</title><rect x="19.9698%" y="469" width="0.4024%" height="15" fill="rgb(252,33,42)" fg:x="397" fg:w="8"/><text x="20.2198%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.05%)</title><rect x="20.3219%" y="453" width="0.0503%" height="15" fill="rgb(209,212,41)" fg:x="404" fg:w="1"/><text x="20.5719%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.05%)</title><rect x="20.3219%" y="437" width="0.0503%" height="15" fill="rgb(207,154,6)" fg:x="404" fg:w="1"/><text x="20.5719%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.05%)</title><rect x="20.3219%" y="421" width="0.0503%" height="15" fill="rgb(223,64,47)" fg:x="404" fg:w="1"/><text x="20.5719%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.20%)</title><rect x="20.3722%" y="565" width="0.2012%" height="15" fill="rgb(211,161,38)" fg:x="405" fg:w="4"/><text x="20.6222%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.05%)</title><rect x="20.5734%" y="501" width="0.0503%" height="15" fill="rgb(219,138,40)" fg:x="409" fg:w="1"/><text x="20.8234%" y="511.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.80%)</title><rect x="20.7243%" y="437" width="0.8048%" height="15" fill="rgb(241,228,46)" fg:x="412" fg:w="16"/><text x="20.9743%" y="447.50"></text></g><g><title>_int_realloc (3 samples, 0.15%)</title><rect x="21.3783%" y="421" width="0.1509%" height="15" fill="rgb(223,209,38)" fg:x="425" fg:w="3"/><text x="21.6283%" y="431.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="21.4789%" y="405" width="0.0503%" height="15" fill="rgb(236,164,45)" fg:x="427" fg:w="1"/><text x="21.7289%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (20 samples, 1.01%)</title><rect x="20.5734%" y="565" width="1.0060%" height="15" fill="rgb(231,15,5)" fg:x="409" fg:w="20"/><text x="20.8234%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (20 samples, 1.01%)</title><rect x="20.5734%" y="549" width="1.0060%" height="15" fill="rgb(252,35,15)" fg:x="409" fg:w="20"/><text x="20.8234%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 1.01%)</title><rect x="20.5734%" y="533" width="1.0060%" height="15" fill="rgb(248,181,18)" fg:x="409" fg:w="20"/><text x="20.8234%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (20 samples, 1.01%)</title><rect x="20.5734%" y="517" width="1.0060%" height="15" fill="rgb(233,39,42)" fg:x="409" fg:w="20"/><text x="20.8234%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (19 samples, 0.96%)</title><rect x="20.6237%" y="501" width="0.9557%" height="15" fill="rgb(238,110,33)" fg:x="410" fg:w="19"/><text x="20.8737%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (17 samples, 0.86%)</title><rect x="20.7243%" y="485" width="0.8551%" height="15" fill="rgb(233,195,10)" fg:x="412" fg:w="17"/><text x="20.9743%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (17 samples, 0.86%)</title><rect x="20.7243%" y="469" width="0.8551%" height="15" fill="rgb(254,105,3)" fg:x="412" fg:w="17"/><text x="20.9743%" y="479.50"></text></g><g><title>alloc::alloc::realloc (17 samples, 0.86%)</title><rect x="20.7243%" y="453" width="0.8551%" height="15" fill="rgb(221,225,9)" fg:x="412" fg:w="17"/><text x="20.9743%" y="463.50"></text></g><g><title>__rust_realloc (1 samples, 0.05%)</title><rect x="21.5292%" y="437" width="0.0503%" height="15" fill="rgb(224,227,45)" fg:x="428" fg:w="1"/><text x="21.7792%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.05%)</title><rect x="21.5795%" y="565" width="0.0503%" height="15" fill="rgb(229,198,43)" fg:x="429" fg:w="1"/><text x="21.8295%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (119 samples, 5.99%)</title><rect x="15.8451%" y="597" width="5.9859%" height="15" fill="rgb(206,209,35)" fg:x="315" fg:w="119"/><text x="16.0951%" y="607.50">&lt;alloc::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (119 samples, 5.99%)</title><rect x="15.8451%" y="581" width="5.9859%" height="15" fill="rgb(245,195,53)" fg:x="315" fg:w="119"/><text x="16.0951%" y="591.50">alloc::v..</text></g><g><title>core::ptr::write (4 samples, 0.20%)</title><rect x="21.6298%" y="565" width="0.2012%" height="15" fill="rgb(240,92,26)" fg:x="430" fg:w="4"/><text x="21.8798%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="21.8310%" y="597" width="0.0503%" height="15" fill="rgb(207,40,23)" fg:x="434" fg:w="1"/><text x="22.0810%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.05%)</title><rect x="21.8310%" y="581" width="0.0503%" height="15" fill="rgb(223,111,35)" fg:x="434" fg:w="1"/><text x="22.0810%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.05%)</title><rect x="21.8310%" y="565" width="0.0503%" height="15" fill="rgb(229,147,28)" fg:x="434" fg:w="1"/><text x="22.0810%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.05%)</title><rect x="21.8310%" y="549" width="0.0503%" height="15" fill="rgb(211,29,28)" fg:x="434" fg:w="1"/><text x="22.0810%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.05%)</title><rect x="21.8310%" y="533" width="0.0503%" height="15" fill="rgb(228,72,33)" fg:x="434" fg:w="1"/><text x="22.0810%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.05%)</title><rect x="21.8310%" y="517" width="0.0503%" height="15" fill="rgb(205,214,31)" fg:x="434" fg:w="1"/><text x="22.0810%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.05%)</title><rect x="21.8310%" y="501" width="0.0503%" height="15" fill="rgb(224,111,15)" fg:x="434" fg:w="1"/><text x="22.0810%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.05%)</title><rect x="21.8310%" y="485" width="0.0503%" height="15" fill="rgb(253,21,26)" fg:x="434" fg:w="1"/><text x="22.0810%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (1 samples, 0.05%)</title><rect x="21.8310%" y="469" width="0.0503%" height="15" fill="rgb(245,139,43)" fg:x="434" fg:w="1"/><text x="22.0810%" y="479.50"></text></g><g><title>hex::val (1 samples, 0.05%)</title><rect x="21.8310%" y="453" width="0.0503%" height="15" fill="rgb(252,170,7)" fg:x="434" fg:w="1"/><text x="22.0810%" y="463.50"></text></g><g><title>hex::decode (130 samples, 6.54%)</title><rect x="15.7948%" y="757" width="6.5392%" height="15" fill="rgb(231,118,14)" fg:x="314" fg:w="130"/><text x="16.0448%" y="767.50">hex::deco..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (130 samples, 6.54%)</title><rect x="15.7948%" y="741" width="6.5392%" height="15" fill="rgb(238,83,0)" fg:x="314" fg:w="130"/><text x="16.0448%" y="751.50">&lt;alloc::v..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (130 samples, 6.54%)</title><rect x="15.7948%" y="725" width="6.5392%" height="15" fill="rgb(221,39,39)" fg:x="314" fg:w="130"/><text x="16.0448%" y="735.50">core::ite..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (130 samples, 6.54%)</title><rect x="15.7948%" y="709" width="6.5392%" height="15" fill="rgb(222,119,46)" fg:x="314" fg:w="130"/><text x="16.0448%" y="719.50">&lt;core::re..</text></g><g><title>core::iter::adapters::try_process (130 samples, 6.54%)</title><rect x="15.7948%" y="693" width="6.5392%" height="15" fill="rgb(222,165,49)" fg:x="314" fg:w="130"/><text x="16.0448%" y="703.50">core::ite..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (129 samples, 6.49%)</title><rect x="15.8451%" y="677" width="6.4889%" height="15" fill="rgb(219,113,52)" fg:x="315" fg:w="129"/><text x="16.0951%" y="687.50">&lt;core::r..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (129 samples, 6.49%)</title><rect x="15.8451%" y="661" width="6.4889%" height="15" fill="rgb(214,7,15)" fg:x="315" fg:w="129"/><text x="16.0951%" y="671.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (129 samples, 6.49%)</title><rect x="15.8451%" y="645" width="6.4889%" height="15" fill="rgb(235,32,4)" fg:x="315" fg:w="129"/><text x="16.0951%" y="655.50">&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (129 samples, 6.49%)</title><rect x="15.8451%" y="629" width="6.4889%" height="15" fill="rgb(238,90,54)" fg:x="315" fg:w="129"/><text x="16.0951%" y="639.50">&lt;alloc::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (129 samples, 6.49%)</title><rect x="15.8451%" y="613" width="6.4889%" height="15" fill="rgb(213,208,19)" fg:x="315" fg:w="129"/><text x="16.0951%" y="623.50">&lt;alloc::..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.45%)</title><rect x="21.8813%" y="597" width="0.4527%" height="15" fill="rgb(233,156,4)" fg:x="435" fg:w="9"/><text x="22.1313%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.45%)</title><rect x="21.8813%" y="581" width="0.4527%" height="15" fill="rgb(207,194,5)" fg:x="435" fg:w="9"/><text x="22.1313%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.45%)</title><rect x="21.8813%" y="565" width="0.4527%" height="15" fill="rgb(206,111,30)" fg:x="435" fg:w="9"/><text x="22.1313%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.45%)</title><rect x="21.8813%" y="549" width="0.4527%" height="15" fill="rgb(243,70,54)" fg:x="435" fg:w="9"/><text x="22.1313%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.45%)</title><rect x="21.8813%" y="533" width="0.4527%" height="15" fill="rgb(242,28,8)" fg:x="435" fg:w="9"/><text x="22.1313%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.45%)</title><rect x="21.8813%" y="517" width="0.4527%" height="15" fill="rgb(219,106,18)" fg:x="435" fg:w="9"/><text x="22.1313%" y="527.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.45%)</title><rect x="21.8813%" y="501" width="0.4527%" height="15" fill="rgb(244,222,10)" fg:x="435" fg:w="9"/><text x="22.1313%" y="511.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.45%)</title><rect x="21.8813%" y="485" width="0.4527%" height="15" fill="rgb(236,179,52)" fg:x="435" fg:w="9"/><text x="22.1313%" y="495.50"></text></g><g><title>_int_malloc (7 samples, 0.35%)</title><rect x="21.9819%" y="469" width="0.3521%" height="15" fill="rgb(213,23,39)" fg:x="437" fg:w="7"/><text x="22.2319%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.10%)</title><rect x="22.4849%" y="597" width="0.1006%" height="15" fill="rgb(238,48,10)" fg:x="447" fg:w="2"/><text x="22.7349%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.25%)</title><rect x="22.4849%" y="613" width="0.2515%" height="15" fill="rgb(251,196,23)" fg:x="447" fg:w="5"/><text x="22.7349%" y="623.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.15%)</title><rect x="22.5855%" y="597" width="0.1509%" height="15" fill="rgb(250,152,24)" fg:x="449" fg:w="3"/><text x="22.8355%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.45%)</title><rect x="22.7364%" y="613" width="0.4527%" height="15" fill="rgb(209,150,17)" fg:x="452" fg:w="9"/><text x="22.9864%" y="623.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (9 samples, 0.45%)</title><rect x="22.7364%" y="597" width="0.4527%" height="15" fill="rgb(234,202,34)" fg:x="452" fg:w="9"/><text x="22.9864%" y="607.50"></text></g><g><title>core::ptr::read (1 samples, 0.05%)</title><rect x="23.1891%" y="581" width="0.0503%" height="15" fill="rgb(253,148,53)" fg:x="461" fg:w="1"/><text x="23.4391%" y="591.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.80%)</title><rect x="22.4849%" y="629" width="0.8048%" height="15" fill="rgb(218,129,16)" fg:x="447" fg:w="16"/><text x="22.7349%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.10%)</title><rect x="23.1891%" y="613" width="0.1006%" height="15" fill="rgb(216,85,19)" fg:x="461" fg:w="2"/><text x="23.4391%" y="623.50"></text></g><g><title>core::mem::replace (2 samples, 0.10%)</title><rect x="23.1891%" y="597" width="0.1006%" height="15" fill="rgb(235,228,7)" fg:x="461" fg:w="2"/><text x="23.4391%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="23.2394%" y="581" width="0.0503%" height="15" fill="rgb(245,175,0)" fg:x="462" fg:w="1"/><text x="23.4894%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 1.01%)</title><rect x="23.2897%" y="581" width="1.0060%" height="15" fill="rgb(208,168,36)" fg:x="463" fg:w="20"/><text x="23.5397%" y="591.50"></text></g><g><title>core::ptr::write (7 samples, 0.35%)</title><rect x="23.9437%" y="565" width="0.3521%" height="15" fill="rgb(246,171,24)" fg:x="476" fg:w="7"/><text x="24.1937%" y="575.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (40 samples, 2.01%)</title><rect x="22.3340%" y="741" width="2.0121%" height="15" fill="rgb(215,142,24)" fg:x="444" fg:w="40"/><text x="22.5840%" y="751.50">&lt;..</text></g><g><title>hex::encode_to_iter (40 samples, 2.01%)</title><rect x="22.3340%" y="725" width="2.0121%" height="15" fill="rgb(250,187,7)" fg:x="444" fg:w="40"/><text x="22.5840%" y="735.50">h..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (40 samples, 2.01%)</title><rect x="22.3340%" y="709" width="2.0121%" height="15" fill="rgb(228,66,33)" fg:x="444" fg:w="40"/><text x="22.5840%" y="719.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (40 samples, 2.01%)</title><rect x="22.3340%" y="693" width="2.0121%" height="15" fill="rgb(234,215,21)" fg:x="444" fg:w="40"/><text x="22.5840%" y="703.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (39 samples, 1.96%)</title><rect x="22.3843%" y="677" width="1.9618%" height="15" fill="rgb(222,191,20)" fg:x="445" fg:w="39"/><text x="22.6343%" y="687.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (39 samples, 1.96%)</title><rect x="22.3843%" y="661" width="1.9618%" height="15" fill="rgb(245,79,54)" fg:x="445" fg:w="39"/><text x="22.6343%" y="671.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (39 samples, 1.96%)</title><rect x="22.3843%" y="645" width="1.9618%" height="15" fill="rgb(240,10,37)" fg:x="445" fg:w="39"/><text x="22.6343%" y="655.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (21 samples, 1.06%)</title><rect x="23.2897%" y="629" width="1.0563%" height="15" fill="rgb(214,192,32)" fg:x="463" fg:w="21"/><text x="23.5397%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (21 samples, 1.06%)</title><rect x="23.2897%" y="613" width="1.0563%" height="15" fill="rgb(209,36,54)" fg:x="463" fg:w="21"/><text x="23.5397%" y="623.50"></text></g><g><title>alloc::string::String::push (21 samples, 1.06%)</title><rect x="23.2897%" y="597" width="1.0563%" height="15" fill="rgb(220,10,11)" fg:x="463" fg:w="21"/><text x="23.5397%" y="607.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.05%)</title><rect x="24.2958%" y="581" width="0.0503%" height="15" fill="rgb(221,106,17)" fg:x="483" fg:w="1"/><text x="24.5458%" y="591.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.05%)</title><rect x="24.2958%" y="565" width="0.0503%" height="15" fill="rgb(251,142,44)" fg:x="483" fg:w="1"/><text x="24.5458%" y="575.50"></text></g><g><title>__GI___libc_free (2 samples, 0.10%)</title><rect x="24.3461%" y="661" width="0.1006%" height="15" fill="rgb(238,13,15)" fg:x="484" fg:w="2"/><text x="24.5961%" y="671.50"></text></g><g><title>lab4::checksum::Checksum::update (187 samples, 9.41%)</title><rect x="15.0905%" y="773" width="9.4064%" height="15" fill="rgb(208,107,27)" fg:x="300" fg:w="187"/><text x="15.3405%" y="783.50">lab4::checksu..</text></g><g><title>hex::encode (43 samples, 2.16%)</title><rect x="22.3340%" y="757" width="2.1630%" height="15" fill="rgb(205,136,37)" fg:x="444" fg:w="43"/><text x="22.5840%" y="767.50">h..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.15%)</title><rect x="24.3461%" y="741" width="0.1509%" height="15" fill="rgb(250,205,27)" fg:x="484" fg:w="3"/><text x="24.5961%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.15%)</title><rect x="24.3461%" y="725" width="0.1509%" height="15" fill="rgb(210,80,43)" fg:x="484" fg:w="3"/><text x="24.5961%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.15%)</title><rect x="24.3461%" y="709" width="0.1509%" height="15" fill="rgb(247,160,36)" fg:x="484" fg:w="3"/><text x="24.5961%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.15%)</title><rect x="24.3461%" y="693" width="0.1509%" height="15" fill="rgb(234,13,49)" fg:x="484" fg:w="3"/><text x="24.5961%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.15%)</title><rect x="24.3461%" y="677" width="0.1509%" height="15" fill="rgb(234,122,0)" fg:x="484" fg:w="3"/><text x="24.5961%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="24.4467%" y="661" width="0.0503%" height="15" fill="rgb(207,146,38)" fg:x="486" fg:w="1"/><text x="24.6967%" y="671.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (1 samples, 0.05%)</title><rect x="24.5473%" y="693" width="0.0503%" height="15" fill="rgb(207,177,25)" fg:x="488" fg:w="1"/><text x="24.7973%" y="703.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (1 samples, 0.05%)</title><rect x="24.5473%" y="677" width="0.0503%" height="15" fill="rgb(211,178,42)" fg:x="488" fg:w="1"/><text x="24.7973%" y="687.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.05%)</title><rect x="24.5473%" y="661" width="0.0503%" height="15" fill="rgb(230,69,54)" fg:x="488" fg:w="1"/><text x="24.7973%" y="671.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.05%)</title><rect x="24.5976%" y="597" width="0.0503%" height="15" fill="rgb(214,135,41)" fg:x="489" fg:w="1"/><text x="24.8476%" y="607.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.05%)</title><rect x="24.5976%" y="581" width="0.0503%" height="15" fill="rgb(237,67,25)" fg:x="489" fg:w="1"/><text x="24.8476%" y="591.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (1 samples, 0.05%)</title><rect x="24.5976%" y="565" width="0.0503%" height="15" fill="rgb(222,189,50)" fg:x="489" fg:w="1"/><text x="24.8476%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.05%)</title><rect x="24.5976%" y="549" width="0.0503%" height="15" fill="rgb(245,148,34)" fg:x="489" fg:w="1"/><text x="24.8476%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="581" width="0.0503%" height="15" fill="rgb(222,29,6)" fg:x="490" fg:w="1"/><text x="24.8979%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="565" width="0.0503%" height="15" fill="rgb(221,189,43)" fg:x="490" fg:w="1"/><text x="24.8979%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="549" width="0.0503%" height="15" fill="rgb(207,36,27)" fg:x="490" fg:w="1"/><text x="24.8979%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="533" width="0.0503%" height="15" fill="rgb(217,90,24)" fg:x="490" fg:w="1"/><text x="24.8979%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="517" width="0.0503%" height="15" fill="rgb(224,66,35)" fg:x="490" fg:w="1"/><text x="24.8979%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="501" width="0.0503%" height="15" fill="rgb(221,13,50)" fg:x="490" fg:w="1"/><text x="24.8979%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="485" width="0.0503%" height="15" fill="rgb(236,68,49)" fg:x="490" fg:w="1"/><text x="24.8979%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="469" width="0.0503%" height="15" fill="rgb(229,146,28)" fg:x="490" fg:w="1"/><text x="24.8979%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="453" width="0.0503%" height="15" fill="rgb(225,31,38)" fg:x="490" fg:w="1"/><text x="24.8979%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="437" width="0.0503%" height="15" fill="rgb(250,208,3)" fg:x="490" fg:w="1"/><text x="24.8979%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="421" width="0.0503%" height="15" fill="rgb(246,54,23)" fg:x="490" fg:w="1"/><text x="24.8979%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="24.6479%" y="405" width="0.0503%" height="15" fill="rgb(243,76,11)" fg:x="490" fg:w="1"/><text x="24.8979%" y="415.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.05%)</title><rect x="24.6982%" y="581" width="0.0503%" height="15" fill="rgb(245,21,50)" fg:x="491" fg:w="1"/><text x="24.9482%" y="591.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="24.6982%" y="565" width="0.0503%" height="15" fill="rgb(228,9,43)" fg:x="491" fg:w="1"/><text x="24.9482%" y="575.50"></text></g><g><title>sha2::sha256::soft::add (2 samples, 0.10%)</title><rect x="24.7485%" y="565" width="0.1006%" height="15" fill="rgb(208,100,47)" fg:x="492" fg:w="2"/><text x="24.9985%" y="575.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.10%)</title><rect x="24.7485%" y="549" width="0.1006%" height="15" fill="rgb(232,26,8)" fg:x="492" fg:w="2"/><text x="24.9985%" y="559.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.05%)</title><rect x="24.8491%" y="549" width="0.0503%" height="15" fill="rgb(216,166,38)" fg:x="494" fg:w="1"/><text x="25.0991%" y="559.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="24.8491%" y="533" width="0.0503%" height="15" fill="rgb(251,202,51)" fg:x="494" fg:w="1"/><text x="25.0991%" y="543.50"></text></g><g><title>sha2::sha256::soft::or (3 samples, 0.15%)</title><rect x="24.8994%" y="533" width="0.1509%" height="15" fill="rgb(254,216,34)" fg:x="495" fg:w="3"/><text x="25.1494%" y="543.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (8 samples, 0.40%)</title><rect x="24.8491%" y="565" width="0.4024%" height="15" fill="rgb(251,32,27)" fg:x="494" fg:w="8"/><text x="25.0991%" y="575.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (7 samples, 0.35%)</title><rect x="24.8994%" y="549" width="0.3521%" height="15" fill="rgb(208,127,28)" fg:x="495" fg:w="7"/><text x="25.1494%" y="559.50"></text></g><g><title>sha2::sha256::soft::xor (4 samples, 0.20%)</title><rect x="25.0503%" y="533" width="0.2012%" height="15" fill="rgb(224,137,22)" fg:x="498" fg:w="4"/><text x="25.3003%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (4 samples, 0.20%)</title><rect x="25.3018%" y="549" width="0.2012%" height="15" fill="rgb(254,70,32)" fg:x="503" fg:w="4"/><text x="25.5518%" y="559.50"></text></g><g><title>sha2::sha256::soft::schedule (18 samples, 0.91%)</title><rect x="24.7485%" y="581" width="0.9054%" height="15" fill="rgb(229,75,37)" fg:x="492" fg:w="18"/><text x="24.9985%" y="591.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (8 samples, 0.40%)</title><rect x="25.2515%" y="565" width="0.4024%" height="15" fill="rgb(252,64,23)" fg:x="502" fg:w="8"/><text x="25.5015%" y="575.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (3 samples, 0.15%)</title><rect x="25.5030%" y="549" width="0.1509%" height="15" fill="rgb(232,162,48)" fg:x="507" fg:w="3"/><text x="25.7530%" y="559.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (7 samples, 0.35%)</title><rect x="26.1066%" y="565" width="0.3521%" height="15" fill="rgb(246,160,12)" fg:x="519" fg:w="7"/><text x="26.3566%" y="575.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (45 samples, 2.26%)</title><rect x="24.4970%" y="757" width="2.2636%" height="15" fill="rgb(247,166,0)" fg:x="487" fg:w="45"/><text x="24.7470%" y="767.50">&lt;..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (45 samples, 2.26%)</title><rect x="24.4970%" y="741" width="2.2636%" height="15" fill="rgb(249,219,21)" fg:x="487" fg:w="45"/><text x="24.7470%" y="751.50">d..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (44 samples, 2.21%)</title><rect x="24.5473%" y="725" width="2.2133%" height="15" fill="rgb(205,209,3)" fg:x="488" fg:w="44"/><text x="24.7973%" y="735.50">&lt;..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (44 samples, 2.21%)</title><rect x="24.5473%" y="709" width="2.2133%" height="15" fill="rgb(243,44,1)" fg:x="488" fg:w="44"/><text x="24.7973%" y="719.50">&lt;..</text></g><g><title>sha2::sha256::Engine256::finish (43 samples, 2.16%)</title><rect x="24.5976%" y="693" width="2.1630%" height="15" fill="rgb(206,159,16)" fg:x="489" fg:w="43"/><text x="24.8476%" y="703.50">s..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (43 samples, 2.16%)</title><rect x="24.5976%" y="677" width="2.1630%" height="15" fill="rgb(244,77,30)" fg:x="489" fg:w="43"/><text x="24.8476%" y="687.50">b..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (43 samples, 2.16%)</title><rect x="24.5976%" y="661" width="2.1630%" height="15" fill="rgb(218,69,12)" fg:x="489" fg:w="43"/><text x="24.8476%" y="671.50">s..</text></g><g><title>sha2::sha256::compress256 (43 samples, 2.16%)</title><rect x="24.5976%" y="645" width="2.1630%" height="15" fill="rgb(212,87,7)" fg:x="489" fg:w="43"/><text x="24.8476%" y="655.50">s..</text></g><g><title>sha2::sha256::x86::compress (43 samples, 2.16%)</title><rect x="24.5976%" y="629" width="2.1630%" height="15" fill="rgb(245,114,25)" fg:x="489" fg:w="43"/><text x="24.8476%" y="639.50">s..</text></g><g><title>sha2::sha256::soft::compress (43 samples, 2.16%)</title><rect x="24.5976%" y="613" width="2.1630%" height="15" fill="rgb(210,61,42)" fg:x="489" fg:w="43"/><text x="24.8476%" y="623.50">s..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (42 samples, 2.11%)</title><rect x="24.6479%" y="597" width="2.1127%" height="15" fill="rgb(211,52,33)" fg:x="490" fg:w="42"/><text x="24.8979%" y="607.50">s..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (22 samples, 1.11%)</title><rect x="25.6539%" y="581" width="1.1066%" height="15" fill="rgb(234,58,33)" fg:x="510" fg:w="22"/><text x="25.9039%" y="591.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (6 samples, 0.30%)</title><rect x="26.4588%" y="565" width="0.3018%" height="15" fill="rgb(220,115,36)" fg:x="526" fg:w="6"/><text x="26.7088%" y="575.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.05%)</title><rect x="26.8109%" y="565" width="0.0503%" height="15" fill="rgb(243,153,54)" fg:x="533" fg:w="1"/><text x="27.0609%" y="575.50"></text></g><g><title>alloc::string::String::reserve (3 samples, 0.15%)</title><rect x="26.7606%" y="661" width="0.1509%" height="15" fill="rgb(251,47,18)" fg:x="532" fg:w="3"/><text x="27.0106%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.15%)</title><rect x="26.7606%" y="645" width="0.1509%" height="15" fill="rgb(242,102,42)" fg:x="532" fg:w="3"/><text x="27.0106%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.15%)</title><rect x="26.7606%" y="629" width="0.1509%" height="15" fill="rgb(234,31,38)" fg:x="532" fg:w="3"/><text x="27.0106%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.15%)</title><rect x="26.7606%" y="613" width="0.1509%" height="15" fill="rgb(221,117,51)" fg:x="532" fg:w="3"/><text x="27.0106%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.15%)</title><rect x="26.7606%" y="597" width="0.1509%" height="15" fill="rgb(212,20,18)" fg:x="532" fg:w="3"/><text x="27.0106%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.10%)</title><rect x="26.8109%" y="581" width="0.1006%" height="15" fill="rgb(245,133,36)" fg:x="533" fg:w="2"/><text x="27.0609%" y="591.50"></text></g><g><title>__rust_alloc (1 samples, 0.05%)</title><rect x="26.8612%" y="565" width="0.0503%" height="15" fill="rgb(212,6,19)" fg:x="534" fg:w="1"/><text x="27.1112%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.10%)</title><rect x="26.9618%" y="613" width="0.1006%" height="15" fill="rgb(218,1,36)" fg:x="536" fg:w="2"/><text x="27.2118%" y="623.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.10%)</title><rect x="26.9618%" y="597" width="0.1006%" height="15" fill="rgb(246,84,54)" fg:x="536" fg:w="2"/><text x="27.2118%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.25%)</title><rect x="27.0624%" y="613" width="0.2515%" height="15" fill="rgb(242,110,6)" fg:x="538" fg:w="5"/><text x="27.3124%" y="623.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (4 samples, 0.20%)</title><rect x="27.1127%" y="597" width="0.2012%" height="15" fill="rgb(214,47,5)" fg:x="539" fg:w="4"/><text x="27.3627%" y="607.50"></text></g><g><title>core::ptr::read (3 samples, 0.15%)</title><rect x="27.3139%" y="581" width="0.1509%" height="15" fill="rgb(218,159,25)" fg:x="543" fg:w="3"/><text x="27.5639%" y="591.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.60%)</title><rect x="26.9618%" y="629" width="0.6036%" height="15" fill="rgb(215,211,28)" fg:x="536" fg:w="12"/><text x="27.2118%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.25%)</title><rect x="27.3139%" y="613" width="0.2515%" height="15" fill="rgb(238,59,32)" fg:x="543" fg:w="5"/><text x="27.5639%" y="623.50"></text></g><g><title>core::mem::replace (5 samples, 0.25%)</title><rect x="27.3139%" y="597" width="0.2515%" height="15" fill="rgb(226,82,3)" fg:x="543" fg:w="5"/><text x="27.5639%" y="607.50"></text></g><g><title>core::ptr::write (2 samples, 0.10%)</title><rect x="27.4648%" y="581" width="0.1006%" height="15" fill="rgb(240,164,32)" fg:x="546" fg:w="2"/><text x="27.7148%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.1187%" y="565" width="0.0503%" height="15" fill="rgb(232,46,7)" fg:x="559" fg:w="1"/><text x="28.3687%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.1187%" y="549" width="0.0503%" height="15" fill="rgb(229,129,53)" fg:x="559" fg:w="1"/><text x="28.3687%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.1187%" y="533" width="0.0503%" height="15" fill="rgb(234,188,29)" fg:x="559" fg:w="1"/><text x="28.3687%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.1187%" y="517" width="0.0503%" height="15" fill="rgb(246,141,4)" fg:x="559" fg:w="1"/><text x="28.3687%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.1187%" y="501" width="0.0503%" height="15" fill="rgb(229,23,39)" fg:x="559" fg:w="1"/><text x="28.3687%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.1187%" y="485" width="0.0503%" height="15" fill="rgb(206,12,3)" fg:x="559" fg:w="1"/><text x="28.3687%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.1187%" y="469" width="0.0503%" height="15" fill="rgb(252,226,20)" fg:x="559" fg:w="1"/><text x="28.3687%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="28.1187%" y="453" width="0.0503%" height="15" fill="rgb(216,123,35)" fg:x="559" fg:w="1"/><text x="28.3687%" y="463.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (80 samples, 4.02%)</title><rect x="24.4970%" y="773" width="4.0241%" height="15" fill="rgb(212,68,40)" fg:x="487" fg:w="80"/><text x="24.7470%" y="783.50">lab4..</text></g><g><title>hex::encode (35 samples, 1.76%)</title><rect x="26.7606%" y="757" width="1.7606%" height="15" fill="rgb(254,125,32)" fg:x="532" fg:w="35"/><text x="27.0106%" y="767.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (35 samples, 1.76%)</title><rect x="26.7606%" y="741" width="1.7606%" height="15" fill="rgb(253,97,22)" fg:x="532" fg:w="35"/><text x="27.0106%" y="751.50"></text></g><g><title>hex::encode_to_iter (35 samples, 1.76%)</title><rect x="26.7606%" y="725" width="1.7606%" height="15" fill="rgb(241,101,14)" fg:x="532" fg:w="35"/><text x="27.0106%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (35 samples, 1.76%)</title><rect x="26.7606%" y="709" width="1.7606%" height="15" fill="rgb(238,103,29)" fg:x="532" fg:w="35"/><text x="27.0106%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (35 samples, 1.76%)</title><rect x="26.7606%" y="693" width="1.7606%" height="15" fill="rgb(233,195,47)" fg:x="532" fg:w="35"/><text x="27.0106%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (35 samples, 1.76%)</title><rect x="26.7606%" y="677" width="1.7606%" height="15" fill="rgb(246,218,30)" fg:x="532" fg:w="35"/><text x="27.0106%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (32 samples, 1.61%)</title><rect x="26.9115%" y="661" width="1.6097%" height="15" fill="rgb(219,145,47)" fg:x="535" fg:w="32"/><text x="27.1615%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (32 samples, 1.61%)</title><rect x="26.9115%" y="645" width="1.6097%" height="15" fill="rgb(243,12,26)" fg:x="535" fg:w="32"/><text x="27.1615%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (19 samples, 0.96%)</title><rect x="27.5654%" y="629" width="0.9557%" height="15" fill="rgb(214,87,16)" fg:x="548" fg:w="19"/><text x="27.8154%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (19 samples, 0.96%)</title><rect x="27.5654%" y="613" width="0.9557%" height="15" fill="rgb(208,99,42)" fg:x="548" fg:w="19"/><text x="27.8154%" y="623.50"></text></g><g><title>alloc::string::String::push (19 samples, 0.96%)</title><rect x="27.5654%" y="597" width="0.9557%" height="15" fill="rgb(253,99,2)" fg:x="548" fg:w="19"/><text x="27.8154%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.96%)</title><rect x="27.5654%" y="581" width="0.9557%" height="15" fill="rgb(220,168,23)" fg:x="548" fg:w="19"/><text x="27.8154%" y="591.50"></text></g><g><title>core::ptr::write (7 samples, 0.35%)</title><rect x="28.1690%" y="565" width="0.3521%" height="15" fill="rgb(242,38,24)" fg:x="560" fg:w="7"/><text x="28.4190%" y="575.50"></text></g><g><title>std::sys::unix::futex::futex_wait (54 samples, 2.72%)</title><rect x="28.5211%" y="725" width="2.7163%" height="15" fill="rgb(225,182,9)" fg:x="567" fg:w="54"/><text x="28.7711%" y="735.50">st..</text></g><g><title>syscall (54 samples, 2.72%)</title><rect x="28.5211%" y="709" width="2.7163%" height="15" fill="rgb(243,178,37)" fg:x="567" fg:w="54"/><text x="28.7711%" y="719.50">sy..</text></g><g><title>[unknown] (54 samples, 2.72%)</title><rect x="28.5211%" y="693" width="2.7163%" height="15" fill="rgb(232,139,19)" fg:x="567" fg:w="54"/><text x="28.7711%" y="703.50">[u..</text></g><g><title>[unknown] (53 samples, 2.67%)</title><rect x="28.5714%" y="677" width="2.6660%" height="15" fill="rgb(225,201,24)" fg:x="568" fg:w="53"/><text x="28.8214%" y="687.50">[u..</text></g><g><title>[unknown] (53 samples, 2.67%)</title><rect x="28.5714%" y="661" width="2.6660%" height="15" fill="rgb(221,47,46)" fg:x="568" fg:w="53"/><text x="28.8214%" y="671.50">[u..</text></g><g><title>[unknown] (52 samples, 2.62%)</title><rect x="28.6217%" y="645" width="2.6157%" height="15" fill="rgb(249,23,13)" fg:x="569" fg:w="52"/><text x="28.8717%" y="655.50">[u..</text></g><g><title>[unknown] (51 samples, 2.57%)</title><rect x="28.6720%" y="629" width="2.5654%" height="15" fill="rgb(219,9,5)" fg:x="570" fg:w="51"/><text x="28.9220%" y="639.50">[u..</text></g><g><title>[unknown] (51 samples, 2.57%)</title><rect x="28.6720%" y="613" width="2.5654%" height="15" fill="rgb(254,171,16)" fg:x="570" fg:w="51"/><text x="28.9220%" y="623.50">[u..</text></g><g><title>[unknown] (49 samples, 2.46%)</title><rect x="28.7726%" y="597" width="2.4648%" height="15" fill="rgb(230,171,20)" fg:x="572" fg:w="49"/><text x="29.0226%" y="607.50">[u..</text></g><g><title>[unknown] (49 samples, 2.46%)</title><rect x="28.7726%" y="581" width="2.4648%" height="15" fill="rgb(210,71,41)" fg:x="572" fg:w="49"/><text x="29.0226%" y="591.50">[u..</text></g><g><title>[unknown] (49 samples, 2.46%)</title><rect x="28.7726%" y="565" width="2.4648%" height="15" fill="rgb(206,173,20)" fg:x="572" fg:w="49"/><text x="29.0226%" y="575.50">[u..</text></g><g><title>[unknown] (49 samples, 2.46%)</title><rect x="28.7726%" y="549" width="2.4648%" height="15" fill="rgb(233,88,34)" fg:x="572" fg:w="49"/><text x="29.0226%" y="559.50">[u..</text></g><g><title>[unknown] (48 samples, 2.41%)</title><rect x="28.8229%" y="533" width="2.4145%" height="15" fill="rgb(223,209,46)" fg:x="573" fg:w="48"/><text x="29.0729%" y="543.50">[u..</text></g><g><title>[unknown] (48 samples, 2.41%)</title><rect x="28.8229%" y="517" width="2.4145%" height="15" fill="rgb(250,43,18)" fg:x="573" fg:w="48"/><text x="29.0729%" y="527.50">[u..</text></g><g><title>[unknown] (48 samples, 2.41%)</title><rect x="28.8229%" y="501" width="2.4145%" height="15" fill="rgb(208,13,10)" fg:x="573" fg:w="48"/><text x="29.0729%" y="511.50">[u..</text></g><g><title>[unknown] (48 samples, 2.41%)</title><rect x="28.8229%" y="485" width="2.4145%" height="15" fill="rgb(212,200,36)" fg:x="573" fg:w="48"/><text x="29.0729%" y="495.50">[u..</text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="31.1368%" y="469" width="0.1006%" height="15" fill="rgb(225,90,30)" fg:x="619" fg:w="2"/><text x="31.3868%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="31.1368%" y="453" width="0.1006%" height="15" fill="rgb(236,182,39)" fg:x="619" fg:w="2"/><text x="31.3868%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="31.1871%" y="437" width="0.0503%" height="15" fill="rgb(212,144,35)" fg:x="620" fg:w="1"/><text x="31.4371%" y="447.50"></text></g><g><title>lab4::package::PackageDownloader::run (410 samples, 20.62%)</title><rect x="10.8149%" y="789" width="20.6237%" height="15" fill="rgb(228,63,44)" fg:x="215" fg:w="410"/><text x="11.0649%" y="799.50">lab4::package::PackageDownloader..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (58 samples, 2.92%)</title><rect x="28.5211%" y="773" width="2.9175%" height="15" fill="rgb(228,109,6)" fg:x="567" fg:w="58"/><text x="28.7711%" y="783.50">st..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (58 samples, 2.92%)</title><rect x="28.5211%" y="757" width="2.9175%" height="15" fill="rgb(238,117,24)" fg:x="567" fg:w="58"/><text x="28.7711%" y="767.50">st..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (58 samples, 2.92%)</title><rect x="28.5211%" y="741" width="2.9175%" height="15" fill="rgb(242,26,26)" fg:x="567" fg:w="58"/><text x="28.7711%" y="751.50">st..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (4 samples, 0.20%)</title><rect x="31.2374%" y="725" width="0.2012%" height="15" fill="rgb(221,92,48)" fg:x="621" fg:w="4"/><text x="31.4874%" y="735.50"></text></g><g><title>core::hint::spin_loop (4 samples, 0.20%)</title><rect x="31.2374%" y="709" width="0.2012%" height="15" fill="rgb(209,209,32)" fg:x="621" fg:w="4"/><text x="31.4874%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (4 samples, 0.20%)</title><rect x="31.2374%" y="693" width="0.2012%" height="15" fill="rgb(221,70,22)" fg:x="621" fg:w="4"/><text x="31.4874%" y="703.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="32.5956%" y="773" width="0.0503%" height="15" fill="rgb(248,145,5)" fg:x="648" fg:w="1"/><text x="32.8456%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="32.5956%" y="757" width="0.0503%" height="15" fill="rgb(226,116,26)" fg:x="648" fg:w="1"/><text x="32.8456%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.10%)</title><rect x="32.6459%" y="773" width="0.1006%" height="15" fill="rgb(244,5,17)" fg:x="649" fg:w="2"/><text x="32.8959%" y="783.50"></text></g><g><title>core::ptr::write (2 samples, 0.10%)</title><rect x="32.6459%" y="757" width="0.1006%" height="15" fill="rgb(252,159,33)" fg:x="649" fg:w="2"/><text x="32.8959%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="32.6459%" y="741" width="0.1006%" height="15" fill="rgb(206,71,0)" fg:x="649" fg:w="2"/><text x="32.8959%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="32.6459%" y="725" width="0.1006%" height="15" fill="rgb(233,118,54)" fg:x="649" fg:w="2"/><text x="32.8959%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="32.6459%" y="709" width="0.1006%" height="15" fill="rgb(234,83,48)" fg:x="649" fg:w="2"/><text x="32.8959%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="32.6459%" y="693" width="0.1006%" height="15" fill="rgb(228,3,54)" fg:x="649" fg:w="2"/><text x="32.8959%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="32.6459%" y="677" width="0.1006%" height="15" fill="rgb(226,155,13)" fg:x="649" fg:w="2"/><text x="32.8959%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="32.6459%" y="661" width="0.1006%" height="15" fill="rgb(241,28,37)" fg:x="649" fg:w="2"/><text x="32.8959%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="32.6459%" y="645" width="0.1006%" height="15" fill="rgb(233,93,10)" fg:x="649" fg:w="2"/><text x="32.8959%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="32.6459%" y="629" width="0.1006%" height="15" fill="rgb(225,113,19)" fg:x="649" fg:w="2"/><text x="32.8959%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="32.6962%" y="613" width="0.0503%" height="15" fill="rgb(241,2,18)" fg:x="650" fg:w="1"/><text x="32.9462%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="32.6962%" y="597" width="0.0503%" height="15" fill="rgb(228,207,21)" fg:x="650" fg:w="1"/><text x="32.9462%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="32.6962%" y="581" width="0.0503%" height="15" fill="rgb(213,211,35)" fg:x="650" fg:w="1"/><text x="32.9462%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (8 samples, 0.40%)</title><rect x="32.7465%" y="773" width="0.4024%" height="15" fill="rgb(209,83,10)" fg:x="651" fg:w="8"/><text x="32.9965%" y="783.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.25%)</title><rect x="33.2998%" y="757" width="0.2515%" height="15" fill="rgb(209,164,1)" fg:x="662" fg:w="5"/><text x="33.5498%" y="767.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (5 samples, 0.25%)</title><rect x="33.2998%" y="741" width="0.2515%" height="15" fill="rgb(213,184,43)" fg:x="662" fg:w="5"/><text x="33.5498%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (41 samples, 2.06%)</title><rect x="33.5513%" y="757" width="2.0624%" height="15" fill="rgb(231,61,34)" fg:x="667" fg:w="41"/><text x="33.8013%" y="767.50">c..</text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (8 samples, 0.40%)</title><rect x="36.9215%" y="741" width="0.4024%" height="15" fill="rgb(235,75,3)" fg:x="734" fg:w="8"/><text x="37.1715%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (8 samples, 0.40%)</title><rect x="37.3239%" y="741" width="0.4024%" height="15" fill="rgb(220,106,47)" fg:x="742" fg:w="8"/><text x="37.5739%" y="751.50"></text></g><g><title>crossbeam_channel::context::Context::with (11 samples, 0.55%)</title><rect x="37.7264%" y="741" width="0.5533%" height="15" fill="rgb(210,196,33)" fg:x="750" fg:w="11"/><text x="37.9764%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.55%)</title><rect x="37.7264%" y="725" width="0.5533%" height="15" fill="rgb(229,154,42)" fg:x="750" fg:w="11"/><text x="37.9764%" y="735.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (11 samples, 0.55%)</title><rect x="37.7264%" y="709" width="0.5533%" height="15" fill="rgb(228,114,26)" fg:x="750" fg:w="11"/><text x="37.9764%" y="719.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (11 samples, 0.55%)</title><rect x="37.7264%" y="693" width="0.5533%" height="15" fill="rgb(208,144,1)" fg:x="750" fg:w="11"/><text x="37.9764%" y="703.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (11 samples, 0.55%)</title><rect x="37.7264%" y="677" width="0.5533%" height="15" fill="rgb(239,112,37)" fg:x="750" fg:w="11"/><text x="37.9764%" y="687.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::register (11 samples, 0.55%)</title><rect x="37.7264%" y="661" width="0.5533%" height="15" fill="rgb(210,96,50)" fg:x="750" fg:w="11"/><text x="37.9764%" y="671.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (11 samples, 0.55%)</title><rect x="37.7264%" y="645" width="0.5533%" height="15" fill="rgb(222,178,2)" fg:x="750" fg:w="11"/><text x="37.9764%" y="655.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (11 samples, 0.55%)</title><rect x="37.7264%" y="629" width="0.5533%" height="15" fill="rgb(226,74,18)" fg:x="750" fg:w="11"/><text x="37.9764%" y="639.50"></text></g><g><title>__GI___sched_yield (11 samples, 0.55%)</title><rect x="37.7264%" y="613" width="0.5533%" height="15" fill="rgb(225,67,54)" fg:x="750" fg:w="11"/><text x="37.9764%" y="623.50"></text></g><g><title>[unknown] (11 samples, 0.55%)</title><rect x="37.7264%" y="597" width="0.5533%" height="15" fill="rgb(251,92,32)" fg:x="750" fg:w="11"/><text x="37.9764%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="37.9276%" y="581" width="0.3521%" height="15" fill="rgb(228,149,22)" fg:x="754" fg:w="7"/><text x="38.1776%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="37.9276%" y="565" width="0.3521%" height="15" fill="rgb(243,54,13)" fg:x="754" fg:w="7"/><text x="38.1776%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="37.9276%" y="549" width="0.3521%" height="15" fill="rgb(243,180,28)" fg:x="754" fg:w="7"/><text x="38.1776%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="37.9276%" y="533" width="0.3521%" height="15" fill="rgb(208,167,24)" fg:x="754" fg:w="7"/><text x="38.1776%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="37.9276%" y="517" width="0.3521%" height="15" fill="rgb(245,73,45)" fg:x="754" fg:w="7"/><text x="38.1776%" y="527.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="37.9276%" y="501" width="0.3521%" height="15" fill="rgb(237,203,48)" fg:x="754" fg:w="7"/><text x="38.1776%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="37.9779%" y="485" width="0.3018%" height="15" fill="rgb(211,197,16)" fg:x="755" fg:w="6"/><text x="38.2279%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="38.0282%" y="469" width="0.2515%" height="15" fill="rgb(243,99,51)" fg:x="756" fg:w="5"/><text x="38.2782%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="38.0282%" y="453" width="0.2515%" height="15" fill="rgb(215,123,29)" fg:x="756" fg:w="5"/><text x="38.2782%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="38.0282%" y="437" width="0.2515%" height="15" fill="rgb(239,186,37)" fg:x="756" fg:w="5"/><text x="38.2782%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="38.0282%" y="421" width="0.2515%" height="15" fill="rgb(252,136,39)" fg:x="756" fg:w="5"/><text x="38.2782%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (6 samples, 0.30%)</title><rect x="38.7324%" y="725" width="0.3018%" height="15" fill="rgb(223,213,32)" fg:x="770" fg:w="6"/><text x="38.9824%" y="735.50"></text></g><g><title>core::ptr::read (6 samples, 0.30%)</title><rect x="38.7324%" y="709" width="0.3018%" height="15" fill="rgb(233,115,5)" fg:x="770" fg:w="6"/><text x="38.9824%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.10%)</title><rect x="39.0342%" y="725" width="0.1006%" height="15" fill="rgb(207,226,44)" fg:x="776" fg:w="2"/><text x="39.2842%" y="735.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.10%)</title><rect x="39.0342%" y="709" width="0.1006%" height="15" fill="rgb(208,126,0)" fg:x="776" fg:w="2"/><text x="39.2842%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.10%)</title><rect x="39.0342%" y="693" width="0.1006%" height="15" fill="rgb(244,66,21)" fg:x="776" fg:w="2"/><text x="39.2842%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (48 samples, 2.41%)</title><rect x="39.1348%" y="725" width="2.4145%" height="15" fill="rgb(222,97,12)" fg:x="778" fg:w="48"/><text x="39.3848%" y="735.50">co..</text></g><g><title>core::sync::atomic::atomic_or (48 samples, 2.41%)</title><rect x="39.1348%" y="709" width="2.4145%" height="15" fill="rgb(219,213,19)" fg:x="778" fg:w="48"/><text x="39.3848%" y="719.50">co..</text></g><g><title>__GI___libc_free (2 samples, 0.10%)</title><rect x="41.8008%" y="629" width="0.1006%" height="15" fill="rgb(252,169,30)" fg:x="831" fg:w="2"/><text x="42.0508%" y="639.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::destroy (16 samples, 0.80%)</title><rect x="41.5493%" y="725" width="0.8048%" height="15" fill="rgb(206,32,51)" fg:x="826" fg:w="16"/><text x="41.7993%" y="735.50"></text></g><g><title>core::mem::drop (11 samples, 0.55%)</title><rect x="41.8008%" y="709" width="0.5533%" height="15" fill="rgb(250,172,42)" fg:x="831" fg:w="11"/><text x="42.0508%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (11 samples, 0.55%)</title><rect x="41.8008%" y="693" width="0.5533%" height="15" fill="rgb(209,34,43)" fg:x="831" fg:w="11"/><text x="42.0508%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.55%)</title><rect x="41.8008%" y="677" width="0.5533%" height="15" fill="rgb(223,11,35)" fg:x="831" fg:w="11"/><text x="42.0508%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.55%)</title><rect x="41.8008%" y="661" width="0.5533%" height="15" fill="rgb(251,219,26)" fg:x="831" fg:w="11"/><text x="42.0508%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.55%)</title><rect x="41.8008%" y="645" width="0.5533%" height="15" fill="rgb(231,119,3)" fg:x="831" fg:w="11"/><text x="42.0508%" y="655.50"></text></g><g><title>_int_free (9 samples, 0.45%)</title><rect x="41.9014%" y="629" width="0.4527%" height="15" fill="rgb(216,97,11)" fg:x="833" fg:w="9"/><text x="42.1514%" y="639.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.05%)</title><rect x="42.3038%" y="613" width="0.0503%" height="15" fill="rgb(223,59,9)" fg:x="841" fg:w="1"/><text x="42.5538%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.30%)</title><rect x="42.4044%" y="709" width="0.3018%" height="15" fill="rgb(233,93,31)" fg:x="843" fg:w="6"/><text x="42.6544%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.30%)</title><rect x="42.4044%" y="693" width="0.3018%" height="15" fill="rgb(239,81,33)" fg:x="843" fg:w="6"/><text x="42.6544%" y="703.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (91 samples, 4.58%)</title><rect x="38.2797%" y="741" width="4.5775%" height="15" fill="rgb(213,120,34)" fg:x="761" fg:w="91"/><text x="38.5297%" y="751.50">cross..</text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (10 samples, 0.50%)</title><rect x="42.3541%" y="725" width="0.5030%" height="15" fill="rgb(243,49,53)" fg:x="842" fg:w="10"/><text x="42.6041%" y="735.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (3 samples, 0.15%)</title><rect x="42.7062%" y="709" width="0.1509%" height="15" fill="rgb(247,216,33)" fg:x="849" fg:w="3"/><text x="42.9562%" y="719.50"></text></g><g><title>__GI___sched_yield (3 samples, 0.15%)</title><rect x="42.7062%" y="693" width="0.1509%" height="15" fill="rgb(226,26,14)" fg:x="849" fg:w="3"/><text x="42.9562%" y="703.50"></text></g><g><title>[unknown] (3 samples, 0.15%)</title><rect x="42.7062%" y="677" width="0.1509%" height="15" fill="rgb(215,49,53)" fg:x="849" fg:w="3"/><text x="42.9562%" y="687.50"></text></g><g><title>[unknown] (3 samples, 0.15%)</title><rect x="42.7062%" y="661" width="0.1509%" height="15" fill="rgb(245,162,40)" fg:x="849" fg:w="3"/><text x="42.9562%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.15%)</title><rect x="42.7062%" y="645" width="0.1509%" height="15" fill="rgb(229,68,17)" fg:x="849" fg:w="3"/><text x="42.9562%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="42.7565%" y="629" width="0.1006%" height="15" fill="rgb(213,182,10)" fg:x="850" fg:w="2"/><text x="43.0065%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="42.7565%" y="613" width="0.1006%" height="15" fill="rgb(245,125,30)" fg:x="850" fg:w="2"/><text x="43.0065%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="42.7565%" y="597" width="0.1006%" height="15" fill="rgb(232,202,2)" fg:x="850" fg:w="2"/><text x="43.0065%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="42.7565%" y="581" width="0.1006%" height="15" fill="rgb(237,140,51)" fg:x="850" fg:w="2"/><text x="43.0065%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="42.8068%" y="565" width="0.0503%" height="15" fill="rgb(236,157,25)" fg:x="851" fg:w="1"/><text x="43.0568%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="42.8068%" y="549" width="0.0503%" height="15" fill="rgb(219,209,0)" fg:x="851" fg:w="1"/><text x="43.0568%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="42.8068%" y="533" width="0.0503%" height="15" fill="rgb(240,116,54)" fg:x="851" fg:w="1"/><text x="43.0568%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.05%)</title><rect x="45.0704%" y="725" width="0.0503%" height="15" fill="rgb(216,10,36)" fg:x="896" fg:w="1"/><text x="45.3204%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="45.0704%" y="709" width="0.0503%" height="15" fill="rgb(222,72,44)" fg:x="896" fg:w="1"/><text x="45.3204%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (29 samples, 1.46%)</title><rect x="45.1207%" y="725" width="1.4588%" height="15" fill="rgb(232,159,9)" fg:x="897" fg:w="29"/><text x="45.3707%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (29 samples, 1.46%)</title><rect x="45.1207%" y="709" width="1.4588%" height="15" fill="rgb(210,39,32)" fg:x="897" fg:w="29"/><text x="45.3707%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (35 samples, 1.76%)</title><rect x="46.5795%" y="725" width="1.7606%" height="15" fill="rgb(216,194,45)" fg:x="926" fg:w="35"/><text x="46.8295%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (35 samples, 1.76%)</title><rect x="46.5795%" y="709" width="1.7606%" height="15" fill="rgb(218,18,35)" fg:x="926" fg:w="35"/><text x="46.8295%" y="719.50"></text></g><g><title>core::sync::atomic::fence (19 samples, 0.96%)</title><rect x="48.3400%" y="725" width="0.9557%" height="15" fill="rgb(207,83,51)" fg:x="961" fg:w="19"/><text x="48.5900%" y="735.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::wait_next (2 samples, 0.10%)</title><rect x="49.2958%" y="725" width="0.1006%" height="15" fill="rgb(225,63,43)" fg:x="980" fg:w="2"/><text x="49.5458%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.05%)</title><rect x="49.3461%" y="709" width="0.0503%" height="15" fill="rgb(207,57,36)" fg:x="981" fg:w="1"/><text x="49.5961%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="49.3461%" y="693" width="0.0503%" height="15" fill="rgb(216,99,33)" fg:x="981" fg:w="1"/><text x="49.5961%" y="703.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.10%)</title><rect x="49.3964%" y="709" width="0.1006%" height="15" fill="rgb(225,42,16)" fg:x="982" fg:w="2"/><text x="49.6464%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.10%)</title><rect x="49.3964%" y="693" width="0.1006%" height="15" fill="rgb(220,201,45)" fg:x="982" fg:w="2"/><text x="49.6464%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (2 samples, 0.10%)</title><rect x="49.3964%" y="677" width="0.1006%" height="15" fill="rgb(225,33,4)" fg:x="982" fg:w="2"/><text x="49.6464%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (135 samples, 6.79%)</title><rect x="42.8571%" y="741" width="6.7907%" height="15" fill="rgb(224,33,50)" fg:x="852" fg:w="135"/><text x="43.1071%" y="751.50">crossbeam..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (5 samples, 0.25%)</title><rect x="49.3964%" y="725" width="0.2515%" height="15" fill="rgb(246,198,51)" fg:x="982" fg:w="5"/><text x="49.6464%" y="735.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (3 samples, 0.15%)</title><rect x="49.4970%" y="709" width="0.1509%" height="15" fill="rgb(205,22,4)" fg:x="984" fg:w="3"/><text x="49.7470%" y="719.50"></text></g><g><title>core::hint::spin_loop (3 samples, 0.15%)</title><rect x="49.4970%" y="693" width="0.1509%" height="15" fill="rgb(206,3,8)" fg:x="984" fg:w="3"/><text x="49.7470%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3 samples, 0.15%)</title><rect x="49.4970%" y="677" width="0.1509%" height="15" fill="rgb(251,23,15)" fg:x="984" fg:w="3"/><text x="49.7470%" y="687.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::new (4 samples, 0.20%)</title><rect x="49.6479%" y="741" width="0.2012%" height="15" fill="rgb(252,88,28)" fg:x="987" fg:w="4"/><text x="49.8979%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::new (4 samples, 0.20%)</title><rect x="49.6479%" y="725" width="0.2012%" height="15" fill="rgb(212,127,14)" fg:x="987" fg:w="4"/><text x="49.8979%" y="735.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::new (4 samples, 0.20%)</title><rect x="49.6479%" y="709" width="0.2012%" height="15" fill="rgb(247,145,37)" fg:x="987" fg:w="4"/><text x="49.8979%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.05%)</title><rect x="49.8491%" y="725" width="0.0503%" height="15" fill="rgb(209,117,53)" fg:x="991" fg:w="1"/><text x="50.0991%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.05%)</title><rect x="49.8491%" y="709" width="0.0503%" height="15" fill="rgb(212,90,42)" fg:x="991" fg:w="1"/><text x="50.0991%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.05%)</title><rect x="49.8491%" y="693" width="0.0503%" height="15" fill="rgb(218,164,37)" fg:x="991" fg:w="1"/><text x="50.0991%" y="703.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (335 samples, 16.85%)</title><rect x="33.1489%" y="773" width="16.8511%" height="15" fill="rgb(246,65,34)" fg:x="659" fg:w="335"/><text x="33.3989%" y="783.50">crossbeam_channel::channel..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (286 samples, 14.39%)</title><rect x="35.6137%" y="757" width="14.3863%" height="15" fill="rgb(231,100,33)" fg:x="708" fg:w="286"/><text x="35.8637%" y="767.50">crossbeam_channel::fla..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (3 samples, 0.15%)</title><rect x="49.8491%" y="741" width="0.1509%" height="15" fill="rgb(228,126,14)" fg:x="991" fg:w="3"/><text x="50.0991%" y="751.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (2 samples, 0.10%)</title><rect x="49.8994%" y="725" width="0.1006%" height="15" fill="rgb(215,173,21)" fg:x="992" fg:w="2"/><text x="50.1494%" y="735.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.10%)</title><rect x="49.8994%" y="709" width="0.1006%" height="15" fill="rgb(210,6,40)" fg:x="992" fg:w="2"/><text x="50.1494%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.10%)</title><rect x="49.8994%" y="693" width="0.1006%" height="15" fill="rgb(212,48,18)" fg:x="992" fg:w="2"/><text x="50.1494%" y="703.50"></text></g><g><title>&lt;crossbeam_channel::counter::Sender&lt;C&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.10%)</title><rect x="51.7606%" y="757" width="0.1006%" height="15" fill="rgb(230,214,11)" fg:x="1029" fg:w="2"/><text x="52.0106%" y="767.50"></text></g><g><title>crossbeam_channel::counter::Sender&lt;C&gt;::counter (2 samples, 0.10%)</title><rect x="51.7606%" y="741" width="0.1006%" height="15" fill="rgb(254,105,39)" fg:x="1029" fg:w="2"/><text x="52.0106%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.15%)</title><rect x="51.8612%" y="757" width="0.1509%" height="15" fill="rgb(245,158,5)" fg:x="1031" fg:w="3"/><text x="52.1112%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.10%)</title><rect x="52.2636%" y="741" width="0.1006%" height="15" fill="rgb(249,208,11)" fg:x="1039" fg:w="2"/><text x="52.5136%" y="751.50"></text></g><g><title>__memset_avx2_unaligned_erms (8 samples, 0.40%)</title><rect x="53.2193%" y="709" width="0.4024%" height="15" fill="rgb(210,39,28)" fg:x="1058" fg:w="8"/><text x="53.4693%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (26 samples, 1.31%)</title><rect x="53.2193%" y="725" width="1.3078%" height="15" fill="rgb(211,56,53)" fg:x="1058" fg:w="26"/><text x="53.4693%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (18 samples, 0.91%)</title><rect x="53.6217%" y="709" width="0.9054%" height="15" fill="rgb(226,201,30)" fg:x="1066" fg:w="18"/><text x="53.8717%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.91%)</title><rect x="53.6217%" y="693" width="0.9054%" height="15" fill="rgb(239,101,34)" fg:x="1066" fg:w="18"/><text x="53.8717%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.91%)</title><rect x="53.6217%" y="677" width="0.9054%" height="15" fill="rgb(226,209,5)" fg:x="1066" fg:w="18"/><text x="53.8717%" y="687.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.91%)</title><rect x="53.6217%" y="661" width="0.9054%" height="15" fill="rgb(250,105,47)" fg:x="1066" fg:w="18"/><text x="53.8717%" y="671.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.91%)</title><rect x="53.6217%" y="645" width="0.9054%" height="15" fill="rgb(230,72,3)" fg:x="1066" fg:w="18"/><text x="53.8717%" y="655.50"></text></g><g><title>_int_malloc (14 samples, 0.70%)</title><rect x="53.8229%" y="629" width="0.7042%" height="15" fill="rgb(232,218,39)" fg:x="1070" fg:w="14"/><text x="54.0729%" y="639.50"></text></g><g><title>sysmalloc (2 samples, 0.10%)</title><rect x="54.4266%" y="613" width="0.1006%" height="15" fill="rgb(248,166,6)" fg:x="1082" fg:w="2"/><text x="54.6766%" y="623.50"></text></g><g><title>__GI___mprotect (2 samples, 0.10%)</title><rect x="54.4266%" y="597" width="0.1006%" height="15" fill="rgb(247,89,20)" fg:x="1082" fg:w="2"/><text x="54.6766%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="54.4266%" y="581" width="0.1006%" height="15" fill="rgb(248,130,54)" fg:x="1082" fg:w="2"/><text x="54.6766%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="54.4266%" y="565" width="0.1006%" height="15" fill="rgb(234,196,4)" fg:x="1082" fg:w="2"/><text x="54.6766%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="54.4266%" y="549" width="0.1006%" height="15" fill="rgb(250,143,31)" fg:x="1082" fg:w="2"/><text x="54.6766%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="54.4266%" y="533" width="0.1006%" height="15" fill="rgb(211,110,34)" fg:x="1082" fg:w="2"/><text x="54.6766%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="54.4266%" y="517" width="0.1006%" height="15" fill="rgb(215,124,48)" fg:x="1082" fg:w="2"/><text x="54.6766%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="54.4266%" y="501" width="0.1006%" height="15" fill="rgb(216,46,13)" fg:x="1082" fg:w="2"/><text x="54.6766%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="54.4266%" y="485" width="0.1006%" height="15" fill="rgb(205,184,25)" fg:x="1082" fg:w="2"/><text x="54.6766%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="54.4266%" y="469" width="0.1006%" height="15" fill="rgb(228,1,10)" fg:x="1082" fg:w="2"/><text x="54.6766%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="54.4769%" y="453" width="0.0503%" height="15" fill="rgb(213,116,27)" fg:x="1083" fg:w="1"/><text x="54.7269%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt;&gt; (5 samples, 0.25%)</title><rect x="54.5272%" y="725" width="0.2515%" height="15" fill="rgb(241,95,50)" fg:x="1084" fg:w="5"/><text x="54.7772%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.05%)</title><rect x="54.7787%" y="725" width="0.0503%" height="15" fill="rgb(238,48,32)" fg:x="1089" fg:w="1"/><text x="55.0287%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.05%)</title><rect x="54.7787%" y="709" width="0.0503%" height="15" fill="rgb(235,113,49)" fg:x="1089" fg:w="1"/><text x="55.0287%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (40 samples, 2.01%)</title><rect x="54.8290%" y="725" width="2.0121%" height="15" fill="rgb(205,127,43)" fg:x="1090" fg:w="40"/><text x="55.0790%" y="735.50">c..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (40 samples, 2.01%)</title><rect x="54.8290%" y="709" width="2.0121%" height="15" fill="rgb(250,162,2)" fg:x="1090" fg:w="40"/><text x="55.0790%" y="719.50">c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (92 samples, 4.63%)</title><rect x="52.3642%" y="741" width="4.6278%" height="15" fill="rgb(220,13,41)" fg:x="1041" fg:w="92"/><text x="52.6142%" y="751.50">cross..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (3 samples, 0.15%)</title><rect x="56.8410%" y="725" width="0.1509%" height="15" fill="rgb(249,221,25)" fg:x="1130" fg:w="3"/><text x="57.0910%" y="735.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (3 samples, 0.15%)</title><rect x="56.8410%" y="709" width="0.1509%" height="15" fill="rgb(215,208,19)" fg:x="1130" fg:w="3"/><text x="57.0910%" y="719.50"></text></g><g><title>core::hint::spin_loop (3 samples, 0.15%)</title><rect x="56.8410%" y="693" width="0.1509%" height="15" fill="rgb(236,175,2)" fg:x="1130" fg:w="3"/><text x="57.0910%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3 samples, 0.15%)</title><rect x="56.8410%" y="677" width="0.1509%" height="15" fill="rgb(241,52,2)" fg:x="1130" fg:w="3"/><text x="57.0910%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4 samples, 0.20%)</title><rect x="56.9920%" y="725" width="0.2012%" height="15" fill="rgb(248,140,14)" fg:x="1133" fg:w="4"/><text x="57.2420%" y="735.50"></text></g><g><title>core::ptr::write (4 samples, 0.20%)</title><rect x="56.9920%" y="709" width="0.2012%" height="15" fill="rgb(253,22,42)" fg:x="1133" fg:w="4"/><text x="57.2420%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (4 samples, 0.20%)</title><rect x="57.1932%" y="725" width="0.2012%" height="15" fill="rgb(234,61,47)" fg:x="1137" fg:w="4"/><text x="57.4432%" y="735.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.20%)</title><rect x="57.1932%" y="709" width="0.2012%" height="15" fill="rgb(208,226,15)" fg:x="1137" fg:w="4"/><text x="57.4432%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.20%)</title><rect x="57.1932%" y="693" width="0.2012%" height="15" fill="rgb(217,221,4)" fg:x="1137" fg:w="4"/><text x="57.4432%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (31 samples, 1.56%)</title><rect x="57.3944%" y="725" width="1.5594%" height="15" fill="rgb(212,174,34)" fg:x="1141" fg:w="31"/><text x="57.6444%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_or (31 samples, 1.56%)</title><rect x="57.3944%" y="709" width="1.5594%" height="15" fill="rgb(253,83,4)" fg:x="1141" fg:w="31"/><text x="57.6444%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (14 samples, 0.70%)</title><rect x="58.9537%" y="709" width="0.7042%" height="15" fill="rgb(250,195,49)" fg:x="1172" fg:w="14"/><text x="59.2037%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.70%)</title><rect x="58.9537%" y="693" width="0.7042%" height="15" fill="rgb(241,192,25)" fg:x="1172" fg:w="14"/><text x="59.2037%" y="703.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (194 samples, 9.76%)</title><rect x="50.0000%" y="773" width="9.7586%" height="15" fill="rgb(208,124,10)" fg:x="994" fg:w="194"/><text x="50.2500%" y="783.50">crossbeam_chan..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (154 samples, 7.75%)</title><rect x="52.0121%" y="757" width="7.7465%" height="15" fill="rgb(222,33,0)" fg:x="1034" fg:w="154"/><text x="52.2621%" y="767.50">crossbeam_c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (55 samples, 2.77%)</title><rect x="56.9920%" y="741" width="2.7666%" height="15" fill="rgb(234,209,28)" fg:x="1133" fg:w="55"/><text x="57.2420%" y="751.50">cr..</text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (16 samples, 0.80%)</title><rect x="58.9537%" y="725" width="0.8048%" height="15" fill="rgb(224,11,23)" fg:x="1172" fg:w="16"/><text x="59.2037%" y="735.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (2 samples, 0.10%)</title><rect x="59.6579%" y="709" width="0.1006%" height="15" fill="rgb(232,99,1)" fg:x="1186" fg:w="2"/><text x="59.9079%" y="719.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (2 samples, 0.10%)</title><rect x="59.6579%" y="693" width="0.1006%" height="15" fill="rgb(237,95,45)" fg:x="1186" fg:w="2"/><text x="59.9079%" y="703.50"></text></g><g><title>__GI___sched_yield (2 samples, 0.10%)</title><rect x="59.6579%" y="677" width="0.1006%" height="15" fill="rgb(208,109,11)" fg:x="1186" fg:w="2"/><text x="59.9079%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="59.6579%" y="661" width="0.1006%" height="15" fill="rgb(216,190,48)" fg:x="1186" fg:w="2"/><text x="59.9079%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="59.6579%" y="645" width="0.1006%" height="15" fill="rgb(251,171,36)" fg:x="1186" fg:w="2"/><text x="59.9079%" y="655.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="59.6579%" y="629" width="0.1006%" height="15" fill="rgb(230,62,22)" fg:x="1186" fg:w="2"/><text x="59.9079%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="59.6579%" y="613" width="0.1006%" height="15" fill="rgb(225,114,35)" fg:x="1186" fg:w="2"/><text x="59.9079%" y="623.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="59.6579%" y="597" width="0.1006%" height="15" fill="rgb(215,118,42)" fg:x="1186" fg:w="2"/><text x="59.9079%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="59.6579%" y="581" width="0.1006%" height="15" fill="rgb(243,119,21)" fg:x="1186" fg:w="2"/><text x="59.9079%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="59.6579%" y="565" width="0.1006%" height="15" fill="rgb(252,177,53)" fg:x="1186" fg:w="2"/><text x="59.9079%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="59.7082%" y="549" width="0.0503%" height="15" fill="rgb(237,209,29)" fg:x="1187" fg:w="1"/><text x="59.9582%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="59.7586%" y="757" width="0.0503%" height="15" fill="rgb(212,65,23)" fg:x="1188" fg:w="1"/><text x="60.0086%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="59.7586%" y="741" width="0.0503%" height="15" fill="rgb(230,222,46)" fg:x="1188" fg:w="1"/><text x="60.0086%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.05%)</title><rect x="59.7586%" y="725" width="0.0503%" height="15" fill="rgb(215,135,32)" fg:x="1188" fg:w="1"/><text x="60.0086%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.05%)</title><rect x="59.7586%" y="709" width="0.0503%" height="15" fill="rgb(246,101,22)" fg:x="1188" fg:w="1"/><text x="60.0086%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.05%)</title><rect x="59.8089%" y="629" width="0.0503%" height="15" fill="rgb(206,107,13)" fg:x="1189" fg:w="1"/><text x="60.0589%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (1 samples, 0.05%)</title><rect x="59.8089%" y="613" width="0.0503%" height="15" fill="rgb(250,100,44)" fg:x="1189" fg:w="1"/><text x="60.0589%" y="623.50"></text></g><g><title>alloc::vec::set_len_on_drop::SetLenOnDrop::increment_len (1 samples, 0.05%)</title><rect x="59.8089%" y="597" width="0.0503%" height="15" fill="rgb(231,147,38)" fg:x="1189" fg:w="1"/><text x="60.0589%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.20%)</title><rect x="59.8089%" y="757" width="0.2012%" height="15" fill="rgb(229,8,40)" fg:x="1189" fg:w="4"/><text x="60.0589%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.20%)</title><rect x="59.8089%" y="741" width="0.2012%" height="15" fill="rgb(221,135,30)" fg:x="1189" fg:w="4"/><text x="60.0589%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.20%)</title><rect x="59.8089%" y="725" width="0.2012%" height="15" fill="rgb(249,193,18)" fg:x="1189" fg:w="4"/><text x="60.0589%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.20%)</title><rect x="59.8089%" y="709" width="0.2012%" height="15" fill="rgb(209,133,39)" fg:x="1189" fg:w="4"/><text x="60.0589%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.20%)</title><rect x="59.8089%" y="693" width="0.2012%" height="15" fill="rgb(232,100,14)" fg:x="1189" fg:w="4"/><text x="60.0589%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.20%)</title><rect x="59.8089%" y="677" width="0.2012%" height="15" fill="rgb(224,185,1)" fg:x="1189" fg:w="4"/><text x="60.0589%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.20%)</title><rect x="59.8089%" y="661" width="0.2012%" height="15" fill="rgb(223,139,8)" fg:x="1189" fg:w="4"/><text x="60.0589%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.20%)</title><rect x="59.8089%" y="645" width="0.2012%" height="15" fill="rgb(232,213,38)" fg:x="1189" fg:w="4"/><text x="60.0589%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;lab4::package::Package&gt;&gt; (3 samples, 0.15%)</title><rect x="59.8592%" y="629" width="0.1509%" height="15" fill="rgb(207,94,22)" fg:x="1190" fg:w="3"/><text x="60.1092%" y="639.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.15%)</title><rect x="59.8592%" y="613" width="0.1509%" height="15" fill="rgb(219,183,54)" fg:x="1190" fg:w="3"/><text x="60.1092%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;lab4::package::Package,alloc::alloc::Global&gt;&gt; (3 samples, 0.15%)</title><rect x="59.8592%" y="597" width="0.1509%" height="15" fill="rgb(216,185,54)" fg:x="1190" fg:w="3"/><text x="60.1092%" y="607.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.15%)</title><rect x="59.8592%" y="581" width="0.1509%" height="15" fill="rgb(254,217,39)" fg:x="1190" fg:w="3"/><text x="60.1092%" y="591.50"></text></g><g><title>core::intrinsics::copy (3 samples, 0.15%)</title><rect x="59.8592%" y="565" width="0.1509%" height="15" fill="rgb(240,178,23)" fg:x="1190" fg:w="3"/><text x="60.1092%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.15%)</title><rect x="59.8592%" y="549" width="0.1509%" height="15" fill="rgb(218,11,47)" fg:x="1190" fg:w="3"/><text x="60.1092%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;lab4::package::Package&gt;&gt; (3 samples, 0.15%)</title><rect x="60.0101%" y="757" width="0.1509%" height="15" fill="rgb(218,51,51)" fg:x="1193" fg:w="3"/><text x="60.2601%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.15%)</title><rect x="60.0101%" y="741" width="0.1509%" height="15" fill="rgb(238,126,27)" fg:x="1193" fg:w="3"/><text x="60.2601%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[lab4::package::Package]&gt; (3 samples, 0.15%)</title><rect x="60.0101%" y="725" width="0.1509%" height="15" fill="rgb(249,202,22)" fg:x="1193" fg:w="3"/><text x="60.2601%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::package::Package&gt; (3 samples, 0.15%)</title><rect x="60.0101%" y="709" width="0.1509%" height="15" fill="rgb(254,195,49)" fg:x="1193" fg:w="3"/><text x="60.2601%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.15%)</title><rect x="60.0101%" y="693" width="0.1509%" height="15" fill="rgb(208,123,14)" fg:x="1193" fg:w="3"/><text x="60.2601%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.15%)</title><rect x="60.0101%" y="677" width="0.1509%" height="15" fill="rgb(224,200,8)" fg:x="1193" fg:w="3"/><text x="60.2601%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.15%)</title><rect x="60.0101%" y="661" width="0.1509%" height="15" fill="rgb(217,61,36)" fg:x="1193" fg:w="3"/><text x="60.2601%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.15%)</title><rect x="60.0101%" y="645" width="0.1509%" height="15" fill="rgb(206,35,45)" fg:x="1193" fg:w="3"/><text x="60.2601%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.15%)</title><rect x="60.0101%" y="629" width="0.1509%" height="15" fill="rgb(217,65,33)" fg:x="1193" fg:w="3"/><text x="60.2601%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.15%)</title><rect x="60.0101%" y="613" width="0.1509%" height="15" fill="rgb(222,158,48)" fg:x="1193" fg:w="3"/><text x="60.2601%" y="623.50"></text></g><g><title>_int_free (3 samples, 0.15%)</title><rect x="60.0101%" y="597" width="0.1509%" height="15" fill="rgb(254,2,54)" fg:x="1193" fg:w="3"/><text x="60.2601%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.05%)</title><rect x="60.1610%" y="677" width="0.0503%" height="15" fill="rgb(250,143,38)" fg:x="1196" fg:w="1"/><text x="60.4110%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1 samples, 0.05%)</title><rect x="60.1610%" y="661" width="0.0503%" height="15" fill="rgb(248,25,0)" fg:x="1196" fg:w="1"/><text x="60.4110%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.05%)</title><rect x="60.1610%" y="645" width="0.0503%" height="15" fill="rgb(206,152,27)" fg:x="1196" fg:w="1"/><text x="60.4110%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="60.1610%" y="629" width="0.0503%" height="15" fill="rgb(240,77,30)" fg:x="1196" fg:w="1"/><text x="60.4110%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.05%)</title><rect x="60.1610%" y="613" width="0.0503%" height="15" fill="rgb(231,5,3)" fg:x="1196" fg:w="1"/><text x="60.4110%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (1 samples, 0.05%)</title><rect x="60.1610%" y="597" width="0.0503%" height="15" fill="rgb(207,226,32)" fg:x="1196" fg:w="1"/><text x="60.4110%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.05%)</title><rect x="60.1610%" y="581" width="0.0503%" height="15" fill="rgb(222,207,47)" fg:x="1196" fg:w="1"/><text x="60.4110%" y="591.50"></text></g><g><title>lab4::checksum::Checksum::update::{{closure}} (1 samples, 0.05%)</title><rect x="60.1610%" y="565" width="0.0503%" height="15" fill="rgb(229,115,45)" fg:x="1196" fg:w="1"/><text x="60.4110%" y="575.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitXor&lt;&amp;u8&gt;&gt;::bitxor (1 samples, 0.05%)</title><rect x="60.1610%" y="549" width="0.0503%" height="15" fill="rgb(224,191,6)" fg:x="1196" fg:w="1"/><text x="60.4110%" y="559.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.05%)</title><rect x="60.1610%" y="533" width="0.0503%" height="15" fill="rgb(230,227,24)" fg:x="1196" fg:w="1"/><text x="60.4110%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.10%)</title><rect x="60.1610%" y="741" width="0.1006%" height="15" fill="rgb(228,80,19)" fg:x="1196" fg:w="2"/><text x="60.4110%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.10%)</title><rect x="60.1610%" y="725" width="0.1006%" height="15" fill="rgb(247,229,0)" fg:x="1196" fg:w="2"/><text x="60.4110%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.10%)</title><rect x="60.1610%" y="709" width="0.1006%" height="15" fill="rgb(237,194,15)" fg:x="1196" fg:w="2"/><text x="60.4110%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.10%)</title><rect x="60.1610%" y="693" width="0.1006%" height="15" fill="rgb(219,203,20)" fg:x="1196" fg:w="2"/><text x="60.4110%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.05%)</title><rect x="60.2113%" y="677" width="0.0503%" height="15" fill="rgb(234,128,8)" fg:x="1197" fg:w="1"/><text x="60.4613%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="60.2113%" y="661" width="0.0503%" height="15" fill="rgb(248,202,8)" fg:x="1197" fg:w="1"/><text x="60.4613%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.05%)</title><rect x="60.2113%" y="645" width="0.0503%" height="15" fill="rgb(206,104,37)" fg:x="1197" fg:w="1"/><text x="60.4613%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.05%)</title><rect x="60.2113%" y="629" width="0.0503%" height="15" fill="rgb(223,8,27)" fg:x="1197" fg:w="1"/><text x="60.4613%" y="639.50"></text></g><g><title>__GI___libc_free (2 samples, 0.10%)</title><rect x="60.2616%" y="661" width="0.1006%" height="15" fill="rgb(216,217,28)" fg:x="1198" fg:w="2"/><text x="60.5116%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.25%)</title><rect x="60.2616%" y="741" width="0.2515%" height="15" fill="rgb(249,199,1)" fg:x="1198" fg:w="5"/><text x="60.5116%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.25%)</title><rect x="60.2616%" y="725" width="0.2515%" height="15" fill="rgb(240,85,17)" fg:x="1198" fg:w="5"/><text x="60.5116%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.25%)</title><rect x="60.2616%" y="709" width="0.2515%" height="15" fill="rgb(206,108,45)" fg:x="1198" fg:w="5"/><text x="60.5116%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.25%)</title><rect x="60.2616%" y="693" width="0.2515%" height="15" fill="rgb(245,210,41)" fg:x="1198" fg:w="5"/><text x="60.5116%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.25%)</title><rect x="60.2616%" y="677" width="0.2515%" height="15" fill="rgb(206,13,37)" fg:x="1198" fg:w="5"/><text x="60.5116%" y="687.50"></text></g><g><title>_int_free (3 samples, 0.15%)</title><rect x="60.3622%" y="661" width="0.1509%" height="15" fill="rgb(250,61,18)" fg:x="1200" fg:w="3"/><text x="60.6122%" y="671.50"></text></g><g><title>__GI___libc_free (3 samples, 0.15%)</title><rect x="60.5131%" y="629" width="0.1509%" height="15" fill="rgb(235,172,48)" fg:x="1203" fg:w="3"/><text x="60.7631%" y="639.50"></text></g><g><title>__rust_dealloc (2 samples, 0.10%)</title><rect x="60.6640%" y="629" width="0.1006%" height="15" fill="rgb(249,201,17)" fg:x="1206" fg:w="2"/><text x="60.9140%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (7 samples, 0.35%)</title><rect x="60.5131%" y="741" width="0.3521%" height="15" fill="rgb(219,208,6)" fg:x="1203" fg:w="7"/><text x="60.7631%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.35%)</title><rect x="60.5131%" y="725" width="0.3521%" height="15" fill="rgb(248,31,23)" fg:x="1203" fg:w="7"/><text x="60.7631%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.35%)</title><rect x="60.5131%" y="709" width="0.3521%" height="15" fill="rgb(245,15,42)" fg:x="1203" fg:w="7"/><text x="60.7631%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.35%)</title><rect x="60.5131%" y="693" width="0.3521%" height="15" fill="rgb(222,217,39)" fg:x="1203" fg:w="7"/><text x="60.7631%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.35%)</title><rect x="60.5131%" y="677" width="0.3521%" height="15" fill="rgb(210,219,27)" fg:x="1203" fg:w="7"/><text x="60.7631%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.35%)</title><rect x="60.5131%" y="661" width="0.3521%" height="15" fill="rgb(252,166,36)" fg:x="1203" fg:w="7"/><text x="60.7631%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.35%)</title><rect x="60.5131%" y="645" width="0.3521%" height="15" fill="rgb(245,132,34)" fg:x="1203" fg:w="7"/><text x="60.7631%" y="655.50"></text></g><g><title>_int_free (2 samples, 0.10%)</title><rect x="60.7646%" y="629" width="0.1006%" height="15" fill="rgb(236,54,3)" fg:x="1208" fg:w="2"/><text x="61.0146%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (97 samples, 4.88%)</title><rect x="61.2173%" y="453" width="4.8793%" height="15" fill="rgb(241,173,43)" fg:x="1217" fg:w="97"/><text x="61.4673%" y="463.50">&lt;core:..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (92 samples, 4.63%)</title><rect x="61.4688%" y="437" width="4.6278%" height="15" fill="rgb(215,190,9)" fg:x="1222" fg:w="92"/><text x="61.7188%" y="447.50">core:..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (92 samples, 4.63%)</title><rect x="61.4688%" y="421" width="4.6278%" height="15" fill="rgb(242,101,16)" fg:x="1222" fg:w="92"/><text x="61.7188%" y="431.50">&lt;allo..</text></g><g><title>hex::val (70 samples, 3.52%)</title><rect x="62.5755%" y="405" width="3.5211%" height="15" fill="rgb(223,190,21)" fg:x="1244" fg:w="70"/><text x="62.8255%" y="415.50">hex..</text></g><g><title>core::cmp::min (2 samples, 0.10%)</title><rect x="66.7505%" y="437" width="0.1006%" height="15" fill="rgb(215,228,25)" fg:x="1327" fg:w="2"/><text x="67.0005%" y="447.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.10%)</title><rect x="66.7505%" y="421" width="0.1006%" height="15" fill="rgb(225,36,22)" fg:x="1327" fg:w="2"/><text x="67.0005%" y="431.50"></text></g><g><title>core::cmp::min_by (2 samples, 0.10%)</title><rect x="66.7505%" y="405" width="0.1006%" height="15" fill="rgb(251,106,46)" fg:x="1327" fg:w="2"/><text x="67.0005%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (119 samples, 5.99%)</title><rect x="61.1167%" y="549" width="5.9859%" height="15" fill="rgb(208,90,1)" fg:x="1215" fg:w="119"/><text x="61.3667%" y="559.50">&lt;core::i..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (119 samples, 5.99%)</title><rect x="61.1167%" y="533" width="5.9859%" height="15" fill="rgb(243,10,4)" fg:x="1215" fg:w="119"/><text x="61.3667%" y="543.50">core::it..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (119 samples, 5.99%)</title><rect x="61.1167%" y="517" width="5.9859%" height="15" fill="rgb(212,137,27)" fg:x="1215" fg:w="119"/><text x="61.3667%" y="527.50">&lt;core::i..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (117 samples, 5.89%)</title><rect x="61.2173%" y="501" width="5.8853%" height="15" fill="rgb(231,220,49)" fg:x="1217" fg:w="117"/><text x="61.4673%" y="511.50">&lt;core::..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (117 samples, 5.89%)</title><rect x="61.2173%" y="485" width="5.8853%" height="15" fill="rgb(237,96,20)" fg:x="1217" fg:w="117"/><text x="61.4673%" y="495.50">&lt;core::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (117 samples, 5.89%)</title><rect x="61.2173%" y="469" width="5.8853%" height="15" fill="rgb(239,229,30)" fg:x="1217" fg:w="117"/><text x="61.4673%" y="479.50">core::i..</text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.01%)</title><rect x="66.0966%" y="453" width="1.0060%" height="15" fill="rgb(219,65,33)" fg:x="1314" fg:w="20"/><text x="66.3466%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (5 samples, 0.25%)</title><rect x="66.8511%" y="437" width="0.2515%" height="15" fill="rgb(243,134,7)" fg:x="1329" fg:w="5"/><text x="67.1011%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (5 samples, 0.25%)</title><rect x="66.8511%" y="421" width="0.2515%" height="15" fill="rgb(216,177,54)" fg:x="1329" fg:w="5"/><text x="67.1011%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.20%)</title><rect x="66.9014%" y="405" width="0.2012%" height="15" fill="rgb(211,160,20)" fg:x="1330" fg:w="4"/><text x="67.1514%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.10%)</title><rect x="67.1026%" y="549" width="0.1006%" height="15" fill="rgb(239,85,39)" fg:x="1334" fg:w="2"/><text x="67.3526%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.05%)</title><rect x="67.2032%" y="485" width="0.0503%" height="15" fill="rgb(232,125,22)" fg:x="1336" fg:w="1"/><text x="67.4532%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.8068%" y="405" width="0.0503%" height="15" fill="rgb(244,57,34)" fg:x="1348" fg:w="1"/><text x="68.0568%" y="415.50"></text></g><g><title>__lll_lock_wait_private (1 samples, 0.05%)</title><rect x="67.8571%" y="405" width="0.0503%" height="15" fill="rgb(214,203,32)" fg:x="1349" fg:w="1"/><text x="68.1071%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.8571%" y="389" width="0.0503%" height="15" fill="rgb(207,58,43)" fg:x="1349" fg:w="1"/><text x="68.1071%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.8571%" y="373" width="0.0503%" height="15" fill="rgb(215,193,15)" fg:x="1349" fg:w="1"/><text x="68.1071%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.8571%" y="357" width="0.0503%" height="15" fill="rgb(232,15,44)" fg:x="1349" fg:w="1"/><text x="68.1071%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.8571%" y="341" width="0.0503%" height="15" fill="rgb(212,3,48)" fg:x="1349" fg:w="1"/><text x="68.1071%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.8571%" y="325" width="0.0503%" height="15" fill="rgb(218,128,7)" fg:x="1349" fg:w="1"/><text x="68.1071%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.8571%" y="309" width="0.0503%" height="15" fill="rgb(226,216,39)" fg:x="1349" fg:w="1"/><text x="68.1071%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.8571%" y="293" width="0.0503%" height="15" fill="rgb(243,47,51)" fg:x="1349" fg:w="1"/><text x="68.1071%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.8571%" y="277" width="0.0503%" height="15" fill="rgb(241,183,40)" fg:x="1349" fg:w="1"/><text x="68.1071%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.8571%" y="261" width="0.0503%" height="15" fill="rgb(231,217,32)" fg:x="1349" fg:w="1"/><text x="68.1071%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="67.8571%" y="245" width="0.0503%" height="15" fill="rgb(229,61,38)" fg:x="1349" fg:w="1"/><text x="68.1071%" y="255.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="68.1590%" y="389" width="0.0503%" height="15" fill="rgb(225,210,5)" fg:x="1355" fg:w="1"/><text x="68.4090%" y="399.50"></text></g><g><title>__GI___libc_realloc (20 samples, 1.01%)</title><rect x="67.2535%" y="421" width="1.0060%" height="15" fill="rgb(231,79,45)" fg:x="1337" fg:w="20"/><text x="67.5035%" y="431.50"></text></g><g><title>_int_realloc (7 samples, 0.35%)</title><rect x="67.9074%" y="405" width="0.3521%" height="15" fill="rgb(224,100,7)" fg:x="1350" fg:w="7"/><text x="68.1574%" y="415.50"></text></g><g><title>_int_malloc (1 samples, 0.05%)</title><rect x="68.2093%" y="389" width="0.0503%" height="15" fill="rgb(241,198,18)" fg:x="1356" fg:w="1"/><text x="68.4593%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 1.06%)</title><rect x="67.2535%" y="469" width="1.0563%" height="15" fill="rgb(252,97,53)" fg:x="1337" fg:w="21"/><text x="67.5035%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (21 samples, 1.06%)</title><rect x="67.2535%" y="453" width="1.0563%" height="15" fill="rgb(220,88,7)" fg:x="1337" fg:w="21"/><text x="67.5035%" y="463.50"></text></g><g><title>alloc::alloc::realloc (21 samples, 1.06%)</title><rect x="67.2535%" y="437" width="1.0563%" height="15" fill="rgb(213,176,14)" fg:x="1337" fg:w="21"/><text x="67.5035%" y="447.50"></text></g><g><title>__rdl_realloc (1 samples, 0.05%)</title><rect x="68.2596%" y="421" width="0.0503%" height="15" fill="rgb(246,73,7)" fg:x="1357" fg:w="1"/><text x="68.5096%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.05%)</title><rect x="68.2596%" y="405" width="0.0503%" height="15" fill="rgb(245,64,36)" fg:x="1357" fg:w="1"/><text x="68.5096%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (24 samples, 1.21%)</title><rect x="67.2032%" y="549" width="1.2072%" height="15" fill="rgb(245,80,10)" fg:x="1336" fg:w="24"/><text x="67.4532%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 1.21%)</title><rect x="67.2032%" y="533" width="1.2072%" height="15" fill="rgb(232,107,50)" fg:x="1336" fg:w="24"/><text x="67.4532%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 1.21%)</title><rect x="67.2032%" y="517" width="1.2072%" height="15" fill="rgb(253,3,0)" fg:x="1336" fg:w="24"/><text x="67.4532%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 1.21%)</title><rect x="67.2032%" y="501" width="1.2072%" height="15" fill="rgb(212,99,53)" fg:x="1336" fg:w="24"/><text x="67.4532%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (23 samples, 1.16%)</title><rect x="67.2535%" y="485" width="1.1569%" height="15" fill="rgb(249,111,54)" fg:x="1337" fg:w="23"/><text x="67.5035%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.10%)</title><rect x="68.3099%" y="469" width="0.1006%" height="15" fill="rgb(249,55,30)" fg:x="1358" fg:w="2"/><text x="68.5599%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.10%)</title><rect x="68.4105%" y="549" width="0.1006%" height="15" fill="rgb(237,47,42)" fg:x="1360" fg:w="2"/><text x="68.6605%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (156 samples, 7.85%)</title><rect x="60.8652%" y="581" width="7.8471%" height="15" fill="rgb(211,20,18)" fg:x="1210" fg:w="156"/><text x="61.1152%" y="591.50">&lt;alloc::vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (156 samples, 7.85%)</title><rect x="60.8652%" y="565" width="7.8471%" height="15" fill="rgb(231,203,46)" fg:x="1210" fg:w="156"/><text x="61.1152%" y="575.50">alloc::vec:..</text></g><g><title>core::ptr::write (4 samples, 0.20%)</title><rect x="68.5111%" y="549" width="0.2012%" height="15" fill="rgb(237,142,3)" fg:x="1362" fg:w="4"/><text x="68.7611%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.10%)</title><rect x="68.7123%" y="581" width="0.1006%" height="15" fill="rgb(241,107,1)" fg:x="1366" fg:w="2"/><text x="68.9623%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (2 samples, 0.10%)</title><rect x="68.7123%" y="565" width="0.1006%" height="15" fill="rgb(229,83,13)" fg:x="1366" fg:w="2"/><text x="68.9623%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.10%)</title><rect x="68.7123%" y="549" width="0.1006%" height="15" fill="rgb(241,91,40)" fg:x="1366" fg:w="2"/><text x="68.9623%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.10%)</title><rect x="68.7123%" y="533" width="0.1006%" height="15" fill="rgb(225,3,45)" fg:x="1366" fg:w="2"/><text x="68.9623%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.10%)</title><rect x="68.7123%" y="517" width="0.1006%" height="15" fill="rgb(244,223,14)" fg:x="1366" fg:w="2"/><text x="68.9623%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.10%)</title><rect x="68.7123%" y="501" width="0.1006%" height="15" fill="rgb(224,124,37)" fg:x="1366" fg:w="2"/><text x="68.9623%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (2 samples, 0.10%)</title><rect x="68.7123%" y="485" width="0.1006%" height="15" fill="rgb(251,171,30)" fg:x="1366" fg:w="2"/><text x="68.9623%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.10%)</title><rect x="68.7123%" y="469" width="0.1006%" height="15" fill="rgb(236,46,54)" fg:x="1366" fg:w="2"/><text x="68.9623%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (2 samples, 0.10%)</title><rect x="68.7123%" y="453" width="0.1006%" height="15" fill="rgb(245,213,5)" fg:x="1366" fg:w="2"/><text x="68.9623%" y="463.50"></text></g><g><title>hex::val (1 samples, 0.05%)</title><rect x="68.7626%" y="437" width="0.0503%" height="15" fill="rgb(230,144,27)" fg:x="1367" fg:w="1"/><text x="69.0126%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.05%)</title><rect x="68.8129%" y="581" width="0.0503%" height="15" fill="rgb(220,86,6)" fg:x="1368" fg:w="1"/><text x="69.0629%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.05%)</title><rect x="68.8129%" y="565" width="0.0503%" height="15" fill="rgb(240,20,13)" fg:x="1368" fg:w="1"/><text x="69.0629%" y="575.50"></text></g><g><title>hex::decode (165 samples, 8.30%)</title><rect x="60.8652%" y="741" width="8.2998%" height="15" fill="rgb(217,89,34)" fg:x="1210" fg:w="165"/><text x="61.1152%" y="751.50">hex::decode</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (165 samples, 8.30%)</title><rect x="60.8652%" y="725" width="8.2998%" height="15" fill="rgb(229,13,5)" fg:x="1210" fg:w="165"/><text x="61.1152%" y="735.50">&lt;alloc::vec:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (165 samples, 8.30%)</title><rect x="60.8652%" y="709" width="8.2998%" height="15" fill="rgb(244,67,35)" fg:x="1210" fg:w="165"/><text x="61.1152%" y="719.50">core::iter::..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (165 samples, 8.30%)</title><rect x="60.8652%" y="693" width="8.2998%" height="15" fill="rgb(221,40,2)" fg:x="1210" fg:w="165"/><text x="61.1152%" y="703.50">&lt;core::resul..</text></g><g><title>core::iter::adapters::try_process (165 samples, 8.30%)</title><rect x="60.8652%" y="677" width="8.2998%" height="15" fill="rgb(237,157,21)" fg:x="1210" fg:w="165"/><text x="61.1152%" y="687.50">core::iter::..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (165 samples, 8.30%)</title><rect x="60.8652%" y="661" width="8.2998%" height="15" fill="rgb(222,94,11)" fg:x="1210" fg:w="165"/><text x="61.1152%" y="671.50">&lt;core::resul..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (165 samples, 8.30%)</title><rect x="60.8652%" y="645" width="8.2998%" height="15" fill="rgb(249,113,6)" fg:x="1210" fg:w="165"/><text x="61.1152%" y="655.50">core::iter::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (165 samples, 8.30%)</title><rect x="60.8652%" y="629" width="8.2998%" height="15" fill="rgb(238,137,36)" fg:x="1210" fg:w="165"/><text x="61.1152%" y="639.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (165 samples, 8.30%)</title><rect x="60.8652%" y="613" width="8.2998%" height="15" fill="rgb(210,102,26)" fg:x="1210" fg:w="165"/><text x="61.1152%" y="623.50">&lt;alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (165 samples, 8.30%)</title><rect x="60.8652%" y="597" width="8.2998%" height="15" fill="rgb(218,30,30)" fg:x="1210" fg:w="165"/><text x="61.1152%" y="607.50">&lt;alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.30%)</title><rect x="68.8632%" y="581" width="0.3018%" height="15" fill="rgb(214,67,26)" fg:x="1369" fg:w="6"/><text x="69.1132%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.30%)</title><rect x="68.8632%" y="565" width="0.3018%" height="15" fill="rgb(251,9,53)" fg:x="1369" fg:w="6"/><text x="69.1132%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.30%)</title><rect x="68.8632%" y="549" width="0.3018%" height="15" fill="rgb(228,204,25)" fg:x="1369" fg:w="6"/><text x="69.1132%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.30%)</title><rect x="68.8632%" y="533" width="0.3018%" height="15" fill="rgb(207,153,8)" fg:x="1369" fg:w="6"/><text x="69.1132%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.30%)</title><rect x="68.8632%" y="517" width="0.3018%" height="15" fill="rgb(242,9,16)" fg:x="1369" fg:w="6"/><text x="69.1132%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.30%)</title><rect x="68.8632%" y="501" width="0.3018%" height="15" fill="rgb(217,211,10)" fg:x="1369" fg:w="6"/><text x="69.1132%" y="511.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.30%)</title><rect x="68.8632%" y="485" width="0.3018%" height="15" fill="rgb(219,228,52)" fg:x="1369" fg:w="6"/><text x="69.1132%" y="495.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.30%)</title><rect x="68.8632%" y="469" width="0.3018%" height="15" fill="rgb(231,92,29)" fg:x="1369" fg:w="6"/><text x="69.1132%" y="479.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.10%)</title><rect x="69.3159%" y="645" width="0.1006%" height="15" fill="rgb(232,8,23)" fg:x="1378" fg:w="2"/><text x="69.5659%" y="655.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.05%)</title><rect x="69.3662%" y="629" width="0.0503%" height="15" fill="rgb(216,211,34)" fg:x="1379" fg:w="1"/><text x="69.6162%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.05%)</title><rect x="69.3662%" y="613" width="0.0503%" height="15" fill="rgb(236,151,0)" fg:x="1379" fg:w="1"/><text x="69.6162%" y="623.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.05%)</title><rect x="69.4668%" y="549" width="0.0503%" height="15" fill="rgb(209,168,3)" fg:x="1381" fg:w="1"/><text x="69.7168%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.05%)</title><rect x="69.5171%" y="549" width="0.0503%" height="15" fill="rgb(208,129,28)" fg:x="1382" fg:w="1"/><text x="69.7671%" y="559.50"></text></g><g><title>alloc::string::String::reserve (4 samples, 0.20%)</title><rect x="69.4165%" y="645" width="0.2012%" height="15" fill="rgb(229,78,22)" fg:x="1380" fg:w="4"/><text x="69.6665%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.20%)</title><rect x="69.4165%" y="629" width="0.2012%" height="15" fill="rgb(228,187,13)" fg:x="1380" fg:w="4"/><text x="69.6665%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.20%)</title><rect x="69.4165%" y="613" width="0.2012%" height="15" fill="rgb(240,119,24)" fg:x="1380" fg:w="4"/><text x="69.6665%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.20%)</title><rect x="69.4165%" y="597" width="0.2012%" height="15" fill="rgb(209,194,42)" fg:x="1380" fg:w="4"/><text x="69.6665%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.20%)</title><rect x="69.4165%" y="581" width="0.2012%" height="15" fill="rgb(247,200,46)" fg:x="1380" fg:w="4"/><text x="69.6665%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.15%)</title><rect x="69.4668%" y="565" width="0.1509%" height="15" fill="rgb(218,76,16)" fg:x="1381" fg:w="3"/><text x="69.7168%" y="575.50"></text></g><g><title>__rust_alloc (1 samples, 0.05%)</title><rect x="69.5674%" y="549" width="0.0503%" height="15" fill="rgb(225,21,48)" fg:x="1383" fg:w="1"/><text x="69.8174%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.10%)</title><rect x="69.7183%" y="597" width="0.1006%" height="15" fill="rgb(239,223,50)" fg:x="1386" fg:w="2"/><text x="69.9683%" y="607.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.10%)</title><rect x="69.7183%" y="581" width="0.1006%" height="15" fill="rgb(244,45,21)" fg:x="1386" fg:w="2"/><text x="69.9683%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.20%)</title><rect x="69.8189%" y="597" width="0.2012%" height="15" fill="rgb(232,33,43)" fg:x="1388" fg:w="4"/><text x="70.0689%" y="607.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (4 samples, 0.20%)</title><rect x="69.8189%" y="581" width="0.2012%" height="15" fill="rgb(209,8,3)" fg:x="1388" fg:w="4"/><text x="70.0689%" y="591.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.05%)</title><rect x="69.9698%" y="565" width="0.0503%" height="15" fill="rgb(214,25,53)" fg:x="1391" fg:w="1"/><text x="70.2198%" y="575.50"></text></g><g><title>&lt;u8 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.05%)</title><rect x="69.9698%" y="549" width="0.0503%" height="15" fill="rgb(254,186,54)" fg:x="1391" fg:w="1"/><text x="70.2198%" y="559.50"></text></g><g><title>core::ptr::read (4 samples, 0.20%)</title><rect x="70.0201%" y="565" width="0.2012%" height="15" fill="rgb(208,174,49)" fg:x="1392" fg:w="4"/><text x="70.2701%" y="575.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.75%)</title><rect x="69.6680%" y="613" width="0.7545%" height="15" fill="rgb(233,191,51)" fg:x="1385" fg:w="15"/><text x="69.9180%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (8 samples, 0.40%)</title><rect x="70.0201%" y="597" width="0.4024%" height="15" fill="rgb(222,134,10)" fg:x="1392" fg:w="8"/><text x="70.2701%" y="607.50"></text></g><g><title>core::mem::replace (8 samples, 0.40%)</title><rect x="70.0201%" y="581" width="0.4024%" height="15" fill="rgb(230,226,20)" fg:x="1392" fg:w="8"/><text x="70.2701%" y="591.50"></text></g><g><title>core::ptr::write (4 samples, 0.20%)</title><rect x="70.2213%" y="565" width="0.2012%" height="15" fill="rgb(251,111,25)" fg:x="1396" fg:w="4"/><text x="70.4713%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 1.26%)</title><rect x="70.4225%" y="565" width="1.2575%" height="15" fill="rgb(224,40,46)" fg:x="1400" fg:w="25"/><text x="70.6725%" y="575.50"></text></g><g><title>core::ptr::write (13 samples, 0.65%)</title><rect x="71.0262%" y="549" width="0.6539%" height="15" fill="rgb(236,108,47)" fg:x="1412" fg:w="13"/><text x="71.2762%" y="559.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (52 samples, 2.62%)</title><rect x="69.1650%" y="725" width="2.6157%" height="15" fill="rgb(234,93,0)" fg:x="1375" fg:w="52"/><text x="69.4150%" y="735.50">&lt;T..</text></g><g><title>hex::encode_to_iter (52 samples, 2.62%)</title><rect x="69.1650%" y="709" width="2.6157%" height="15" fill="rgb(224,213,32)" fg:x="1375" fg:w="52"/><text x="69.4150%" y="719.50">he..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (52 samples, 2.62%)</title><rect x="69.1650%" y="693" width="2.6157%" height="15" fill="rgb(251,11,48)" fg:x="1375" fg:w="52"/><text x="69.4150%" y="703.50">co..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (52 samples, 2.62%)</title><rect x="69.1650%" y="677" width="2.6157%" height="15" fill="rgb(236,173,5)" fg:x="1375" fg:w="52"/><text x="69.4150%" y="687.50">&lt;a..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (52 samples, 2.62%)</title><rect x="69.1650%" y="661" width="2.6157%" height="15" fill="rgb(230,95,12)" fg:x="1375" fg:w="52"/><text x="69.4150%" y="671.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (43 samples, 2.16%)</title><rect x="69.6177%" y="645" width="2.1630%" height="15" fill="rgb(232,209,1)" fg:x="1384" fg:w="43"/><text x="69.8677%" y="655.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (43 samples, 2.16%)</title><rect x="69.6177%" y="629" width="2.1630%" height="15" fill="rgb(232,6,1)" fg:x="1384" fg:w="43"/><text x="69.8677%" y="639.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (27 samples, 1.36%)</title><rect x="70.4225%" y="613" width="1.3581%" height="15" fill="rgb(210,224,50)" fg:x="1400" fg:w="27"/><text x="70.6725%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (27 samples, 1.36%)</title><rect x="70.4225%" y="597" width="1.3581%" height="15" fill="rgb(228,127,35)" fg:x="1400" fg:w="27"/><text x="70.6725%" y="607.50"></text></g><g><title>alloc::string::String::push (27 samples, 1.36%)</title><rect x="70.4225%" y="581" width="1.3581%" height="15" fill="rgb(245,102,45)" fg:x="1400" fg:w="27"/><text x="70.6725%" y="591.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (2 samples, 0.10%)</title><rect x="71.6801%" y="565" width="0.1006%" height="15" fill="rgb(214,1,49)" fg:x="1425" fg:w="2"/><text x="71.9301%" y="575.50"></text></g><g><title>core::char::methods::len_utf8 (2 samples, 0.10%)</title><rect x="71.6801%" y="549" width="0.1006%" height="15" fill="rgb(226,163,40)" fg:x="1425" fg:w="2"/><text x="71.9301%" y="559.50"></text></g><g><title>lab4::checksum::Checksum::update (232 samples, 11.67%)</title><rect x="60.1610%" y="757" width="11.6700%" height="15" fill="rgb(239,212,28)" fg:x="1196" fg:w="232"/><text x="60.4110%" y="767.50">lab4::checksum::C..</text></g><g><title>hex::encode (53 samples, 2.67%)</title><rect x="69.1650%" y="741" width="2.6660%" height="15" fill="rgb(220,20,13)" fg:x="1375" fg:w="53"/><text x="69.4150%" y="751.50">he..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="71.7807%" y="725" width="0.0503%" height="15" fill="rgb(210,164,35)" fg:x="1427" fg:w="1"/><text x="72.0307%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="71.7807%" y="709" width="0.0503%" height="15" fill="rgb(248,109,41)" fg:x="1427" fg:w="1"/><text x="72.0307%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="71.7807%" y="693" width="0.0503%" height="15" fill="rgb(238,23,50)" fg:x="1427" fg:w="1"/><text x="72.0307%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="71.7807%" y="677" width="0.0503%" height="15" fill="rgb(211,48,49)" fg:x="1427" fg:w="1"/><text x="72.0307%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="71.7807%" y="661" width="0.0503%" height="15" fill="rgb(223,36,21)" fg:x="1427" fg:w="1"/><text x="72.0307%" y="671.50"></text></g><g><title>_int_free (1 samples, 0.05%)</title><rect x="71.7807%" y="645" width="0.0503%" height="15" fill="rgb(207,123,46)" fg:x="1427" fg:w="1"/><text x="72.0307%" y="655.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (2 samples, 0.10%)</title><rect x="71.8813%" y="725" width="0.1006%" height="15" fill="rgb(240,218,32)" fg:x="1429" fg:w="2"/><text x="72.1313%" y="735.50"></text></g><g><title>sha2::sha256::Engine256::update (2 samples, 0.10%)</title><rect x="71.8813%" y="709" width="0.1006%" height="15" fill="rgb(252,5,43)" fg:x="1429" fg:w="2"/><text x="72.1313%" y="719.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (2 samples, 0.10%)</title><rect x="71.8813%" y="693" width="0.1006%" height="15" fill="rgb(252,84,19)" fg:x="1429" fg:w="2"/><text x="72.1313%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (2 samples, 0.10%)</title><rect x="71.8813%" y="677" width="0.1006%" height="15" fill="rgb(243,152,39)" fg:x="1429" fg:w="2"/><text x="72.1313%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.10%)</title><rect x="71.8813%" y="661" width="0.1006%" height="15" fill="rgb(234,160,15)" fg:x="1429" fg:w="2"/><text x="72.1313%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.10%)</title><rect x="71.8813%" y="645" width="0.1006%" height="15" fill="rgb(237,34,20)" fg:x="1429" fg:w="2"/><text x="72.1313%" y="655.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::digest_pad (1 samples, 0.05%)</title><rect x="71.9819%" y="645" width="0.0503%" height="15" fill="rgb(229,97,13)" fg:x="1431" fg:w="1"/><text x="72.2319%" y="655.50"></text></g><g><title>block_buffer::set_zero (1 samples, 0.05%)</title><rect x="71.9819%" y="629" width="0.0503%" height="15" fill="rgb(234,71,50)" fg:x="1431" fg:w="1"/><text x="72.2319%" y="639.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.05%)</title><rect x="71.9819%" y="613" width="0.0503%" height="15" fill="rgb(253,155,4)" fg:x="1431" fg:w="1"/><text x="72.2319%" y="623.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.05%)</title><rect x="71.9819%" y="597" width="0.0503%" height="15" fill="rgb(222,185,37)" fg:x="1431" fg:w="1"/><text x="72.2319%" y="607.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.05%)</title><rect x="72.0322%" y="581" width="0.0503%" height="15" fill="rgb(251,177,13)" fg:x="1432" fg:w="1"/><text x="72.2822%" y="591.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T: N]&gt;::try_from (1 samples, 0.05%)</title><rect x="72.0322%" y="565" width="0.0503%" height="15" fill="rgb(250,179,40)" fg:x="1432" fg:w="1"/><text x="72.2822%" y="575.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (1 samples, 0.05%)</title><rect x="72.0322%" y="549" width="0.0503%" height="15" fill="rgb(242,44,2)" fg:x="1432" fg:w="1"/><text x="72.2822%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.05%)</title><rect x="72.0322%" y="533" width="0.0503%" height="15" fill="rgb(216,177,13)" fg:x="1432" fg:w="1"/><text x="72.2822%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (3 samples, 0.15%)</title><rect x="72.0825%" y="581" width="0.1509%" height="15" fill="rgb(216,106,43)" fg:x="1433" fg:w="3"/><text x="72.3325%" y="591.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (3 samples, 0.15%)</title><rect x="72.0825%" y="565" width="0.1509%" height="15" fill="rgb(216,183,2)" fg:x="1433" fg:w="3"/><text x="72.3325%" y="575.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (3 samples, 0.15%)</title><rect x="72.0825%" y="549" width="0.1509%" height="15" fill="rgb(249,75,3)" fg:x="1433" fg:w="3"/><text x="72.3325%" y="559.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="72.2334%" y="565" width="0.0503%" height="15" fill="rgb(219,67,39)" fg:x="1436" fg:w="1"/><text x="72.4834%" y="575.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.05%)</title><rect x="72.2837%" y="565" width="0.0503%" height="15" fill="rgb(253,228,2)" fg:x="1437" fg:w="1"/><text x="72.5337%" y="575.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.05%)</title><rect x="72.2837%" y="549" width="0.0503%" height="15" fill="rgb(235,138,27)" fg:x="1437" fg:w="1"/><text x="72.5337%" y="559.50"></text></g><g><title>sha2::sha256::soft::add (7 samples, 0.35%)</title><rect x="72.3340%" y="549" width="0.3521%" height="15" fill="rgb(236,97,51)" fg:x="1438" fg:w="7"/><text x="72.5840%" y="559.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (7 samples, 0.35%)</title><rect x="72.3340%" y="533" width="0.3521%" height="15" fill="rgb(240,80,30)" fg:x="1438" fg:w="7"/><text x="72.5840%" y="543.50"></text></g><g><title>sha2::sha256::soft::add (2 samples, 0.10%)</title><rect x="72.6861%" y="533" width="0.1006%" height="15" fill="rgb(230,178,19)" fg:x="1445" fg:w="2"/><text x="72.9361%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.10%)</title><rect x="72.6861%" y="517" width="0.1006%" height="15" fill="rgb(210,190,27)" fg:x="1445" fg:w="2"/><text x="72.9361%" y="527.50"></text></g><g><title>sha2::sha256::soft::or (6 samples, 0.30%)</title><rect x="72.7867%" y="517" width="0.3018%" height="15" fill="rgb(222,107,31)" fg:x="1447" fg:w="6"/><text x="73.0367%" y="527.50"></text></g><g><title>sha2::sha256::soft::shl (2 samples, 0.10%)</title><rect x="73.0885%" y="517" width="0.1006%" height="15" fill="rgb(216,127,34)" fg:x="1453" fg:w="2"/><text x="73.3385%" y="527.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (12 samples, 0.60%)</title><rect x="72.6861%" y="549" width="0.6036%" height="15" fill="rgb(234,116,52)" fg:x="1445" fg:w="12"/><text x="72.9361%" y="559.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (10 samples, 0.50%)</title><rect x="72.7867%" y="533" width="0.5030%" height="15" fill="rgb(222,124,15)" fg:x="1447" fg:w="10"/><text x="73.0367%" y="543.50"></text></g><g><title>sha2::sha256::soft::xor (2 samples, 0.10%)</title><rect x="73.1891%" y="517" width="0.1006%" height="15" fill="rgb(231,179,28)" fg:x="1455" fg:w="2"/><text x="73.4391%" y="527.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (3 samples, 0.15%)</title><rect x="73.3903%" y="533" width="0.1509%" height="15" fill="rgb(226,93,45)" fg:x="1459" fg:w="3"/><text x="73.6403%" y="543.50"></text></g><g><title>sha2::sha256::soft::schedule (26 samples, 1.31%)</title><rect x="72.3340%" y="565" width="1.3078%" height="15" fill="rgb(215,8,51)" fg:x="1438" fg:w="26"/><text x="72.5840%" y="575.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (7 samples, 0.35%)</title><rect x="73.2897%" y="549" width="0.3521%" height="15" fill="rgb(223,106,5)" fg:x="1457" fg:w="7"/><text x="73.5397%" y="559.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.10%)</title><rect x="73.5412%" y="533" width="0.1006%" height="15" fill="rgb(250,191,5)" fg:x="1462" fg:w="2"/><text x="73.7912%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (11 samples, 0.55%)</title><rect x="74.4467%" y="549" width="0.5533%" height="15" fill="rgb(242,132,44)" fg:x="1480" fg:w="11"/><text x="74.6967%" y="559.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (75 samples, 3.77%)</title><rect x="71.8310%" y="741" width="3.7726%" height="15" fill="rgb(251,152,29)" fg:x="1428" fg:w="75"/><text x="72.0810%" y="751.50">&lt;D a..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (72 samples, 3.62%)</title><rect x="71.9819%" y="725" width="3.6217%" height="15" fill="rgb(218,179,5)" fg:x="1431" fg:w="72"/><text x="72.2319%" y="735.50">dige..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (72 samples, 3.62%)</title><rect x="71.9819%" y="709" width="3.6217%" height="15" fill="rgb(227,67,19)" fg:x="1431" fg:w="72"/><text x="72.2319%" y="719.50">&lt;D a..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (72 samples, 3.62%)</title><rect x="71.9819%" y="693" width="3.6217%" height="15" fill="rgb(233,119,31)" fg:x="1431" fg:w="72"/><text x="72.2319%" y="703.50">&lt;sha..</text></g><g><title>sha2::sha256::Engine256::finish (72 samples, 3.62%)</title><rect x="71.9819%" y="677" width="3.6217%" height="15" fill="rgb(241,120,22)" fg:x="1431" fg:w="72"/><text x="72.2319%" y="687.50">sha2..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (72 samples, 3.62%)</title><rect x="71.9819%" y="661" width="3.6217%" height="15" fill="rgb(224,102,30)" fg:x="1431" fg:w="72"/><text x="72.2319%" y="671.50">bloc..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (71 samples, 3.57%)</title><rect x="72.0322%" y="645" width="3.5714%" height="15" fill="rgb(210,164,37)" fg:x="1432" fg:w="71"/><text x="72.2822%" y="655.50">sha2..</text></g><g><title>sha2::sha256::compress256 (71 samples, 3.57%)</title><rect x="72.0322%" y="629" width="3.5714%" height="15" fill="rgb(226,191,16)" fg:x="1432" fg:w="71"/><text x="72.2822%" y="639.50">sha2..</text></g><g><title>sha2::sha256::x86::compress (71 samples, 3.57%)</title><rect x="72.0322%" y="613" width="3.5714%" height="15" fill="rgb(214,40,45)" fg:x="1432" fg:w="71"/><text x="72.2822%" y="623.50">sha2..</text></g><g><title>sha2::sha256::soft::compress (71 samples, 3.57%)</title><rect x="72.0322%" y="597" width="3.5714%" height="15" fill="rgb(244,29,26)" fg:x="1432" fg:w="71"/><text x="72.2822%" y="607.50">sha2..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (67 samples, 3.37%)</title><rect x="72.2334%" y="581" width="3.3702%" height="15" fill="rgb(216,16,5)" fg:x="1436" fg:w="67"/><text x="72.4834%" y="591.50">sha..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (39 samples, 1.96%)</title><rect x="73.6419%" y="565" width="1.9618%" height="15" fill="rgb(249,76,35)" fg:x="1464" fg:w="39"/><text x="73.8919%" y="575.50">s..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (12 samples, 0.60%)</title><rect x="75.0000%" y="549" width="0.6036%" height="15" fill="rgb(207,11,44)" fg:x="1491" fg:w="12"/><text x="75.2500%" y="559.50"></text></g><g><title>alloc::string::String::reserve (1 samples, 0.05%)</title><rect x="75.7042%" y="645" width="0.0503%" height="15" fill="rgb(228,190,49)" fg:x="1505" fg:w="1"/><text x="75.9542%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="75.7042%" y="629" width="0.0503%" height="15" fill="rgb(214,173,12)" fg:x="1505" fg:w="1"/><text x="75.9542%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="75.7042%" y="613" width="0.0503%" height="15" fill="rgb(218,26,35)" fg:x="1505" fg:w="1"/><text x="75.9542%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.05%)</title><rect x="75.7042%" y="597" width="0.0503%" height="15" fill="rgb(220,200,19)" fg:x="1505" fg:w="1"/><text x="75.9542%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.05%)</title><rect x="75.7042%" y="581" width="0.0503%" height="15" fill="rgb(239,95,49)" fg:x="1505" fg:w="1"/><text x="75.9542%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.05%)</title><rect x="75.7042%" y="565" width="0.0503%" height="15" fill="rgb(235,85,53)" fg:x="1505" fg:w="1"/><text x="75.9542%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.05%)</title><rect x="75.7042%" y="549" width="0.0503%" height="15" fill="rgb(233,133,31)" fg:x="1505" fg:w="1"/><text x="75.9542%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.05%)</title><rect x="75.9054%" y="597" width="0.0503%" height="15" fill="rgb(218,25,20)" fg:x="1509" fg:w="1"/><text x="76.1554%" y="607.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.05%)</title><rect x="75.9054%" y="581" width="0.0503%" height="15" fill="rgb(252,210,38)" fg:x="1509" fg:w="1"/><text x="76.1554%" y="591.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitAnd&lt;u8&gt;&gt;::bitand (1 samples, 0.05%)</title><rect x="76.1066%" y="565" width="0.0503%" height="15" fill="rgb(242,134,21)" fg:x="1513" fg:w="1"/><text x="76.3566%" y="575.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.05%)</title><rect x="76.1066%" y="549" width="0.0503%" height="15" fill="rgb(213,28,48)" fg:x="1513" fg:w="1"/><text x="76.3566%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.25%)</title><rect x="75.9557%" y="597" width="0.2515%" height="15" fill="rgb(250,196,2)" fg:x="1510" fg:w="5"/><text x="76.2057%" y="607.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (5 samples, 0.25%)</title><rect x="75.9557%" y="581" width="0.2515%" height="15" fill="rgb(227,5,17)" fg:x="1510" fg:w="5"/><text x="76.2057%" y="591.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.05%)</title><rect x="76.1569%" y="565" width="0.0503%" height="15" fill="rgb(221,226,24)" fg:x="1514" fg:w="1"/><text x="76.4069%" y="575.50"></text></g><g><title>&lt;u8 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.05%)</title><rect x="76.1569%" y="549" width="0.0503%" height="15" fill="rgb(211,5,48)" fg:x="1514" fg:w="1"/><text x="76.4069%" y="559.50"></text></g><g><title>core::ptr::read (5 samples, 0.25%)</title><rect x="76.2072%" y="565" width="0.2515%" height="15" fill="rgb(219,150,6)" fg:x="1515" fg:w="5"/><text x="76.4572%" y="575.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.65%)</title><rect x="75.8551%" y="613" width="0.6539%" height="15" fill="rgb(251,46,16)" fg:x="1508" fg:w="13"/><text x="76.1051%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (6 samples, 0.30%)</title><rect x="76.2072%" y="597" width="0.3018%" height="15" fill="rgb(220,204,40)" fg:x="1515" fg:w="6"/><text x="76.4572%" y="607.50"></text></g><g><title>core::mem::replace (6 samples, 0.30%)</title><rect x="76.2072%" y="581" width="0.3018%" height="15" fill="rgb(211,85,2)" fg:x="1515" fg:w="6"/><text x="76.4572%" y="591.50"></text></g><g><title>core::ptr::write (1 samples, 0.05%)</title><rect x="76.4588%" y="565" width="0.0503%" height="15" fill="rgb(229,17,7)" fg:x="1520" fg:w="1"/><text x="76.7088%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.10%)</title><rect x="77.4648%" y="549" width="0.1006%" height="15" fill="rgb(239,72,28)" fg:x="1540" fg:w="2"/><text x="77.7148%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.10%)</title><rect x="77.4648%" y="533" width="0.1006%" height="15" fill="rgb(230,47,54)" fg:x="1540" fg:w="2"/><text x="77.7148%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 1.46%)</title><rect x="76.5091%" y="565" width="1.4588%" height="15" fill="rgb(214,50,8)" fg:x="1521" fg:w="29"/><text x="76.7591%" y="575.50"></text></g><g><title>core::ptr::write (8 samples, 0.40%)</title><rect x="77.5654%" y="549" width="0.4024%" height="15" fill="rgb(216,198,43)" fg:x="1542" fg:w="8"/><text x="77.8154%" y="559.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (124 samples, 6.24%)</title><rect x="71.8310%" y="757" width="6.2374%" height="15" fill="rgb(234,20,35)" fg:x="1428" fg:w="124"/><text x="72.0810%" y="767.50">lab4::ch..</text></g><g><title>hex::encode (49 samples, 2.46%)</title><rect x="75.6036%" y="741" width="2.4648%" height="15" fill="rgb(254,45,19)" fg:x="1503" fg:w="49"/><text x="75.8536%" y="751.50">he..</text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (49 samples, 2.46%)</title><rect x="75.6036%" y="725" width="2.4648%" height="15" fill="rgb(219,14,44)" fg:x="1503" fg:w="49"/><text x="75.8536%" y="735.50">&lt;T..</text></g><g><title>hex::encode_to_iter (49 samples, 2.46%)</title><rect x="75.6036%" y="709" width="2.4648%" height="15" fill="rgb(217,220,26)" fg:x="1503" fg:w="49"/><text x="75.8536%" y="719.50">he..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (49 samples, 2.46%)</title><rect x="75.6036%" y="693" width="2.4648%" height="15" fill="rgb(213,158,28)" fg:x="1503" fg:w="49"/><text x="75.8536%" y="703.50">co..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (49 samples, 2.46%)</title><rect x="75.6036%" y="677" width="2.4648%" height="15" fill="rgb(252,51,52)" fg:x="1503" fg:w="49"/><text x="75.8536%" y="687.50">&lt;a..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (47 samples, 2.36%)</title><rect x="75.7042%" y="661" width="2.3642%" height="15" fill="rgb(246,89,16)" fg:x="1505" fg:w="47"/><text x="75.9542%" y="671.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (46 samples, 2.31%)</title><rect x="75.7545%" y="645" width="2.3139%" height="15" fill="rgb(216,158,49)" fg:x="1506" fg:w="46"/><text x="76.0045%" y="655.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (46 samples, 2.31%)</title><rect x="75.7545%" y="629" width="2.3139%" height="15" fill="rgb(236,107,19)" fg:x="1506" fg:w="46"/><text x="76.0045%" y="639.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (31 samples, 1.56%)</title><rect x="76.5091%" y="613" width="1.5594%" height="15" fill="rgb(228,185,30)" fg:x="1521" fg:w="31"/><text x="76.7591%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (31 samples, 1.56%)</title><rect x="76.5091%" y="597" width="1.5594%" height="15" fill="rgb(246,134,8)" fg:x="1521" fg:w="31"/><text x="76.7591%" y="607.50"></text></g><g><title>alloc::string::String::push (31 samples, 1.56%)</title><rect x="76.5091%" y="581" width="1.5594%" height="15" fill="rgb(214,143,50)" fg:x="1521" fg:w="31"/><text x="76.7591%" y="591.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (2 samples, 0.10%)</title><rect x="77.9678%" y="565" width="0.1006%" height="15" fill="rgb(228,75,8)" fg:x="1550" fg:w="2"/><text x="78.2178%" y="575.50"></text></g><g><title>core::char::methods::len_utf8 (2 samples, 0.10%)</title><rect x="77.9678%" y="549" width="0.1006%" height="15" fill="rgb(207,175,4)" fg:x="1550" fg:w="2"/><text x="78.2178%" y="559.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (4 samples, 0.20%)</title><rect x="78.2696%" y="661" width="0.2012%" height="15" fill="rgb(205,108,24)" fg:x="1556" fg:w="4"/><text x="78.5196%" y="671.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (4 samples, 0.20%)</title><rect x="78.2696%" y="645" width="0.2012%" height="15" fill="rgb(244,120,49)" fg:x="1556" fg:w="4"/><text x="78.5196%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.20%)</title><rect x="78.2696%" y="629" width="0.2012%" height="15" fill="rgb(223,47,38)" fg:x="1556" fg:w="4"/><text x="78.5196%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.20%)</title><rect x="78.2696%" y="613" width="0.2012%" height="15" fill="rgb(229,179,11)" fg:x="1556" fg:w="4"/><text x="78.5196%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.4205%" y="597" width="0.0503%" height="15" fill="rgb(231,122,1)" fg:x="1559" fg:w="1"/><text x="78.6705%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.4205%" y="581" width="0.0503%" height="15" fill="rgb(245,119,9)" fg:x="1559" fg:w="1"/><text x="78.6705%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.4205%" y="565" width="0.0503%" height="15" fill="rgb(241,163,25)" fg:x="1559" fg:w="1"/><text x="78.6705%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.4205%" y="549" width="0.0503%" height="15" fill="rgb(217,214,3)" fg:x="1559" fg:w="1"/><text x="78.6705%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.4205%" y="533" width="0.0503%" height="15" fill="rgb(240,86,28)" fg:x="1559" fg:w="1"/><text x="78.6705%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.4205%" y="517" width="0.0503%" height="15" fill="rgb(215,47,9)" fg:x="1559" fg:w="1"/><text x="78.6705%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.4205%" y="501" width="0.0503%" height="15" fill="rgb(252,25,45)" fg:x="1559" fg:w="1"/><text x="78.6705%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.4205%" y="485" width="0.0503%" height="15" fill="rgb(251,164,9)" fg:x="1559" fg:w="1"/><text x="78.6705%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.5211%" y="597" width="0.0503%" height="15" fill="rgb(233,194,0)" fg:x="1561" fg:w="1"/><text x="78.7711%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.5211%" y="581" width="0.0503%" height="15" fill="rgb(249,111,24)" fg:x="1561" fg:w="1"/><text x="78.7711%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.5211%" y="565" width="0.0503%" height="15" fill="rgb(250,223,3)" fg:x="1561" fg:w="1"/><text x="78.7711%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.5211%" y="549" width="0.0503%" height="15" fill="rgb(236,178,37)" fg:x="1561" fg:w="1"/><text x="78.7711%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.5211%" y="533" width="0.0503%" height="15" fill="rgb(241,158,50)" fg:x="1561" fg:w="1"/><text x="78.7711%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.5211%" y="517" width="0.0503%" height="15" fill="rgb(213,121,41)" fg:x="1561" fg:w="1"/><text x="78.7711%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.5211%" y="501" width="0.0503%" height="15" fill="rgb(240,92,3)" fg:x="1561" fg:w="1"/><text x="78.7711%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.5211%" y="485" width="0.0503%" height="15" fill="rgb(205,123,3)" fg:x="1561" fg:w="1"/><text x="78.7711%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.5211%" y="469" width="0.0503%" height="15" fill="rgb(205,97,47)" fg:x="1561" fg:w="1"/><text x="78.7711%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.5211%" y="453" width="0.0503%" height="15" fill="rgb(247,152,14)" fg:x="1561" fg:w="1"/><text x="78.7711%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="78.5211%" y="437" width="0.0503%" height="15" fill="rgb(248,195,53)" fg:x="1561" fg:w="1"/><text x="78.7711%" y="447.50"></text></g><g><title>[unknown] (380 samples, 19.11%)</title><rect x="78.7726%" y="565" width="19.1147%" height="15" fill="rgb(226,201,16)" fg:x="1566" fg:w="380"/><text x="79.0226%" y="575.50">[unknown]</text></g><g><title>[unknown] (338 samples, 17.00%)</title><rect x="80.8853%" y="549" width="17.0020%" height="15" fill="rgb(205,98,0)" fg:x="1608" fg:w="338"/><text x="81.1353%" y="559.50">[unknown]</text></g><g><title>[unknown] (337 samples, 16.95%)</title><rect x="80.9356%" y="533" width="16.9517%" height="15" fill="rgb(214,191,48)" fg:x="1609" fg:w="337"/><text x="81.1856%" y="543.50">[unknown]</text></g><g><title>[unknown] (325 samples, 16.35%)</title><rect x="81.5392%" y="517" width="16.3481%" height="15" fill="rgb(237,112,39)" fg:x="1621" fg:w="325"/><text x="81.7892%" y="527.50">[unknown]</text></g><g><title>[unknown] (321 samples, 16.15%)</title><rect x="81.7404%" y="501" width="16.1469%" height="15" fill="rgb(247,203,27)" fg:x="1625" fg:w="321"/><text x="81.9904%" y="511.50">[unknown]</text></g><g><title>[unknown] (317 samples, 15.95%)</title><rect x="81.9416%" y="485" width="15.9457%" height="15" fill="rgb(235,124,28)" fg:x="1629" fg:w="317"/><text x="82.1916%" y="495.50">[unknown]</text></g><g><title>[unknown] (298 samples, 14.99%)</title><rect x="82.8974%" y="469" width="14.9899%" height="15" fill="rgb(208,207,46)" fg:x="1648" fg:w="298"/><text x="83.1474%" y="479.50">[unknown]</text></g><g><title>[unknown] (293 samples, 14.74%)</title><rect x="83.1489%" y="453" width="14.7384%" height="15" fill="rgb(234,176,4)" fg:x="1653" fg:w="293"/><text x="83.3989%" y="463.50">[unknown]</text></g><g><title>[unknown] (283 samples, 14.24%)</title><rect x="83.6519%" y="437" width="14.2354%" height="15" fill="rgb(230,133,28)" fg:x="1663" fg:w="283"/><text x="83.9019%" y="447.50">[unknown]</text></g><g><title>[unknown] (239 samples, 12.02%)</title><rect x="85.8652%" y="421" width="12.0221%" height="15" fill="rgb(211,137,40)" fg:x="1707" fg:w="239"/><text x="86.1152%" y="431.50">[unknown]</text></g><g><title>[unknown] (211 samples, 10.61%)</title><rect x="87.2736%" y="405" width="10.6137%" height="15" fill="rgb(254,35,13)" fg:x="1735" fg:w="211"/><text x="87.5236%" y="415.50">[unknown]</text></g><g><title>[unknown] (199 samples, 10.01%)</title><rect x="87.8773%" y="389" width="10.0101%" height="15" fill="rgb(225,49,51)" fg:x="1747" fg:w="199"/><text x="88.1273%" y="399.50">[unknown]</text></g><g><title>[unknown] (179 samples, 9.00%)</title><rect x="88.8833%" y="373" width="9.0040%" height="15" fill="rgb(251,10,15)" fg:x="1767" fg:w="179"/><text x="89.1333%" y="383.50">[unknown]</text></g><g><title>[unknown] (155 samples, 7.80%)</title><rect x="90.0905%" y="357" width="7.7968%" height="15" fill="rgb(228,207,15)" fg:x="1791" fg:w="155"/><text x="90.3405%" y="367.50">[unknown]</text></g><g><title>[unknown] (149 samples, 7.49%)</title><rect x="90.3924%" y="341" width="7.4950%" height="15" fill="rgb(241,99,19)" fg:x="1797" fg:w="149"/><text x="90.6424%" y="351.50">[unknown]</text></g><g><title>[unknown] (142 samples, 7.14%)</title><rect x="90.7445%" y="325" width="7.1429%" height="15" fill="rgb(207,104,49)" fg:x="1804" fg:w="142"/><text x="90.9945%" y="335.50">[unknown]</text></g><g><title>[unknown] (119 samples, 5.99%)</title><rect x="91.9014%" y="309" width="5.9859%" height="15" fill="rgb(234,99,18)" fg:x="1827" fg:w="119"/><text x="92.1514%" y="319.50">[unknown]</text></g><g><title>[unknown] (94 samples, 4.73%)</title><rect x="93.1590%" y="293" width="4.7284%" height="15" fill="rgb(213,191,49)" fg:x="1852" fg:w="94"/><text x="93.4090%" y="303.50">[unkno..</text></g><g><title>[unknown] (76 samples, 3.82%)</title><rect x="94.0644%" y="277" width="3.8229%" height="15" fill="rgb(210,226,19)" fg:x="1870" fg:w="76"/><text x="94.3144%" y="287.50">[unk..</text></g><g><title>[unknown] (46 samples, 2.31%)</title><rect x="95.5734%" y="261" width="2.3139%" height="15" fill="rgb(229,97,18)" fg:x="1900" fg:w="46"/><text x="95.8234%" y="271.50">[..</text></g><g><title>[unknown] (28 samples, 1.41%)</title><rect x="96.4789%" y="245" width="1.4085%" height="15" fill="rgb(211,167,15)" fg:x="1918" fg:w="28"/><text x="96.7289%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="97.6358%" y="229" width="0.2515%" height="15" fill="rgb(210,169,34)" fg:x="1941" fg:w="5"/><text x="97.8858%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.15%)</title><rect x="97.7364%" y="213" width="0.1509%" height="15" fill="rgb(241,121,31)" fg:x="1943" fg:w="3"/><text x="97.9864%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="97.7867%" y="197" width="0.1006%" height="15" fill="rgb(232,40,11)" fg:x="1944" fg:w="2"/><text x="98.0367%" y="207.50"></text></g><g><title>__libc_write (386 samples, 19.42%)</title><rect x="78.5714%" y="597" width="19.4165%" height="15" fill="rgb(205,86,26)" fg:x="1562" fg:w="386"/><text x="78.8214%" y="607.50">__libc_write</text></g><g><title>__libc_write (385 samples, 19.37%)</title><rect x="78.6217%" y="581" width="19.3662%" height="15" fill="rgb(231,126,28)" fg:x="1563" fg:w="385"/><text x="78.8717%" y="591.50">__libc_write</text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.10%)</title><rect x="97.8873%" y="565" width="0.1006%" height="15" fill="rgb(219,221,18)" fg:x="1946" fg:w="2"/><text x="98.1373%" y="575.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (388 samples, 19.52%)</title><rect x="78.5211%" y="645" width="19.5171%" height="15" fill="rgb(211,40,0)" fg:x="1561" fg:w="388"/><text x="78.7711%" y="655.50">&lt;std::io::stdio::StdoutRaw as s..</text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (388 samples, 19.52%)</title><rect x="78.5211%" y="629" width="19.5171%" height="15" fill="rgb(239,85,43)" fg:x="1561" fg:w="388"/><text x="78.7711%" y="639.50">&lt;std::sys::unix::stdio::Stdout ..</text></g><g><title>std::sys::unix::fd::FileDesc::write (388 samples, 19.52%)</title><rect x="78.5211%" y="613" width="19.5171%" height="15" fill="rgb(231,55,21)" fg:x="1561" fg:w="388"/><text x="78.7711%" y="623.50">std::sys::unix::fd::FileDesc::w..</text></g><g><title>std::sys::unix::cvt (1 samples, 0.05%)</title><rect x="97.9879%" y="597" width="0.0503%" height="15" fill="rgb(225,184,43)" fg:x="1948" fg:w="1"/><text x="98.2379%" y="607.50"></text></g><g><title>&lt;isize as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.05%)</title><rect x="97.9879%" y="581" width="0.0503%" height="15" fill="rgb(251,158,41)" fg:x="1948" fg:w="1"/><text x="98.2379%" y="591.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (390 samples, 19.62%)</title><rect x="78.4708%" y="661" width="19.6177%" height="15" fill="rgb(234,159,37)" fg:x="1560" fg:w="390"/><text x="78.7208%" y="671.50">std::io::buffered::bufwriter::B..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf::BufGuard::remaining (1 samples, 0.05%)</title><rect x="98.0382%" y="645" width="0.0503%" height="15" fill="rgb(216,204,22)" fg:x="1949" fg:w="1"/><text x="98.2882%" y="655.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (1 samples, 0.05%)</title><rect x="98.0885%" y="661" width="0.0503%" height="15" fill="rgb(214,17,3)" fg:x="1950" fg:w="1"/><text x="98.3385%" y="671.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::buffered (1 samples, 0.05%)</title><rect x="98.0885%" y="645" width="0.0503%" height="15" fill="rgb(212,111,17)" fg:x="1950" fg:w="1"/><text x="98.3385%" y="655.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::buffer (1 samples, 0.05%)</title><rect x="98.0885%" y="629" width="0.0503%" height="15" fill="rgb(221,157,24)" fg:x="1950" fg:w="1"/><text x="98.3385%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.05%)</title><rect x="98.0885%" y="613" width="0.0503%" height="15" fill="rgb(252,16,13)" fg:x="1950" fg:w="1"/><text x="98.3385%" y="623.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (396 samples, 19.92%)</title><rect x="78.2696%" y="693" width="19.9195%" height="15" fill="rgb(221,62,2)" fg:x="1556" fg:w="396"/><text x="78.5196%" y="703.50">&lt;std::io::buffered::linewriter:..</text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (396 samples, 19.92%)</title><rect x="78.2696%" y="677" width="19.9195%" height="15" fill="rgb(247,87,22)" fg:x="1556" fg:w="396"/><text x="78.5196%" y="687.50">&lt;std::io::buffered::linewriters..</text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.05%)</title><rect x="98.1388%" y="661" width="0.0503%" height="15" fill="rgb(215,73,9)" fg:x="1951" fg:w="1"/><text x="98.3888%" y="671.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.05%)</title><rect x="98.1388%" y="645" width="0.0503%" height="15" fill="rgb(207,175,33)" fg:x="1951" fg:w="1"/><text x="98.3888%" y="655.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.05%)</title><rect x="98.1388%" y="629" width="0.0503%" height="15" fill="rgb(243,129,54)" fg:x="1951" fg:w="1"/><text x="98.3888%" y="639.50"></text></g><g><title>__memrchr_avx2 (1 samples, 0.05%)</title><rect x="98.1388%" y="613" width="0.0503%" height="15" fill="rgb(227,119,45)" fg:x="1951" fg:w="1"/><text x="98.3888%" y="623.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (398 samples, 20.02%)</title><rect x="78.2193%" y="725" width="20.0201%" height="15" fill="rgb(205,109,36)" fg:x="1555" fg:w="398"/><text x="78.4693%" y="735.50">&lt;std::io::Write::write_fmt::Ada..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (397 samples, 19.97%)</title><rect x="78.2696%" y="709" width="19.9698%" height="15" fill="rgb(205,6,39)" fg:x="1556" fg:w="397"/><text x="78.5196%" y="719.50">&lt;std::io::stdio::StdoutLock as ..</text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.05%)</title><rect x="98.1891%" y="693" width="0.0503%" height="15" fill="rgb(221,32,16)" fg:x="1952" fg:w="1"/><text x="98.4391%" y="703.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.05%)</title><rect x="98.1891%" y="677" width="0.0503%" height="15" fill="rgb(228,144,50)" fg:x="1952" fg:w="1"/><text x="98.4391%" y="687.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.05%)</title><rect x="98.2394%" y="725" width="0.0503%" height="15" fill="rgb(229,201,53)" fg:x="1953" fg:w="1"/><text x="98.4894%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Display&gt;::fmt (3 samples, 0.15%)</title><rect x="98.2897%" y="709" width="0.1509%" height="15" fill="rgb(249,153,27)" fg:x="1954" fg:w="3"/><text x="98.5397%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (3 samples, 0.15%)</title><rect x="98.2897%" y="693" width="0.1509%" height="15" fill="rgb(227,106,25)" fg:x="1954" fg:w="3"/><text x="98.5397%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.15%)</title><rect x="98.2897%" y="677" width="0.1509%" height="15" fill="rgb(230,65,29)" fg:x="1954" fg:w="3"/><text x="98.5397%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.05%)</title><rect x="98.3903%" y="661" width="0.0503%" height="15" fill="rgb(221,57,46)" fg:x="1956" fg:w="1"/><text x="98.6403%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.05%)</title><rect x="98.3903%" y="645" width="0.0503%" height="15" fill="rgb(229,161,17)" fg:x="1956" fg:w="1"/><text x="98.6403%" y="655.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.15%)</title><rect x="98.4406%" y="677" width="0.1509%" height="15" fill="rgb(222,213,11)" fg:x="1957" fg:w="3"/><text x="98.6906%" y="687.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.15%)</title><rect x="98.4406%" y="661" width="0.1509%" height="15" fill="rgb(235,35,13)" fg:x="1957" fg:w="3"/><text x="98.6906%" y="671.50"></text></g><g><title>std::sys_common::memchr::memrchr (3 samples, 0.15%)</title><rect x="98.4406%" y="645" width="0.1509%" height="15" fill="rgb(233,158,34)" fg:x="1957" fg:w="3"/><text x="98.6906%" y="655.50"></text></g><g><title>std::sys::unix::memchr::memrchr (3 samples, 0.15%)</title><rect x="98.4406%" y="629" width="0.1509%" height="15" fill="rgb(215,151,48)" fg:x="1957" fg:w="3"/><text x="98.6906%" y="639.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (3 samples, 0.15%)</title><rect x="98.4406%" y="613" width="0.1509%" height="15" fill="rgb(229,84,14)" fg:x="1957" fg:w="3"/><text x="98.6906%" y="623.50"></text></g><g><title>__memrchr_avx2 (3 samples, 0.15%)</title><rect x="98.4406%" y="597" width="0.1509%" height="15" fill="rgb(229,68,14)" fg:x="1957" fg:w="3"/><text x="98.6906%" y="607.50"></text></g><g><title>std::io::Write::write_fmt (409 samples, 20.57%)</title><rect x="78.0684%" y="757" width="20.5734%" height="15" fill="rgb(243,106,26)" fg:x="1552" fg:w="409"/><text x="78.3184%" y="767.50">std::io::Write::write_fmt</text></g><g><title>core::fmt::write (407 samples, 20.47%)</title><rect x="78.1690%" y="741" width="20.4728%" height="15" fill="rgb(206,45,38)" fg:x="1554" fg:w="407"/><text x="78.4190%" y="751.50">core::fmt::write</text></g><g><title>core::fmt::rt::Argument::fmt (7 samples, 0.35%)</title><rect x="98.2897%" y="725" width="0.3521%" height="15" fill="rgb(226,6,15)" fg:x="1954" fg:w="7"/><text x="98.5397%" y="735.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.20%)</title><rect x="98.4406%" y="709" width="0.2012%" height="15" fill="rgb(232,22,54)" fg:x="1957" fg:w="4"/><text x="98.6906%" y="719.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (4 samples, 0.20%)</title><rect x="98.4406%" y="693" width="0.2012%" height="15" fill="rgb(229,222,32)" fg:x="1957" fg:w="4"/><text x="98.6906%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.5915%" y="677" width="0.0503%" height="15" fill="rgb(228,62,29)" fg:x="1960" fg:w="1"/><text x="98.8415%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.5915%" y="661" width="0.0503%" height="15" fill="rgb(251,103,34)" fg:x="1960" fg:w="1"/><text x="98.8415%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.5915%" y="645" width="0.0503%" height="15" fill="rgb(233,12,30)" fg:x="1960" fg:w="1"/><text x="98.8415%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.5915%" y="629" width="0.0503%" height="15" fill="rgb(238,52,0)" fg:x="1960" fg:w="1"/><text x="98.8415%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.5915%" y="613" width="0.0503%" height="15" fill="rgb(223,98,5)" fg:x="1960" fg:w="1"/><text x="98.8415%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.5915%" y="597" width="0.0503%" height="15" fill="rgb(228,75,37)" fg:x="1960" fg:w="1"/><text x="98.8415%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="98.5915%" y="581" width="0.0503%" height="15" fill="rgb(205,115,49)" fg:x="1960" fg:w="1"/><text x="98.8415%" y="591.50"></text></g><g><title>std::panic::catch_unwind (1,817 samples, 91.40%)</title><rect x="7.5956%" y="901" width="91.3984%" height="15" fill="rgb(250,154,43)" fg:x="151" fg:w="1817"/><text x="7.8456%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,817 samples, 91.40%)</title><rect x="7.5956%" y="885" width="91.3984%" height="15" fill="rgb(226,43,29)" fg:x="151" fg:w="1817"/><text x="7.8456%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,817 samples, 91.40%)</title><rect x="7.5956%" y="869" width="91.3984%" height="15" fill="rgb(249,228,39)" fg:x="151" fg:w="1817"/><text x="7.8456%" y="879.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,817 samples, 91.40%)</title><rect x="7.5956%" y="853" width="91.3984%" height="15" fill="rgb(216,79,43)" fg:x="151" fg:w="1817"/><text x="7.8456%" y="863.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1,817 samples, 91.40%)</title><rect x="7.5956%" y="837" width="91.3984%" height="15" fill="rgb(228,95,12)" fg:x="151" fg:w="1817"/><text x="7.8456%" y="847.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,817 samples, 91.40%)</title><rect x="7.5956%" y="821" width="91.3984%" height="15" fill="rgb(249,221,15)" fg:x="151" fg:w="1817"/><text x="7.8456%" y="831.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (1,817 samples, 91.40%)</title><rect x="7.5956%" y="805" width="91.3984%" height="15" fill="rgb(233,34,13)" fg:x="151" fg:w="1817"/><text x="7.8456%" y="815.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (1,343 samples, 67.56%)</title><rect x="31.4386%" y="789" width="67.5553%" height="15" fill="rgb(214,103,39)" fg:x="625" fg:w="1343"/><text x="31.6886%" y="799.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (780 samples, 39.24%)</title><rect x="59.7586%" y="773" width="39.2354%" height="15" fill="rgb(251,126,39)" fg:x="1188" fg:w="780"/><text x="60.0086%" y="783.50">lab4::student::Student::build_idea</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.35%)</title><rect x="98.6419%" y="757" width="0.3521%" height="15" fill="rgb(214,216,36)" fg:x="1961" fg:w="7"/><text x="98.8919%" y="767.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (7 samples, 0.35%)</title><rect x="98.6419%" y="741" width="0.3521%" height="15" fill="rgb(220,221,8)" fg:x="1961" fg:w="7"/><text x="98.8919%" y="751.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (7 samples, 0.35%)</title><rect x="98.6419%" y="725" width="0.3521%" height="15" fill="rgb(240,216,3)" fg:x="1961" fg:w="7"/><text x="98.8919%" y="735.50"></text></g><g><title>std::sys::unix::futex::futex_wait (7 samples, 0.35%)</title><rect x="98.6419%" y="709" width="0.3521%" height="15" fill="rgb(232,218,17)" fg:x="1961" fg:w="7"/><text x="98.8919%" y="719.50"></text></g><g><title>syscall (7 samples, 0.35%)</title><rect x="98.6419%" y="693" width="0.3521%" height="15" fill="rgb(229,163,45)" fg:x="1961" fg:w="7"/><text x="98.8919%" y="703.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="98.6419%" y="677" width="0.3521%" height="15" fill="rgb(231,110,42)" fg:x="1961" fg:w="7"/><text x="98.8919%" y="687.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="98.6419%" y="661" width="0.3521%" height="15" fill="rgb(208,170,48)" fg:x="1961" fg:w="7"/><text x="98.8919%" y="671.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="98.6419%" y="645" width="0.3521%" height="15" fill="rgb(239,116,25)" fg:x="1961" fg:w="7"/><text x="98.8919%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="98.6419%" y="629" width="0.3521%" height="15" fill="rgb(219,200,50)" fg:x="1961" fg:w="7"/><text x="98.8919%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.35%)</title><rect x="98.6419%" y="613" width="0.3521%" height="15" fill="rgb(245,200,0)" fg:x="1961" fg:w="7"/><text x="98.8919%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="98.6922%" y="597" width="0.3018%" height="15" fill="rgb(245,119,33)" fg:x="1962" fg:w="6"/><text x="98.9422%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="98.6922%" y="581" width="0.3018%" height="15" fill="rgb(231,125,12)" fg:x="1962" fg:w="6"/><text x="98.9422%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="98.6922%" y="565" width="0.3018%" height="15" fill="rgb(216,96,41)" fg:x="1962" fg:w="6"/><text x="98.9422%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="98.6922%" y="549" width="0.3018%" height="15" fill="rgb(248,43,45)" fg:x="1962" fg:w="6"/><text x="98.9422%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="98.7425%" y="533" width="0.2515%" height="15" fill="rgb(217,222,7)" fg:x="1963" fg:w="5"/><text x="98.9925%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="98.7425%" y="517" width="0.2515%" height="15" fill="rgb(233,28,6)" fg:x="1963" fg:w="5"/><text x="98.9925%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="98.7425%" y="501" width="0.2515%" height="15" fill="rgb(231,218,15)" fg:x="1963" fg:w="5"/><text x="98.9925%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="98.7425%" y="485" width="0.2515%" height="15" fill="rgb(226,171,48)" fg:x="1963" fg:w="5"/><text x="98.9925%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="98.7425%" y="469" width="0.2515%" height="15" fill="rgb(235,201,9)" fg:x="1963" fg:w="5"/><text x="98.9925%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="98.9940%" y="805" width="0.1006%" height="15" fill="rgb(217,80,15)" fg:x="1968" fg:w="2"/><text x="99.2440%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="98.9940%" y="789" width="0.1006%" height="15" fill="rgb(219,152,8)" fg:x="1968" fg:w="2"/><text x="99.2440%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="98.9940%" y="773" width="0.1006%" height="15" fill="rgb(243,107,38)" fg:x="1968" fg:w="2"/><text x="99.2440%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="98.9940%" y="757" width="0.1006%" height="15" fill="rgb(231,17,5)" fg:x="1968" fg:w="2"/><text x="99.2440%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="98.9940%" y="741" width="0.1006%" height="15" fill="rgb(209,25,54)" fg:x="1968" fg:w="2"/><text x="99.2440%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.10%)</title><rect x="98.9940%" y="725" width="0.1006%" height="15" fill="rgb(219,0,2)" fg:x="1968" fg:w="2"/><text x="99.2440%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0443%" y="709" width="0.0503%" height="15" fill="rgb(246,9,5)" fg:x="1969" fg:w="1"/><text x="99.2943%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0443%" y="693" width="0.0503%" height="15" fill="rgb(226,159,4)" fg:x="1969" fg:w="1"/><text x="99.2943%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,820 samples, 91.55%)</title><rect x="7.5956%" y="965" width="91.5493%" height="15" fill="rgb(219,175,34)" fg:x="151" fg:w="1820"/><text x="7.8456%" y="975.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,820 samples, 91.55%)</title><rect x="7.5956%" y="949" width="91.5493%" height="15" fill="rgb(236,10,46)" fg:x="151" fg:w="1820"/><text x="7.8456%" y="959.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,820 samples, 91.55%)</title><rect x="7.5956%" y="933" width="91.5493%" height="15" fill="rgb(240,211,16)" fg:x="151" fg:w="1820"/><text x="7.8456%" y="943.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1,820 samples, 91.55%)</title><rect x="7.5956%" y="917" width="91.5493%" height="15" fill="rgb(205,3,43)" fg:x="151" fg:w="1820"/><text x="7.8456%" y="927.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (3 samples, 0.15%)</title><rect x="98.9940%" y="901" width="0.1509%" height="15" fill="rgb(245,7,22)" fg:x="1968" fg:w="3"/><text x="99.2440%" y="911.50"></text></g><g><title>pthread_getattr_np (3 samples, 0.15%)</title><rect x="98.9940%" y="885" width="0.1509%" height="15" fill="rgb(239,132,32)" fg:x="1968" fg:w="3"/><text x="99.2440%" y="895.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.15%)</title><rect x="98.9940%" y="869" width="0.1509%" height="15" fill="rgb(228,202,34)" fg:x="1968" fg:w="3"/><text x="99.2440%" y="879.50"></text></g><g><title>tcache_init.part.0 (3 samples, 0.15%)</title><rect x="98.9940%" y="853" width="0.1509%" height="15" fill="rgb(254,200,22)" fg:x="1968" fg:w="3"/><text x="99.2440%" y="863.50"></text></g><g><title>arena_get2.part.0 (3 samples, 0.15%)</title><rect x="98.9940%" y="837" width="0.1509%" height="15" fill="rgb(219,10,39)" fg:x="1968" fg:w="3"/><text x="99.2440%" y="847.50"></text></g><g><title>new_heap (3 samples, 0.15%)</title><rect x="98.9940%" y="821" width="0.1509%" height="15" fill="rgb(226,210,39)" fg:x="1968" fg:w="3"/><text x="99.2440%" y="831.50"></text></g><g><title>__GI_munmap (1 samples, 0.05%)</title><rect x="99.0946%" y="805" width="0.0503%" height="15" fill="rgb(208,219,16)" fg:x="1970" fg:w="1"/><text x="99.3446%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0946%" y="789" width="0.0503%" height="15" fill="rgb(216,158,51)" fg:x="1970" fg:w="1"/><text x="99.3446%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0946%" y="773" width="0.0503%" height="15" fill="rgb(233,14,44)" fg:x="1970" fg:w="1"/><text x="99.3446%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0946%" y="757" width="0.0503%" height="15" fill="rgb(237,97,39)" fg:x="1970" fg:w="1"/><text x="99.3446%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0946%" y="741" width="0.0503%" height="15" fill="rgb(218,198,43)" fg:x="1970" fg:w="1"/><text x="99.3446%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0946%" y="725" width="0.0503%" height="15" fill="rgb(231,104,20)" fg:x="1970" fg:w="1"/><text x="99.3446%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0946%" y="709" width="0.0503%" height="15" fill="rgb(254,36,13)" fg:x="1970" fg:w="1"/><text x="99.3446%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0946%" y="693" width="0.0503%" height="15" fill="rgb(248,14,50)" fg:x="1970" fg:w="1"/><text x="99.3446%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0946%" y="677" width="0.0503%" height="15" fill="rgb(217,107,29)" fg:x="1970" fg:w="1"/><text x="99.3446%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.0946%" y="661" width="0.0503%" height="15" fill="rgb(251,169,33)" fg:x="1970" fg:w="1"/><text x="99.3446%" y="671.50"></text></g><g><title>__GI___clone (1,857 samples, 93.41%)</title><rect x="5.7847%" y="1013" width="93.4105%" height="15" fill="rgb(217,108,32)" fg:x="115" fg:w="1857"/><text x="6.0347%" y="1023.50">__GI___clone</text></g><g><title>start_thread (1,821 samples, 91.60%)</title><rect x="7.5956%" y="997" width="91.5996%" height="15" fill="rgb(219,66,42)" fg:x="151" fg:w="1821"/><text x="7.8456%" y="1007.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,821 samples, 91.60%)</title><rect x="7.5956%" y="981" width="91.5996%" height="15" fill="rgb(206,180,7)" fg:x="151" fg:w="1821"/><text x="7.8456%" y="991.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (1 samples, 0.05%)</title><rect x="99.1449%" y="965" width="0.0503%" height="15" fill="rgb(208,226,31)" fg:x="1971" fg:w="1"/><text x="99.3949%" y="975.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="99.1449%" y="949" width="0.0503%" height="15" fill="rgb(218,26,49)" fg:x="1971" fg:w="1"/><text x="99.3949%" y="959.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (1 samples, 0.05%)</title><rect x="99.1449%" y="933" width="0.0503%" height="15" fill="rgb(233,197,48)" fg:x="1971" fg:w="1"/><text x="99.3949%" y="943.50"></text></g><g><title>__sigaltstack (1 samples, 0.05%)</title><rect x="99.1449%" y="917" width="0.0503%" height="15" fill="rgb(252,181,51)" fg:x="1971" fg:w="1"/><text x="99.3949%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.05%)</title><rect x="99.1449%" y="901" width="0.0503%" height="15" fill="rgb(253,90,19)" fg:x="1971" fg:w="1"/><text x="99.3949%" y="911.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.10%)</title><rect x="99.1952%" y="1013" width="0.1006%" height="15" fill="rgb(215,171,30)" fg:x="1972" fg:w="2"/><text x="99.4452%" y="1023.50"></text></g><g><title>__rdl_realloc (2 samples, 0.10%)</title><rect x="99.2958%" y="1013" width="0.1006%" height="15" fill="rgb(214,222,9)" fg:x="1974" fg:w="2"/><text x="99.5458%" y="1023.50"></text></g><g><title>_start (1 samples, 0.05%)</title><rect x="99.3964%" y="1013" width="0.0503%" height="15" fill="rgb(223,3,22)" fg:x="1976" fg:w="1"/><text x="99.6464%" y="1023.50"></text></g><g><title>_dl_start (1 samples, 0.05%)</title><rect x="99.3964%" y="997" width="0.0503%" height="15" fill="rgb(225,196,46)" fg:x="1976" fg:w="1"/><text x="99.6464%" y="1007.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.05%)</title><rect x="99.3964%" y="981" width="0.0503%" height="15" fill="rgb(209,110,37)" fg:x="1976" fg:w="1"/><text x="99.6464%" y="991.50"></text></g><g><title>dl_main (1 samples, 0.05%)</title><rect x="99.3964%" y="965" width="0.0503%" height="15" fill="rgb(249,89,12)" fg:x="1976" fg:w="1"/><text x="99.6464%" y="975.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.05%)</title><rect x="99.3964%" y="949" width="0.0503%" height="15" fill="rgb(226,27,33)" fg:x="1976" fg:w="1"/><text x="99.6464%" y="959.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.05%)</title><rect x="99.3964%" y="933" width="0.0503%" height="15" fill="rgb(213,82,22)" fg:x="1976" fg:w="1"/><text x="99.6464%" y="943.50"></text></g><g><title>anon.36fe2630154ba43b8eea1aae1aa114a9.1.llvm.11692955864891299820 (1 samples, 0.05%)</title><rect x="99.4467%" y="1013" width="0.0503%" height="15" fill="rgb(248,140,0)" fg:x="1977" fg:w="1"/><text x="99.6967%" y="1023.50"></text></g><g><title>__memrchr_avx2 (1 samples, 0.05%)</title><rect x="99.4467%" y="997" width="0.0503%" height="15" fill="rgb(228,106,3)" fg:x="1977" fg:w="1"/><text x="99.6967%" y="1007.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (1 samples, 0.05%)</title><rect x="99.4970%" y="1013" width="0.0503%" height="15" fill="rgb(209,23,37)" fg:x="1978" fg:w="1"/><text x="99.7470%" y="1023.50"></text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name (1 samples, 0.05%)</title><rect x="99.4970%" y="997" width="0.0503%" height="15" fill="rgb(241,93,50)" fg:x="1978" fg:w="1"/><text x="99.7470%" y="1007.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product (1 samples, 0.05%)</title><rect x="99.4970%" y="981" width="0.0503%" height="15" fill="rgb(253,46,43)" fg:x="1978" fg:w="1"/><text x="99.7470%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.05%)</title><rect x="99.4970%" y="965" width="0.0503%" height="15" fill="rgb(226,206,43)" fg:x="1978" fg:w="1"/><text x="99.7470%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="99.4970%" y="949" width="0.0503%" height="15" fill="rgb(217,54,7)" fg:x="1978" fg:w="1"/><text x="99.7470%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.05%)</title><rect x="99.4970%" y="933" width="0.0503%" height="15" fill="rgb(223,5,52)" fg:x="1978" fg:w="1"/><text x="99.7470%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.05%)</title><rect x="99.4970%" y="917" width="0.0503%" height="15" fill="rgb(206,52,46)" fg:x="1978" fg:w="1"/><text x="99.7470%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.05%)</title><rect x="99.4970%" y="901" width="0.0503%" height="15" fill="rgb(253,136,11)" fg:x="1978" fg:w="1"/><text x="99.7470%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.05%)</title><rect x="99.4970%" y="885" width="0.0503%" height="15" fill="rgb(208,106,33)" fg:x="1978" fg:w="1"/><text x="99.7470%" y="895.50"></text></g><g><title>lab4 (1,982 samples, 99.70%)</title><rect x="0.0000%" y="1029" width="99.6982%" height="15" fill="rgb(206,54,4)" fg:x="0" fg:w="1982"/><text x="0.2500%" y="1039.50">lab4</text></g><g><title>lab4::student::Student::run (3 samples, 0.15%)</title><rect x="99.5473%" y="1013" width="0.1509%" height="15" fill="rgb(213,3,15)" fg:x="1979" fg:w="3"/><text x="99.7973%" y="1023.50"></text></g><g><title>all (1,988 samples, 100%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(252,211,39)" fg:x="0" fg:w="1988"/><text x="0.2500%" y="1055.50"></text></g><g><title>perf-exec (6 samples, 0.30%)</title><rect x="99.6982%" y="1029" width="0.3018%" height="15" fill="rgb(223,6,36)" fg:x="1982" fg:w="6"/><text x="99.9482%" y="1039.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="99.6982%" y="1013" width="0.3018%" height="15" fill="rgb(252,169,45)" fg:x="1982" fg:w="6"/><text x="99.9482%" y="1023.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="99.6982%" y="997" width="0.3018%" height="15" fill="rgb(212,48,26)" fg:x="1982" fg:w="6"/><text x="99.9482%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="99.6982%" y="981" width="0.3018%" height="15" fill="rgb(251,102,48)" fg:x="1982" fg:w="6"/><text x="99.9482%" y="991.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="99.6982%" y="965" width="0.3018%" height="15" fill="rgb(243,208,16)" fg:x="1982" fg:w="6"/><text x="99.9482%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="99.6982%" y="949" width="0.3018%" height="15" fill="rgb(219,96,24)" fg:x="1982" fg:w="6"/><text x="99.9482%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="99.6982%" y="933" width="0.3018%" height="15" fill="rgb(219,33,29)" fg:x="1982" fg:w="6"/><text x="99.9482%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="99.6982%" y="917" width="0.3018%" height="15" fill="rgb(223,176,5)" fg:x="1982" fg:w="6"/><text x="99.9482%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="99.6982%" y="901" width="0.3018%" height="15" fill="rgb(228,140,14)" fg:x="1982" fg:w="6"/><text x="99.9482%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="99.6982%" y="885" width="0.3018%" height="15" fill="rgb(217,179,31)" fg:x="1982" fg:w="6"/><text x="99.9482%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.30%)</title><rect x="99.6982%" y="869" width="0.3018%" height="15" fill="rgb(230,9,30)" fg:x="1982" fg:w="6"/><text x="99.9482%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="99.7485%" y="853" width="0.2515%" height="15" fill="rgb(230,136,20)" fg:x="1983" fg:w="5"/><text x="99.9985%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="99.7485%" y="837" width="0.2515%" height="15" fill="rgb(215,210,22)" fg:x="1983" fg:w="5"/><text x="99.9985%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="99.7485%" y="821" width="0.2515%" height="15" fill="rgb(218,43,5)" fg:x="1983" fg:w="5"/><text x="99.9985%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.25%)</title><rect x="99.7485%" y="805" width="0.2515%" height="15" fill="rgb(216,11,5)" fg:x="1983" fg:w="5"/><text x="99.9985%" y="815.50"></text></g></svg></svg>