<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="1129"><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.62%)</title><rect x="0.0000%" y="885" width="0.6200%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="7"/><text x="0.2500%" y="895.50"></text></g><g><title>__GI___libc_free (2 samples, 0.18%)</title><rect x="0.6200%" y="869" width="0.1771%" height="15" fill="rgb(217,0,24)" fg:x="7" fg:w="2"/><text x="0.8700%" y="879.50"></text></g><g><title>[[heap]] (4 samples, 0.35%)</title><rect x="0.6200%" y="885" width="0.3543%" height="15" fill="rgb(221,193,54)" fg:x="7" fg:w="4"/><text x="0.8700%" y="895.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (2 samples, 0.18%)</title><rect x="0.7972%" y="869" width="0.1771%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="2"/><text x="1.0472%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.27%)</title><rect x="0.9743%" y="869" width="0.2657%" height="15" fill="rgb(208,68,35)" fg:x="11" fg:w="3"/><text x="1.2243%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (3 samples, 0.27%)</title><rect x="0.9743%" y="853" width="0.2657%" height="15" fill="rgb(232,128,0)" fg:x="11" fg:w="3"/><text x="1.2243%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.27%)</title><rect x="0.9743%" y="837" width="0.2657%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="3"/><text x="1.2243%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.27%)</title><rect x="0.9743%" y="821" width="0.2657%" height="15" fill="rgb(228,23,34)" fg:x="11" fg:w="3"/><text x="1.2243%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.27%)</title><rect x="1.2400%" y="869" width="0.2657%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="3"/><text x="1.4900%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="1.4172%" y="853" width="0.0886%" height="15" fill="rgb(220,122,19)" fg:x="16" fg:w="1"/><text x="1.6672%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="1.4172%" y="837" width="0.0886%" height="15" fill="rgb(250,228,42)" fg:x="16" fg:w="1"/><text x="1.6672%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.09%)</title><rect x="1.4172%" y="821" width="0.0886%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="1"/><text x="1.6672%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="1.4172%" y="805" width="0.0886%" height="15" fill="rgb(216,20,37)" fg:x="16" fg:w="1"/><text x="1.6672%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.09%)</title><rect x="1.4172%" y="789" width="0.0886%" height="15" fill="rgb(206,188,39)" fg:x="16" fg:w="1"/><text x="1.6672%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.09%)</title><rect x="1.4172%" y="773" width="0.0886%" height="15" fill="rgb(217,207,13)" fg:x="16" fg:w="1"/><text x="1.6672%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="1.5058%" y="869" width="0.0886%" height="15" fill="rgb(231,73,38)" fg:x="17" fg:w="1"/><text x="1.7558%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="1.5943%" y="869" width="0.0886%" height="15" fill="rgb(225,20,46)" fg:x="18" fg:w="1"/><text x="1.8443%" y="879.50"></text></g><g><title>[anon] (9 samples, 0.80%)</title><rect x="0.9743%" y="885" width="0.7972%" height="15" fill="rgb(210,31,41)" fg:x="11" fg:w="9"/><text x="1.2243%" y="895.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.09%)</title><rect x="1.6829%" y="869" width="0.0886%" height="15" fill="rgb(221,200,47)" fg:x="19" fg:w="1"/><text x="1.9329%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (5 samples, 0.44%)</title><rect x="1.7715%" y="869" width="0.4429%" height="15" fill="rgb(226,26,5)" fg:x="20" fg:w="5"/><text x="2.0215%" y="879.50"></text></g><g><title>[lab4] (7 samples, 0.62%)</title><rect x="1.7715%" y="885" width="0.6200%" height="15" fill="rgb(249,33,26)" fg:x="20" fg:w="7"/><text x="2.0215%" y="895.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (2 samples, 0.18%)</title><rect x="2.2143%" y="869" width="0.1771%" height="15" fill="rgb(235,183,28)" fg:x="25" fg:w="2"/><text x="2.4643%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.27%)</title><rect x="2.4801%" y="869" width="0.2657%" height="15" fill="rgb(221,5,38)" fg:x="28" fg:w="3"/><text x="2.7301%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2 samples, 0.18%)</title><rect x="2.5686%" y="853" width="0.1771%" height="15" fill="rgb(247,18,42)" fg:x="29" fg:w="2"/><text x="2.8186%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.18%)</title><rect x="2.5686%" y="837" width="0.1771%" height="15" fill="rgb(241,131,45)" fg:x="29" fg:w="2"/><text x="2.8186%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.18%)</title><rect x="2.5686%" y="821" width="0.1771%" height="15" fill="rgb(249,31,29)" fg:x="29" fg:w="2"/><text x="2.8186%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.35%)</title><rect x="2.7458%" y="869" width="0.3543%" height="15" fill="rgb(225,111,53)" fg:x="31" fg:w="4"/><text x="2.9958%" y="879.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.80%)</title><rect x="3.1001%" y="869" width="0.7972%" height="15" fill="rgb(238,160,17)" fg:x="35" fg:w="9"/><text x="3.3501%" y="879.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (2 samples, 0.18%)</title><rect x="3.8973%" y="869" width="0.1771%" height="15" fill="rgb(214,148,48)" fg:x="44" fg:w="2"/><text x="4.1473%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="4.0744%" y="869" width="0.2657%" height="15" fill="rgb(232,36,49)" fg:x="46" fg:w="3"/><text x="4.3244%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="4.0744%" y="853" width="0.2657%" height="15" fill="rgb(209,103,24)" fg:x="46" fg:w="3"/><text x="4.3244%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="4.0744%" y="837" width="0.2657%" height="15" fill="rgb(229,88,8)" fg:x="46" fg:w="3"/><text x="4.3244%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="4.0744%" y="821" width="0.2657%" height="15" fill="rgb(213,181,19)" fg:x="46" fg:w="3"/><text x="4.3244%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="4.0744%" y="805" width="0.2657%" height="15" fill="rgb(254,191,54)" fg:x="46" fg:w="3"/><text x="4.3244%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="4.1630%" y="789" width="0.1771%" height="15" fill="rgb(241,83,37)" fg:x="47" fg:w="2"/><text x="4.4130%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="4.1630%" y="773" width="0.1771%" height="15" fill="rgb(233,36,39)" fg:x="47" fg:w="2"/><text x="4.4130%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="4.1630%" y="757" width="0.1771%" height="15" fill="rgb(226,3,54)" fg:x="47" fg:w="2"/><text x="4.4130%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="4.1630%" y="741" width="0.1771%" height="15" fill="rgb(245,192,40)" fg:x="47" fg:w="2"/><text x="4.4130%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="4.2516%" y="725" width="0.0886%" height="15" fill="rgb(238,167,29)" fg:x="48" fg:w="1"/><text x="4.5016%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="4.2516%" y="709" width="0.0886%" height="15" fill="rgb(232,182,51)" fg:x="48" fg:w="1"/><text x="4.5016%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="4.2516%" y="693" width="0.0886%" height="15" fill="rgb(231,60,39)" fg:x="48" fg:w="1"/><text x="4.5016%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="4.2516%" y="677" width="0.0886%" height="15" fill="rgb(208,69,12)" fg:x="48" fg:w="1"/><text x="4.5016%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="4.3401%" y="869" width="0.0886%" height="15" fill="rgb(235,93,37)" fg:x="49" fg:w="1"/><text x="4.5901%" y="879.50"></text></g><g><title>_int_free (2 samples, 0.18%)</title><rect x="4.4287%" y="869" width="0.1771%" height="15" fill="rgb(213,116,39)" fg:x="50" fg:w="2"/><text x="4.6787%" y="879.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="4.6058%" y="869" width="0.0886%" height="15" fill="rgb(222,207,29)" fg:x="52" fg:w="1"/><text x="4.8558%" y="879.50"></text></g><g><title>_int_realloc (4 samples, 0.35%)</title><rect x="4.6944%" y="869" width="0.3543%" height="15" fill="rgb(206,96,30)" fg:x="53" fg:w="4"/><text x="4.9444%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.18%)</title><rect x="5.0487%" y="869" width="0.1771%" height="15" fill="rgb(218,138,4)" fg:x="57" fg:w="2"/><text x="5.2987%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.18%)</title><rect x="5.0487%" y="853" width="0.1771%" height="15" fill="rgb(250,191,14)" fg:x="57" fg:w="2"/><text x="5.2987%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.09%)</title><rect x="5.1373%" y="837" width="0.0886%" height="15" fill="rgb(239,60,40)" fg:x="58" fg:w="1"/><text x="5.3873%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.09%)</title><rect x="5.1373%" y="821" width="0.0886%" height="15" fill="rgb(206,27,48)" fg:x="58" fg:w="1"/><text x="5.3873%" y="831.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 0.09%)</title><rect x="5.2259%" y="869" width="0.0886%" height="15" fill="rgb(225,35,8)" fg:x="59" fg:w="1"/><text x="5.4759%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1 samples, 0.09%)</title><rect x="5.3144%" y="869" width="0.0886%" height="15" fill="rgb(250,213,24)" fg:x="60" fg:w="1"/><text x="5.5644%" y="879.50"></text></g><g><title>lab4::checksum::Checksum::update (3 samples, 0.27%)</title><rect x="5.4030%" y="869" width="0.2657%" height="15" fill="rgb(247,123,22)" fg:x="61" fg:w="3"/><text x="5.6530%" y="879.50"></text></g><g><title>hex::encode (1 samples, 0.09%)</title><rect x="5.5802%" y="853" width="0.0886%" height="15" fill="rgb(231,138,38)" fg:x="63" fg:w="1"/><text x="5.8302%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="5.5802%" y="837" width="0.0886%" height="15" fill="rgb(231,145,46)" fg:x="63" fg:w="1"/><text x="5.8302%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.09%)</title><rect x="5.5802%" y="821" width="0.0886%" height="15" fill="rgb(251,118,11)" fg:x="63" fg:w="1"/><text x="5.8302%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="5.5802%" y="805" width="0.0886%" height="15" fill="rgb(217,147,25)" fg:x="63" fg:w="1"/><text x="5.8302%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="5.5802%" y="789" width="0.0886%" height="15" fill="rgb(247,81,37)" fg:x="63" fg:w="1"/><text x="5.8302%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="5.5802%" y="773" width="0.0886%" height="15" fill="rgb(209,12,38)" fg:x="63" fg:w="1"/><text x="5.8302%" y="783.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.09%)</title><rect x="5.6687%" y="869" width="0.0886%" height="15" fill="rgb(227,1,9)" fg:x="64" fg:w="1"/><text x="5.9187%" y="879.50"></text></g><g><title>[unknown] (39 samples, 3.45%)</title><rect x="2.3915%" y="885" width="3.4544%" height="15" fill="rgb(248,47,43)" fg:x="27" fg:w="39"/><text x="2.6415%" y="895.50">[un..</text></g><g><title>sha2::sha256::soft::compress (1 samples, 0.09%)</title><rect x="5.7573%" y="869" width="0.0886%" height="15" fill="rgb(221,10,30)" fg:x="65" fg:w="1"/><text x="6.0073%" y="879.50"></text></g><g><title>[unknown] (40 samples, 3.54%)</title><rect x="5.8459%" y="869" width="3.5430%" height="15" fill="rgb(210,229,1)" fg:x="66" fg:w="40"/><text x="6.0959%" y="879.50">[unk..</text></g><g><title>[unknown] (39 samples, 3.45%)</title><rect x="5.9345%" y="853" width="3.4544%" height="15" fill="rgb(222,148,37)" fg:x="67" fg:w="39"/><text x="6.1845%" y="863.50">[un..</text></g><g><title>[unknown] (39 samples, 3.45%)</title><rect x="5.9345%" y="837" width="3.4544%" height="15" fill="rgb(234,67,33)" fg:x="67" fg:w="39"/><text x="6.1845%" y="847.50">[un..</text></g><g><title>[unknown] (39 samples, 3.45%)</title><rect x="5.9345%" y="821" width="3.4544%" height="15" fill="rgb(247,98,35)" fg:x="67" fg:w="39"/><text x="6.1845%" y="831.50">[un..</text></g><g><title>[unknown] (39 samples, 3.45%)</title><rect x="5.9345%" y="805" width="3.4544%" height="15" fill="rgb(247,138,52)" fg:x="67" fg:w="39"/><text x="6.1845%" y="815.50">[un..</text></g><g><title>[unknown] (38 samples, 3.37%)</title><rect x="6.0230%" y="789" width="3.3658%" height="15" fill="rgb(213,79,30)" fg:x="68" fg:w="38"/><text x="6.2730%" y="799.50">[un..</text></g><g><title>[unknown] (38 samples, 3.37%)</title><rect x="6.0230%" y="773" width="3.3658%" height="15" fill="rgb(246,177,23)" fg:x="68" fg:w="38"/><text x="6.2730%" y="783.50">[un..</text></g><g><title>[unknown] (38 samples, 3.37%)</title><rect x="6.0230%" y="757" width="3.3658%" height="15" fill="rgb(230,62,27)" fg:x="68" fg:w="38"/><text x="6.2730%" y="767.50">[un..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.18%)</title><rect x="9.3888%" y="581" width="0.1771%" height="15" fill="rgb(216,154,8)" fg:x="106" fg:w="2"/><text x="9.6388%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.18%)</title><rect x="9.3888%" y="565" width="0.1771%" height="15" fill="rgb(244,35,45)" fg:x="106" fg:w="2"/><text x="9.6388%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (2 samples, 0.18%)</title><rect x="9.3888%" y="549" width="0.1771%" height="15" fill="rgb(251,115,12)" fg:x="106" fg:w="2"/><text x="9.6388%" y="559.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (6 samples, 0.53%)</title><rect x="9.3888%" y="645" width="0.5314%" height="15" fill="rgb(240,54,50)" fg:x="106" fg:w="6"/><text x="9.6388%" y="655.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (6 samples, 0.53%)</title><rect x="9.3888%" y="629" width="0.5314%" height="15" fill="rgb(233,84,52)" fg:x="106" fg:w="6"/><text x="9.6388%" y="639.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (6 samples, 0.53%)</title><rect x="9.3888%" y="613" width="0.5314%" height="15" fill="rgb(207,117,47)" fg:x="106" fg:w="6"/><text x="9.6388%" y="623.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (6 samples, 0.53%)</title><rect x="9.3888%" y="597" width="0.5314%" height="15" fill="rgb(249,43,39)" fg:x="106" fg:w="6"/><text x="9.6388%" y="607.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (4 samples, 0.35%)</title><rect x="9.5660%" y="581" width="0.3543%" height="15" fill="rgb(209,38,44)" fg:x="108" fg:w="4"/><text x="9.8160%" y="591.50"></text></g><g><title>core::hint::spin_loop (4 samples, 0.35%)</title><rect x="9.5660%" y="565" width="0.3543%" height="15" fill="rgb(236,212,23)" fg:x="108" fg:w="4"/><text x="9.8160%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (4 samples, 0.35%)</title><rect x="9.5660%" y="549" width="0.3543%" height="15" fill="rgb(242,79,21)" fg:x="108" fg:w="4"/><text x="9.8160%" y="559.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (7 samples, 0.62%)</title><rect x="9.3888%" y="661" width="0.6200%" height="15" fill="rgb(211,96,35)" fg:x="106" fg:w="7"/><text x="9.6388%" y="671.50"></text></g><g><title>lab4::checksum::Checksum::update (1 samples, 0.09%)</title><rect x="9.9203%" y="645" width="0.0886%" height="15" fill="rgb(253,215,40)" fg:x="112" fg:w="1"/><text x="10.1703%" y="655.50"></text></g><g><title>hex::encode (1 samples, 0.09%)</title><rect x="9.9203%" y="629" width="0.0886%" height="15" fill="rgb(211,81,21)" fg:x="112" fg:w="1"/><text x="10.1703%" y="639.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (1 samples, 0.09%)</title><rect x="9.9203%" y="613" width="0.0886%" height="15" fill="rgb(208,190,38)" fg:x="112" fg:w="1"/><text x="10.1703%" y="623.50"></text></g><g><title>hex::encode_to_iter (1 samples, 0.09%)</title><rect x="9.9203%" y="597" width="0.0886%" height="15" fill="rgb(235,213,38)" fg:x="112" fg:w="1"/><text x="10.1703%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="9.9203%" y="581" width="0.0886%" height="15" fill="rgb(237,122,38)" fg:x="112" fg:w="1"/><text x="10.1703%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="9.9203%" y="565" width="0.0886%" height="15" fill="rgb(244,218,35)" fg:x="112" fg:w="1"/><text x="10.1703%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.09%)</title><rect x="9.9203%" y="549" width="0.0886%" height="15" fill="rgb(240,68,47)" fg:x="112" fg:w="1"/><text x="10.1703%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.09%)</title><rect x="9.9203%" y="533" width="0.0886%" height="15" fill="rgb(210,16,53)" fg:x="112" fg:w="1"/><text x="10.1703%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.09%)</title><rect x="9.9203%" y="517" width="0.0886%" height="15" fill="rgb(235,124,12)" fg:x="112" fg:w="1"/><text x="10.1703%" y="527.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="9.9203%" y="501" width="0.0886%" height="15" fill="rgb(224,169,11)" fg:x="112" fg:w="1"/><text x="10.1703%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.09%)</title><rect x="9.9203%" y="485" width="0.0886%" height="15" fill="rgb(250,166,2)" fg:x="112" fg:w="1"/><text x="10.1703%" y="495.50"></text></g><g><title>core::mem::replace (1 samples, 0.09%)</title><rect x="9.9203%" y="469" width="0.0886%" height="15" fill="rgb(242,216,29)" fg:x="112" fg:w="1"/><text x="10.1703%" y="479.50"></text></g><g><title>core::ptr::read (1 samples, 0.09%)</title><rect x="9.9203%" y="453" width="0.0886%" height="15" fill="rgb(230,116,27)" fg:x="112" fg:w="1"/><text x="10.1703%" y="463.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.44%)</title><rect x="10.0089%" y="469" width="0.4429%" height="15" fill="rgb(228,99,48)" fg:x="113" fg:w="5"/><text x="10.2589%" y="479.50"></text></g><g><title>_int_malloc (3 samples, 0.27%)</title><rect x="10.1860%" y="453" width="0.2657%" height="15" fill="rgb(253,11,6)" fg:x="115" fg:w="3"/><text x="10.4360%" y="463.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.09%)</title><rect x="10.3632%" y="437" width="0.0886%" height="15" fill="rgb(247,143,39)" fg:x="117" fg:w="1"/><text x="10.6132%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.53%)</title><rect x="10.0089%" y="565" width="0.5314%" height="15" fill="rgb(236,97,10)" fg:x="113" fg:w="6"/><text x="10.2589%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.53%)</title><rect x="10.0089%" y="549" width="0.5314%" height="15" fill="rgb(233,208,19)" fg:x="113" fg:w="6"/><text x="10.2589%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.53%)</title><rect x="10.0089%" y="533" width="0.5314%" height="15" fill="rgb(216,164,2)" fg:x="113" fg:w="6"/><text x="10.2589%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.53%)</title><rect x="10.0089%" y="517" width="0.5314%" height="15" fill="rgb(220,129,5)" fg:x="113" fg:w="6"/><text x="10.2589%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.53%)</title><rect x="10.0089%" y="501" width="0.5314%" height="15" fill="rgb(242,17,10)" fg:x="113" fg:w="6"/><text x="10.2589%" y="511.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.53%)</title><rect x="10.0089%" y="485" width="0.5314%" height="15" fill="rgb(242,107,0)" fg:x="113" fg:w="6"/><text x="10.2589%" y="495.50"></text></g><g><title>__rdl_alloc (1 samples, 0.09%)</title><rect x="10.4517%" y="469" width="0.0886%" height="15" fill="rgb(251,28,31)" fg:x="118" fg:w="1"/><text x="10.7017%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.62%)</title><rect x="10.0089%" y="645" width="0.6200%" height="15" fill="rgb(233,223,10)" fg:x="113" fg:w="7"/><text x="10.2589%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.62%)</title><rect x="10.0089%" y="629" width="0.6200%" height="15" fill="rgb(215,21,27)" fg:x="113" fg:w="7"/><text x="10.2589%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.62%)</title><rect x="10.0089%" y="613" width="0.6200%" height="15" fill="rgb(232,23,21)" fg:x="113" fg:w="7"/><text x="10.2589%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.62%)</title><rect x="10.0089%" y="597" width="0.6200%" height="15" fill="rgb(244,5,23)" fg:x="113" fg:w="7"/><text x="10.2589%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.62%)</title><rect x="10.0089%" y="581" width="0.6200%" height="15" fill="rgb(226,81,46)" fg:x="113" fg:w="7"/><text x="10.2589%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.09%)</title><rect x="10.5403%" y="565" width="0.0886%" height="15" fill="rgb(247,70,30)" fg:x="119" fg:w="1"/><text x="10.7903%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="10.5403%" y="549" width="0.0886%" height="15" fill="rgb(212,68,19)" fg:x="119" fg:w="1"/><text x="10.7903%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.09%)</title><rect x="10.5403%" y="533" width="0.0886%" height="15" fill="rgb(240,187,13)" fg:x="119" fg:w="1"/><text x="10.7903%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.09%)</title><rect x="10.6289%" y="645" width="0.0886%" height="15" fill="rgb(223,113,26)" fg:x="120" fg:w="1"/><text x="10.8789%" y="655.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.09%)</title><rect x="10.6289%" y="629" width="0.0886%" height="15" fill="rgb(206,192,2)" fg:x="120" fg:w="1"/><text x="10.8789%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.09%)</title><rect x="10.6289%" y="613" width="0.0886%" height="15" fill="rgb(241,108,4)" fg:x="120" fg:w="1"/><text x="10.8789%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.09%)</title><rect x="10.7174%" y="645" width="0.0886%" height="15" fill="rgb(247,173,49)" fg:x="121" fg:w="1"/><text x="10.9674%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="10.7174%" y="629" width="0.0886%" height="15" fill="rgb(224,114,35)" fg:x="121" fg:w="1"/><text x="10.9674%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="10.7174%" y="613" width="0.0886%" height="15" fill="rgb(245,159,27)" fg:x="121" fg:w="1"/><text x="10.9674%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.09%)</title><rect x="10.7174%" y="597" width="0.0886%" height="15" fill="rgb(245,172,44)" fg:x="121" fg:w="1"/><text x="10.9674%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.09%)</title><rect x="10.7174%" y="581" width="0.0886%" height="15" fill="rgb(236,23,11)" fg:x="121" fg:w="1"/><text x="10.9674%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.09%)</title><rect x="10.7174%" y="565" width="0.0886%" height="15" fill="rgb(205,117,38)" fg:x="121" fg:w="1"/><text x="10.9674%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="10.7174%" y="549" width="0.0886%" height="15" fill="rgb(237,72,25)" fg:x="121" fg:w="1"/><text x="10.9674%" y="559.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="10.7174%" y="533" width="0.0886%" height="15" fill="rgb(244,70,9)" fg:x="121" fg:w="1"/><text x="10.9674%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="10.7174%" y="517" width="0.0886%" height="15" fill="rgb(217,125,39)" fg:x="121" fg:w="1"/><text x="10.9674%" y="527.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="10.7174%" y="501" width="0.0886%" height="15" fill="rgb(235,36,10)" fg:x="121" fg:w="1"/><text x="10.9674%" y="511.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1 samples, 0.09%)</title><rect x="10.7174%" y="485" width="0.0886%" height="15" fill="rgb(251,123,47)" fg:x="121" fg:w="1"/><text x="10.9674%" y="495.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.09%)</title><rect x="10.7174%" y="469" width="0.0886%" height="15" fill="rgb(221,13,13)" fg:x="121" fg:w="1"/><text x="10.9674%" y="479.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.09%)</title><rect x="10.7174%" y="453" width="0.0886%" height="15" fill="rgb(238,131,9)" fg:x="121" fg:w="1"/><text x="10.9674%" y="463.50"></text></g><g><title>core::slice::memchr::memchr_aligned (1 samples, 0.09%)</title><rect x="10.7174%" y="437" width="0.0886%" height="15" fill="rgb(211,50,8)" fg:x="121" fg:w="1"/><text x="10.9674%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (1 samples, 0.09%)</title><rect x="10.8060%" y="597" width="0.0886%" height="15" fill="rgb(245,182,24)" fg:x="122" fg:w="1"/><text x="11.0560%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.09%)</title><rect x="10.8060%" y="581" width="0.0886%" height="15" fill="rgb(242,14,37)" fg:x="122" fg:w="1"/><text x="11.0560%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (4 samples, 0.35%)</title><rect x="10.8060%" y="645" width="0.3543%" height="15" fill="rgb(246,228,12)" fg:x="122" fg:w="4"/><text x="11.0560%" y="655.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.35%)</title><rect x="10.8060%" y="629" width="0.3543%" height="15" fill="rgb(213,55,15)" fg:x="122" fg:w="4"/><text x="11.0560%" y="639.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (4 samples, 0.35%)</title><rect x="10.8060%" y="613" width="0.3543%" height="15" fill="rgb(209,9,3)" fg:x="122" fg:w="4"/><text x="11.0560%" y="623.50"></text></g><g><title>syscall (3 samples, 0.27%)</title><rect x="10.8946%" y="597" width="0.2657%" height="15" fill="rgb(230,59,30)" fg:x="123" fg:w="3"/><text x="11.1446%" y="607.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="10.8946%" y="581" width="0.2657%" height="15" fill="rgb(209,121,21)" fg:x="123" fg:w="3"/><text x="11.1446%" y="591.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="10.8946%" y="565" width="0.2657%" height="15" fill="rgb(220,109,13)" fg:x="123" fg:w="3"/><text x="11.1446%" y="575.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="10.8946%" y="549" width="0.2657%" height="15" fill="rgb(232,18,1)" fg:x="123" fg:w="3"/><text x="11.1446%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="10.8946%" y="533" width="0.2657%" height="15" fill="rgb(215,41,42)" fg:x="123" fg:w="3"/><text x="11.1446%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.27%)</title><rect x="10.8946%" y="517" width="0.2657%" height="15" fill="rgb(224,123,36)" fg:x="123" fg:w="3"/><text x="11.1446%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="10.9832%" y="501" width="0.1771%" height="15" fill="rgb(240,125,3)" fg:x="124" fg:w="2"/><text x="11.2332%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="10.9832%" y="485" width="0.1771%" height="15" fill="rgb(205,98,50)" fg:x="124" fg:w="2"/><text x="11.2332%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="10.9832%" y="469" width="0.1771%" height="15" fill="rgb(205,185,37)" fg:x="124" fg:w="2"/><text x="11.2332%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="10.9832%" y="453" width="0.1771%" height="15" fill="rgb(238,207,15)" fg:x="124" fg:w="2"/><text x="11.2332%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.0717%" y="437" width="0.0886%" height="15" fill="rgb(213,199,42)" fg:x="125" fg:w="1"/><text x="11.3217%" y="447.50"></text></g><g><title>malloc_consolidate (3 samples, 0.27%)</title><rect x="11.1603%" y="485" width="0.2657%" height="15" fill="rgb(235,201,11)" fg:x="126" fg:w="3"/><text x="11.4103%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.4260%" y="469" width="0.0886%" height="15" fill="rgb(207,46,11)" fg:x="129" fg:w="1"/><text x="11.6760%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.4260%" y="453" width="0.0886%" height="15" fill="rgb(241,35,35)" fg:x="129" fg:w="1"/><text x="11.6760%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.4260%" y="437" width="0.0886%" height="15" fill="rgb(243,32,47)" fg:x="129" fg:w="1"/><text x="11.6760%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.4260%" y="421" width="0.0886%" height="15" fill="rgb(247,202,23)" fg:x="129" fg:w="1"/><text x="11.6760%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.53%)</title><rect x="11.1603%" y="597" width="0.5314%" height="15" fill="rgb(219,102,11)" fg:x="126" fg:w="6"/><text x="11.4103%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.53%)</title><rect x="11.1603%" y="581" width="0.5314%" height="15" fill="rgb(243,110,44)" fg:x="126" fg:w="6"/><text x="11.4103%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.53%)</title><rect x="11.1603%" y="565" width="0.5314%" height="15" fill="rgb(222,74,54)" fg:x="126" fg:w="6"/><text x="11.4103%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.53%)</title><rect x="11.1603%" y="549" width="0.5314%" height="15" fill="rgb(216,99,12)" fg:x="126" fg:w="6"/><text x="11.4103%" y="559.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.53%)</title><rect x="11.1603%" y="533" width="0.5314%" height="15" fill="rgb(226,22,26)" fg:x="126" fg:w="6"/><text x="11.4103%" y="543.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.53%)</title><rect x="11.1603%" y="517" width="0.5314%" height="15" fill="rgb(217,163,10)" fg:x="126" fg:w="6"/><text x="11.4103%" y="527.50"></text></g><g><title>_int_malloc (6 samples, 0.53%)</title><rect x="11.1603%" y="501" width="0.5314%" height="15" fill="rgb(213,25,53)" fg:x="126" fg:w="6"/><text x="11.4103%" y="511.50"></text></g><g><title>sysmalloc (3 samples, 0.27%)</title><rect x="11.4260%" y="485" width="0.2657%" height="15" fill="rgb(252,105,26)" fg:x="129" fg:w="3"/><text x="11.6760%" y="495.50"></text></g><g><title>__GI___mprotect (2 samples, 0.18%)</title><rect x="11.5146%" y="469" width="0.1771%" height="15" fill="rgb(220,39,43)" fg:x="130" fg:w="2"/><text x="11.7646%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="11.5146%" y="453" width="0.1771%" height="15" fill="rgb(229,68,48)" fg:x="130" fg:w="2"/><text x="11.7646%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="11.5146%" y="437" width="0.1771%" height="15" fill="rgb(252,8,32)" fg:x="130" fg:w="2"/><text x="11.7646%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="11.5146%" y="421" width="0.1771%" height="15" fill="rgb(223,20,43)" fg:x="130" fg:w="2"/><text x="11.7646%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="11.5146%" y="405" width="0.1771%" height="15" fill="rgb(229,81,49)" fg:x="130" fg:w="2"/><text x="11.7646%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="11.5146%" y="389" width="0.1771%" height="15" fill="rgb(236,28,36)" fg:x="130" fg:w="2"/><text x="11.7646%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="11.5146%" y="373" width="0.1771%" height="15" fill="rgb(249,185,26)" fg:x="130" fg:w="2"/><text x="11.7646%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.6032%" y="357" width="0.0886%" height="15" fill="rgb(249,174,33)" fg:x="131" fg:w="1"/><text x="11.8532%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="11.6032%" y="341" width="0.0886%" height="15" fill="rgb(233,201,37)" fg:x="131" fg:w="1"/><text x="11.8532%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="11.6918%" y="597" width="0.0886%" height="15" fill="rgb(221,78,26)" fg:x="132" fg:w="1"/><text x="11.9418%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (1 samples, 0.09%)</title><rect x="11.6918%" y="581" width="0.0886%" height="15" fill="rgb(250,127,30)" fg:x="132" fg:w="1"/><text x="11.9418%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.09%)</title><rect x="11.6918%" y="565" width="0.0886%" height="15" fill="rgb(230,49,44)" fg:x="132" fg:w="1"/><text x="11.9418%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.09%)</title><rect x="11.6918%" y="549" width="0.0886%" height="15" fill="rgb(229,67,23)" fg:x="132" fg:w="1"/><text x="11.9418%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.09%)</title><rect x="11.6918%" y="533" width="0.0886%" height="15" fill="rgb(249,83,47)" fg:x="132" fg:w="1"/><text x="11.9418%" y="543.50"></text></g><g><title>__rust_dealloc (1 samples, 0.09%)</title><rect x="11.6918%" y="517" width="0.0886%" height="15" fill="rgb(215,43,3)" fg:x="132" fg:w="1"/><text x="11.9418%" y="527.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (44 samples, 3.90%)</title><rect x="11.7803%" y="597" width="3.8973%" height="15" fill="rgb(238,154,13)" fg:x="133" fg:w="44"/><text x="12.0303%" y="607.50">cros..</text></g><g><title>__GI___sched_yield (44 samples, 3.90%)</title><rect x="11.7803%" y="581" width="3.8973%" height="15" fill="rgb(219,56,2)" fg:x="133" fg:w="44"/><text x="12.0303%" y="591.50">__GI..</text></g><g><title>[unknown] (44 samples, 3.90%)</title><rect x="11.7803%" y="565" width="3.8973%" height="15" fill="rgb(233,0,4)" fg:x="133" fg:w="44"/><text x="12.0303%" y="575.50">[unk..</text></g><g><title>[unknown] (39 samples, 3.45%)</title><rect x="12.2232%" y="549" width="3.4544%" height="15" fill="rgb(235,30,7)" fg:x="138" fg:w="39"/><text x="12.4732%" y="559.50">[un..</text></g><g><title>[unknown] (39 samples, 3.45%)</title><rect x="12.2232%" y="533" width="3.4544%" height="15" fill="rgb(250,79,13)" fg:x="138" fg:w="39"/><text x="12.4732%" y="543.50">[un..</text></g><g><title>[unknown] (38 samples, 3.37%)</title><rect x="12.3118%" y="517" width="3.3658%" height="15" fill="rgb(211,146,34)" fg:x="139" fg:w="38"/><text x="12.5618%" y="527.50">[un..</text></g><g><title>[unknown] (35 samples, 3.10%)</title><rect x="12.5775%" y="501" width="3.1001%" height="15" fill="rgb(228,22,38)" fg:x="142" fg:w="35"/><text x="12.8275%" y="511.50">[un..</text></g><g><title>[unknown] (35 samples, 3.10%)</title><rect x="12.5775%" y="485" width="3.1001%" height="15" fill="rgb(235,168,5)" fg:x="142" fg:w="35"/><text x="12.8275%" y="495.50">[un..</text></g><g><title>[unknown] (35 samples, 3.10%)</title><rect x="12.5775%" y="469" width="3.1001%" height="15" fill="rgb(221,155,16)" fg:x="142" fg:w="35"/><text x="12.8275%" y="479.50">[un..</text></g><g><title>[unknown] (31 samples, 2.75%)</title><rect x="12.9318%" y="453" width="2.7458%" height="15" fill="rgb(215,215,53)" fg:x="146" fg:w="31"/><text x="13.1818%" y="463.50">[u..</text></g><g><title>[unknown] (28 samples, 2.48%)</title><rect x="13.1975%" y="437" width="2.4801%" height="15" fill="rgb(223,4,10)" fg:x="149" fg:w="28"/><text x="13.4475%" y="447.50">[u..</text></g><g><title>[unknown] (25 samples, 2.21%)</title><rect x="13.4632%" y="421" width="2.2143%" height="15" fill="rgb(234,103,6)" fg:x="152" fg:w="25"/><text x="13.7132%" y="431.50">[..</text></g><g><title>[unknown] (23 samples, 2.04%)</title><rect x="13.6404%" y="405" width="2.0372%" height="15" fill="rgb(227,97,0)" fg:x="154" fg:w="23"/><text x="13.8904%" y="415.50">[..</text></g><g><title>[unknown] (22 samples, 1.95%)</title><rect x="13.7290%" y="389" width="1.9486%" height="15" fill="rgb(234,150,53)" fg:x="155" fg:w="22"/><text x="13.9790%" y="399.50">[..</text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="15.5890%" y="373" width="0.0886%" height="15" fill="rgb(228,201,54)" fg:x="176" fg:w="1"/><text x="15.8390%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="15.5890%" y="357" width="0.0886%" height="15" fill="rgb(222,22,37)" fg:x="176" fg:w="1"/><text x="15.8390%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="15.5890%" y="341" width="0.0886%" height="15" fill="rgb(237,53,32)" fg:x="176" fg:w="1"/><text x="15.8390%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="15.5890%" y="325" width="0.0886%" height="15" fill="rgb(233,25,53)" fg:x="176" fg:w="1"/><text x="15.8390%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="15.5890%" y="309" width="0.0886%" height="15" fill="rgb(210,40,34)" fg:x="176" fg:w="1"/><text x="15.8390%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="15.5890%" y="293" width="0.0886%" height="15" fill="rgb(241,220,44)" fg:x="176" fg:w="1"/><text x="15.8390%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.35%)</title><rect x="15.6776%" y="581" width="0.3543%" height="15" fill="rgb(235,28,35)" fg:x="177" fg:w="4"/><text x="15.9276%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.35%)</title><rect x="15.6776%" y="565" width="0.3543%" height="15" fill="rgb(210,56,17)" fg:x="177" fg:w="4"/><text x="15.9276%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (3 samples, 0.27%)</title><rect x="15.7662%" y="549" width="0.2657%" height="15" fill="rgb(224,130,29)" fg:x="178" fg:w="3"/><text x="16.0162%" y="559.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (62 samples, 5.49%)</title><rect x="11.1603%" y="613" width="5.4916%" height="15" fill="rgb(235,212,8)" fg:x="126" fg:w="62"/><text x="11.4103%" y="623.50">crossbe..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (11 samples, 0.97%)</title><rect x="15.6776%" y="597" width="0.9743%" height="15" fill="rgb(223,33,50)" fg:x="177" fg:w="11"/><text x="15.9276%" y="607.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (7 samples, 0.62%)</title><rect x="16.0319%" y="581" width="0.6200%" height="15" fill="rgb(219,149,13)" fg:x="181" fg:w="7"/><text x="16.2819%" y="591.50"></text></g><g><title>core::hint::spin_loop (7 samples, 0.62%)</title><rect x="16.0319%" y="565" width="0.6200%" height="15" fill="rgb(250,156,29)" fg:x="181" fg:w="7"/><text x="16.2819%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (7 samples, 0.62%)</title><rect x="16.0319%" y="549" width="0.6200%" height="15" fill="rgb(216,193,19)" fg:x="181" fg:w="7"/><text x="16.2819%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.09%)</title><rect x="16.6519%" y="597" width="0.0886%" height="15" fill="rgb(216,135,14)" fg:x="188" fg:w="1"/><text x="16.9019%" y="607.50"></text></g><g><title>core::ptr::write (1 samples, 0.09%)</title><rect x="16.6519%" y="581" width="0.0886%" height="15" fill="rgb(241,47,5)" fg:x="188" fg:w="1"/><text x="16.9019%" y="591.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (78 samples, 6.91%)</title><rect x="11.1603%" y="645" width="6.9088%" height="15" fill="rgb(233,42,35)" fg:x="126" fg:w="78"/><text x="11.4103%" y="655.50">crossbeam..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (78 samples, 6.91%)</title><rect x="11.1603%" y="629" width="6.9088%" height="15" fill="rgb(231,13,6)" fg:x="126" fg:w="78"/><text x="11.4103%" y="639.50">crossbeam..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (16 samples, 1.42%)</title><rect x="16.6519%" y="613" width="1.4172%" height="15" fill="rgb(207,181,40)" fg:x="188" fg:w="16"/><text x="16.9019%" y="623.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (15 samples, 1.33%)</title><rect x="16.7405%" y="597" width="1.3286%" height="15" fill="rgb(254,173,49)" fg:x="189" fg:w="15"/><text x="16.9905%" y="607.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (15 samples, 1.33%)</title><rect x="16.7405%" y="581" width="1.3286%" height="15" fill="rgb(221,1,38)" fg:x="189" fg:w="15"/><text x="16.9905%" y="591.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (15 samples, 1.33%)</title><rect x="16.7405%" y="565" width="1.3286%" height="15" fill="rgb(206,124,46)" fg:x="189" fg:w="15"/><text x="16.9905%" y="575.50"></text></g><g><title>__GI___sched_yield (15 samples, 1.33%)</title><rect x="16.7405%" y="549" width="1.3286%" height="15" fill="rgb(249,21,11)" fg:x="189" fg:w="15"/><text x="16.9905%" y="559.50"></text></g><g><title>[unknown] (15 samples, 1.33%)</title><rect x="16.7405%" y="533" width="1.3286%" height="15" fill="rgb(222,201,40)" fg:x="189" fg:w="15"/><text x="16.9905%" y="543.50"></text></g><g><title>[unknown] (13 samples, 1.15%)</title><rect x="16.9176%" y="517" width="1.1515%" height="15" fill="rgb(235,61,29)" fg:x="191" fg:w="13"/><text x="17.1676%" y="527.50"></text></g><g><title>[unknown] (13 samples, 1.15%)</title><rect x="16.9176%" y="501" width="1.1515%" height="15" fill="rgb(219,207,3)" fg:x="191" fg:w="13"/><text x="17.1676%" y="511.50"></text></g><g><title>[unknown] (13 samples, 1.15%)</title><rect x="16.9176%" y="485" width="1.1515%" height="15" fill="rgb(222,56,46)" fg:x="191" fg:w="13"/><text x="17.1676%" y="495.50"></text></g><g><title>[unknown] (13 samples, 1.15%)</title><rect x="16.9176%" y="469" width="1.1515%" height="15" fill="rgb(239,76,54)" fg:x="191" fg:w="13"/><text x="17.1676%" y="479.50"></text></g><g><title>[unknown] (13 samples, 1.15%)</title><rect x="16.9176%" y="453" width="1.1515%" height="15" fill="rgb(231,124,27)" fg:x="191" fg:w="13"/><text x="17.1676%" y="463.50"></text></g><g><title>[unknown] (13 samples, 1.15%)</title><rect x="16.9176%" y="437" width="1.1515%" height="15" fill="rgb(249,195,6)" fg:x="191" fg:w="13"/><text x="17.1676%" y="447.50"></text></g><g><title>[unknown] (13 samples, 1.15%)</title><rect x="16.9176%" y="421" width="1.1515%" height="15" fill="rgb(237,174,47)" fg:x="191" fg:w="13"/><text x="17.1676%" y="431.50"></text></g><g><title>[unknown] (12 samples, 1.06%)</title><rect x="17.0062%" y="405" width="1.0629%" height="15" fill="rgb(206,201,31)" fg:x="192" fg:w="12"/><text x="17.2562%" y="415.50"></text></g><g><title>[unknown] (12 samples, 1.06%)</title><rect x="17.0062%" y="389" width="1.0629%" height="15" fill="rgb(231,57,52)" fg:x="192" fg:w="12"/><text x="17.2562%" y="399.50"></text></g><g><title>[unknown] (11 samples, 0.97%)</title><rect x="17.0948%" y="373" width="0.9743%" height="15" fill="rgb(248,177,22)" fg:x="193" fg:w="11"/><text x="17.3448%" y="383.50"></text></g><g><title>[unknown] (11 samples, 0.97%)</title><rect x="17.0948%" y="357" width="0.9743%" height="15" fill="rgb(215,211,37)" fg:x="193" fg:w="11"/><text x="17.3448%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.09%)</title><rect x="18.4234%" y="629" width="0.0886%" height="15" fill="rgb(241,128,51)" fg:x="208" fg:w="1"/><text x="18.6734%" y="639.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.09%)</title><rect x="18.4234%" y="613" width="0.0886%" height="15" fill="rgb(227,165,31)" fg:x="208" fg:w="1"/><text x="18.6734%" y="623.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.09%)</title><rect x="18.4234%" y="597" width="0.0886%" height="15" fill="rgb(228,167,24)" fg:x="208" fg:w="1"/><text x="18.6734%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="18.5120%" y="629" width="0.0886%" height="15" fill="rgb(228,143,12)" fg:x="209" fg:w="1"/><text x="18.7620%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.09%)</title><rect x="18.6005%" y="629" width="0.0886%" height="15" fill="rgb(249,149,8)" fg:x="210" fg:w="1"/><text x="18.8505%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.18%)</title><rect x="18.6891%" y="629" width="0.1771%" height="15" fill="rgb(243,35,44)" fg:x="211" fg:w="2"/><text x="18.9391%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.18%)</title><rect x="18.6891%" y="613" width="0.1771%" height="15" fill="rgb(246,89,9)" fg:x="211" fg:w="2"/><text x="18.9391%" y="623.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="18.6891%" y="597" width="0.1771%" height="15" fill="rgb(233,213,13)" fg:x="211" fg:w="2"/><text x="18.9391%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.18%)</title><rect x="18.6891%" y="581" width="0.1771%" height="15" fill="rgb(233,141,41)" fg:x="211" fg:w="2"/><text x="18.9391%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.18%)</title><rect x="18.6891%" y="565" width="0.1771%" height="15" fill="rgb(239,167,4)" fg:x="211" fg:w="2"/><text x="18.9391%" y="575.50"></text></g><g><title>_int_free (2 samples, 0.18%)</title><rect x="18.6891%" y="549" width="0.1771%" height="15" fill="rgb(209,217,16)" fg:x="211" fg:w="2"/><text x="18.9391%" y="559.50"></text></g><g><title>__GI___libc_free (2 samples, 0.18%)</title><rect x="18.8663%" y="517" width="0.1771%" height="15" fill="rgb(219,88,35)" fg:x="213" fg:w="2"/><text x="19.1163%" y="527.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.09%)</title><rect x="19.0434%" y="517" width="0.0886%" height="15" fill="rgb(220,193,23)" fg:x="215" fg:w="1"/><text x="19.2934%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.09%)</title><rect x="19.0434%" y="501" width="0.0886%" height="15" fill="rgb(230,90,52)" fg:x="215" fg:w="1"/><text x="19.2934%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (5 samples, 0.44%)</title><rect x="18.8663%" y="629" width="0.4429%" height="15" fill="rgb(252,106,19)" fg:x="213" fg:w="5"/><text x="19.1163%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.44%)</title><rect x="18.8663%" y="613" width="0.4429%" height="15" fill="rgb(206,74,20)" fg:x="213" fg:w="5"/><text x="19.1163%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.44%)</title><rect x="18.8663%" y="597" width="0.4429%" height="15" fill="rgb(230,138,44)" fg:x="213" fg:w="5"/><text x="19.1163%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.44%)</title><rect x="18.8663%" y="581" width="0.4429%" height="15" fill="rgb(235,182,43)" fg:x="213" fg:w="5"/><text x="19.1163%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.44%)</title><rect x="18.8663%" y="565" width="0.4429%" height="15" fill="rgb(242,16,51)" fg:x="213" fg:w="5"/><text x="19.1163%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.44%)</title><rect x="18.8663%" y="549" width="0.4429%" height="15" fill="rgb(248,9,4)" fg:x="213" fg:w="5"/><text x="19.1163%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.44%)</title><rect x="18.8663%" y="533" width="0.4429%" height="15" fill="rgb(210,31,22)" fg:x="213" fg:w="5"/><text x="19.1163%" y="543.50"></text></g><g><title>_int_free (2 samples, 0.18%)</title><rect x="19.1320%" y="517" width="0.1771%" height="15" fill="rgb(239,54,39)" fg:x="216" fg:w="2"/><text x="19.3820%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.09%)</title><rect x="19.3091%" y="629" width="0.0886%" height="15" fill="rgb(230,99,41)" fg:x="218" fg:w="1"/><text x="19.5591%" y="639.50"></text></g><g><title>&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (1 samples, 0.09%)</title><rect x="19.3977%" y="597" width="0.0886%" height="15" fill="rgb(253,106,12)" fg:x="219" fg:w="1"/><text x="19.6477%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (61 samples, 5.40%)</title><rect x="20.1949%" y="341" width="5.4030%" height="15" fill="rgb(213,46,41)" fg:x="228" fg:w="61"/><text x="20.4449%" y="351.50">&lt;core::..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (55 samples, 4.87%)</title><rect x="20.7263%" y="325" width="4.8716%" height="15" fill="rgb(215,133,35)" fg:x="234" fg:w="55"/><text x="20.9763%" y="335.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (55 samples, 4.87%)</title><rect x="20.7263%" y="309" width="4.8716%" height="15" fill="rgb(213,28,5)" fg:x="234" fg:w="55"/><text x="20.9763%" y="319.50">&lt;alloc..</text></g><g><title>hex::val (42 samples, 3.72%)</title><rect x="21.8778%" y="293" width="3.7201%" height="15" fill="rgb(215,77,49)" fg:x="247" fg:w="42"/><text x="22.1278%" y="303.50">hex:..</text></g><g><title>core::cmp::min (1 samples, 0.09%)</title><rect x="26.5722%" y="325" width="0.0886%" height="15" fill="rgb(248,100,22)" fg:x="300" fg:w="1"/><text x="26.8222%" y="335.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.09%)</title><rect x="26.5722%" y="309" width="0.0886%" height="15" fill="rgb(208,67,9)" fg:x="300" fg:w="1"/><text x="26.8222%" y="319.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.09%)</title><rect x="26.5722%" y="293" width="0.0886%" height="15" fill="rgb(219,133,21)" fg:x="300" fg:w="1"/><text x="26.8222%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 6.91%)</title><rect x="19.9291%" y="437" width="6.9088%" height="15" fill="rgb(246,46,29)" fg:x="225" fg:w="78"/><text x="20.1791%" y="447.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (78 samples, 6.91%)</title><rect x="19.9291%" y="421" width="6.9088%" height="15" fill="rgb(246,185,52)" fg:x="225" fg:w="78"/><text x="20.1791%" y="431.50">core::ite..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (78 samples, 6.91%)</title><rect x="19.9291%" y="405" width="6.9088%" height="15" fill="rgb(252,136,11)" fg:x="225" fg:w="78"/><text x="20.1791%" y="415.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (76 samples, 6.73%)</title><rect x="20.1063%" y="389" width="6.7316%" height="15" fill="rgb(219,138,53)" fg:x="227" fg:w="76"/><text x="20.3563%" y="399.50">&lt;core::it..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (75 samples, 6.64%)</title><rect x="20.1949%" y="373" width="6.6430%" height="15" fill="rgb(211,51,23)" fg:x="228" fg:w="75"/><text x="20.4449%" y="383.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (75 samples, 6.64%)</title><rect x="20.1949%" y="357" width="6.6430%" height="15" fill="rgb(247,221,28)" fg:x="228" fg:w="75"/><text x="20.4449%" y="367.50">core::ite..</text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.24%)</title><rect x="25.5979%" y="341" width="1.2400%" height="15" fill="rgb(251,222,45)" fg:x="289" fg:w="14"/><text x="25.8479%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (2 samples, 0.18%)</title><rect x="26.6608%" y="325" width="0.1771%" height="15" fill="rgb(217,162,53)" fg:x="301" fg:w="2"/><text x="26.9108%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.18%)</title><rect x="26.6608%" y="309" width="0.1771%" height="15" fill="rgb(229,93,14)" fg:x="301" fg:w="2"/><text x="26.9108%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (4 samples, 0.35%)</title><rect x="26.8379%" y="437" width="0.3543%" height="15" fill="rgb(209,67,49)" fg:x="303" fg:w="4"/><text x="27.0879%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.09%)</title><rect x="27.1036%" y="421" width="0.0886%" height="15" fill="rgb(213,87,29)" fg:x="306" fg:w="1"/><text x="27.3536%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.09%)</title><rect x="27.1922%" y="437" width="0.0886%" height="15" fill="rgb(205,151,52)" fg:x="307" fg:w="1"/><text x="27.4422%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.09%)</title><rect x="27.1922%" y="421" width="0.0886%" height="15" fill="rgb(253,215,39)" fg:x="307" fg:w="1"/><text x="27.4422%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.18%)</title><rect x="27.2808%" y="373" width="0.1771%" height="15" fill="rgb(221,220,41)" fg:x="308" fg:w="2"/><text x="27.5308%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="28.3437%" y="293" width="0.0886%" height="15" fill="rgb(218,133,21)" fg:x="320" fg:w="1"/><text x="28.5937%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="28.3437%" y="277" width="0.0886%" height="15" fill="rgb(221,193,43)" fg:x="320" fg:w="1"/><text x="28.5937%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="28.3437%" y="261" width="0.0886%" height="15" fill="rgb(240,128,52)" fg:x="320" fg:w="1"/><text x="28.5937%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="28.3437%" y="245" width="0.0886%" height="15" fill="rgb(253,114,12)" fg:x="320" fg:w="1"/><text x="28.5937%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="28.3437%" y="229" width="0.0886%" height="15" fill="rgb(215,223,47)" fg:x="320" fg:w="1"/><text x="28.5937%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="28.3437%" y="213" width="0.0886%" height="15" fill="rgb(248,225,23)" fg:x="320" fg:w="1"/><text x="28.5937%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="28.3437%" y="197" width="0.0886%" height="15" fill="rgb(250,108,0)" fg:x="320" fg:w="1"/><text x="28.5937%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="28.3437%" y="181" width="0.0886%" height="15" fill="rgb(228,208,7)" fg:x="320" fg:w="1"/><text x="28.5937%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="28.3437%" y="165" width="0.0886%" height="15" fill="rgb(244,45,10)" fg:x="320" fg:w="1"/><text x="28.5937%" y="175.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.18%)</title><rect x="28.6094%" y="277" width="0.1771%" height="15" fill="rgb(207,125,25)" fg:x="323" fg:w="2"/><text x="28.8594%" y="287.50"></text></g><g><title>_int_free (3 samples, 0.27%)</title><rect x="28.7865%" y="277" width="0.2657%" height="15" fill="rgb(210,195,18)" fg:x="325" fg:w="3"/><text x="29.0365%" y="287.50"></text></g><g><title>__GI___libc_realloc (17 samples, 1.51%)</title><rect x="27.6351%" y="309" width="1.5058%" height="15" fill="rgb(249,80,12)" fg:x="312" fg:w="17"/><text x="27.8851%" y="319.50"></text></g><g><title>_int_realloc (8 samples, 0.71%)</title><rect x="28.4322%" y="293" width="0.7086%" height="15" fill="rgb(221,65,9)" fg:x="321" fg:w="8"/><text x="28.6822%" y="303.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="29.0523%" y="277" width="0.0886%" height="15" fill="rgb(235,49,36)" fg:x="328" fg:w="1"/><text x="29.3023%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 1.77%)</title><rect x="27.4579%" y="373" width="1.7715%" height="15" fill="rgb(225,32,20)" fg:x="310" fg:w="20"/><text x="27.7079%" y="383.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 1.59%)</title><rect x="27.6351%" y="357" width="1.5943%" height="15" fill="rgb(215,141,46)" fg:x="312" fg:w="18"/><text x="27.8851%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 1.59%)</title><rect x="27.6351%" y="341" width="1.5943%" height="15" fill="rgb(250,160,47)" fg:x="312" fg:w="18"/><text x="27.8851%" y="351.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 1.59%)</title><rect x="27.6351%" y="325" width="1.5943%" height="15" fill="rgb(216,222,40)" fg:x="312" fg:w="18"/><text x="27.8851%" y="335.50"></text></g><g><title>__rdl_realloc (1 samples, 0.09%)</title><rect x="29.1408%" y="309" width="0.0886%" height="15" fill="rgb(234,217,39)" fg:x="329" fg:w="1"/><text x="29.3908%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.09%)</title><rect x="29.1408%" y="293" width="0.0886%" height="15" fill="rgb(207,178,40)" fg:x="329" fg:w="1"/><text x="29.3908%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (23 samples, 2.04%)</title><rect x="27.2808%" y="437" width="2.0372%" height="15" fill="rgb(221,136,13)" fg:x="308" fg:w="23"/><text x="27.5308%" y="447.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (23 samples, 2.04%)</title><rect x="27.2808%" y="421" width="2.0372%" height="15" fill="rgb(249,199,10)" fg:x="308" fg:w="23"/><text x="27.5308%" y="431.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (23 samples, 2.04%)</title><rect x="27.2808%" y="405" width="2.0372%" height="15" fill="rgb(249,222,13)" fg:x="308" fg:w="23"/><text x="27.5308%" y="415.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 2.04%)</title><rect x="27.2808%" y="389" width="2.0372%" height="15" fill="rgb(244,185,38)" fg:x="308" fg:w="23"/><text x="27.5308%" y="399.50">a..</text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.09%)</title><rect x="29.2294%" y="373" width="0.0886%" height="15" fill="rgb(236,202,9)" fg:x="330" fg:w="1"/><text x="29.4794%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.09%)</title><rect x="29.2294%" y="357" width="0.0886%" height="15" fill="rgb(250,229,37)" fg:x="330" fg:w="1"/><text x="29.4794%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.09%)</title><rect x="29.3180%" y="437" width="0.0886%" height="15" fill="rgb(206,174,23)" fg:x="331" fg:w="1"/><text x="29.5680%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (113 samples, 10.01%)</title><rect x="19.6634%" y="469" width="10.0089%" height="15" fill="rgb(211,33,43)" fg:x="222" fg:w="113"/><text x="19.9134%" y="479.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (113 samples, 10.01%)</title><rect x="19.6634%" y="453" width="10.0089%" height="15" fill="rgb(245,58,50)" fg:x="222" fg:w="113"/><text x="19.9134%" y="463.50">alloc::vec::Ve..</text></g><g><title>core::ptr::write (3 samples, 0.27%)</title><rect x="29.4066%" y="437" width="0.2657%" height="15" fill="rgb(244,68,36)" fg:x="332" fg:w="3"/><text x="29.6566%" y="447.50"></text></g><g><title>__GI___libc_malloc (9 samples, 0.80%)</title><rect x="29.6723%" y="357" width="0.7972%" height="15" fill="rgb(232,229,15)" fg:x="335" fg:w="9"/><text x="29.9223%" y="367.50"></text></g><g><title>_int_malloc (3 samples, 0.27%)</title><rect x="30.2037%" y="341" width="0.2657%" height="15" fill="rgb(254,30,23)" fg:x="341" fg:w="3"/><text x="30.4537%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.97%)</title><rect x="29.6723%" y="469" width="0.9743%" height="15" fill="rgb(235,160,14)" fg:x="335" fg:w="11"/><text x="29.9223%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.97%)</title><rect x="29.6723%" y="453" width="0.9743%" height="15" fill="rgb(212,155,44)" fg:x="335" fg:w="11"/><text x="29.9223%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.97%)</title><rect x="29.6723%" y="437" width="0.9743%" height="15" fill="rgb(226,2,50)" fg:x="335" fg:w="11"/><text x="29.9223%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.97%)</title><rect x="29.6723%" y="421" width="0.9743%" height="15" fill="rgb(234,177,6)" fg:x="335" fg:w="11"/><text x="29.9223%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.97%)</title><rect x="29.6723%" y="405" width="0.9743%" height="15" fill="rgb(217,24,9)" fg:x="335" fg:w="11"/><text x="29.9223%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.97%)</title><rect x="29.6723%" y="389" width="0.9743%" height="15" fill="rgb(220,13,46)" fg:x="335" fg:w="11"/><text x="29.9223%" y="399.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.97%)</title><rect x="29.6723%" y="373" width="0.9743%" height="15" fill="rgb(239,221,27)" fg:x="335" fg:w="11"/><text x="29.9223%" y="383.50"></text></g><g><title>__rust_alloc (2 samples, 0.18%)</title><rect x="30.4694%" y="357" width="0.1771%" height="15" fill="rgb(222,198,25)" fg:x="344" fg:w="2"/><text x="30.7194%" y="367.50"></text></g><g><title>hex::decode (128 samples, 11.34%)</title><rect x="19.3977%" y="629" width="11.3375%" height="15" fill="rgb(211,99,13)" fg:x="219" fg:w="128"/><text x="19.6477%" y="639.50">hex::decode</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (128 samples, 11.34%)</title><rect x="19.3977%" y="613" width="11.3375%" height="15" fill="rgb(232,111,31)" fg:x="219" fg:w="128"/><text x="19.6477%" y="623.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (127 samples, 11.25%)</title><rect x="19.4863%" y="597" width="11.2489%" height="15" fill="rgb(245,82,37)" fg:x="220" fg:w="127"/><text x="19.7363%" y="607.50">core::iter::trait..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (127 samples, 11.25%)</title><rect x="19.4863%" y="581" width="11.2489%" height="15" fill="rgb(227,149,46)" fg:x="220" fg:w="127"/><text x="19.7363%" y="591.50">&lt;core::result::Re..</text></g><g><title>core::iter::adapters::try_process (127 samples, 11.25%)</title><rect x="19.4863%" y="565" width="11.2489%" height="15" fill="rgb(218,36,50)" fg:x="220" fg:w="127"/><text x="19.7363%" y="575.50">core::iter::adapt..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (127 samples, 11.25%)</title><rect x="19.4863%" y="549" width="11.2489%" height="15" fill="rgb(226,80,48)" fg:x="220" fg:w="127"/><text x="19.7363%" y="559.50">&lt;core::result::Re..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (127 samples, 11.25%)</title><rect x="19.4863%" y="533" width="11.2489%" height="15" fill="rgb(238,224,15)" fg:x="220" fg:w="127"/><text x="19.7363%" y="543.50">core::iter::trait..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (127 samples, 11.25%)</title><rect x="19.4863%" y="517" width="11.2489%" height="15" fill="rgb(241,136,10)" fg:x="220" fg:w="127"/><text x="19.7363%" y="527.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (127 samples, 11.25%)</title><rect x="19.4863%" y="501" width="11.2489%" height="15" fill="rgb(208,32,45)" fg:x="220" fg:w="127"/><text x="19.7363%" y="511.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (127 samples, 11.25%)</title><rect x="19.4863%" y="485" width="11.2489%" height="15" fill="rgb(207,135,9)" fg:x="220" fg:w="127"/><text x="19.7363%" y="495.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::write (1 samples, 0.09%)</title><rect x="30.6466%" y="469" width="0.0886%" height="15" fill="rgb(206,86,44)" fg:x="346" fg:w="1"/><text x="30.8966%" y="479.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.18%)</title><rect x="30.9123%" y="437" width="0.1771%" height="15" fill="rgb(245,177,15)" fg:x="349" fg:w="2"/><text x="31.1623%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.09%)</title><rect x="31.0895%" y="437" width="0.0886%" height="15" fill="rgb(206,64,50)" fg:x="351" fg:w="1"/><text x="31.3395%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.09%)</title><rect x="31.0895%" y="421" width="0.0886%" height="15" fill="rgb(234,36,40)" fg:x="351" fg:w="1"/><text x="31.3395%" y="431.50"></text></g><g><title>alloc::string::String::reserve (4 samples, 0.35%)</title><rect x="30.9123%" y="533" width="0.3543%" height="15" fill="rgb(213,64,8)" fg:x="349" fg:w="4"/><text x="31.1623%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.35%)</title><rect x="30.9123%" y="517" width="0.3543%" height="15" fill="rgb(210,75,36)" fg:x="349" fg:w="4"/><text x="31.1623%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.35%)</title><rect x="30.9123%" y="501" width="0.3543%" height="15" fill="rgb(229,88,21)" fg:x="349" fg:w="4"/><text x="31.1623%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.35%)</title><rect x="30.9123%" y="485" width="0.3543%" height="15" fill="rgb(252,204,47)" fg:x="349" fg:w="4"/><text x="31.1623%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.35%)</title><rect x="30.9123%" y="469" width="0.3543%" height="15" fill="rgb(208,77,27)" fg:x="349" fg:w="4"/><text x="31.1623%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.35%)</title><rect x="30.9123%" y="453" width="0.3543%" height="15" fill="rgb(221,76,26)" fg:x="349" fg:w="4"/><text x="31.1623%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.09%)</title><rect x="31.1780%" y="437" width="0.0886%" height="15" fill="rgb(225,139,18)" fg:x="352" fg:w="1"/><text x="31.4280%" y="447.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.09%)</title><rect x="31.6209%" y="469" width="0.0886%" height="15" fill="rgb(230,137,11)" fg:x="357" fg:w="1"/><text x="31.8709%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.18%)</title><rect x="31.6209%" y="485" width="0.1771%" height="15" fill="rgb(212,28,1)" fg:x="357" fg:w="2"/><text x="31.8709%" y="495.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.09%)</title><rect x="31.7095%" y="469" width="0.0886%" height="15" fill="rgb(248,164,17)" fg:x="358" fg:w="1"/><text x="31.9595%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.53%)</title><rect x="31.7981%" y="485" width="0.5314%" height="15" fill="rgb(222,171,42)" fg:x="359" fg:w="6"/><text x="32.0481%" y="495.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (4 samples, 0.35%)</title><rect x="31.9752%" y="469" width="0.3543%" height="15" fill="rgb(243,84,45)" fg:x="361" fg:w="4"/><text x="32.2252%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="32.2409%" y="453" width="0.0886%" height="15" fill="rgb(252,49,23)" fg:x="364" fg:w="1"/><text x="32.4909%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="32.2409%" y="437" width="0.0886%" height="15" fill="rgb(215,19,7)" fg:x="364" fg:w="1"/><text x="32.4909%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="32.2409%" y="421" width="0.0886%" height="15" fill="rgb(238,81,41)" fg:x="364" fg:w="1"/><text x="32.4909%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="32.2409%" y="405" width="0.0886%" height="15" fill="rgb(210,199,37)" fg:x="364" fg:w="1"/><text x="32.4909%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="32.2409%" y="389" width="0.0886%" height="15" fill="rgb(244,192,49)" fg:x="364" fg:w="1"/><text x="32.4909%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="32.2409%" y="373" width="0.0886%" height="15" fill="rgb(226,211,11)" fg:x="364" fg:w="1"/><text x="32.4909%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="32.2409%" y="357" width="0.0886%" height="15" fill="rgb(236,162,54)" fg:x="364" fg:w="1"/><text x="32.4909%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="32.2409%" y="341" width="0.0886%" height="15" fill="rgb(220,229,9)" fg:x="364" fg:w="1"/><text x="32.4909%" y="351.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.97%)</title><rect x="31.4438%" y="501" width="0.9743%" height="15" fill="rgb(250,87,22)" fg:x="355" fg:w="11"/><text x="31.6938%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.09%)</title><rect x="32.3295%" y="485" width="0.0886%" height="15" fill="rgb(239,43,17)" fg:x="365" fg:w="1"/><text x="32.5795%" y="495.50"></text></g><g><title>core::mem::replace (1 samples, 0.09%)</title><rect x="32.3295%" y="469" width="0.0886%" height="15" fill="rgb(231,177,25)" fg:x="365" fg:w="1"/><text x="32.5795%" y="479.50"></text></g><g><title>core::ptr::read (1 samples, 0.09%)</title><rect x="32.3295%" y="453" width="0.0886%" height="15" fill="rgb(219,179,1)" fg:x="365" fg:w="1"/><text x="32.5795%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 1.77%)</title><rect x="32.4181%" y="453" width="1.7715%" height="15" fill="rgb(238,219,53)" fg:x="366" fg:w="20"/><text x="32.6681%" y="463.50">a..</text></g><g><title>core::ptr::write (10 samples, 0.89%)</title><rect x="33.3038%" y="437" width="0.8857%" height="15" fill="rgb(232,167,36)" fg:x="376" fg:w="10"/><text x="33.5538%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="34.1010%" y="421" width="0.0886%" height="15" fill="rgb(244,19,51)" fg:x="385" fg:w="1"/><text x="34.3510%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="34.1010%" y="405" width="0.0886%" height="15" fill="rgb(224,6,22)" fg:x="385" fg:w="1"/><text x="34.3510%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="34.1010%" y="389" width="0.0886%" height="15" fill="rgb(224,145,5)" fg:x="385" fg:w="1"/><text x="34.3510%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="34.1010%" y="373" width="0.0886%" height="15" fill="rgb(234,130,49)" fg:x="385" fg:w="1"/><text x="34.3510%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="34.1010%" y="357" width="0.0886%" height="15" fill="rgb(254,6,2)" fg:x="385" fg:w="1"/><text x="34.3510%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="34.1010%" y="341" width="0.0886%" height="15" fill="rgb(208,96,46)" fg:x="385" fg:w="1"/><text x="34.3510%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="34.1010%" y="325" width="0.0886%" height="15" fill="rgb(239,3,39)" fg:x="385" fg:w="1"/><text x="34.3510%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="34.1010%" y="309" width="0.0886%" height="15" fill="rgb(233,210,1)" fg:x="385" fg:w="1"/><text x="34.3510%" y="319.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (40 samples, 3.54%)</title><rect x="30.7352%" y="613" width="3.5430%" height="15" fill="rgb(244,137,37)" fg:x="347" fg:w="40"/><text x="30.9852%" y="623.50">&lt;T a..</text></g><g><title>hex::encode_to_iter (40 samples, 3.54%)</title><rect x="30.7352%" y="597" width="3.5430%" height="15" fill="rgb(240,136,2)" fg:x="347" fg:w="40"/><text x="30.9852%" y="607.50">hex:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (40 samples, 3.54%)</title><rect x="30.7352%" y="581" width="3.5430%" height="15" fill="rgb(239,18,37)" fg:x="347" fg:w="40"/><text x="30.9852%" y="591.50">core..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (40 samples, 3.54%)</title><rect x="30.7352%" y="565" width="3.5430%" height="15" fill="rgb(218,185,22)" fg:x="347" fg:w="40"/><text x="30.9852%" y="575.50">&lt;all..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (40 samples, 3.54%)</title><rect x="30.7352%" y="549" width="3.5430%" height="15" fill="rgb(225,218,4)" fg:x="347" fg:w="40"/><text x="30.9852%" y="559.50">&lt;all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (34 samples, 3.01%)</title><rect x="31.2666%" y="533" width="3.0115%" height="15" fill="rgb(230,182,32)" fg:x="353" fg:w="34"/><text x="31.5166%" y="543.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (34 samples, 3.01%)</title><rect x="31.2666%" y="517" width="3.0115%" height="15" fill="rgb(242,56,43)" fg:x="353" fg:w="34"/><text x="31.5166%" y="527.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (21 samples, 1.86%)</title><rect x="32.4181%" y="501" width="1.8601%" height="15" fill="rgb(233,99,24)" fg:x="366" fg:w="21"/><text x="32.6681%" y="511.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (21 samples, 1.86%)</title><rect x="32.4181%" y="485" width="1.8601%" height="15" fill="rgb(234,209,42)" fg:x="366" fg:w="21"/><text x="32.6681%" y="495.50">&lt;..</text></g><g><title>alloc::string::String::push (21 samples, 1.86%)</title><rect x="32.4181%" y="469" width="1.8601%" height="15" fill="rgb(227,7,12)" fg:x="366" fg:w="21"/><text x="32.6681%" y="479.50">a..</text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.09%)</title><rect x="34.1895%" y="453" width="0.0886%" height="15" fill="rgb(245,203,43)" fg:x="386" fg:w="1"/><text x="34.4395%" y="463.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.09%)</title><rect x="34.1895%" y="437" width="0.0886%" height="15" fill="rgb(238,205,33)" fg:x="386" fg:w="1"/><text x="34.4395%" y="447.50"></text></g><g><title>__GI___libc_free (1 samples, 0.09%)</title><rect x="34.2781%" y="533" width="0.0886%" height="15" fill="rgb(231,56,7)" fg:x="387" fg:w="1"/><text x="34.5281%" y="543.50"></text></g><g><title>__rust_dealloc (1 samples, 0.09%)</title><rect x="34.3667%" y="533" width="0.0886%" height="15" fill="rgb(244,186,29)" fg:x="388" fg:w="1"/><text x="34.6167%" y="543.50"></text></g><g><title>lab4::checksum::Checksum::update (187 samples, 16.56%)</title><rect x="18.0691%" y="645" width="16.5633%" height="15" fill="rgb(234,111,31)" fg:x="204" fg:w="187"/><text x="18.3191%" y="655.50">lab4::checksum::Checksum::..</text></g><g><title>hex::encode (44 samples, 3.90%)</title><rect x="30.7352%" y="629" width="3.8973%" height="15" fill="rgb(241,149,10)" fg:x="347" fg:w="44"/><text x="30.9852%" y="639.50">hex:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.35%)</title><rect x="34.2781%" y="613" width="0.3543%" height="15" fill="rgb(249,206,44)" fg:x="387" fg:w="4"/><text x="34.5281%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.35%)</title><rect x="34.2781%" y="597" width="0.3543%" height="15" fill="rgb(251,153,30)" fg:x="387" fg:w="4"/><text x="34.5281%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.35%)</title><rect x="34.2781%" y="581" width="0.3543%" height="15" fill="rgb(239,152,38)" fg:x="387" fg:w="4"/><text x="34.5281%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.35%)</title><rect x="34.2781%" y="565" width="0.3543%" height="15" fill="rgb(249,139,47)" fg:x="387" fg:w="4"/><text x="34.5281%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.35%)</title><rect x="34.2781%" y="549" width="0.3543%" height="15" fill="rgb(244,64,35)" fg:x="387" fg:w="4"/><text x="34.5281%" y="559.50"></text></g><g><title>_int_free (2 samples, 0.18%)</title><rect x="34.4553%" y="533" width="0.1771%" height="15" fill="rgb(216,46,15)" fg:x="389" fg:w="2"/><text x="34.7053%" y="543.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as core::default::Default&gt;::default (1 samples, 0.09%)</title><rect x="34.7210%" y="613" width="0.0886%" height="15" fill="rgb(250,74,19)" fg:x="392" fg:w="1"/><text x="34.9710%" y="623.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (1 samples, 0.09%)</title><rect x="34.8096%" y="565" width="0.0886%" height="15" fill="rgb(249,42,33)" fg:x="393" fg:w="1"/><text x="35.0596%" y="575.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (1 samples, 0.09%)</title><rect x="34.8096%" y="549" width="0.0886%" height="15" fill="rgb(242,149,17)" fg:x="393" fg:w="1"/><text x="35.0596%" y="559.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.09%)</title><rect x="34.8096%" y="533" width="0.0886%" height="15" fill="rgb(244,29,21)" fg:x="393" fg:w="1"/><text x="35.0596%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be_bytes (1 samples, 0.09%)</title><rect x="34.8981%" y="469" width="0.0886%" height="15" fill="rgb(220,130,37)" fg:x="394" fg:w="1"/><text x="35.1481%" y="479.50"></text></g><g><title>core::num::&lt;impl u32&gt;::from_be (1 samples, 0.09%)</title><rect x="34.8981%" y="453" width="0.0886%" height="15" fill="rgb(211,67,2)" fg:x="394" fg:w="1"/><text x="35.1481%" y="463.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.09%)</title><rect x="34.8981%" y="437" width="0.0886%" height="15" fill="rgb(235,68,52)" fg:x="394" fg:w="1"/><text x="35.1481%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (2 samples, 0.18%)</title><rect x="34.9867%" y="453" width="0.1771%" height="15" fill="rgb(246,142,3)" fg:x="395" fg:w="2"/><text x="35.2367%" y="463.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.09%)</title><rect x="35.1639%" y="437" width="0.0886%" height="15" fill="rgb(241,25,7)" fg:x="397" fg:w="1"/><text x="35.4139%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.09%)</title><rect x="35.1639%" y="421" width="0.0886%" height="15" fill="rgb(242,119,39)" fg:x="397" fg:w="1"/><text x="35.4139%" y="431.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.09%)</title><rect x="35.2524%" y="421" width="0.0886%" height="15" fill="rgb(241,98,45)" fg:x="398" fg:w="1"/><text x="35.5024%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.09%)</title><rect x="35.2524%" y="405" width="0.0886%" height="15" fill="rgb(254,28,30)" fg:x="398" fg:w="1"/><text x="35.5024%" y="415.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (4 samples, 0.35%)</title><rect x="35.2524%" y="437" width="0.3543%" height="15" fill="rgb(241,142,54)" fg:x="398" fg:w="4"/><text x="35.5024%" y="447.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (3 samples, 0.27%)</title><rect x="35.3410%" y="421" width="0.2657%" height="15" fill="rgb(222,85,15)" fg:x="399" fg:w="3"/><text x="35.5910%" y="431.50"></text></g><g><title>sha2::sha256::soft::xor (3 samples, 0.27%)</title><rect x="35.3410%" y="405" width="0.2657%" height="15" fill="rgb(210,85,47)" fg:x="399" fg:w="3"/><text x="35.5910%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (2 samples, 0.18%)</title><rect x="36.0496%" y="421" width="0.1771%" height="15" fill="rgb(224,206,25)" fg:x="407" fg:w="2"/><text x="36.2996%" y="431.50"></text></g><g><title>sha2::sha256::soft::schedule (16 samples, 1.42%)</title><rect x="35.1639%" y="453" width="1.4172%" height="15" fill="rgb(243,201,19)" fg:x="397" fg:w="16"/><text x="35.4139%" y="463.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (11 samples, 0.97%)</title><rect x="35.6067%" y="437" width="0.9743%" height="15" fill="rgb(236,59,4)" fg:x="402" fg:w="11"/><text x="35.8567%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (4 samples, 0.35%)</title><rect x="36.2267%" y="421" width="0.3543%" height="15" fill="rgb(254,179,45)" fg:x="409" fg:w="4"/><text x="36.4767%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (9 samples, 0.80%)</title><rect x="37.9097%" y="437" width="0.7972%" height="15" fill="rgb(226,14,10)" fg:x="428" fg:w="9"/><text x="38.1597%" y="447.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (52 samples, 4.61%)</title><rect x="34.6324%" y="629" width="4.6058%" height="15" fill="rgb(244,27,41)" fg:x="391" fg:w="52"/><text x="34.8824%" y="639.50">&lt;D as..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (50 samples, 4.43%)</title><rect x="34.8096%" y="613" width="4.4287%" height="15" fill="rgb(235,35,32)" fg:x="393" fg:w="50"/><text x="35.0596%" y="623.50">diges..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (50 samples, 4.43%)</title><rect x="34.8096%" y="597" width="4.4287%" height="15" fill="rgb(218,68,31)" fg:x="393" fg:w="50"/><text x="35.0596%" y="607.50">&lt;D as..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (50 samples, 4.43%)</title><rect x="34.8096%" y="581" width="4.4287%" height="15" fill="rgb(207,120,37)" fg:x="393" fg:w="50"/><text x="35.0596%" y="591.50">&lt;sha2..</text></g><g><title>sha2::sha256::Engine256::finish (49 samples, 4.34%)</title><rect x="34.8981%" y="565" width="4.3401%" height="15" fill="rgb(227,98,0)" fg:x="394" fg:w="49"/><text x="35.1481%" y="575.50">sha2:..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (49 samples, 4.34%)</title><rect x="34.8981%" y="549" width="4.3401%" height="15" fill="rgb(207,7,3)" fg:x="394" fg:w="49"/><text x="35.1481%" y="559.50">block..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (49 samples, 4.34%)</title><rect x="34.8981%" y="533" width="4.3401%" height="15" fill="rgb(206,98,19)" fg:x="394" fg:w="49"/><text x="35.1481%" y="543.50">sha2:..</text></g><g><title>sha2::sha256::compress256 (49 samples, 4.34%)</title><rect x="34.8981%" y="517" width="4.3401%" height="15" fill="rgb(217,5,26)" fg:x="394" fg:w="49"/><text x="35.1481%" y="527.50">sha2:..</text></g><g><title>sha2::sha256::x86::compress (49 samples, 4.34%)</title><rect x="34.8981%" y="501" width="4.3401%" height="15" fill="rgb(235,190,38)" fg:x="394" fg:w="49"/><text x="35.1481%" y="511.50">sha2:..</text></g><g><title>sha2::sha256::soft::compress (49 samples, 4.34%)</title><rect x="34.8981%" y="485" width="4.3401%" height="15" fill="rgb(247,86,24)" fg:x="394" fg:w="49"/><text x="35.1481%" y="495.50">sha2:..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (48 samples, 4.25%)</title><rect x="34.9867%" y="469" width="4.2516%" height="15" fill="rgb(205,101,16)" fg:x="395" fg:w="48"/><text x="35.2367%" y="479.50">sha2:..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (30 samples, 2.66%)</title><rect x="36.5810%" y="453" width="2.6572%" height="15" fill="rgb(246,168,33)" fg:x="413" fg:w="30"/><text x="36.8310%" y="463.50">sh..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (6 samples, 0.53%)</title><rect x="38.7068%" y="437" width="0.5314%" height="15" fill="rgb(231,114,1)" fg:x="437" fg:w="6"/><text x="38.9568%" y="447.50"></text></g><g><title>alloc::string::String::reserve (1 samples, 0.09%)</title><rect x="39.3268%" y="533" width="0.0886%" height="15" fill="rgb(207,184,53)" fg:x="444" fg:w="1"/><text x="39.5768%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="39.3268%" y="517" width="0.0886%" height="15" fill="rgb(224,95,51)" fg:x="444" fg:w="1"/><text x="39.5768%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.09%)</title><rect x="39.3268%" y="501" width="0.0886%" height="15" fill="rgb(212,188,45)" fg:x="444" fg:w="1"/><text x="39.5768%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.09%)</title><rect x="39.3268%" y="485" width="0.0886%" height="15" fill="rgb(223,154,38)" fg:x="444" fg:w="1"/><text x="39.5768%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.09%)</title><rect x="39.3268%" y="469" width="0.0886%" height="15" fill="rgb(251,22,52)" fg:x="444" fg:w="1"/><text x="39.5768%" y="479.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.09%)</title><rect x="39.3268%" y="453" width="0.0886%" height="15" fill="rgb(229,209,22)" fg:x="444" fg:w="1"/><text x="39.5768%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.09%)</title><rect x="39.3268%" y="437" width="0.0886%" height="15" fill="rgb(234,138,34)" fg:x="444" fg:w="1"/><text x="39.5768%" y="447.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="39.5926%" y="485" width="0.0886%" height="15" fill="rgb(212,95,11)" fg:x="447" fg:w="1"/><text x="39.8426%" y="495.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.09%)</title><rect x="39.5926%" y="469" width="0.0886%" height="15" fill="rgb(240,179,47)" fg:x="447" fg:w="1"/><text x="39.8426%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.62%)</title><rect x="39.6811%" y="485" width="0.6200%" height="15" fill="rgb(240,163,11)" fg:x="448" fg:w="7"/><text x="39.9311%" y="495.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (6 samples, 0.53%)</title><rect x="39.7697%" y="469" width="0.5314%" height="15" fill="rgb(236,37,12)" fg:x="449" fg:w="6"/><text x="40.0197%" y="479.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitAnd&lt;u8&gt;&gt;::bitand (1 samples, 0.09%)</title><rect x="40.2126%" y="453" width="0.0886%" height="15" fill="rgb(232,164,16)" fg:x="454" fg:w="1"/><text x="40.4626%" y="463.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.09%)</title><rect x="40.2126%" y="437" width="0.0886%" height="15" fill="rgb(244,205,15)" fg:x="454" fg:w="1"/><text x="40.4626%" y="447.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.97%)</title><rect x="39.5040%" y="501" width="0.9743%" height="15" fill="rgb(223,117,47)" fg:x="446" fg:w="11"/><text x="39.7540%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.18%)</title><rect x="40.3012%" y="485" width="0.1771%" height="15" fill="rgb(244,107,35)" fg:x="455" fg:w="2"/><text x="40.5512%" y="495.50"></text></g><g><title>core::mem::replace (2 samples, 0.18%)</title><rect x="40.3012%" y="469" width="0.1771%" height="15" fill="rgb(205,140,8)" fg:x="455" fg:w="2"/><text x="40.5512%" y="479.50"></text></g><g><title>core::ptr::read (2 samples, 0.18%)</title><rect x="40.3012%" y="453" width="0.1771%" height="15" fill="rgb(228,84,46)" fg:x="455" fg:w="2"/><text x="40.5512%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.09%)</title><rect x="41.0983%" y="437" width="0.0886%" height="15" fill="rgb(254,188,9)" fg:x="464" fg:w="1"/><text x="41.3483%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.09%)</title><rect x="41.0983%" y="421" width="0.0886%" height="15" fill="rgb(206,112,54)" fg:x="464" fg:w="1"/><text x="41.3483%" y="431.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (84 samples, 7.44%)</title><rect x="34.6324%" y="645" width="7.4402%" height="15" fill="rgb(216,84,49)" fg:x="391" fg:w="84"/><text x="34.8824%" y="655.50">lab4::chec..</text></g><g><title>hex::encode (32 samples, 2.83%)</title><rect x="39.2383%" y="629" width="2.8344%" height="15" fill="rgb(214,194,35)" fg:x="443" fg:w="32"/><text x="39.4883%" y="639.50">he..</text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (32 samples, 2.83%)</title><rect x="39.2383%" y="613" width="2.8344%" height="15" fill="rgb(249,28,3)" fg:x="443" fg:w="32"/><text x="39.4883%" y="623.50">&lt;T..</text></g><g><title>hex::encode_to_iter (32 samples, 2.83%)</title><rect x="39.2383%" y="597" width="2.8344%" height="15" fill="rgb(222,56,52)" fg:x="443" fg:w="32"/><text x="39.4883%" y="607.50">he..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (32 samples, 2.83%)</title><rect x="39.2383%" y="581" width="2.8344%" height="15" fill="rgb(245,217,50)" fg:x="443" fg:w="32"/><text x="39.4883%" y="591.50">co..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (32 samples, 2.83%)</title><rect x="39.2383%" y="565" width="2.8344%" height="15" fill="rgb(213,201,24)" fg:x="443" fg:w="32"/><text x="39.4883%" y="575.50">&lt;a..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (31 samples, 2.75%)</title><rect x="39.3268%" y="549" width="2.7458%" height="15" fill="rgb(248,116,28)" fg:x="444" fg:w="31"/><text x="39.5768%" y="559.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (30 samples, 2.66%)</title><rect x="39.4154%" y="533" width="2.6572%" height="15" fill="rgb(219,72,43)" fg:x="445" fg:w="30"/><text x="39.6654%" y="543.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (30 samples, 2.66%)</title><rect x="39.4154%" y="517" width="2.6572%" height="15" fill="rgb(209,138,14)" fg:x="445" fg:w="30"/><text x="39.6654%" y="527.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (18 samples, 1.59%)</title><rect x="40.4783%" y="501" width="1.5943%" height="15" fill="rgb(222,18,33)" fg:x="457" fg:w="18"/><text x="40.7283%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (18 samples, 1.59%)</title><rect x="40.4783%" y="485" width="1.5943%" height="15" fill="rgb(213,199,7)" fg:x="457" fg:w="18"/><text x="40.7283%" y="495.50"></text></g><g><title>alloc::string::String::push (18 samples, 1.59%)</title><rect x="40.4783%" y="469" width="1.5943%" height="15" fill="rgb(250,110,10)" fg:x="457" fg:w="18"/><text x="40.7283%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 1.59%)</title><rect x="40.4783%" y="453" width="1.5943%" height="15" fill="rgb(248,123,6)" fg:x="457" fg:w="18"/><text x="40.7283%" y="463.50"></text></g><g><title>core::ptr::write (10 samples, 0.89%)</title><rect x="41.1869%" y="437" width="0.8857%" height="15" fill="rgb(206,91,31)" fg:x="465" fg:w="10"/><text x="41.4369%" y="447.50"></text></g><g><title>std::fs::read_to_string (1 samples, 0.09%)</title><rect x="42.0726%" y="645" width="0.0886%" height="15" fill="rgb(211,154,13)" fg:x="475" fg:w="1"/><text x="42.3226%" y="655.50"></text></g><g><title>std::fs::read_to_string::inner (1 samples, 0.09%)</title><rect x="42.0726%" y="629" width="0.0886%" height="15" fill="rgb(225,148,7)" fg:x="475" fg:w="1"/><text x="42.3226%" y="639.50"></text></g><g><title>std::fs::File::open (1 samples, 0.09%)</title><rect x="42.0726%" y="613" width="0.0886%" height="15" fill="rgb(220,160,43)" fg:x="475" fg:w="1"/><text x="42.3226%" y="623.50"></text></g><g><title>std::fs::OpenOptions::open (1 samples, 0.09%)</title><rect x="42.0726%" y="597" width="0.0886%" height="15" fill="rgb(213,52,39)" fg:x="475" fg:w="1"/><text x="42.3226%" y="607.50"></text></g><g><title>std::fs::OpenOptions::_open (1 samples, 0.09%)</title><rect x="42.0726%" y="581" width="0.0886%" height="15" fill="rgb(243,137,7)" fg:x="475" fg:w="1"/><text x="42.3226%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::open (1 samples, 0.09%)</title><rect x="42.0726%" y="565" width="0.0886%" height="15" fill="rgb(230,79,13)" fg:x="475" fg:w="1"/><text x="42.3226%" y="575.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (1 samples, 0.09%)</title><rect x="42.0726%" y="549" width="0.0886%" height="15" fill="rgb(247,105,23)" fg:x="475" fg:w="1"/><text x="42.3226%" y="559.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (1 samples, 0.09%)</title><rect x="42.0726%" y="533" width="0.0886%" height="15" fill="rgb(223,179,41)" fg:x="475" fg:w="1"/><text x="42.3226%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (1 samples, 0.09%)</title><rect x="42.0726%" y="517" width="0.0886%" height="15" fill="rgb(218,9,34)" fg:x="475" fg:w="1"/><text x="42.3226%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::open_c (1 samples, 0.09%)</title><rect x="42.0726%" y="501" width="0.0886%" height="15" fill="rgb(222,106,8)" fg:x="475" fg:w="1"/><text x="42.3226%" y="511.50"></text></g><g><title>std::sys::unix::cvt_r (1 samples, 0.09%)</title><rect x="42.0726%" y="485" width="0.0886%" height="15" fill="rgb(211,220,0)" fg:x="475" fg:w="1"/><text x="42.3226%" y="495.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (1 samples, 0.09%)</title><rect x="42.0726%" y="469" width="0.0886%" height="15" fill="rgb(229,52,16)" fg:x="475" fg:w="1"/><text x="42.3226%" y="479.50"></text></g><g><title>__libc_open64 (1 samples, 0.09%)</title><rect x="42.0726%" y="453" width="0.0886%" height="15" fill="rgb(212,155,18)" fg:x="475" fg:w="1"/><text x="42.3226%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="437" width="0.0886%" height="15" fill="rgb(242,21,14)" fg:x="475" fg:w="1"/><text x="42.3226%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="421" width="0.0886%" height="15" fill="rgb(222,19,48)" fg:x="475" fg:w="1"/><text x="42.3226%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="405" width="0.0886%" height="15" fill="rgb(232,45,27)" fg:x="475" fg:w="1"/><text x="42.3226%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="389" width="0.0886%" height="15" fill="rgb(249,103,42)" fg:x="475" fg:w="1"/><text x="42.3226%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="373" width="0.0886%" height="15" fill="rgb(246,81,33)" fg:x="475" fg:w="1"/><text x="42.3226%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="357" width="0.0886%" height="15" fill="rgb(252,33,42)" fg:x="475" fg:w="1"/><text x="42.3226%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="341" width="0.0886%" height="15" fill="rgb(209,212,41)" fg:x="475" fg:w="1"/><text x="42.3226%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="325" width="0.0886%" height="15" fill="rgb(207,154,6)" fg:x="475" fg:w="1"/><text x="42.3226%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="309" width="0.0886%" height="15" fill="rgb(223,64,47)" fg:x="475" fg:w="1"/><text x="42.3226%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="293" width="0.0886%" height="15" fill="rgb(211,161,38)" fg:x="475" fg:w="1"/><text x="42.3226%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="277" width="0.0886%" height="15" fill="rgb(219,138,40)" fg:x="475" fg:w="1"/><text x="42.3226%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="261" width="0.0886%" height="15" fill="rgb(241,228,46)" fg:x="475" fg:w="1"/><text x="42.3226%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="245" width="0.0886%" height="15" fill="rgb(223,209,38)" fg:x="475" fg:w="1"/><text x="42.3226%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="229" width="0.0886%" height="15" fill="rgb(236,164,45)" fg:x="475" fg:w="1"/><text x="42.3226%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="213" width="0.0886%" height="15" fill="rgb(231,15,5)" fg:x="475" fg:w="1"/><text x="42.3226%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="197" width="0.0886%" height="15" fill="rgb(252,35,15)" fg:x="475" fg:w="1"/><text x="42.3226%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="181" width="0.0886%" height="15" fill="rgb(248,181,18)" fg:x="475" fg:w="1"/><text x="42.3226%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="165" width="0.0886%" height="15" fill="rgb(233,39,42)" fg:x="475" fg:w="1"/><text x="42.3226%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="149" width="0.0886%" height="15" fill="rgb(238,110,33)" fg:x="475" fg:w="1"/><text x="42.3226%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="133" width="0.0886%" height="15" fill="rgb(233,195,10)" fg:x="475" fg:w="1"/><text x="42.3226%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="117" width="0.0886%" height="15" fill="rgb(254,105,3)" fg:x="475" fg:w="1"/><text x="42.3226%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="101" width="0.0886%" height="15" fill="rgb(221,225,9)" fg:x="475" fg:w="1"/><text x="42.3226%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="85" width="0.0886%" height="15" fill="rgb(224,227,45)" fg:x="475" fg:w="1"/><text x="42.3226%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="69" width="0.0886%" height="15" fill="rgb(229,198,43)" fg:x="475" fg:w="1"/><text x="42.3226%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="53" width="0.0886%" height="15" fill="rgb(206,209,35)" fg:x="475" fg:w="1"/><text x="42.3226%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="42.0726%" y="37" width="0.0886%" height="15" fill="rgb(245,195,53)" fg:x="475" fg:w="1"/><text x="42.3226%" y="47.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (1 samples, 0.09%)</title><rect x="42.1612%" y="613" width="0.0886%" height="15" fill="rgb(240,92,26)" fg:x="476" fg:w="1"/><text x="42.4112%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.09%)</title><rect x="42.1612%" y="597" width="0.0886%" height="15" fill="rgb(207,40,23)" fg:x="476" fg:w="1"/><text x="42.4112%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (64 samples, 5.67%)</title><rect x="42.2498%" y="597" width="5.6687%" height="15" fill="rgb(223,111,35)" fg:x="477" fg:w="64"/><text x="42.4998%" y="607.50">std::sy..</text></g><g><title>syscall (64 samples, 5.67%)</title><rect x="42.2498%" y="581" width="5.6687%" height="15" fill="rgb(229,147,28)" fg:x="477" fg:w="64"/><text x="42.4998%" y="591.50">syscall</text></g><g><title>[unknown] (64 samples, 5.67%)</title><rect x="42.2498%" y="565" width="5.6687%" height="15" fill="rgb(211,29,28)" fg:x="477" fg:w="64"/><text x="42.4998%" y="575.50">[unknow..</text></g><g><title>[unknown] (64 samples, 5.67%)</title><rect x="42.2498%" y="549" width="5.6687%" height="15" fill="rgb(228,72,33)" fg:x="477" fg:w="64"/><text x="42.4998%" y="559.50">[unknow..</text></g><g><title>[unknown] (64 samples, 5.67%)</title><rect x="42.2498%" y="533" width="5.6687%" height="15" fill="rgb(205,214,31)" fg:x="477" fg:w="64"/><text x="42.4998%" y="543.50">[unknow..</text></g><g><title>[unknown] (63 samples, 5.58%)</title><rect x="42.3384%" y="517" width="5.5802%" height="15" fill="rgb(224,111,15)" fg:x="478" fg:w="63"/><text x="42.5884%" y="527.50">[unknow..</text></g><g><title>[unknown] (62 samples, 5.49%)</title><rect x="42.4269%" y="501" width="5.4916%" height="15" fill="rgb(253,21,26)" fg:x="479" fg:w="62"/><text x="42.6769%" y="511.50">[unknow..</text></g><g><title>[unknown] (62 samples, 5.49%)</title><rect x="42.4269%" y="485" width="5.4916%" height="15" fill="rgb(245,139,43)" fg:x="479" fg:w="62"/><text x="42.6769%" y="495.50">[unknow..</text></g><g><title>[unknown] (60 samples, 5.31%)</title><rect x="42.6041%" y="469" width="5.3144%" height="15" fill="rgb(252,170,7)" fg:x="481" fg:w="60"/><text x="42.8541%" y="479.50">[unknow..</text></g><g><title>[unknown] (58 samples, 5.14%)</title><rect x="42.7812%" y="453" width="5.1373%" height="15" fill="rgb(231,118,14)" fg:x="483" fg:w="58"/><text x="43.0312%" y="463.50">[unkno..</text></g><g><title>[unknown] (57 samples, 5.05%)</title><rect x="42.8698%" y="437" width="5.0487%" height="15" fill="rgb(238,83,0)" fg:x="484" fg:w="57"/><text x="43.1198%" y="447.50">[unkno..</text></g><g><title>[unknown] (52 samples, 4.61%)</title><rect x="43.3127%" y="421" width="4.6058%" height="15" fill="rgb(221,39,39)" fg:x="489" fg:w="52"/><text x="43.5627%" y="431.50">[unkn..</text></g><g><title>[unknown] (51 samples, 4.52%)</title><rect x="43.4012%" y="405" width="4.5173%" height="15" fill="rgb(222,119,46)" fg:x="490" fg:w="51"/><text x="43.6512%" y="415.50">[unkn..</text></g><g><title>[unknown] (51 samples, 4.52%)</title><rect x="43.4012%" y="389" width="4.5173%" height="15" fill="rgb(222,165,49)" fg:x="490" fg:w="51"/><text x="43.6512%" y="399.50">[unkn..</text></g><g><title>[unknown] (51 samples, 4.52%)</title><rect x="43.4012%" y="373" width="4.5173%" height="15" fill="rgb(219,113,52)" fg:x="490" fg:w="51"/><text x="43.6512%" y="383.50">[unkn..</text></g><g><title>[unknown] (51 samples, 4.52%)</title><rect x="43.4012%" y="357" width="4.5173%" height="15" fill="rgb(214,7,15)" fg:x="490" fg:w="51"/><text x="43.6512%" y="367.50">[unkn..</text></g><g><title>lab4::package::PackageDownloader::run (430 samples, 38.09%)</title><rect x="10.0089%" y="661" width="38.0868%" height="15" fill="rgb(235,32,4)" fg:x="113" fg:w="430"/><text x="10.2589%" y="671.50">lab4::package::PackageDownloader::run</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (67 samples, 5.93%)</title><rect x="42.1612%" y="645" width="5.9345%" height="15" fill="rgb(238,90,54)" fg:x="476" fg:w="67"/><text x="42.4112%" y="655.50">std::syn..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (67 samples, 5.93%)</title><rect x="42.1612%" y="629" width="5.9345%" height="15" fill="rgb(213,208,19)" fg:x="476" fg:w="67"/><text x="42.4112%" y="639.50">std::sys..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (66 samples, 5.85%)</title><rect x="42.2498%" y="613" width="5.8459%" height="15" fill="rgb(233,156,4)" fg:x="477" fg:w="66"/><text x="42.4998%" y="623.50">std::sy..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (2 samples, 0.18%)</title><rect x="47.9185%" y="597" width="0.1771%" height="15" fill="rgb(207,194,5)" fg:x="541" fg:w="2"/><text x="48.1685%" y="607.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.09%)</title><rect x="48.0071%" y="581" width="0.0886%" height="15" fill="rgb(206,111,30)" fg:x="542" fg:w="1"/><text x="48.2571%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.09%)</title><rect x="48.0071%" y="565" width="0.0886%" height="15" fill="rgb(243,70,54)" fg:x="542" fg:w="1"/><text x="48.2571%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (3 samples, 0.27%)</title><rect x="49.1585%" y="629" width="0.2657%" height="15" fill="rgb(242,28,8)" fg:x="555" fg:w="3"/><text x="49.4085%" y="639.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (2 samples, 0.18%)</title><rect x="50.1329%" y="613" width="0.1771%" height="15" fill="rgb(219,106,18)" fg:x="566" fg:w="2"/><text x="50.3829%" y="623.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (1 samples, 0.09%)</title><rect x="50.3100%" y="533" width="0.0886%" height="15" fill="rgb(244,222,10)" fg:x="568" fg:w="1"/><text x="50.5600%" y="543.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (1 samples, 0.09%)</title><rect x="50.3100%" y="517" width="0.0886%" height="15" fill="rgb(236,179,52)" fg:x="568" fg:w="1"/><text x="50.5600%" y="527.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.09%)</title><rect x="50.3100%" y="501" width="0.0886%" height="15" fill="rgb(213,23,39)" fg:x="568" fg:w="1"/><text x="50.5600%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="50.3100%" y="485" width="0.0886%" height="15" fill="rgb(238,48,10)" fg:x="568" fg:w="1"/><text x="50.5600%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="50.3100%" y="469" width="0.0886%" height="15" fill="rgb(251,196,23)" fg:x="568" fg:w="1"/><text x="50.5600%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="50.3100%" y="453" width="0.0886%" height="15" fill="rgb(250,152,24)" fg:x="568" fg:w="1"/><text x="50.5600%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="50.3100%" y="437" width="0.0886%" height="15" fill="rgb(209,150,17)" fg:x="568" fg:w="1"/><text x="50.5600%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="50.3100%" y="421" width="0.0886%" height="15" fill="rgb(234,202,34)" fg:x="568" fg:w="1"/><text x="50.5600%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="50.3100%" y="405" width="0.0886%" height="15" fill="rgb(253,148,53)" fg:x="568" fg:w="1"/><text x="50.5600%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="50.3100%" y="389" width="0.0886%" height="15" fill="rgb(218,129,16)" fg:x="568" fg:w="1"/><text x="50.5600%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="50.3100%" y="373" width="0.0886%" height="15" fill="rgb(216,85,19)" fg:x="568" fg:w="1"/><text x="50.5600%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="50.3100%" y="357" width="0.0886%" height="15" fill="rgb(235,228,7)" fg:x="568" fg:w="1"/><text x="50.5600%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="50.3100%" y="341" width="0.0886%" height="15" fill="rgb(245,175,0)" fg:x="568" fg:w="1"/><text x="50.5600%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="50.3100%" y="325" width="0.0886%" height="15" fill="rgb(208,168,36)" fg:x="568" fg:w="1"/><text x="50.5600%" y="335.50"></text></g><g><title>crossbeam_channel::context::Context::with (24 samples, 2.13%)</title><rect x="50.3100%" y="613" width="2.1258%" height="15" fill="rgb(246,171,24)" fg:x="568" fg:w="24"/><text x="50.5600%" y="623.50">c..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 2.13%)</title><rect x="50.3100%" y="597" width="2.1258%" height="15" fill="rgb(215,142,24)" fg:x="568" fg:w="24"/><text x="50.5600%" y="607.50">s..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (24 samples, 2.13%)</title><rect x="50.3100%" y="581" width="2.1258%" height="15" fill="rgb(250,187,7)" fg:x="568" fg:w="24"/><text x="50.5600%" y="591.50">c..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (24 samples, 2.13%)</title><rect x="50.3100%" y="565" width="2.1258%" height="15" fill="rgb(228,66,33)" fg:x="568" fg:w="24"/><text x="50.5600%" y="575.50">c..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (24 samples, 2.13%)</title><rect x="50.3100%" y="549" width="2.1258%" height="15" fill="rgb(234,215,21)" fg:x="568" fg:w="24"/><text x="50.5600%" y="559.50">c..</text></g><g><title>crossbeam_channel::waker::SyncWaker::register (23 samples, 2.04%)</title><rect x="50.3986%" y="533" width="2.0372%" height="15" fill="rgb(222,191,20)" fg:x="569" fg:w="23"/><text x="50.6486%" y="543.50">c..</text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (23 samples, 2.04%)</title><rect x="50.3986%" y="517" width="2.0372%" height="15" fill="rgb(245,79,54)" fg:x="569" fg:w="23"/><text x="50.6486%" y="527.50">c..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (22 samples, 1.95%)</title><rect x="50.4872%" y="501" width="1.9486%" height="15" fill="rgb(240,10,37)" fg:x="570" fg:w="22"/><text x="50.7372%" y="511.50">c..</text></g><g><title>__GI___sched_yield (22 samples, 1.95%)</title><rect x="50.4872%" y="485" width="1.9486%" height="15" fill="rgb(214,192,32)" fg:x="570" fg:w="22"/><text x="50.7372%" y="495.50">_..</text></g><g><title>[unknown] (22 samples, 1.95%)</title><rect x="50.4872%" y="469" width="1.9486%" height="15" fill="rgb(209,36,54)" fg:x="570" fg:w="22"/><text x="50.7372%" y="479.50">[..</text></g><g><title>[unknown] (16 samples, 1.42%)</title><rect x="51.0186%" y="453" width="1.4172%" height="15" fill="rgb(220,10,11)" fg:x="576" fg:w="16"/><text x="51.2686%" y="463.50"></text></g><g><title>[unknown] (16 samples, 1.42%)</title><rect x="51.0186%" y="437" width="1.4172%" height="15" fill="rgb(221,106,17)" fg:x="576" fg:w="16"/><text x="51.2686%" y="447.50"></text></g><g><title>[unknown] (16 samples, 1.42%)</title><rect x="51.0186%" y="421" width="1.4172%" height="15" fill="rgb(251,142,44)" fg:x="576" fg:w="16"/><text x="51.2686%" y="431.50"></text></g><g><title>[unknown] (15 samples, 1.33%)</title><rect x="51.1072%" y="405" width="1.3286%" height="15" fill="rgb(238,13,15)" fg:x="577" fg:w="15"/><text x="51.3572%" y="415.50"></text></g><g><title>[unknown] (15 samples, 1.33%)</title><rect x="51.1072%" y="389" width="1.3286%" height="15" fill="rgb(208,107,27)" fg:x="577" fg:w="15"/><text x="51.3572%" y="399.50"></text></g><g><title>[unknown] (12 samples, 1.06%)</title><rect x="51.3729%" y="373" width="1.0629%" height="15" fill="rgb(205,136,37)" fg:x="580" fg:w="12"/><text x="51.6229%" y="383.50"></text></g><g><title>[unknown] (11 samples, 0.97%)</title><rect x="51.4615%" y="357" width="0.9743%" height="15" fill="rgb(250,205,27)" fg:x="581" fg:w="11"/><text x="51.7115%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.89%)</title><rect x="51.5500%" y="341" width="0.8857%" height="15" fill="rgb(210,80,43)" fg:x="582" fg:w="10"/><text x="51.8000%" y="351.50"></text></g><g><title>[unknown] (7 samples, 0.62%)</title><rect x="51.8158%" y="325" width="0.6200%" height="15" fill="rgb(247,160,36)" fg:x="585" fg:w="7"/><text x="52.0658%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="51.9043%" y="309" width="0.5314%" height="15" fill="rgb(234,13,49)" fg:x="586" fg:w="6"/><text x="52.1543%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="51.9929%" y="293" width="0.4429%" height="15" fill="rgb(234,122,0)" fg:x="587" fg:w="5"/><text x="52.2429%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="52.7901%" y="597" width="0.0886%" height="15" fill="rgb(207,146,38)" fg:x="596" fg:w="1"/><text x="53.0401%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="52.7901%" y="581" width="0.0886%" height="15" fill="rgb(207,177,25)" fg:x="596" fg:w="1"/><text x="53.0401%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="52.7901%" y="565" width="0.0886%" height="15" fill="rgb(211,178,42)" fg:x="596" fg:w="1"/><text x="53.0401%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="52.7901%" y="549" width="0.0886%" height="15" fill="rgb(230,69,54)" fg:x="596" fg:w="1"/><text x="53.0401%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="52.7901%" y="533" width="0.0886%" height="15" fill="rgb(214,135,41)" fg:x="596" fg:w="1"/><text x="53.0401%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="52.7901%" y="517" width="0.0886%" height="15" fill="rgb(237,67,25)" fg:x="596" fg:w="1"/><text x="53.0401%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="52.7901%" y="501" width="0.0886%" height="15" fill="rgb(222,189,50)" fg:x="596" fg:w="1"/><text x="53.0401%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="52.7901%" y="485" width="0.0886%" height="15" fill="rgb(245,148,34)" fg:x="596" fg:w="1"/><text x="53.0401%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (4 samples, 0.35%)</title><rect x="52.8787%" y="597" width="0.3543%" height="15" fill="rgb(222,29,6)" fg:x="597" fg:w="4"/><text x="53.1287%" y="607.50"></text></g><g><title>core::ptr::read (4 samples, 0.35%)</title><rect x="52.8787%" y="581" width="0.3543%" height="15" fill="rgb(221,189,43)" fg:x="597" fg:w="4"/><text x="53.1287%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.18%)</title><rect x="53.2329%" y="597" width="0.1771%" height="15" fill="rgb(207,36,27)" fg:x="601" fg:w="2"/><text x="53.4829%" y="607.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.18%)</title><rect x="53.2329%" y="581" width="0.1771%" height="15" fill="rgb(217,90,24)" fg:x="601" fg:w="2"/><text x="53.4829%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.18%)</title><rect x="53.2329%" y="565" width="0.1771%" height="15" fill="rgb(224,66,35)" fg:x="601" fg:w="2"/><text x="53.4829%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (22 samples, 1.95%)</title><rect x="53.4101%" y="597" width="1.9486%" height="15" fill="rgb(221,13,50)" fg:x="603" fg:w="22"/><text x="53.6601%" y="607.50">c..</text></g><g><title>core::sync::atomic::atomic_or (22 samples, 1.95%)</title><rect x="53.4101%" y="581" width="1.9486%" height="15" fill="rgb(236,68,49)" fg:x="603" fg:w="22"/><text x="53.6601%" y="591.50">c..</text></g><g><title>__GI___libc_free (1 samples, 0.09%)</title><rect x="55.4473%" y="501" width="0.0886%" height="15" fill="rgb(229,146,28)" fg:x="626" fg:w="1"/><text x="55.6973%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="55.9787%" y="485" width="0.1771%" height="15" fill="rgb(225,31,38)" fg:x="632" fg:w="2"/><text x="56.2287%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.0673%" y="469" width="0.0886%" height="15" fill="rgb(250,208,3)" fg:x="633" fg:w="1"/><text x="56.3173%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.0673%" y="453" width="0.0886%" height="15" fill="rgb(246,54,23)" fg:x="633" fg:w="1"/><text x="56.3173%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.0673%" y="437" width="0.0886%" height="15" fill="rgb(243,76,11)" fg:x="633" fg:w="1"/><text x="56.3173%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.0673%" y="421" width="0.0886%" height="15" fill="rgb(245,21,50)" fg:x="633" fg:w="1"/><text x="56.3173%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.0673%" y="405" width="0.0886%" height="15" fill="rgb(228,9,43)" fg:x="633" fg:w="1"/><text x="56.3173%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.0673%" y="389" width="0.0886%" height="15" fill="rgb(208,100,47)" fg:x="633" fg:w="1"/><text x="56.3173%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.0673%" y="373" width="0.0886%" height="15" fill="rgb(232,26,8)" fg:x="633" fg:w="1"/><text x="56.3173%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.0673%" y="357" width="0.0886%" height="15" fill="rgb(216,166,38)" fg:x="633" fg:w="1"/><text x="56.3173%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.0673%" y="341" width="0.0886%" height="15" fill="rgb(251,202,51)" fg:x="633" fg:w="1"/><text x="56.3173%" y="351.50"></text></g><g><title>core::mem::drop (13 samples, 1.15%)</title><rect x="55.4473%" y="581" width="1.1515%" height="15" fill="rgb(254,216,34)" fg:x="626" fg:w="13"/><text x="55.6973%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (13 samples, 1.15%)</title><rect x="55.4473%" y="565" width="1.1515%" height="15" fill="rgb(251,32,27)" fg:x="626" fg:w="13"/><text x="55.6973%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 1.15%)</title><rect x="55.4473%" y="549" width="1.1515%" height="15" fill="rgb(208,127,28)" fg:x="626" fg:w="13"/><text x="55.6973%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 1.15%)</title><rect x="55.4473%" y="533" width="1.1515%" height="15" fill="rgb(224,137,22)" fg:x="626" fg:w="13"/><text x="55.6973%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 1.15%)</title><rect x="55.4473%" y="517" width="1.1515%" height="15" fill="rgb(254,70,32)" fg:x="626" fg:w="13"/><text x="55.6973%" y="527.50"></text></g><g><title>_int_free (12 samples, 1.06%)</title><rect x="55.5359%" y="501" width="1.0629%" height="15" fill="rgb(229,75,37)" fg:x="627" fg:w="12"/><text x="55.7859%" y="511.50"></text></g><g><title>__lll_lock_wait_private (5 samples, 0.44%)</title><rect x="56.1559%" y="485" width="0.4429%" height="15" fill="rgb(252,64,23)" fg:x="634" fg:w="5"/><text x="56.4059%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="469" width="0.4429%" height="15" fill="rgb(232,162,48)" fg:x="634" fg:w="5"/><text x="56.4059%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="453" width="0.4429%" height="15" fill="rgb(246,160,12)" fg:x="634" fg:w="5"/><text x="56.4059%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="437" width="0.4429%" height="15" fill="rgb(247,166,0)" fg:x="634" fg:w="5"/><text x="56.4059%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="421" width="0.4429%" height="15" fill="rgb(249,219,21)" fg:x="634" fg:w="5"/><text x="56.4059%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="405" width="0.4429%" height="15" fill="rgb(205,209,3)" fg:x="634" fg:w="5"/><text x="56.4059%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="389" width="0.4429%" height="15" fill="rgb(243,44,1)" fg:x="634" fg:w="5"/><text x="56.4059%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="373" width="0.4429%" height="15" fill="rgb(206,159,16)" fg:x="634" fg:w="5"/><text x="56.4059%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="357" width="0.4429%" height="15" fill="rgb(244,77,30)" fg:x="634" fg:w="5"/><text x="56.4059%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="341" width="0.4429%" height="15" fill="rgb(218,69,12)" fg:x="634" fg:w="5"/><text x="56.4059%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="325" width="0.4429%" height="15" fill="rgb(212,87,7)" fg:x="634" fg:w="5"/><text x="56.4059%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="309" width="0.4429%" height="15" fill="rgb(245,114,25)" fg:x="634" fg:w="5"/><text x="56.4059%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="293" width="0.4429%" height="15" fill="rgb(210,61,42)" fg:x="634" fg:w="5"/><text x="56.4059%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="277" width="0.4429%" height="15" fill="rgb(211,52,33)" fg:x="634" fg:w="5"/><text x="56.4059%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="56.1559%" y="261" width="0.4429%" height="15" fill="rgb(234,58,33)" fg:x="634" fg:w="5"/><text x="56.4059%" y="271.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (1 samples, 0.09%)</title><rect x="56.5988%" y="565" width="0.0886%" height="15" fill="rgb(220,115,36)" fg:x="639" fg:w="1"/><text x="56.8488%" y="575.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::destroy (16 samples, 1.42%)</title><rect x="55.3587%" y="597" width="1.4172%" height="15" fill="rgb(243,153,54)" fg:x="625" fg:w="16"/><text x="55.6087%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.18%)</title><rect x="56.5988%" y="581" width="0.1771%" height="15" fill="rgb(251,47,18)" fg:x="639" fg:w="2"/><text x="56.8488%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="56.6873%" y="565" width="0.0886%" height="15" fill="rgb(242,102,42)" fg:x="640" fg:w="1"/><text x="56.9373%" y="575.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (52 samples, 4.61%)</title><rect x="52.4358%" y="613" width="4.6058%" height="15" fill="rgb(234,31,38)" fg:x="592" fg:w="52"/><text x="52.6858%" y="623.50">cross..</text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (3 samples, 0.27%)</title><rect x="56.7759%" y="597" width="0.2657%" height="15" fill="rgb(221,117,51)" fg:x="641" fg:w="3"/><text x="57.0259%" y="607.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (2 samples, 0.18%)</title><rect x="56.8645%" y="581" width="0.1771%" height="15" fill="rgb(212,20,18)" fg:x="642" fg:w="2"/><text x="57.1145%" y="591.50"></text></g><g><title>__GI___sched_yield (2 samples, 0.18%)</title><rect x="56.8645%" y="565" width="0.1771%" height="15" fill="rgb(245,133,36)" fg:x="642" fg:w="2"/><text x="57.1145%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="56.8645%" y="549" width="0.1771%" height="15" fill="rgb(212,6,19)" fg:x="642" fg:w="2"/><text x="57.1145%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.9531%" y="533" width="0.0886%" height="15" fill="rgb(218,1,36)" fg:x="643" fg:w="1"/><text x="57.2031%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.9531%" y="517" width="0.0886%" height="15" fill="rgb(246,84,54)" fg:x="643" fg:w="1"/><text x="57.2031%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.9531%" y="501" width="0.0886%" height="15" fill="rgb(242,110,6)" fg:x="643" fg:w="1"/><text x="57.2031%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.9531%" y="485" width="0.0886%" height="15" fill="rgb(214,47,5)" fg:x="643" fg:w="1"/><text x="57.2031%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.9531%" y="469" width="0.0886%" height="15" fill="rgb(218,159,25)" fg:x="643" fg:w="1"/><text x="57.2031%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.9531%" y="453" width="0.0886%" height="15" fill="rgb(215,211,28)" fg:x="643" fg:w="1"/><text x="57.2031%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.9531%" y="437" width="0.0886%" height="15" fill="rgb(238,59,32)" fg:x="643" fg:w="1"/><text x="57.2031%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="56.9531%" y="421" width="0.0886%" height="15" fill="rgb(226,82,3)" fg:x="643" fg:w="1"/><text x="57.2031%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="57.9274%" y="597" width="0.1771%" height="15" fill="rgb(240,164,32)" fg:x="654" fg:w="2"/><text x="58.1774%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="57.9274%" y="581" width="0.1771%" height="15" fill="rgb(232,46,7)" fg:x="654" fg:w="2"/><text x="58.1774%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="57.9274%" y="565" width="0.1771%" height="15" fill="rgb(229,129,53)" fg:x="654" fg:w="2"/><text x="58.1774%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="57.9274%" y="549" width="0.1771%" height="15" fill="rgb(234,188,29)" fg:x="654" fg:w="2"/><text x="58.1774%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.0159%" y="533" width="0.0886%" height="15" fill="rgb(246,141,4)" fg:x="655" fg:w="1"/><text x="58.2659%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.0159%" y="517" width="0.0886%" height="15" fill="rgb(229,23,39)" fg:x="655" fg:w="1"/><text x="58.2659%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.0159%" y="501" width="0.0886%" height="15" fill="rgb(206,12,3)" fg:x="655" fg:w="1"/><text x="58.2659%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="58.0159%" y="485" width="0.0886%" height="15" fill="rgb(252,226,20)" fg:x="655" fg:w="1"/><text x="58.2659%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.09%)</title><rect x="58.1045%" y="597" width="0.0886%" height="15" fill="rgb(216,123,35)" fg:x="656" fg:w="1"/><text x="58.3545%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.09%)</title><rect x="58.1045%" y="581" width="0.0886%" height="15" fill="rgb(212,68,40)" fg:x="656" fg:w="1"/><text x="58.3545%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.97%)</title><rect x="58.1931%" y="597" width="0.9743%" height="15" fill="rgb(254,125,32)" fg:x="657" fg:w="11"/><text x="58.4431%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.97%)</title><rect x="58.1931%" y="581" width="0.9743%" height="15" fill="rgb(253,97,22)" fg:x="657" fg:w="11"/><text x="58.4431%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.44%)</title><rect x="59.1674%" y="597" width="0.4429%" height="15" fill="rgb(241,101,14)" fg:x="668" fg:w="5"/><text x="59.4174%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.44%)</title><rect x="59.1674%" y="581" width="0.4429%" height="15" fill="rgb(238,103,29)" fg:x="668" fg:w="5"/><text x="59.4174%" y="591.50"></text></g><g><title>core::sync::atomic::fence (7 samples, 0.62%)</title><rect x="59.6103%" y="597" width="0.6200%" height="15" fill="rgb(233,195,47)" fg:x="673" fg:w="7"/><text x="59.8603%" y="607.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (10 samples, 0.89%)</title><rect x="60.2303%" y="597" width="0.8857%" height="15" fill="rgb(246,218,30)" fg:x="680" fg:w="10"/><text x="60.4803%" y="607.50"></text></g><g><title>__GI___sched_yield (10 samples, 0.89%)</title><rect x="60.2303%" y="581" width="0.8857%" height="15" fill="rgb(219,145,47)" fg:x="680" fg:w="10"/><text x="60.4803%" y="591.50"></text></g><g><title>[unknown] (10 samples, 0.89%)</title><rect x="60.2303%" y="565" width="0.8857%" height="15" fill="rgb(243,12,26)" fg:x="680" fg:w="10"/><text x="60.4803%" y="575.50"></text></g><g><title>[unknown] (8 samples, 0.71%)</title><rect x="60.4074%" y="549" width="0.7086%" height="15" fill="rgb(214,87,16)" fg:x="682" fg:w="8"/><text x="60.6574%" y="559.50"></text></g><g><title>[unknown] (8 samples, 0.71%)</title><rect x="60.4074%" y="533" width="0.7086%" height="15" fill="rgb(208,99,42)" fg:x="682" fg:w="8"/><text x="60.6574%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="60.5846%" y="517" width="0.5314%" height="15" fill="rgb(253,99,2)" fg:x="684" fg:w="6"/><text x="60.8346%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="60.5846%" y="501" width="0.5314%" height="15" fill="rgb(220,168,23)" fg:x="684" fg:w="6"/><text x="60.8346%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="60.5846%" y="485" width="0.5314%" height="15" fill="rgb(242,38,24)" fg:x="684" fg:w="6"/><text x="60.8346%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.35%)</title><rect x="60.7617%" y="469" width="0.3543%" height="15" fill="rgb(225,182,9)" fg:x="686" fg:w="4"/><text x="61.0117%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="60.9389%" y="453" width="0.1771%" height="15" fill="rgb(243,178,37)" fg:x="688" fg:w="2"/><text x="61.1889%" y="463.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.18%)</title><rect x="61.1160%" y="581" width="0.1771%" height="15" fill="rgb(232,139,19)" fg:x="690" fg:w="2"/><text x="61.3660%" y="591.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.18%)</title><rect x="61.1160%" y="565" width="0.1771%" height="15" fill="rgb(225,201,24)" fg:x="690" fg:w="2"/><text x="61.3660%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.09%)</title><rect x="61.2046%" y="549" width="0.0886%" height="15" fill="rgb(221,47,46)" fg:x="691" fg:w="1"/><text x="61.4546%" y="559.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (50 samples, 4.43%)</title><rect x="57.0416%" y="613" width="4.4287%" height="15" fill="rgb(249,23,13)" fg:x="644" fg:w="50"/><text x="57.2916%" y="623.50">cross..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (4 samples, 0.35%)</title><rect x="61.1160%" y="597" width="0.3543%" height="15" fill="rgb(219,9,5)" fg:x="690" fg:w="4"/><text x="61.3660%" y="607.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (2 samples, 0.18%)</title><rect x="61.2932%" y="581" width="0.1771%" height="15" fill="rgb(254,171,16)" fg:x="692" fg:w="2"/><text x="61.5432%" y="591.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.18%)</title><rect x="61.2932%" y="565" width="0.1771%" height="15" fill="rgb(230,171,20)" fg:x="692" fg:w="2"/><text x="61.5432%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.18%)</title><rect x="61.2932%" y="549" width="0.1771%" height="15" fill="rgb(210,71,41)" fg:x="692" fg:w="2"/><text x="61.5432%" y="559.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (145 samples, 12.84%)</title><rect x="48.7157%" y="645" width="12.8432%" height="15" fill="rgb(206,173,20)" fg:x="550" fg:w="145"/><text x="48.9657%" y="655.50">crossbeam_channel::..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (137 samples, 12.13%)</title><rect x="49.4243%" y="629" width="12.1346%" height="15" fill="rgb(233,88,34)" fg:x="558" fg:w="137"/><text x="49.6743%" y="639.50">crossbeam_channel:..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (1 samples, 0.09%)</title><rect x="61.4703%" y="613" width="0.0886%" height="15" fill="rgb(223,209,46)" fg:x="694" fg:w="1"/><text x="61.7203%" y="623.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.09%)</title><rect x="61.4703%" y="597" width="0.0886%" height="15" fill="rgb(250,43,18)" fg:x="694" fg:w="1"/><text x="61.7203%" y="607.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.09%)</title><rect x="61.4703%" y="581" width="0.0886%" height="15" fill="rgb(208,13,10)" fg:x="694" fg:w="1"/><text x="61.7203%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.09%)</title><rect x="61.4703%" y="565" width="0.0886%" height="15" fill="rgb(212,200,36)" fg:x="694" fg:w="1"/><text x="61.7203%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (6 samples, 0.53%)</title><rect x="62.6218%" y="629" width="0.5314%" height="15" fill="rgb(225,90,30)" fg:x="707" fg:w="6"/><text x="62.8718%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="62.6218%" y="613" width="0.5314%" height="15" fill="rgb(236,182,39)" fg:x="707" fg:w="6"/><text x="62.8718%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="62.6218%" y="597" width="0.5314%" height="15" fill="rgb(212,144,35)" fg:x="707" fg:w="6"/><text x="62.8718%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="62.6218%" y="581" width="0.5314%" height="15" fill="rgb(228,63,44)" fg:x="707" fg:w="6"/><text x="62.8718%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="62.6218%" y="565" width="0.5314%" height="15" fill="rgb(228,109,6)" fg:x="707" fg:w="6"/><text x="62.8718%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="62.6218%" y="549" width="0.5314%" height="15" fill="rgb(238,117,24)" fg:x="707" fg:w="6"/><text x="62.8718%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="62.6218%" y="533" width="0.5314%" height="15" fill="rgb(242,26,26)" fg:x="707" fg:w="6"/><text x="62.8718%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="62.6218%" y="517" width="0.5314%" height="15" fill="rgb(221,92,48)" fg:x="707" fg:w="6"/><text x="62.8718%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="62.7104%" y="501" width="0.4429%" height="15" fill="rgb(209,209,32)" fg:x="708" fg:w="5"/><text x="62.9604%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="62.7104%" y="485" width="0.4429%" height="15" fill="rgb(221,70,22)" fg:x="708" fg:w="5"/><text x="62.9604%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="62.7104%" y="469" width="0.4429%" height="15" fill="rgb(248,145,5)" fg:x="708" fg:w="5"/><text x="62.9604%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="62.7104%" y="453" width="0.4429%" height="15" fill="rgb(226,116,26)" fg:x="708" fg:w="5"/><text x="62.9604%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="62.7104%" y="437" width="0.4429%" height="15" fill="rgb(244,5,17)" fg:x="708" fg:w="5"/><text x="62.9604%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="62.7104%" y="421" width="0.4429%" height="15" fill="rgb(252,159,33)" fg:x="708" fg:w="5"/><text x="62.9604%" y="431.50"></text></g><g><title>__memset_avx2_unaligned_erms (5 samples, 0.44%)</title><rect x="64.3047%" y="581" width="0.4429%" height="15" fill="rgb(206,71,0)" fg:x="726" fg:w="5"/><text x="64.5547%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="65.2790%" y="469" width="0.0886%" height="15" fill="rgb(233,118,54)" fg:x="737" fg:w="1"/><text x="65.5290%" y="479.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.71%)</title><rect x="64.7476%" y="517" width="0.7086%" height="15" fill="rgb(234,83,48)" fg:x="731" fg:w="8"/><text x="64.9976%" y="527.50"></text></g><g><title>_int_malloc (7 samples, 0.62%)</title><rect x="64.8361%" y="501" width="0.6200%" height="15" fill="rgb(228,3,54)" fg:x="732" fg:w="7"/><text x="65.0861%" y="511.50"></text></g><g><title>sysmalloc (2 samples, 0.18%)</title><rect x="65.2790%" y="485" width="0.1771%" height="15" fill="rgb(226,155,13)" fg:x="737" fg:w="2"/><text x="65.5290%" y="495.50"></text></g><g><title>__GI___mprotect (1 samples, 0.09%)</title><rect x="65.3676%" y="469" width="0.0886%" height="15" fill="rgb(241,28,37)" fg:x="738" fg:w="1"/><text x="65.6176%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="65.3676%" y="453" width="0.0886%" height="15" fill="rgb(233,93,10)" fg:x="738" fg:w="1"/><text x="65.6176%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="65.3676%" y="437" width="0.0886%" height="15" fill="rgb(225,113,19)" fg:x="738" fg:w="1"/><text x="65.6176%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="65.3676%" y="421" width="0.0886%" height="15" fill="rgb(241,2,18)" fg:x="738" fg:w="1"/><text x="65.6176%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="65.3676%" y="405" width="0.0886%" height="15" fill="rgb(228,207,21)" fg:x="738" fg:w="1"/><text x="65.6176%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="65.3676%" y="389" width="0.0886%" height="15" fill="rgb(213,211,35)" fg:x="738" fg:w="1"/><text x="65.6176%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="65.3676%" y="373" width="0.0886%" height="15" fill="rgb(209,83,10)" fg:x="738" fg:w="1"/><text x="65.6176%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="65.3676%" y="357" width="0.0886%" height="15" fill="rgb(209,164,1)" fg:x="738" fg:w="1"/><text x="65.6176%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="65.3676%" y="341" width="0.0886%" height="15" fill="rgb(213,184,43)" fg:x="738" fg:w="1"/><text x="65.6176%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 1.33%)</title><rect x="64.3047%" y="597" width="1.3286%" height="15" fill="rgb(231,61,34)" fg:x="726" fg:w="15"/><text x="64.5547%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.89%)</title><rect x="64.7476%" y="581" width="0.8857%" height="15" fill="rgb(235,75,3)" fg:x="731" fg:w="10"/><text x="64.9976%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.89%)</title><rect x="64.7476%" y="565" width="0.8857%" height="15" fill="rgb(220,106,47)" fg:x="731" fg:w="10"/><text x="64.9976%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.89%)</title><rect x="64.7476%" y="549" width="0.8857%" height="15" fill="rgb(210,196,33)" fg:x="731" fg:w="10"/><text x="64.9976%" y="559.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.89%)</title><rect x="64.7476%" y="533" width="0.8857%" height="15" fill="rgb(229,154,42)" fg:x="731" fg:w="10"/><text x="64.9976%" y="543.50"></text></g><g><title>__rdl_alloc (2 samples, 0.18%)</title><rect x="65.4562%" y="517" width="0.1771%" height="15" fill="rgb(228,114,26)" fg:x="739" fg:w="2"/><text x="65.7062%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (1 samples, 0.09%)</title><rect x="65.6333%" y="597" width="0.0886%" height="15" fill="rgb(208,144,1)" fg:x="741" fg:w="1"/><text x="65.8833%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.09%)</title><rect x="65.6333%" y="581" width="0.0886%" height="15" fill="rgb(239,112,37)" fg:x="741" fg:w="1"/><text x="65.8833%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (16 samples, 1.42%)</title><rect x="65.7219%" y="597" width="1.4172%" height="15" fill="rgb(210,96,50)" fg:x="742" fg:w="16"/><text x="65.9719%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 1.42%)</title><rect x="65.7219%" y="581" width="1.4172%" height="15" fill="rgb(222,178,2)" fg:x="742" fg:w="16"/><text x="65.9719%" y="591.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (1 samples, 0.09%)</title><rect x="67.1391%" y="597" width="0.0886%" height="15" fill="rgb(226,74,18)" fg:x="758" fg:w="1"/><text x="67.3891%" y="607.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.09%)</title><rect x="67.1391%" y="581" width="0.0886%" height="15" fill="rgb(225,67,54)" fg:x="758" fg:w="1"/><text x="67.3891%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="67.1391%" y="565" width="0.0886%" height="15" fill="rgb(251,92,32)" fg:x="758" fg:w="1"/><text x="67.3891%" y="575.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (44 samples, 3.90%)</title><rect x="63.4190%" y="613" width="3.8973%" height="15" fill="rgb(228,149,22)" fg:x="716" fg:w="44"/><text x="63.6690%" y="623.50">cros..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (1 samples, 0.09%)</title><rect x="67.2276%" y="597" width="0.0886%" height="15" fill="rgb(243,54,13)" fg:x="759" fg:w="1"/><text x="67.4776%" y="607.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.09%)</title><rect x="67.2276%" y="581" width="0.0886%" height="15" fill="rgb(243,180,28)" fg:x="759" fg:w="1"/><text x="67.4776%" y="591.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.09%)</title><rect x="67.2276%" y="565" width="0.0886%" height="15" fill="rgb(208,167,24)" fg:x="759" fg:w="1"/><text x="67.4776%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.09%)</title><rect x="67.2276%" y="549" width="0.0886%" height="15" fill="rgb(245,73,45)" fg:x="759" fg:w="1"/><text x="67.4776%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.27%)</title><rect x="67.3162%" y="597" width="0.2657%" height="15" fill="rgb(237,203,48)" fg:x="760" fg:w="3"/><text x="67.5662%" y="607.50"></text></g><g><title>core::ptr::write (3 samples, 0.27%)</title><rect x="67.3162%" y="581" width="0.2657%" height="15" fill="rgb(211,197,16)" fg:x="760" fg:w="3"/><text x="67.5662%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.09%)</title><rect x="67.5819%" y="597" width="0.0886%" height="15" fill="rgb(243,99,51)" fg:x="763" fg:w="1"/><text x="67.8319%" y="607.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.09%)</title><rect x="67.5819%" y="581" width="0.0886%" height="15" fill="rgb(215,123,29)" fg:x="763" fg:w="1"/><text x="67.8319%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.09%)</title><rect x="67.5819%" y="565" width="0.0886%" height="15" fill="rgb(239,186,37)" fg:x="763" fg:w="1"/><text x="67.8319%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (10 samples, 0.89%)</title><rect x="67.6705%" y="597" width="0.8857%" height="15" fill="rgb(252,136,39)" fg:x="764" fg:w="10"/><text x="67.9205%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_or (10 samples, 0.89%)</title><rect x="67.6705%" y="581" width="0.8857%" height="15" fill="rgb(223,213,32)" fg:x="764" fg:w="10"/><text x="67.9205%" y="591.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (84 samples, 7.44%)</title><rect x="61.5589%" y="645" width="7.4402%" height="15" fill="rgb(233,115,5)" fg:x="695" fg:w="84"/><text x="61.8089%" y="655.50">crossbeam_..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (66 samples, 5.85%)</title><rect x="63.1532%" y="629" width="5.8459%" height="15" fill="rgb(207,226,44)" fg:x="713" fg:w="66"/><text x="63.4032%" y="639.50">crossbe..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (19 samples, 1.68%)</title><rect x="67.3162%" y="613" width="1.6829%" height="15" fill="rgb(208,126,0)" fg:x="760" fg:w="19"/><text x="67.5662%" y="623.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (5 samples, 0.44%)</title><rect x="68.5562%" y="597" width="0.4429%" height="15" fill="rgb(244,66,21)" fg:x="774" fg:w="5"/><text x="68.8062%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (5 samples, 0.44%)</title><rect x="68.5562%" y="581" width="0.4429%" height="15" fill="rgb(222,97,12)" fg:x="774" fg:w="5"/><text x="68.8062%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.44%)</title><rect x="68.5562%" y="565" width="0.4429%" height="15" fill="rgb(219,213,19)" fg:x="774" fg:w="5"/><text x="68.8062%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.09%)</title><rect x="68.9991%" y="629" width="0.0886%" height="15" fill="rgb(252,169,30)" fg:x="779" fg:w="1"/><text x="69.2491%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.09%)</title><rect x="68.9991%" y="613" width="0.0886%" height="15" fill="rgb(206,32,51)" fg:x="779" fg:w="1"/><text x="69.2491%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.35%)</title><rect x="69.0877%" y="565" width="0.3543%" height="15" fill="rgb(250,172,42)" fg:x="780" fg:w="4"/><text x="69.3377%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (4 samples, 0.35%)</title><rect x="69.0877%" y="549" width="0.3543%" height="15" fill="rgb(209,34,43)" fg:x="780" fg:w="4"/><text x="69.3377%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.35%)</title><rect x="69.0877%" y="533" width="0.3543%" height="15" fill="rgb(223,11,35)" fg:x="780" fg:w="4"/><text x="69.3377%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.35%)</title><rect x="69.0877%" y="517" width="0.3543%" height="15" fill="rgb(251,219,26)" fg:x="780" fg:w="4"/><text x="69.3377%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;lab4::package::Package&gt;&gt; (4 samples, 0.35%)</title><rect x="69.0877%" y="501" width="0.3543%" height="15" fill="rgb(231,119,3)" fg:x="780" fg:w="4"/><text x="69.3377%" y="511.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.35%)</title><rect x="69.0877%" y="485" width="0.3543%" height="15" fill="rgb(216,97,11)" fg:x="780" fg:w="4"/><text x="69.3377%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;lab4::package::Package,alloc::alloc::Global&gt;&gt; (4 samples, 0.35%)</title><rect x="69.0877%" y="469" width="0.3543%" height="15" fill="rgb(223,59,9)" fg:x="780" fg:w="4"/><text x="69.3377%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.35%)</title><rect x="69.0877%" y="453" width="0.3543%" height="15" fill="rgb(233,93,31)" fg:x="780" fg:w="4"/><text x="69.3377%" y="463.50"></text></g><g><title>core::intrinsics::copy (4 samples, 0.35%)</title><rect x="69.0877%" y="437" width="0.3543%" height="15" fill="rgb(239,81,33)" fg:x="780" fg:w="4"/><text x="69.3377%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.35%)</title><rect x="69.0877%" y="421" width="0.3543%" height="15" fill="rgb(213,120,34)" fg:x="780" fg:w="4"/><text x="69.3377%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.44%)</title><rect x="69.0877%" y="629" width="0.4429%" height="15" fill="rgb(243,49,53)" fg:x="780" fg:w="5"/><text x="69.3377%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.44%)</title><rect x="69.0877%" y="613" width="0.4429%" height="15" fill="rgb(247,216,33)" fg:x="780" fg:w="5"/><text x="69.3377%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.44%)</title><rect x="69.0877%" y="597" width="0.4429%" height="15" fill="rgb(226,26,14)" fg:x="780" fg:w="5"/><text x="69.3377%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.44%)</title><rect x="69.0877%" y="581" width="0.4429%" height="15" fill="rgb(215,49,53)" fg:x="780" fg:w="5"/><text x="69.3377%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.09%)</title><rect x="69.4420%" y="565" width="0.0886%" height="15" fill="rgb(245,162,40)" fg:x="784" fg:w="1"/><text x="69.6920%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="69.4420%" y="549" width="0.0886%" height="15" fill="rgb(229,68,17)" fg:x="784" fg:w="1"/><text x="69.6920%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.09%)</title><rect x="69.4420%" y="533" width="0.0886%" height="15" fill="rgb(213,182,10)" fg:x="784" fg:w="1"/><text x="69.6920%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.09%)</title><rect x="69.4420%" y="517" width="0.0886%" height="15" fill="rgb(245,125,30)" fg:x="784" fg:w="1"/><text x="69.6920%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.09%)</title><rect x="69.4420%" y="501" width="0.0886%" height="15" fill="rgb(232,202,2)" fg:x="784" fg:w="1"/><text x="69.6920%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.09%)</title><rect x="69.4420%" y="485" width="0.0886%" height="15" fill="rgb(237,140,51)" fg:x="784" fg:w="1"/><text x="69.6920%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.09%)</title><rect x="69.4420%" y="469" width="0.0886%" height="15" fill="rgb(236,157,25)" fg:x="784" fg:w="1"/><text x="69.6920%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.09%)</title><rect x="69.4420%" y="453" width="0.0886%" height="15" fill="rgb(219,209,0)" fg:x="784" fg:w="1"/><text x="69.6920%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.09%)</title><rect x="69.4420%" y="437" width="0.0886%" height="15" fill="rgb(240,116,54)" fg:x="784" fg:w="1"/><text x="69.6920%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="69.4420%" y="421" width="0.0886%" height="15" fill="rgb(216,10,36)" fg:x="784" fg:w="1"/><text x="69.6920%" y="431.50"></text></g><g><title>__GI___libc_free (2 samples, 0.18%)</title><rect x="69.5306%" y="469" width="0.1771%" height="15" fill="rgb(222,72,44)" fg:x="785" fg:w="2"/><text x="69.7806%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;lab4::package::Package&gt;&gt; (3 samples, 0.27%)</title><rect x="69.5306%" y="629" width="0.2657%" height="15" fill="rgb(232,159,9)" fg:x="785" fg:w="3"/><text x="69.7806%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.27%)</title><rect x="69.5306%" y="613" width="0.2657%" height="15" fill="rgb(210,39,32)" fg:x="785" fg:w="3"/><text x="69.7806%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[lab4::package::Package]&gt; (3 samples, 0.27%)</title><rect x="69.5306%" y="597" width="0.2657%" height="15" fill="rgb(216,194,45)" fg:x="785" fg:w="3"/><text x="69.7806%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::package::Package&gt; (3 samples, 0.27%)</title><rect x="69.5306%" y="581" width="0.2657%" height="15" fill="rgb(218,18,35)" fg:x="785" fg:w="3"/><text x="69.7806%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.27%)</title><rect x="69.5306%" y="565" width="0.2657%" height="15" fill="rgb(207,83,51)" fg:x="785" fg:w="3"/><text x="69.7806%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.27%)</title><rect x="69.5306%" y="549" width="0.2657%" height="15" fill="rgb(225,63,43)" fg:x="785" fg:w="3"/><text x="69.7806%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.27%)</title><rect x="69.5306%" y="533" width="0.2657%" height="15" fill="rgb(207,57,36)" fg:x="785" fg:w="3"/><text x="69.7806%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.27%)</title><rect x="69.5306%" y="517" width="0.2657%" height="15" fill="rgb(216,99,33)" fg:x="785" fg:w="3"/><text x="69.7806%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.27%)</title><rect x="69.5306%" y="501" width="0.2657%" height="15" fill="rgb(225,42,16)" fg:x="785" fg:w="3"/><text x="69.7806%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.27%)</title><rect x="69.5306%" y="485" width="0.2657%" height="15" fill="rgb(220,201,45)" fg:x="785" fg:w="3"/><text x="69.7806%" y="495.50"></text></g><g><title>_int_free (1 samples, 0.09%)</title><rect x="69.7077%" y="469" width="0.0886%" height="15" fill="rgb(225,33,4)" fg:x="787" fg:w="1"/><text x="69.9577%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (6 samples, 0.53%)</title><rect x="69.7963%" y="629" width="0.5314%" height="15" fill="rgb(224,33,50)" fg:x="788" fg:w="6"/><text x="70.0463%" y="639.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.53%)</title><rect x="69.7963%" y="613" width="0.5314%" height="15" fill="rgb(246,198,51)" fg:x="788" fg:w="6"/><text x="70.0463%" y="623.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (6 samples, 0.53%)</title><rect x="69.7963%" y="597" width="0.5314%" height="15" fill="rgb(205,22,4)" fg:x="788" fg:w="6"/><text x="70.0463%" y="607.50"></text></g><g><title>syscall (6 samples, 0.53%)</title><rect x="69.7963%" y="581" width="0.5314%" height="15" fill="rgb(206,3,8)" fg:x="788" fg:w="6"/><text x="70.0463%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="69.7963%" y="565" width="0.5314%" height="15" fill="rgb(251,23,15)" fg:x="788" fg:w="6"/><text x="70.0463%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="69.7963%" y="549" width="0.5314%" height="15" fill="rgb(252,88,28)" fg:x="788" fg:w="6"/><text x="70.0463%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="69.7963%" y="533" width="0.5314%" height="15" fill="rgb(212,127,14)" fg:x="788" fg:w="6"/><text x="70.0463%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="69.7963%" y="517" width="0.5314%" height="15" fill="rgb(247,145,37)" fg:x="788" fg:w="6"/><text x="70.0463%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="69.7963%" y="501" width="0.5314%" height="15" fill="rgb(209,117,53)" fg:x="788" fg:w="6"/><text x="70.0463%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="69.7963%" y="485" width="0.5314%" height="15" fill="rgb(212,90,42)" fg:x="788" fg:w="6"/><text x="70.0463%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="69.7963%" y="469" width="0.5314%" height="15" fill="rgb(218,164,37)" fg:x="788" fg:w="6"/><text x="70.0463%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="69.8849%" y="453" width="0.4429%" height="15" fill="rgb(246,65,34)" fg:x="789" fg:w="5"/><text x="70.1349%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="69.8849%" y="437" width="0.4429%" height="15" fill="rgb(231,100,33)" fg:x="789" fg:w="5"/><text x="70.1349%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="69.8849%" y="421" width="0.4429%" height="15" fill="rgb(228,126,14)" fg:x="789" fg:w="5"/><text x="70.1349%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="69.8849%" y="405" width="0.4429%" height="15" fill="rgb(215,173,21)" fg:x="789" fg:w="5"/><text x="70.1349%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="69.8849%" y="389" width="0.4429%" height="15" fill="rgb(210,6,40)" fg:x="789" fg:w="5"/><text x="70.1349%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.44%)</title><rect x="70.4163%" y="613" width="0.4429%" height="15" fill="rgb(212,48,18)" fg:x="795" fg:w="5"/><text x="70.6663%" y="623.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.44%)</title><rect x="70.4163%" y="597" width="0.4429%" height="15" fill="rgb(230,214,11)" fg:x="795" fg:w="5"/><text x="70.6663%" y="607.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.44%)</title><rect x="70.4163%" y="581" width="0.4429%" height="15" fill="rgb(254,105,39)" fg:x="795" fg:w="5"/><text x="70.6663%" y="591.50"></text></g><g><title>__GI___libc_free (2 samples, 0.18%)</title><rect x="70.8592%" y="533" width="0.1771%" height="15" fill="rgb(245,158,5)" fg:x="800" fg:w="2"/><text x="71.1092%" y="543.50"></text></g><g><title>__rust_dealloc (1 samples, 0.09%)</title><rect x="71.0363%" y="533" width="0.0886%" height="15" fill="rgb(249,208,11)" fg:x="802" fg:w="1"/><text x="71.2863%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.71%)</title><rect x="70.8592%" y="613" width="0.7086%" height="15" fill="rgb(210,39,28)" fg:x="800" fg:w="8"/><text x="71.1092%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.71%)</title><rect x="70.8592%" y="597" width="0.7086%" height="15" fill="rgb(211,56,53)" fg:x="800" fg:w="8"/><text x="71.1092%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.71%)</title><rect x="70.8592%" y="581" width="0.7086%" height="15" fill="rgb(226,201,30)" fg:x="800" fg:w="8"/><text x="71.1092%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.71%)</title><rect x="70.8592%" y="565" width="0.7086%" height="15" fill="rgb(239,101,34)" fg:x="800" fg:w="8"/><text x="71.1092%" y="575.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.71%)</title><rect x="70.8592%" y="549" width="0.7086%" height="15" fill="rgb(226,209,5)" fg:x="800" fg:w="8"/><text x="71.1092%" y="559.50"></text></g><g><title>_int_free (5 samples, 0.44%)</title><rect x="71.1249%" y="533" width="0.4429%" height="15" fill="rgb(250,105,47)" fg:x="803" fg:w="5"/><text x="71.3749%" y="543.50"></text></g><g><title>__GI___libc_free (3 samples, 0.27%)</title><rect x="71.6563%" y="501" width="0.2657%" height="15" fill="rgb(230,72,3)" fg:x="809" fg:w="3"/><text x="71.9063%" y="511.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.09%)</title><rect x="71.9221%" y="501" width="0.0886%" height="15" fill="rgb(232,218,39)" fg:x="812" fg:w="1"/><text x="72.1721%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.09%)</title><rect x="71.9221%" y="485" width="0.0886%" height="15" fill="rgb(248,166,6)" fg:x="812" fg:w="1"/><text x="72.1721%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lab4::checksum::Checksum&gt; (10 samples, 0.89%)</title><rect x="71.5678%" y="613" width="0.8857%" height="15" fill="rgb(247,89,20)" fg:x="808" fg:w="10"/><text x="71.8178%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10 samples, 0.89%)</title><rect x="71.5678%" y="597" width="0.8857%" height="15" fill="rgb(248,130,54)" fg:x="808" fg:w="10"/><text x="71.8178%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10 samples, 0.89%)</title><rect x="71.5678%" y="581" width="0.8857%" height="15" fill="rgb(234,196,4)" fg:x="808" fg:w="10"/><text x="71.8178%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.89%)</title><rect x="71.5678%" y="565" width="0.8857%" height="15" fill="rgb(250,143,31)" fg:x="808" fg:w="10"/><text x="71.8178%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.89%)</title><rect x="71.5678%" y="549" width="0.8857%" height="15" fill="rgb(211,110,34)" fg:x="808" fg:w="10"/><text x="71.8178%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.80%)</title><rect x="71.6563%" y="533" width="0.7972%" height="15" fill="rgb(215,124,48)" fg:x="809" fg:w="9"/><text x="71.9063%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.80%)</title><rect x="71.6563%" y="517" width="0.7972%" height="15" fill="rgb(216,46,13)" fg:x="809" fg:w="9"/><text x="71.9063%" y="527.50"></text></g><g><title>_int_free (5 samples, 0.44%)</title><rect x="72.0106%" y="501" width="0.4429%" height="15" fill="rgb(205,184,25)" fg:x="813" fg:w="5"/><text x="72.2606%" y="511.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.09%)</title><rect x="72.5421%" y="485" width="0.0886%" height="15" fill="rgb(228,1,10)" fg:x="819" fg:w="1"/><text x="72.7921%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (73 samples, 6.47%)</title><rect x="73.1621%" y="325" width="6.4659%" height="15" fill="rgb(213,116,27)" fg:x="826" fg:w="73"/><text x="73.4121%" y="335.50">&lt;core::i..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (68 samples, 6.02%)</title><rect x="73.6050%" y="309" width="6.0230%" height="15" fill="rgb(241,95,50)" fg:x="831" fg:w="68"/><text x="73.8550%" y="319.50">core::it..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (68 samples, 6.02%)</title><rect x="73.6050%" y="293" width="6.0230%" height="15" fill="rgb(238,48,32)" fg:x="831" fg:w="68"/><text x="73.8550%" y="303.50">&lt;alloc::..</text></g><g><title>hex::val (39 samples, 3.45%)</title><rect x="76.1736%" y="277" width="3.4544%" height="15" fill="rgb(235,113,49)" fg:x="860" fg:w="39"/><text x="76.4236%" y="287.50">hex..</text></g><g><title>core::cmp::min (1 samples, 0.09%)</title><rect x="80.5137%" y="309" width="0.0886%" height="15" fill="rgb(205,127,43)" fg:x="909" fg:w="1"/><text x="80.7637%" y="319.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.09%)</title><rect x="80.5137%" y="293" width="0.0886%" height="15" fill="rgb(250,162,2)" fg:x="909" fg:w="1"/><text x="80.7637%" y="303.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.09%)</title><rect x="80.5137%" y="277" width="0.0886%" height="15" fill="rgb(220,13,41)" fg:x="909" fg:w="1"/><text x="80.7637%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 8.06%)</title><rect x="72.8078%" y="421" width="8.0602%" height="15" fill="rgb(249,221,25)" fg:x="822" fg:w="91"/><text x="73.0578%" y="431.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (91 samples, 8.06%)</title><rect x="72.8078%" y="405" width="8.0602%" height="15" fill="rgb(215,208,19)" fg:x="822" fg:w="91"/><text x="73.0578%" y="415.50">core::iter:..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (91 samples, 8.06%)</title><rect x="72.8078%" y="389" width="8.0602%" height="15" fill="rgb(236,175,2)" fg:x="822" fg:w="91"/><text x="73.0578%" y="399.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (90 samples, 7.97%)</title><rect x="72.8964%" y="373" width="7.9717%" height="15" fill="rgb(241,52,2)" fg:x="823" fg:w="90"/><text x="73.1464%" y="383.50">&lt;core::iter..</text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (87 samples, 7.71%)</title><rect x="73.1621%" y="357" width="7.7059%" height="15" fill="rgb(248,140,14)" fg:x="826" fg:w="87"/><text x="73.4121%" y="367.50">&lt;core::iter..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (87 samples, 7.71%)</title><rect x="73.1621%" y="341" width="7.7059%" height="15" fill="rgb(253,22,42)" fg:x="826" fg:w="87"/><text x="73.4121%" y="351.50">core::iter:..</text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 1.24%)</title><rect x="79.6280%" y="325" width="1.2400%" height="15" fill="rgb(234,61,47)" fg:x="899" fg:w="14"/><text x="79.8780%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (3 samples, 0.27%)</title><rect x="80.6023%" y="309" width="0.2657%" height="15" fill="rgb(208,226,15)" fg:x="910" fg:w="3"/><text x="80.8523%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (3 samples, 0.27%)</title><rect x="80.6023%" y="293" width="0.2657%" height="15" fill="rgb(217,221,4)" fg:x="910" fg:w="3"/><text x="80.8523%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.18%)</title><rect x="80.6909%" y="277" width="0.1771%" height="15" fill="rgb(212,174,34)" fg:x="911" fg:w="2"/><text x="80.9409%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.18%)</title><rect x="80.8680%" y="421" width="0.1771%" height="15" fill="rgb(253,83,4)" fg:x="913" fg:w="2"/><text x="81.1180%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.27%)</title><rect x="82.1081%" y="261" width="0.2657%" height="15" fill="rgb(250,195,49)" fg:x="927" fg:w="3"/><text x="82.3581%" y="271.50"></text></g><g><title>_int_free (4 samples, 0.35%)</title><rect x="82.3738%" y="261" width="0.3543%" height="15" fill="rgb(241,192,25)" fg:x="930" fg:w="4"/><text x="82.6238%" y="271.50"></text></g><g><title>__GI___libc_realloc (21 samples, 1.86%)</title><rect x="81.1337%" y="293" width="1.8601%" height="15" fill="rgb(208,124,10)" fg:x="916" fg:w="21"/><text x="81.3837%" y="303.50">_..</text></g><g><title>_int_realloc (13 samples, 1.15%)</title><rect x="81.8423%" y="277" width="1.1515%" height="15" fill="rgb(222,33,0)" fg:x="924" fg:w="13"/><text x="82.0923%" y="287.50"></text></g><g><title>_int_malloc (3 samples, 0.27%)</title><rect x="82.7281%" y="261" width="0.2657%" height="15" fill="rgb(234,209,28)" fg:x="934" fg:w="3"/><text x="82.9781%" y="271.50"></text></g><g><title>__rdl_realloc (1 samples, 0.09%)</title><rect x="82.9938%" y="293" width="0.0886%" height="15" fill="rgb(224,11,23)" fg:x="937" fg:w="1"/><text x="83.2438%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="82.9938%" y="277" width="0.0886%" height="15" fill="rgb(232,99,1)" fg:x="937" fg:w="1"/><text x="83.2438%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (23 samples, 2.04%)</title><rect x="81.1337%" y="341" width="2.0372%" height="15" fill="rgb(237,95,45)" fg:x="916" fg:w="23"/><text x="81.3837%" y="351.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (23 samples, 2.04%)</title><rect x="81.1337%" y="325" width="2.0372%" height="15" fill="rgb(208,109,11)" fg:x="916" fg:w="23"/><text x="81.3837%" y="335.50">a..</text></g><g><title>alloc::alloc::realloc (23 samples, 2.04%)</title><rect x="81.1337%" y="309" width="2.0372%" height="15" fill="rgb(216,190,48)" fg:x="916" fg:w="23"/><text x="81.3837%" y="319.50">a..</text></g><g><title>__rust_realloc (1 samples, 0.09%)</title><rect x="83.0824%" y="293" width="0.0886%" height="15" fill="rgb(251,171,36)" fg:x="938" fg:w="1"/><text x="83.3324%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 2.21%)</title><rect x="81.0452%" y="357" width="2.2143%" height="15" fill="rgb(230,62,22)" fg:x="915" fg:w="25"/><text x="81.2952%" y="367.50">a..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.09%)</title><rect x="83.1709%" y="341" width="0.0886%" height="15" fill="rgb(225,114,35)" fg:x="939" fg:w="1"/><text x="83.4209%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (26 samples, 2.30%)</title><rect x="81.0452%" y="421" width="2.3029%" height="15" fill="rgb(215,118,42)" fg:x="915" fg:w="26"/><text x="81.2952%" y="431.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 2.30%)</title><rect x="81.0452%" y="405" width="2.3029%" height="15" fill="rgb(243,119,21)" fg:x="915" fg:w="26"/><text x="81.2952%" y="415.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 2.30%)</title><rect x="81.0452%" y="389" width="2.3029%" height="15" fill="rgb(252,177,53)" fg:x="915" fg:w="26"/><text x="81.2952%" y="399.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 2.30%)</title><rect x="81.0452%" y="373" width="2.3029%" height="15" fill="rgb(237,209,29)" fg:x="915" fg:w="26"/><text x="81.2952%" y="383.50">a..</text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.09%)</title><rect x="83.2595%" y="357" width="0.0886%" height="15" fill="rgb(212,65,23)" fg:x="940" fg:w="1"/><text x="83.5095%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.09%)</title><rect x="83.2595%" y="341" width="0.0886%" height="15" fill="rgb(230,222,46)" fg:x="940" fg:w="1"/><text x="83.5095%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.18%)</title><rect x="83.3481%" y="421" width="0.1771%" height="15" fill="rgb(215,135,32)" fg:x="941" fg:w="2"/><text x="83.5981%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (124 samples, 10.98%)</title><rect x="72.7192%" y="453" width="10.9832%" height="15" fill="rgb(246,101,22)" fg:x="821" fg:w="124"/><text x="72.9692%" y="463.50">&lt;alloc::vec::Vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (124 samples, 10.98%)</title><rect x="72.7192%" y="437" width="10.9832%" height="15" fill="rgb(206,107,13)" fg:x="821" fg:w="124"/><text x="72.9692%" y="447.50">alloc::vec::Vec&lt;..</text></g><g><title>core::ptr::write (2 samples, 0.18%)</title><rect x="83.5252%" y="421" width="0.1771%" height="15" fill="rgb(250,100,44)" fg:x="943" fg:w="2"/><text x="83.7752%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.09%)</title><rect x="83.7024%" y="453" width="0.0886%" height="15" fill="rgb(231,147,38)" fg:x="945" fg:w="1"/><text x="83.9524%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (1 samples, 0.09%)</title><rect x="83.7024%" y="437" width="0.0886%" height="15" fill="rgb(229,8,40)" fg:x="945" fg:w="1"/><text x="83.9524%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.09%)</title><rect x="83.7024%" y="421" width="0.0886%" height="15" fill="rgb(221,135,30)" fg:x="945" fg:w="1"/><text x="83.9524%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.09%)</title><rect x="83.7024%" y="405" width="0.0886%" height="15" fill="rgb(249,193,18)" fg:x="945" fg:w="1"/><text x="83.9524%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.09%)</title><rect x="83.7024%" y="389" width="0.0886%" height="15" fill="rgb(209,133,39)" fg:x="945" fg:w="1"/><text x="83.9524%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.09%)</title><rect x="83.7024%" y="373" width="0.0886%" height="15" fill="rgb(232,100,14)" fg:x="945" fg:w="1"/><text x="83.9524%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (1 samples, 0.09%)</title><rect x="83.7024%" y="357" width="0.0886%" height="15" fill="rgb(224,185,1)" fg:x="945" fg:w="1"/><text x="83.9524%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (1 samples, 0.09%)</title><rect x="83.7024%" y="341" width="0.0886%" height="15" fill="rgb(223,139,8)" fg:x="945" fg:w="1"/><text x="83.9524%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (1 samples, 0.09%)</title><rect x="83.7024%" y="325" width="0.0886%" height="15" fill="rgb(232,213,38)" fg:x="945" fg:w="1"/><text x="83.9524%" y="335.50"></text></g><g><title>hex::val (1 samples, 0.09%)</title><rect x="83.7024%" y="309" width="0.0886%" height="15" fill="rgb(207,94,22)" fg:x="945" fg:w="1"/><text x="83.9524%" y="319.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.27%)</title><rect x="83.7910%" y="341" width="0.2657%" height="15" fill="rgb(219,183,54)" fg:x="946" fg:w="3"/><text x="84.0410%" y="351.50"></text></g><g><title>hex::decode (132 samples, 11.69%)</title><rect x="72.4535%" y="613" width="11.6918%" height="15" fill="rgb(216,185,54)" fg:x="818" fg:w="132"/><text x="72.7035%" y="623.50">hex::decode</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (132 samples, 11.69%)</title><rect x="72.4535%" y="597" width="11.6918%" height="15" fill="rgb(254,217,39)" fg:x="818" fg:w="132"/><text x="72.7035%" y="607.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (132 samples, 11.69%)</title><rect x="72.4535%" y="581" width="11.6918%" height="15" fill="rgb(240,178,23)" fg:x="818" fg:w="132"/><text x="72.7035%" y="591.50">core::iter::trait..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (132 samples, 11.69%)</title><rect x="72.4535%" y="565" width="11.6918%" height="15" fill="rgb(218,11,47)" fg:x="818" fg:w="132"/><text x="72.7035%" y="575.50">&lt;core::result::Re..</text></g><g><title>core::iter::adapters::try_process (132 samples, 11.69%)</title><rect x="72.4535%" y="549" width="11.6918%" height="15" fill="rgb(218,51,51)" fg:x="818" fg:w="132"/><text x="72.7035%" y="559.50">core::iter::adapt..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (131 samples, 11.60%)</title><rect x="72.5421%" y="533" width="11.6032%" height="15" fill="rgb(238,126,27)" fg:x="819" fg:w="131"/><text x="72.7921%" y="543.50">&lt;core::result::Re..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (131 samples, 11.60%)</title><rect x="72.5421%" y="517" width="11.6032%" height="15" fill="rgb(249,202,22)" fg:x="819" fg:w="131"/><text x="72.7921%" y="527.50">core::iter::trait..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (131 samples, 11.60%)</title><rect x="72.5421%" y="501" width="11.6032%" height="15" fill="rgb(254,195,49)" fg:x="819" fg:w="131"/><text x="72.7921%" y="511.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (130 samples, 11.51%)</title><rect x="72.6306%" y="485" width="11.5146%" height="15" fill="rgb(208,123,14)" fg:x="820" fg:w="130"/><text x="72.8806%" y="495.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (130 samples, 11.51%)</title><rect x="72.6306%" y="469" width="11.5146%" height="15" fill="rgb(224,200,8)" fg:x="820" fg:w="130"/><text x="72.8806%" y="479.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.35%)</title><rect x="83.7910%" y="453" width="0.3543%" height="15" fill="rgb(217,61,36)" fg:x="946" fg:w="4"/><text x="84.0410%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.35%)</title><rect x="83.7910%" y="437" width="0.3543%" height="15" fill="rgb(206,35,45)" fg:x="946" fg:w="4"/><text x="84.0410%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.35%)</title><rect x="83.7910%" y="421" width="0.3543%" height="15" fill="rgb(217,65,33)" fg:x="946" fg:w="4"/><text x="84.0410%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.35%)</title><rect x="83.7910%" y="405" width="0.3543%" height="15" fill="rgb(222,158,48)" fg:x="946" fg:w="4"/><text x="84.0410%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.35%)</title><rect x="83.7910%" y="389" width="0.3543%" height="15" fill="rgb(254,2,54)" fg:x="946" fg:w="4"/><text x="84.0410%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.35%)</title><rect x="83.7910%" y="373" width="0.3543%" height="15" fill="rgb(250,143,38)" fg:x="946" fg:w="4"/><text x="84.0410%" y="383.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.35%)</title><rect x="83.7910%" y="357" width="0.3543%" height="15" fill="rgb(248,25,0)" fg:x="946" fg:w="4"/><text x="84.0410%" y="367.50"></text></g><g><title>__rdl_alloc (1 samples, 0.09%)</title><rect x="84.0567%" y="341" width="0.0886%" height="15" fill="rgb(206,152,27)" fg:x="949" fg:w="1"/><text x="84.3067%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.09%)</title><rect x="84.0567%" y="325" width="0.0886%" height="15" fill="rgb(240,77,30)" fg:x="949" fg:w="1"/><text x="84.3067%" y="335.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.18%)</title><rect x="84.4996%" y="517" width="0.1771%" height="15" fill="rgb(231,5,3)" fg:x="954" fg:w="2"/><text x="84.7496%" y="527.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.18%)</title><rect x="84.4996%" y="501" width="0.1771%" height="15" fill="rgb(207,226,32)" fg:x="954" fg:w="2"/><text x="84.7496%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.18%)</title><rect x="84.4996%" y="485" width="0.1771%" height="15" fill="rgb(222,207,47)" fg:x="954" fg:w="2"/><text x="84.7496%" y="495.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::sub_ptr (2 samples, 0.18%)</title><rect x="84.4996%" y="469" width="0.1771%" height="15" fill="rgb(229,115,45)" fg:x="954" fg:w="2"/><text x="84.7496%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (2 samples, 0.18%)</title><rect x="84.4996%" y="453" width="0.1771%" height="15" fill="rgb(224,191,6)" fg:x="954" fg:w="2"/><text x="84.7496%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.09%)</title><rect x="84.6767%" y="437" width="0.0886%" height="15" fill="rgb(230,227,24)" fg:x="956" fg:w="1"/><text x="84.9267%" y="447.50"></text></g><g><title>alloc::string::String::reserve (2 samples, 0.18%)</title><rect x="84.6767%" y="517" width="0.1771%" height="15" fill="rgb(228,80,19)" fg:x="956" fg:w="2"/><text x="84.9267%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.18%)</title><rect x="84.6767%" y="501" width="0.1771%" height="15" fill="rgb(247,229,0)" fg:x="956" fg:w="2"/><text x="84.9267%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.18%)</title><rect x="84.6767%" y="485" width="0.1771%" height="15" fill="rgb(237,194,15)" fg:x="956" fg:w="2"/><text x="84.9267%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.18%)</title><rect x="84.6767%" y="469" width="0.1771%" height="15" fill="rgb(219,203,20)" fg:x="956" fg:w="2"/><text x="84.9267%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.18%)</title><rect x="84.6767%" y="453" width="0.1771%" height="15" fill="rgb(234,128,8)" fg:x="956" fg:w="2"/><text x="84.9267%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.09%)</title><rect x="84.7653%" y="437" width="0.0886%" height="15" fill="rgb(248,202,8)" fg:x="957" fg:w="1"/><text x="85.0153%" y="447.50"></text></g><g><title>__rust_alloc (1 samples, 0.09%)</title><rect x="84.7653%" y="421" width="0.0886%" height="15" fill="rgb(206,104,37)" fg:x="957" fg:w="1"/><text x="85.0153%" y="431.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::BitAnd&lt;u8&gt;&gt;::bitand (1 samples, 0.09%)</title><rect x="86.4482%" y="437" width="0.0886%" height="15" fill="rgb(223,8,27)" fg:x="976" fg:w="1"/><text x="86.6982%" y="447.50"></text></g><g><title>&lt;u8 as core::ops::bit::BitAnd&gt;::bitand (1 samples, 0.09%)</title><rect x="86.4482%" y="421" width="0.0886%" height="15" fill="rgb(216,217,28)" fg:x="976" fg:w="1"/><text x="86.6982%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 1.24%)</title><rect x="85.3853%" y="469" width="1.2400%" height="15" fill="rgb(249,199,1)" fg:x="964" fg:w="14"/><text x="85.6353%" y="479.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (13 samples, 1.15%)</title><rect x="85.4739%" y="453" width="1.1515%" height="15" fill="rgb(240,85,17)" fg:x="965" fg:w="13"/><text x="85.7239%" y="463.50"></text></g><g><title>&lt;&amp;u8 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.09%)</title><rect x="86.5368%" y="437" width="0.0886%" height="15" fill="rgb(206,108,45)" fg:x="977" fg:w="1"/><text x="86.7868%" y="447.50"></text></g><g><title>&lt;u8 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (1 samples, 0.09%)</title><rect x="86.5368%" y="421" width="0.0886%" height="15" fill="rgb(245,210,41)" fg:x="977" fg:w="1"/><text x="86.7868%" y="431.50"></text></g><g><title>core::ptr::read (3 samples, 0.27%)</title><rect x="86.6253%" y="437" width="0.2657%" height="15" fill="rgb(206,13,37)" fg:x="978" fg:w="3"/><text x="86.8753%" y="447.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 1.77%)</title><rect x="85.2081%" y="485" width="1.7715%" height="15" fill="rgb(250,61,18)" fg:x="962" fg:w="20"/><text x="85.4581%" y="495.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::take (4 samples, 0.35%)</title><rect x="86.6253%" y="469" width="0.3543%" height="15" fill="rgb(235,172,48)" fg:x="978" fg:w="4"/><text x="86.8753%" y="479.50"></text></g><g><title>core::mem::replace (4 samples, 0.35%)</title><rect x="86.6253%" y="453" width="0.3543%" height="15" fill="rgb(249,201,17)" fg:x="978" fg:w="4"/><text x="86.8753%" y="463.50"></text></g><g><title>core::ptr::write (1 samples, 0.09%)</title><rect x="86.8911%" y="437" width="0.0886%" height="15" fill="rgb(219,208,6)" fg:x="981" fg:w="1"/><text x="87.1411%" y="447.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (43 samples, 3.81%)</title><rect x="84.2338%" y="597" width="3.8087%" height="15" fill="rgb(248,31,23)" fg:x="951" fg:w="43"/><text x="84.4838%" y="607.50">&lt;T a..</text></g><g><title>hex::encode_to_iter (43 samples, 3.81%)</title><rect x="84.2338%" y="581" width="3.8087%" height="15" fill="rgb(245,15,42)" fg:x="951" fg:w="43"/><text x="84.4838%" y="591.50">hex:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 3.81%)</title><rect x="84.2338%" y="565" width="3.8087%" height="15" fill="rgb(222,217,39)" fg:x="951" fg:w="43"/><text x="84.4838%" y="575.50">core..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (43 samples, 3.81%)</title><rect x="84.2338%" y="549" width="3.8087%" height="15" fill="rgb(210,219,27)" fg:x="951" fg:w="43"/><text x="84.4838%" y="559.50">&lt;all..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (41 samples, 3.63%)</title><rect x="84.4110%" y="533" width="3.6315%" height="15" fill="rgb(252,166,36)" fg:x="953" fg:w="41"/><text x="84.6610%" y="543.50">&lt;all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (36 samples, 3.19%)</title><rect x="84.8539%" y="517" width="3.1887%" height="15" fill="rgb(245,132,34)" fg:x="958" fg:w="36"/><text x="85.1039%" y="527.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (36 samples, 3.19%)</title><rect x="84.8539%" y="501" width="3.1887%" height="15" fill="rgb(236,54,3)" fg:x="958" fg:w="36"/><text x="85.1039%" y="511.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (12 samples, 1.06%)</title><rect x="86.9796%" y="485" width="1.0629%" height="15" fill="rgb(241,173,43)" fg:x="982" fg:w="12"/><text x="87.2296%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (12 samples, 1.06%)</title><rect x="86.9796%" y="469" width="1.0629%" height="15" fill="rgb(215,190,9)" fg:x="982" fg:w="12"/><text x="87.2296%" y="479.50"></text></g><g><title>alloc::string::String::push (12 samples, 1.06%)</title><rect x="86.9796%" y="453" width="1.0629%" height="15" fill="rgb(242,101,16)" fg:x="982" fg:w="12"/><text x="87.2296%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 1.06%)</title><rect x="86.9796%" y="437" width="1.0629%" height="15" fill="rgb(223,190,21)" fg:x="982" fg:w="12"/><text x="87.2296%" y="447.50"></text></g><g><title>core::ptr::write (7 samples, 0.62%)</title><rect x="87.4225%" y="421" width="0.6200%" height="15" fill="rgb(215,228,25)" fg:x="987" fg:w="7"/><text x="87.6725%" y="431.50"></text></g><g><title>lab4::checksum::Checksum::update (202 samples, 17.89%)</title><rect x="70.3277%" y="629" width="17.8919%" height="15" fill="rgb(225,36,22)" fg:x="794" fg:w="202"/><text x="70.5777%" y="639.50">lab4::checksum::Checksum::up..</text></g><g><title>hex::encode (46 samples, 4.07%)</title><rect x="84.1453%" y="613" width="4.0744%" height="15" fill="rgb(251,106,46)" fg:x="950" fg:w="46"/><text x="84.3953%" y="623.50">hex:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.18%)</title><rect x="88.0425%" y="597" width="0.1771%" height="15" fill="rgb(208,90,1)" fg:x="994" fg:w="2"/><text x="88.2925%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.18%)</title><rect x="88.0425%" y="581" width="0.1771%" height="15" fill="rgb(243,10,4)" fg:x="994" fg:w="2"/><text x="88.2925%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.18%)</title><rect x="88.0425%" y="565" width="0.1771%" height="15" fill="rgb(212,137,27)" fg:x="994" fg:w="2"/><text x="88.2925%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.18%)</title><rect x="88.0425%" y="549" width="0.1771%" height="15" fill="rgb(231,220,49)" fg:x="994" fg:w="2"/><text x="88.2925%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.18%)</title><rect x="88.0425%" y="533" width="0.1771%" height="15" fill="rgb(237,96,20)" fg:x="994" fg:w="2"/><text x="88.2925%" y="543.50"></text></g><g><title>_int_free (2 samples, 0.18%)</title><rect x="88.0425%" y="517" width="0.1771%" height="15" fill="rgb(239,229,30)" fg:x="994" fg:w="2"/><text x="88.2925%" y="527.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as core::default::Default&gt;::default (5 samples, 0.44%)</title><rect x="88.2197%" y="597" width="0.4429%" height="15" fill="rgb(219,65,33)" fg:x="996" fg:w="5"/><text x="88.4697%" y="607.50"></text></g><g><title>sha2::sha256::Engine256::new (4 samples, 0.35%)</title><rect x="88.3082%" y="581" width="0.3543%" height="15" fill="rgb(243,134,7)" fg:x="997" fg:w="4"/><text x="88.5582%" y="591.50"></text></g><g><title>&lt;block_buffer::BlockBuffer&lt;BlockSize&gt; as core::default::Default&gt;::default (4 samples, 0.35%)</title><rect x="88.3082%" y="565" width="0.3543%" height="15" fill="rgb(216,177,54)" fg:x="997" fg:w="4"/><text x="88.5582%" y="575.50"></text></g><g><title>generic_array::impls::&lt;impl core::default::Default for generic_array::GenericArray&lt;T,N&gt;&gt;::default (4 samples, 0.35%)</title><rect x="88.3082%" y="549" width="0.3543%" height="15" fill="rgb(211,160,20)" fg:x="997" fg:w="4"/><text x="88.5582%" y="559.50"></text></g><g><title>&lt;generic_array::GenericArray&lt;T,N&gt; as generic_array::sequence::GenericSequence&lt;T&gt;&gt;::generate (4 samples, 0.35%)</title><rect x="88.3082%" y="533" width="0.3543%" height="15" fill="rgb(239,85,39)" fg:x="997" fg:w="4"/><text x="88.5582%" y="543.50"></text></g><g><title>generic_array::ArrayBuilder&lt;T,N&gt;::into_inner (4 samples, 0.35%)</title><rect x="88.3082%" y="517" width="0.3543%" height="15" fill="rgb(232,125,22)" fg:x="997" fg:w="4"/><text x="88.5582%" y="527.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (4 samples, 0.35%)</title><rect x="88.3082%" y="501" width="0.3543%" height="15" fill="rgb(244,57,34)" fg:x="997" fg:w="4"/><text x="88.5582%" y="511.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (4 samples, 0.35%)</title><rect x="88.3082%" y="485" width="0.3543%" height="15" fill="rgb(214,203,32)" fg:x="997" fg:w="4"/><text x="88.5582%" y="495.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (3 samples, 0.27%)</title><rect x="88.6625%" y="597" width="0.2657%" height="15" fill="rgb(207,58,43)" fg:x="1001" fg:w="3"/><text x="88.9125%" y="607.50"></text></g><g><title>sha2::sha256::Engine256::update (3 samples, 0.27%)</title><rect x="88.6625%" y="581" width="0.2657%" height="15" fill="rgb(215,193,15)" fg:x="1001" fg:w="3"/><text x="88.9125%" y="591.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (3 samples, 0.27%)</title><rect x="88.6625%" y="565" width="0.2657%" height="15" fill="rgb(232,15,44)" fg:x="1001" fg:w="3"/><text x="88.9125%" y="575.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (3 samples, 0.27%)</title><rect x="88.6625%" y="549" width="0.2657%" height="15" fill="rgb(212,3,48)" fg:x="1001" fg:w="3"/><text x="88.9125%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.27%)</title><rect x="88.6625%" y="533" width="0.2657%" height="15" fill="rgb(218,128,7)" fg:x="1001" fg:w="3"/><text x="88.9125%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.27%)</title><rect x="88.6625%" y="517" width="0.2657%" height="15" fill="rgb(226,216,39)" fg:x="1001" fg:w="3"/><text x="88.9125%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.09%)</title><rect x="88.9283%" y="549" width="0.0886%" height="15" fill="rgb(243,47,51)" fg:x="1004" fg:w="1"/><text x="89.1783%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.09%)</title><rect x="88.9283%" y="533" width="0.0886%" height="15" fill="rgb(241,183,40)" fg:x="1004" fg:w="1"/><text x="89.1783%" y="543.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.09%)</title><rect x="89.1054%" y="437" width="0.0886%" height="15" fill="rgb(231,217,32)" fg:x="1006" fg:w="1"/><text x="89.3554%" y="447.50"></text></g><g><title>sha2::sha256::soft::add (1 samples, 0.09%)</title><rect x="89.1940%" y="437" width="0.0886%" height="15" fill="rgb(229,61,38)" fg:x="1007" fg:w="1"/><text x="89.4440%" y="447.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.09%)</title><rect x="89.1940%" y="421" width="0.0886%" height="15" fill="rgb(225,210,5)" fg:x="1007" fg:w="1"/><text x="89.4440%" y="431.50"></text></g><g><title>sha2::sha256::soft::or (1 samples, 0.09%)</title><rect x="89.2826%" y="389" width="0.0886%" height="15" fill="rgb(231,79,45)" fg:x="1008" fg:w="1"/><text x="89.5326%" y="399.50"></text></g><g><title>sha2::sha256::soft::shl (2 samples, 0.18%)</title><rect x="89.3711%" y="389" width="0.1771%" height="15" fill="rgb(224,100,7)" fg:x="1009" fg:w="2"/><text x="89.6211%" y="399.50"></text></g><g><title>sha2::sha256::soft::sha256msg1 (4 samples, 0.35%)</title><rect x="89.2826%" y="421" width="0.3543%" height="15" fill="rgb(241,198,18)" fg:x="1008" fg:w="4"/><text x="89.5326%" y="431.50"></text></g><g><title>sha2::sha256::soft::sha256msg1::sigma0x4 (4 samples, 0.35%)</title><rect x="89.2826%" y="405" width="0.3543%" height="15" fill="rgb(252,97,53)" fg:x="1008" fg:w="4"/><text x="89.5326%" y="415.50"></text></g><g><title>sha2::sha256::soft::xor (1 samples, 0.09%)</title><rect x="89.5483%" y="389" width="0.0886%" height="15" fill="rgb(220,88,7)" fg:x="1011" fg:w="1"/><text x="89.7983%" y="399.50"></text></g><g><title>sha2::sha256::soft::schedule (8 samples, 0.71%)</title><rect x="89.2826%" y="437" width="0.7086%" height="15" fill="rgb(213,176,14)" fg:x="1008" fg:w="8"/><text x="89.5326%" y="447.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (4 samples, 0.35%)</title><rect x="89.6368%" y="421" width="0.3543%" height="15" fill="rgb(246,73,7)" fg:x="1012" fg:w="4"/><text x="89.8868%" y="431.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (4 samples, 0.35%)</title><rect x="89.6368%" y="405" width="0.3543%" height="15" fill="rgb(245,64,36)" fg:x="1012" fg:w="4"/><text x="89.8868%" y="415.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (6 samples, 0.53%)</title><rect x="91.0540%" y="421" width="0.5314%" height="15" fill="rgb(245,80,10)" fg:x="1028" fg:w="6"/><text x="91.3040%" y="431.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (47 samples, 4.16%)</title><rect x="88.2197%" y="613" width="4.1630%" height="15" fill="rgb(232,107,50)" fg:x="996" fg:w="47"/><text x="88.4697%" y="623.50">&lt;D as..</text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (39 samples, 3.45%)</title><rect x="88.9283%" y="597" width="3.4544%" height="15" fill="rgb(253,3,0)" fg:x="1004" fg:w="39"/><text x="89.1783%" y="607.50">dig..</text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (39 samples, 3.45%)</title><rect x="88.9283%" y="581" width="3.4544%" height="15" fill="rgb(212,99,53)" fg:x="1004" fg:w="39"/><text x="89.1783%" y="591.50">&lt;D ..</text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (39 samples, 3.45%)</title><rect x="88.9283%" y="565" width="3.4544%" height="15" fill="rgb(249,111,54)" fg:x="1004" fg:w="39"/><text x="89.1783%" y="575.50">&lt;sh..</text></g><g><title>sha2::sha256::Engine256::finish (38 samples, 3.37%)</title><rect x="89.0168%" y="549" width="3.3658%" height="15" fill="rgb(249,55,30)" fg:x="1005" fg:w="38"/><text x="89.2668%" y="559.50">sha..</text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (38 samples, 3.37%)</title><rect x="89.0168%" y="533" width="3.3658%" height="15" fill="rgb(237,47,42)" fg:x="1005" fg:w="38"/><text x="89.2668%" y="543.50">blo..</text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (38 samples, 3.37%)</title><rect x="89.0168%" y="517" width="3.3658%" height="15" fill="rgb(211,20,18)" fg:x="1005" fg:w="38"/><text x="89.2668%" y="527.50">sha..</text></g><g><title>sha2::sha256::compress256 (38 samples, 3.37%)</title><rect x="89.0168%" y="501" width="3.3658%" height="15" fill="rgb(231,203,46)" fg:x="1005" fg:w="38"/><text x="89.2668%" y="511.50">sha..</text></g><g><title>sha2::sha256::x86::compress (38 samples, 3.37%)</title><rect x="89.0168%" y="485" width="3.3658%" height="15" fill="rgb(237,142,3)" fg:x="1005" fg:w="38"/><text x="89.2668%" y="495.50">sha..</text></g><g><title>sha2::sha256::soft::compress (38 samples, 3.37%)</title><rect x="89.0168%" y="469" width="3.3658%" height="15" fill="rgb(241,107,1)" fg:x="1005" fg:w="38"/><text x="89.2668%" y="479.50">sha..</text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (37 samples, 3.28%)</title><rect x="89.1054%" y="453" width="3.2772%" height="15" fill="rgb(229,83,13)" fg:x="1006" fg:w="37"/><text x="89.3554%" y="463.50">sha..</text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (27 samples, 2.39%)</title><rect x="89.9911%" y="437" width="2.3915%" height="15" fill="rgb(241,91,40)" fg:x="1016" fg:w="27"/><text x="90.2411%" y="447.50">sh..</text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (9 samples, 0.80%)</title><rect x="91.5855%" y="421" width="0.7972%" height="15" fill="rgb(225,3,45)" fg:x="1034" fg:w="9"/><text x="91.8355%" y="431.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.09%)</title><rect x="92.3826%" y="517" width="0.0886%" height="15" fill="rgb(244,223,14)" fg:x="1043" fg:w="1"/><text x="92.6326%" y="527.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.27%)</title><rect x="92.4712%" y="421" width="0.2657%" height="15" fill="rgb(224,124,37)" fg:x="1044" fg:w="3"/><text x="92.7212%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.09%)</title><rect x="92.7369%" y="421" width="0.0886%" height="15" fill="rgb(251,171,30)" fg:x="1047" fg:w="1"/><text x="92.9869%" y="431.50"></text></g><g><title>alloc::string::String::reserve (5 samples, 0.44%)</title><rect x="92.4712%" y="517" width="0.4429%" height="15" fill="rgb(236,46,54)" fg:x="1044" fg:w="5"/><text x="92.7212%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.44%)</title><rect x="92.4712%" y="501" width="0.4429%" height="15" fill="rgb(245,213,5)" fg:x="1044" fg:w="5"/><text x="92.7212%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.44%)</title><rect x="92.4712%" y="485" width="0.4429%" height="15" fill="rgb(230,144,27)" fg:x="1044" fg:w="5"/><text x="92.7212%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.44%)</title><rect x="92.4712%" y="469" width="0.4429%" height="15" fill="rgb(220,86,6)" fg:x="1044" fg:w="5"/><text x="92.7212%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.44%)</title><rect x="92.4712%" y="453" width="0.4429%" height="15" fill="rgb(240,20,13)" fg:x="1044" fg:w="5"/><text x="92.7212%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.44%)</title><rect x="92.4712%" y="437" width="0.4429%" height="15" fill="rgb(217,89,34)" fg:x="1044" fg:w="5"/><text x="92.7212%" y="447.50"></text></g><g><title>__rust_alloc (1 samples, 0.09%)</title><rect x="92.8255%" y="421" width="0.0886%" height="15" fill="rgb(229,13,5)" fg:x="1048" fg:w="1"/><text x="93.0755%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.35%)</title><rect x="93.0027%" y="469" width="0.3543%" height="15" fill="rgb(244,67,35)" fg:x="1050" fg:w="4"/><text x="93.2527%" y="479.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.35%)</title><rect x="93.0027%" y="453" width="0.3543%" height="15" fill="rgb(221,40,2)" fg:x="1050" fg:w="4"/><text x="93.2527%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.27%)</title><rect x="93.3570%" y="469" width="0.2657%" height="15" fill="rgb(237,157,21)" fg:x="1054" fg:w="3"/><text x="93.6070%" y="479.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.18%)</title><rect x="93.4455%" y="453" width="0.1771%" height="15" fill="rgb(222,94,11)" fg:x="1055" fg:w="2"/><text x="93.6955%" y="463.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.80%)</title><rect x="92.9141%" y="485" width="0.7972%" height="15" fill="rgb(249,113,6)" fg:x="1049" fg:w="9"/><text x="93.1641%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.09%)</title><rect x="93.6227%" y="469" width="0.0886%" height="15" fill="rgb(238,137,36)" fg:x="1057" fg:w="1"/><text x="93.8727%" y="479.50"></text></g><g><title>core::mem::replace (1 samples, 0.09%)</title><rect x="93.6227%" y="453" width="0.0886%" height="15" fill="rgb(210,102,26)" fg:x="1057" fg:w="1"/><text x="93.8727%" y="463.50"></text></g><g><title>core::ptr::read (1 samples, 0.09%)</title><rect x="93.6227%" y="437" width="0.0886%" height="15" fill="rgb(218,30,30)" fg:x="1057" fg:w="1"/><text x="93.8727%" y="447.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="94.4198%" y="421" width="0.1771%" height="15" fill="rgb(214,67,26)" fg:x="1066" fg:w="2"/><text x="94.6698%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="94.4198%" y="405" width="0.1771%" height="15" fill="rgb(251,9,53)" fg:x="1066" fg:w="2"/><text x="94.6698%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="94.4198%" y="389" width="0.1771%" height="15" fill="rgb(228,204,25)" fg:x="1066" fg:w="2"/><text x="94.6698%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="94.4198%" y="373" width="0.1771%" height="15" fill="rgb(207,153,8)" fg:x="1066" fg:w="2"/><text x="94.6698%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="94.4198%" y="357" width="0.1771%" height="15" fill="rgb(242,9,16)" fg:x="1066" fg:w="2"/><text x="94.6698%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="94.4198%" y="341" width="0.1771%" height="15" fill="rgb(217,211,10)" fg:x="1066" fg:w="2"/><text x="94.6698%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="94.4198%" y="325" width="0.1771%" height="15" fill="rgb(219,228,52)" fg:x="1066" fg:w="2"/><text x="94.6698%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="94.4198%" y="309" width="0.1771%" height="15" fill="rgb(231,92,29)" fg:x="1066" fg:w="2"/><text x="94.6698%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.09%)</title><rect x="94.5970%" y="421" width="0.0886%" height="15" fill="rgb(232,8,23)" fg:x="1068" fg:w="1"/><text x="94.8470%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.09%)</title><rect x="94.5970%" y="405" width="0.0886%" height="15" fill="rgb(216,211,34)" fg:x="1068" fg:w="1"/><text x="94.8470%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 1.24%)</title><rect x="93.7112%" y="437" width="1.2400%" height="15" fill="rgb(236,151,0)" fg:x="1058" fg:w="14"/><text x="93.9612%" y="447.50"></text></g><g><title>core::ptr::write (3 samples, 0.27%)</title><rect x="94.6856%" y="421" width="0.2657%" height="15" fill="rgb(209,168,3)" fg:x="1069" fg:w="3"/><text x="94.9356%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 2.75%)</title><rect x="92.3826%" y="565" width="2.7458%" height="15" fill="rgb(208,129,28)" fg:x="1043" fg:w="31"/><text x="92.6326%" y="575.50">co..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (31 samples, 2.75%)</title><rect x="92.3826%" y="549" width="2.7458%" height="15" fill="rgb(229,78,22)" fg:x="1043" fg:w="31"/><text x="92.6326%" y="559.50">&lt;a..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (31 samples, 2.75%)</title><rect x="92.3826%" y="533" width="2.7458%" height="15" fill="rgb(228,187,13)" fg:x="1043" fg:w="31"/><text x="92.6326%" y="543.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 2.21%)</title><rect x="92.9141%" y="517" width="2.2143%" height="15" fill="rgb(240,119,24)" fg:x="1049" fg:w="25"/><text x="93.1641%" y="527.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 2.21%)</title><rect x="92.9141%" y="501" width="2.2143%" height="15" fill="rgb(209,194,42)" fg:x="1049" fg:w="25"/><text x="93.1641%" y="511.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (16 samples, 1.42%)</title><rect x="93.7112%" y="485" width="1.4172%" height="15" fill="rgb(247,200,46)" fg:x="1058" fg:w="16"/><text x="93.9612%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (16 samples, 1.42%)</title><rect x="93.7112%" y="469" width="1.4172%" height="15" fill="rgb(218,76,16)" fg:x="1058" fg:w="16"/><text x="93.9612%" y="479.50"></text></g><g><title>alloc::string::String::push (16 samples, 1.42%)</title><rect x="93.7112%" y="453" width="1.4172%" height="15" fill="rgb(225,21,48)" fg:x="1058" fg:w="16"/><text x="93.9612%" y="463.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (2 samples, 0.18%)</title><rect x="94.9513%" y="437" width="0.1771%" height="15" fill="rgb(239,223,50)" fg:x="1072" fg:w="2"/><text x="95.2013%" y="447.50"></text></g><g><title>core::char::methods::len_utf8 (2 samples, 0.18%)</title><rect x="94.9513%" y="421" width="0.1771%" height="15" fill="rgb(244,45,21)" fg:x="1072" fg:w="2"/><text x="95.2013%" y="431.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (79 samples, 7.00%)</title><rect x="88.2197%" y="629" width="6.9973%" height="15" fill="rgb(232,33,43)" fg:x="996" fg:w="79"/><text x="88.4697%" y="639.50">lab4::che..</text></g><g><title>hex::encode (32 samples, 2.83%)</title><rect x="92.3826%" y="613" width="2.8344%" height="15" fill="rgb(209,8,3)" fg:x="1043" fg:w="32"/><text x="92.6326%" y="623.50">he..</text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (32 samples, 2.83%)</title><rect x="92.3826%" y="597" width="2.8344%" height="15" fill="rgb(214,25,53)" fg:x="1043" fg:w="32"/><text x="92.6326%" y="607.50">&lt;T..</text></g><g><title>hex::encode_to_iter (32 samples, 2.83%)</title><rect x="92.3826%" y="581" width="2.8344%" height="15" fill="rgb(254,186,54)" fg:x="1043" fg:w="32"/><text x="92.6326%" y="591.50">he..</text></g><g><title>hex::BytesToHexChars::new (1 samples, 0.09%)</title><rect x="95.1284%" y="565" width="0.0886%" height="15" fill="rgb(208,174,49)" fg:x="1074" fg:w="1"/><text x="95.3784%" y="575.50"></text></g><g><title>std::panic::catch_unwind (998 samples, 88.40%)</title><rect x="9.3888%" y="773" width="88.3968%" height="15" fill="rgb(233,191,51)" fg:x="106" fg:w="998"/><text x="9.6388%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (998 samples, 88.40%)</title><rect x="9.3888%" y="757" width="88.3968%" height="15" fill="rgb(222,134,10)" fg:x="106" fg:w="998"/><text x="9.6388%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (998 samples, 88.40%)</title><rect x="9.3888%" y="741" width="88.3968%" height="15" fill="rgb(230,226,20)" fg:x="106" fg:w="998"/><text x="9.6388%" y="751.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (998 samples, 88.40%)</title><rect x="9.3888%" y="725" width="88.3968%" height="15" fill="rgb(251,111,25)" fg:x="106" fg:w="998"/><text x="9.6388%" y="735.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (998 samples, 88.40%)</title><rect x="9.3888%" y="709" width="88.3968%" height="15" fill="rgb(224,40,46)" fg:x="106" fg:w="998"/><text x="9.6388%" y="719.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (998 samples, 88.40%)</title><rect x="9.3888%" y="693" width="88.3968%" height="15" fill="rgb(236,108,47)" fg:x="106" fg:w="998"/><text x="9.6388%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (998 samples, 88.40%)</title><rect x="9.3888%" y="677" width="88.3968%" height="15" fill="rgb(234,93,0)" fg:x="106" fg:w="998"/><text x="9.6388%" y="687.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (561 samples, 49.69%)</title><rect x="48.0957%" y="661" width="49.6900%" height="15" fill="rgb(224,213,32)" fg:x="543" fg:w="561"/><text x="48.3457%" y="671.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (325 samples, 28.79%)</title><rect x="68.9991%" y="645" width="28.7865%" height="15" fill="rgb(251,11,48)" fg:x="779" fg:w="325"/><text x="69.2491%" y="655.50">lab4::student::Student::build_idea</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 2.57%)</title><rect x="95.2170%" y="629" width="2.5686%" height="15" fill="rgb(236,173,5)" fg:x="1075" fg:w="29"/><text x="95.4670%" y="639.50">st..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (29 samples, 2.57%)</title><rect x="95.2170%" y="613" width="2.5686%" height="15" fill="rgb(230,95,12)" fg:x="1075" fg:w="29"/><text x="95.4670%" y="623.50">st..</text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (29 samples, 2.57%)</title><rect x="95.2170%" y="597" width="2.5686%" height="15" fill="rgb(232,209,1)" fg:x="1075" fg:w="29"/><text x="95.4670%" y="607.50">st..</text></g><g><title>std::sys::unix::futex::futex_wait (29 samples, 2.57%)</title><rect x="95.2170%" y="581" width="2.5686%" height="15" fill="rgb(232,6,1)" fg:x="1075" fg:w="29"/><text x="95.4670%" y="591.50">st..</text></g><g><title>syscall (29 samples, 2.57%)</title><rect x="95.2170%" y="565" width="2.5686%" height="15" fill="rgb(210,224,50)" fg:x="1075" fg:w="29"/><text x="95.4670%" y="575.50">sy..</text></g><g><title>[unknown] (29 samples, 2.57%)</title><rect x="95.2170%" y="549" width="2.5686%" height="15" fill="rgb(228,127,35)" fg:x="1075" fg:w="29"/><text x="95.4670%" y="559.50">[u..</text></g><g><title>[unknown] (29 samples, 2.57%)</title><rect x="95.2170%" y="533" width="2.5686%" height="15" fill="rgb(245,102,45)" fg:x="1075" fg:w="29"/><text x="95.4670%" y="543.50">[u..</text></g><g><title>[unknown] (29 samples, 2.57%)</title><rect x="95.2170%" y="517" width="2.5686%" height="15" fill="rgb(214,1,49)" fg:x="1075" fg:w="29"/><text x="95.4670%" y="527.50">[u..</text></g><g><title>[unknown] (29 samples, 2.57%)</title><rect x="95.2170%" y="501" width="2.5686%" height="15" fill="rgb(226,163,40)" fg:x="1075" fg:w="29"/><text x="95.4670%" y="511.50">[u..</text></g><g><title>[unknown] (29 samples, 2.57%)</title><rect x="95.2170%" y="485" width="2.5686%" height="15" fill="rgb(239,212,28)" fg:x="1075" fg:w="29"/><text x="95.4670%" y="495.50">[u..</text></g><g><title>[unknown] (28 samples, 2.48%)</title><rect x="95.3056%" y="469" width="2.4801%" height="15" fill="rgb(220,20,13)" fg:x="1076" fg:w="28"/><text x="95.5556%" y="479.50">[u..</text></g><g><title>[unknown] (26 samples, 2.30%)</title><rect x="95.4827%" y="453" width="2.3029%" height="15" fill="rgb(210,164,35)" fg:x="1078" fg:w="26"/><text x="95.7327%" y="463.50">[..</text></g><g><title>[unknown] (26 samples, 2.30%)</title><rect x="95.4827%" y="437" width="2.3029%" height="15" fill="rgb(248,109,41)" fg:x="1078" fg:w="26"/><text x="95.7327%" y="447.50">[..</text></g><g><title>[unknown] (26 samples, 2.30%)</title><rect x="95.4827%" y="421" width="2.3029%" height="15" fill="rgb(238,23,50)" fg:x="1078" fg:w="26"/><text x="95.7327%" y="431.50">[..</text></g><g><title>[unknown] (26 samples, 2.30%)</title><rect x="95.4827%" y="405" width="2.3029%" height="15" fill="rgb(211,48,49)" fg:x="1078" fg:w="26"/><text x="95.7327%" y="415.50">[..</text></g><g><title>[unknown] (26 samples, 2.30%)</title><rect x="95.4827%" y="389" width="2.3029%" height="15" fill="rgb(223,36,21)" fg:x="1078" fg:w="26"/><text x="95.7327%" y="399.50">[..</text></g><g><title>[unknown] (26 samples, 2.30%)</title><rect x="95.4827%" y="373" width="2.3029%" height="15" fill="rgb(207,123,46)" fg:x="1078" fg:w="26"/><text x="95.7327%" y="383.50">[..</text></g><g><title>[unknown] (26 samples, 2.30%)</title><rect x="95.4827%" y="357" width="2.3029%" height="15" fill="rgb(240,218,32)" fg:x="1078" fg:w="26"/><text x="95.7327%" y="367.50">[..</text></g><g><title>[unknown] (26 samples, 2.30%)</title><rect x="95.4827%" y="341" width="2.3029%" height="15" fill="rgb(252,5,43)" fg:x="1078" fg:w="26"/><text x="95.7327%" y="351.50">[..</text></g><g><title>[unknown] (7 samples, 0.62%)</title><rect x="97.7857%" y="677" width="0.6200%" height="15" fill="rgb(252,84,19)" fg:x="1104" fg:w="7"/><text x="98.0357%" y="687.50"></text></g><g><title>[unknown] (7 samples, 0.62%)</title><rect x="97.7857%" y="661" width="0.6200%" height="15" fill="rgb(243,152,39)" fg:x="1104" fg:w="7"/><text x="98.0357%" y="671.50"></text></g><g><title>[unknown] (7 samples, 0.62%)</title><rect x="97.7857%" y="645" width="0.6200%" height="15" fill="rgb(234,160,15)" fg:x="1104" fg:w="7"/><text x="98.0357%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.62%)</title><rect x="97.7857%" y="629" width="0.6200%" height="15" fill="rgb(237,34,20)" fg:x="1104" fg:w="7"/><text x="98.0357%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.62%)</title><rect x="97.7857%" y="613" width="0.6200%" height="15" fill="rgb(229,97,13)" fg:x="1104" fg:w="7"/><text x="98.0357%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="97.8742%" y="597" width="0.5314%" height="15" fill="rgb(234,71,50)" fg:x="1105" fg:w="6"/><text x="98.1242%" y="607.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="97.8742%" y="581" width="0.5314%" height="15" fill="rgb(253,155,4)" fg:x="1105" fg:w="6"/><text x="98.1242%" y="591.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="97.8742%" y="565" width="0.5314%" height="15" fill="rgb(222,185,37)" fg:x="1105" fg:w="6"/><text x="98.1242%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="97.8742%" y="549" width="0.5314%" height="15" fill="rgb(251,177,13)" fg:x="1105" fg:w="6"/><text x="98.1242%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="97.9628%" y="533" width="0.4429%" height="15" fill="rgb(250,179,40)" fg:x="1106" fg:w="5"/><text x="98.2128%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="97.9628%" y="517" width="0.4429%" height="15" fill="rgb(242,44,2)" fg:x="1106" fg:w="5"/><text x="98.2128%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="97.9628%" y="501" width="0.4429%" height="15" fill="rgb(216,177,13)" fg:x="1106" fg:w="5"/><text x="98.2128%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="97.9628%" y="485" width="0.4429%" height="15" fill="rgb(216,106,43)" fg:x="1106" fg:w="5"/><text x="98.2128%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="97.9628%" y="469" width="0.4429%" height="15" fill="rgb(216,183,2)" fg:x="1106" fg:w="5"/><text x="98.2128%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,006 samples, 89.11%)</title><rect x="9.3888%" y="837" width="89.1054%" height="15" fill="rgb(249,75,3)" fg:x="106" fg:w="1006"/><text x="9.6388%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,006 samples, 89.11%)</title><rect x="9.3888%" y="821" width="89.1054%" height="15" fill="rgb(219,67,39)" fg:x="106" fg:w="1006"/><text x="9.6388%" y="831.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,006 samples, 89.11%)</title><rect x="9.3888%" y="805" width="89.1054%" height="15" fill="rgb(253,228,2)" fg:x="106" fg:w="1006"/><text x="9.6388%" y="815.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1,006 samples, 89.11%)</title><rect x="9.3888%" y="789" width="89.1054%" height="15" fill="rgb(235,138,27)" fg:x="106" fg:w="1006"/><text x="9.6388%" y="799.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (8 samples, 0.71%)</title><rect x="97.7857%" y="773" width="0.7086%" height="15" fill="rgb(236,97,51)" fg:x="1104" fg:w="8"/><text x="98.0357%" y="783.50"></text></g><g><title>pthread_getattr_np (8 samples, 0.71%)</title><rect x="97.7857%" y="757" width="0.7086%" height="15" fill="rgb(240,80,30)" fg:x="1104" fg:w="8"/><text x="98.0357%" y="767.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.71%)</title><rect x="97.7857%" y="741" width="0.7086%" height="15" fill="rgb(230,178,19)" fg:x="1104" fg:w="8"/><text x="98.0357%" y="751.50"></text></g><g><title>tcache_init.part.0 (8 samples, 0.71%)</title><rect x="97.7857%" y="725" width="0.7086%" height="15" fill="rgb(210,190,27)" fg:x="1104" fg:w="8"/><text x="98.0357%" y="735.50"></text></g><g><title>arena_get2.part.0 (8 samples, 0.71%)</title><rect x="97.7857%" y="709" width="0.7086%" height="15" fill="rgb(222,107,31)" fg:x="1104" fg:w="8"/><text x="98.0357%" y="719.50"></text></g><g><title>new_heap (8 samples, 0.71%)</title><rect x="97.7857%" y="693" width="0.7086%" height="15" fill="rgb(216,127,34)" fg:x="1104" fg:w="8"/><text x="98.0357%" y="703.50"></text></g><g><title>__GI_munmap (1 samples, 0.09%)</title><rect x="98.4057%" y="677" width="0.0886%" height="15" fill="rgb(234,116,52)" fg:x="1111" fg:w="1"/><text x="98.6557%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.4057%" y="661" width="0.0886%" height="15" fill="rgb(222,124,15)" fg:x="1111" fg:w="1"/><text x="98.6557%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.4057%" y="645" width="0.0886%" height="15" fill="rgb(231,179,28)" fg:x="1111" fg:w="1"/><text x="98.6557%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.4057%" y="629" width="0.0886%" height="15" fill="rgb(226,93,45)" fg:x="1111" fg:w="1"/><text x="98.6557%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.4057%" y="613" width="0.0886%" height="15" fill="rgb(215,8,51)" fg:x="1111" fg:w="1"/><text x="98.6557%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.4057%" y="597" width="0.0886%" height="15" fill="rgb(223,106,5)" fg:x="1111" fg:w="1"/><text x="98.6557%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.4057%" y="581" width="0.0886%" height="15" fill="rgb(250,191,5)" fg:x="1111" fg:w="1"/><text x="98.6557%" y="591.50"></text></g><g><title>__sigaltstack (1 samples, 0.09%)</title><rect x="98.4942%" y="805" width="0.0886%" height="15" fill="rgb(242,132,44)" fg:x="1112" fg:w="1"/><text x="98.7442%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="98.4942%" y="789" width="0.0886%" height="15" fill="rgb(251,152,29)" fg:x="1112" fg:w="1"/><text x="98.7442%" y="799.50"></text></g><g><title>__GI___clone (1,049 samples, 92.91%)</title><rect x="5.8459%" y="885" width="92.9141%" height="15" fill="rgb(218,179,5)" fg:x="66" fg:w="1049"/><text x="6.0959%" y="895.50">__GI___clone</text></g><g><title>start_thread (1,009 samples, 89.37%)</title><rect x="9.3888%" y="869" width="89.3711%" height="15" fill="rgb(227,67,19)" fg:x="106" fg:w="1009"/><text x="9.6388%" y="879.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,009 samples, 89.37%)</title><rect x="9.3888%" y="853" width="89.3711%" height="15" fill="rgb(233,119,31)" fg:x="106" fg:w="1009"/><text x="9.6388%" y="863.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (3 samples, 0.27%)</title><rect x="98.4942%" y="837" width="0.2657%" height="15" fill="rgb(241,120,22)" fg:x="1112" fg:w="3"/><text x="98.7442%" y="847.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (3 samples, 0.27%)</title><rect x="98.4942%" y="821" width="0.2657%" height="15" fill="rgb(224,102,30)" fg:x="1112" fg:w="3"/><text x="98.7442%" y="831.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (2 samples, 0.18%)</title><rect x="98.5828%" y="805" width="0.1771%" height="15" fill="rgb(210,164,37)" fg:x="1113" fg:w="2"/><text x="98.8328%" y="815.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (2 samples, 0.18%)</title><rect x="98.5828%" y="789" width="0.1771%" height="15" fill="rgb(226,191,16)" fg:x="1113" fg:w="2"/><text x="98.8328%" y="799.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.18%)</title><rect x="98.5828%" y="773" width="0.1771%" height="15" fill="rgb(214,40,45)" fg:x="1113" fg:w="2"/><text x="98.8328%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="98.5828%" y="757" width="0.1771%" height="15" fill="rgb(244,29,26)" fg:x="1113" fg:w="2"/><text x="98.8328%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="98.5828%" y="741" width="0.1771%" height="15" fill="rgb(216,16,5)" fg:x="1113" fg:w="2"/><text x="98.8328%" y="751.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="98.5828%" y="725" width="0.1771%" height="15" fill="rgb(249,76,35)" fg:x="1113" fg:w="2"/><text x="98.8328%" y="735.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="98.5828%" y="709" width="0.1771%" height="15" fill="rgb(207,11,44)" fg:x="1113" fg:w="2"/><text x="98.8328%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="98.5828%" y="693" width="0.1771%" height="15" fill="rgb(228,190,49)" fg:x="1113" fg:w="2"/><text x="98.8328%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="98.5828%" y="677" width="0.1771%" height="15" fill="rgb(214,173,12)" fg:x="1113" fg:w="2"/><text x="98.8328%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="98.5828%" y="661" width="0.1771%" height="15" fill="rgb(218,26,35)" fg:x="1113" fg:w="2"/><text x="98.8328%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.18%)</title><rect x="98.5828%" y="645" width="0.1771%" height="15" fill="rgb(220,200,19)" fg:x="1113" fg:w="2"/><text x="98.8328%" y="655.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.44%)</title><rect x="98.7600%" y="885" width="0.4429%" height="15" fill="rgb(239,95,49)" fg:x="1115" fg:w="5"/><text x="99.0100%" y="895.50"></text></g><g><title>__rdl_realloc (2 samples, 0.18%)</title><rect x="99.2028%" y="885" width="0.1771%" height="15" fill="rgb(235,85,53)" fg:x="1120" fg:w="2"/><text x="99.4528%" y="895.50"></text></g><g><title>lab4 (1,123 samples, 99.47%)</title><rect x="0.0000%" y="901" width="99.4686%" height="15" fill="rgb(233,133,31)" fg:x="0" fg:w="1123"/><text x="0.2500%" y="911.50">lab4</text></g><g><title>_start (1 samples, 0.09%)</title><rect x="99.3800%" y="885" width="0.0886%" height="15" fill="rgb(218,25,20)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="895.50"></text></g><g><title>_dl_start (1 samples, 0.09%)</title><rect x="99.3800%" y="869" width="0.0886%" height="15" fill="rgb(252,210,38)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="879.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.09%)</title><rect x="99.3800%" y="853" width="0.0886%" height="15" fill="rgb(242,134,21)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="863.50"></text></g><g><title>dl_main (1 samples, 0.09%)</title><rect x="99.3800%" y="837" width="0.0886%" height="15" fill="rgb(213,28,48)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="847.50"></text></g><g><title>_dl_receive_error (1 samples, 0.09%)</title><rect x="99.3800%" y="821" width="0.0886%" height="15" fill="rgb(250,196,2)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="831.50"></text></g><g><title>version_check_doit (1 samples, 0.09%)</title><rect x="99.3800%" y="805" width="0.0886%" height="15" fill="rgb(227,5,17)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="815.50"></text></g><g><title>_dl_check_all_versions (1 samples, 0.09%)</title><rect x="99.3800%" y="789" width="0.0886%" height="15" fill="rgb(221,226,24)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="799.50"></text></g><g><title>_dl_check_map_versions (1 samples, 0.09%)</title><rect x="99.3800%" y="773" width="0.0886%" height="15" fill="rgb(211,5,48)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="757" width="0.0886%" height="15" fill="rgb(219,150,6)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="741" width="0.0886%" height="15" fill="rgb(251,46,16)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="725" width="0.0886%" height="15" fill="rgb(220,204,40)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="709" width="0.0886%" height="15" fill="rgb(211,85,2)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="693" width="0.0886%" height="15" fill="rgb(229,17,7)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="677" width="0.0886%" height="15" fill="rgb(239,72,28)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="661" width="0.0886%" height="15" fill="rgb(230,47,54)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="645" width="0.0886%" height="15" fill="rgb(214,50,8)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="629" width="0.0886%" height="15" fill="rgb(216,198,43)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="613" width="0.0886%" height="15" fill="rgb(234,20,35)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="597" width="0.0886%" height="15" fill="rgb(254,45,19)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="581" width="0.0886%" height="15" fill="rgb(219,14,44)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="565" width="0.0886%" height="15" fill="rgb(217,220,26)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="549" width="0.0886%" height="15" fill="rgb(213,158,28)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="533" width="0.0886%" height="15" fill="rgb(252,51,52)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="517" width="0.0886%" height="15" fill="rgb(246,89,16)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="501" width="0.0886%" height="15" fill="rgb(216,158,49)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.09%)</title><rect x="99.3800%" y="485" width="0.0886%" height="15" fill="rgb(236,107,19)" fg:x="1122" fg:w="1"/><text x="99.6300%" y="495.50"></text></g><g><title>all (1,129 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(228,185,30)" fg:x="0" fg:w="1129"/><text x="0.2500%" y="927.50"></text></g><g><title>perf-exec (6 samples, 0.53%)</title><rect x="99.4686%" y="901" width="0.5314%" height="15" fill="rgb(246,134,8)" fg:x="1123" fg:w="6"/><text x="99.7186%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="99.4686%" y="885" width="0.5314%" height="15" fill="rgb(214,143,50)" fg:x="1123" fg:w="6"/><text x="99.7186%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="99.4686%" y="869" width="0.5314%" height="15" fill="rgb(228,75,8)" fg:x="1123" fg:w="6"/><text x="99.7186%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="99.4686%" y="853" width="0.5314%" height="15" fill="rgb(207,175,4)" fg:x="1123" fg:w="6"/><text x="99.7186%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="99.4686%" y="837" width="0.5314%" height="15" fill="rgb(205,108,24)" fg:x="1123" fg:w="6"/><text x="99.7186%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="99.4686%" y="821" width="0.5314%" height="15" fill="rgb(244,120,49)" fg:x="1123" fg:w="6"/><text x="99.7186%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="99.4686%" y="805" width="0.5314%" height="15" fill="rgb(223,47,38)" fg:x="1123" fg:w="6"/><text x="99.7186%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="99.4686%" y="789" width="0.5314%" height="15" fill="rgb(229,179,11)" fg:x="1123" fg:w="6"/><text x="99.7186%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="99.4686%" y="773" width="0.5314%" height="15" fill="rgb(231,122,1)" fg:x="1123" fg:w="6"/><text x="99.7186%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="99.4686%" y="757" width="0.5314%" height="15" fill="rgb(245,119,9)" fg:x="1123" fg:w="6"/><text x="99.7186%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.53%)</title><rect x="99.4686%" y="741" width="0.5314%" height="15" fill="rgb(241,163,25)" fg:x="1123" fg:w="6"/><text x="99.7186%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="99.5571%" y="725" width="0.4429%" height="15" fill="rgb(217,214,3)" fg:x="1124" fg:w="5"/><text x="99.8071%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="99.5571%" y="709" width="0.4429%" height="15" fill="rgb(240,86,28)" fg:x="1124" fg:w="5"/><text x="99.8071%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="99.5571%" y="693" width="0.4429%" height="15" fill="rgb(215,47,9)" fg:x="1124" fg:w="5"/><text x="99.8071%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.44%)</title><rect x="99.5571%" y="677" width="0.4429%" height="15" fill="rgb(252,25,45)" fg:x="1124" fg:w="5"/><text x="99.8071%" y="687.50"></text></g></svg></svg>