<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1318" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1301.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1301.00"> </text><svg id="frames" x="10" width="1180" total_samples="1401"><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="0.0000%" y="1221" width="0.1428%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1231.50"></text></g><g><title>[anon] (5 samples, 0.36%)</title><rect x="0.0000%" y="1237" width="0.3569%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="1247.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (3 samples, 0.21%)</title><rect x="0.1428%" y="1221" width="0.2141%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="3"/><text x="0.3928%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="0.8565%" y="1221" width="0.0714%" height="15" fill="rgb(248,212,6)" fg:x="12" fg:w="1"/><text x="1.1065%" y="1231.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="0.9279%" y="1221" width="0.1428%" height="15" fill="rgb(208,68,35)" fg:x="13" fg:w="2"/><text x="1.1779%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="0.9993%" y="1205" width="0.0714%" height="15" fill="rgb(232,128,0)" fg:x="14" fg:w="1"/><text x="1.2493%" y="1215.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="0.9993%" y="1189" width="0.0714%" height="15" fill="rgb(207,160,47)" fg:x="14" fg:w="1"/><text x="1.2493%" y="1199.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1 samples, 0.07%)</title><rect x="0.9993%" y="1173" width="0.0714%" height="15" fill="rgb(228,23,34)" fg:x="14" fg:w="1"/><text x="1.2493%" y="1183.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="1.0707%" y="1221" width="0.1428%" height="15" fill="rgb(218,30,26)" fg:x="15" fg:w="2"/><text x="1.3207%" y="1231.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="1.2134%" y="1221" width="0.1428%" height="15" fill="rgb(220,122,19)" fg:x="17" fg:w="2"/><text x="1.4634%" y="1231.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="1.2134%" y="1205" width="0.1428%" height="15" fill="rgb(250,228,42)" fg:x="17" fg:w="2"/><text x="1.4634%" y="1215.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="1.2134%" y="1189" width="0.1428%" height="15" fill="rgb(240,193,28)" fg:x="17" fg:w="2"/><text x="1.4634%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="1173" width="0.0714%" height="15" fill="rgb(216,20,37)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="1157" width="0.0714%" height="15" fill="rgb(206,188,39)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="1141" width="0.0714%" height="15" fill="rgb(217,207,13)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="1125" width="0.0714%" height="15" fill="rgb(231,73,38)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="1109" width="0.0714%" height="15" fill="rgb(225,20,46)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="1093" width="0.0714%" height="15" fill="rgb(210,31,41)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="1077" width="0.0714%" height="15" fill="rgb(221,200,47)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="1061" width="0.0714%" height="15" fill="rgb(226,26,5)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="1045" width="0.0714%" height="15" fill="rgb(249,33,26)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="1029" width="0.0714%" height="15" fill="rgb(235,183,28)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="1013" width="0.0714%" height="15" fill="rgb(221,5,38)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="997" width="0.0714%" height="15" fill="rgb(247,18,42)" fg:x="18" fg:w="1"/><text x="1.5348%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="981" width="0.0714%" height="15" fill="rgb(241,131,45)" fg:x="18" fg:w="1"/><text x="1.5348%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="965" width="0.0714%" height="15" fill="rgb(249,31,29)" fg:x="18" fg:w="1"/><text x="1.5348%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="949" width="0.0714%" height="15" fill="rgb(225,111,53)" fg:x="18" fg:w="1"/><text x="1.5348%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.2848%" y="933" width="0.0714%" height="15" fill="rgb(238,160,17)" fg:x="18" fg:w="1"/><text x="1.5348%" y="943.50"></text></g><g><title>__libc_open64 (1 samples, 0.07%)</title><rect x="1.3562%" y="1221" width="0.0714%" height="15" fill="rgb(214,148,48)" fg:x="19" fg:w="1"/><text x="1.6062%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="1.3562%" y="1205" width="0.0714%" height="15" fill="rgb(232,36,49)" fg:x="19" fg:w="1"/><text x="1.6062%" y="1215.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="1.4276%" y="1221" width="0.0714%" height="15" fill="rgb(209,103,24)" fg:x="20" fg:w="1"/><text x="1.6776%" y="1231.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="1.4989%" y="1221" width="0.0714%" height="15" fill="rgb(229,88,8)" fg:x="21" fg:w="1"/><text x="1.7489%" y="1231.50"></text></g><g><title>core::slice::memchr::memchr_aligned (25 samples, 1.78%)</title><rect x="1.5703%" y="1221" width="1.7844%" height="15" fill="rgb(213,181,19)" fg:x="22" fg:w="25"/><text x="1.8203%" y="1231.50">c..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (7 samples, 0.50%)</title><rect x="2.8551%" y="1205" width="0.4996%" height="15" fill="rgb(254,191,54)" fg:x="40" fg:w="7"/><text x="3.1051%" y="1215.50"></text></g><g><title>core::ptr::align_offset (7 samples, 0.50%)</title><rect x="2.8551%" y="1189" width="0.4996%" height="15" fill="rgb(241,83,37)" fg:x="40" fg:w="7"/><text x="3.1051%" y="1199.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (7 samples, 0.50%)</title><rect x="3.3547%" y="1221" width="0.4996%" height="15" fill="rgb(233,36,39)" fg:x="47" fg:w="7"/><text x="3.6047%" y="1231.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (5 samples, 0.36%)</title><rect x="3.8544%" y="1221" width="0.3569%" height="15" fill="rgb(226,3,54)" fg:x="54" fg:w="5"/><text x="4.1044%" y="1231.50"></text></g><g><title>[unknown] (67 samples, 4.78%)</title><rect x="0.3569%" y="1237" width="4.7823%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="67"/><text x="0.6069%" y="1247.50">[unkno..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (13 samples, 0.93%)</title><rect x="4.2113%" y="1221" width="0.9279%" height="15" fill="rgb(238,167,29)" fg:x="59" fg:w="13"/><text x="4.4613%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.1392%" y="1221" width="0.3569%" height="15" fill="rgb(232,182,51)" fg:x="72" fg:w="5"/><text x="5.3892%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.1392%" y="1205" width="0.3569%" height="15" fill="rgb(231,60,39)" fg:x="72" fg:w="5"/><text x="5.3892%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.1392%" y="1189" width="0.3569%" height="15" fill="rgb(208,69,12)" fg:x="72" fg:w="5"/><text x="5.3892%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.1392%" y="1173" width="0.3569%" height="15" fill="rgb(235,93,37)" fg:x="72" fg:w="5"/><text x="5.3892%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.1392%" y="1157" width="0.3569%" height="15" fill="rgb(213,116,39)" fg:x="72" fg:w="5"/><text x="5.3892%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.1392%" y="1141" width="0.3569%" height="15" fill="rgb(222,207,29)" fg:x="72" fg:w="5"/><text x="5.3892%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.1392%" y="1125" width="0.3569%" height="15" fill="rgb(206,96,30)" fg:x="72" fg:w="5"/><text x="5.3892%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.1392%" y="1109" width="0.3569%" height="15" fill="rgb(218,138,4)" fg:x="72" fg:w="5"/><text x="5.3892%" y="1119.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="5.4961%" y="1205" width="0.4283%" height="15" fill="rgb(250,191,14)" fg:x="77" fg:w="6"/><text x="5.7461%" y="1215.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="5.4961%" y="1189" width="0.4283%" height="15" fill="rgb(239,60,40)" fg:x="77" fg:w="6"/><text x="5.7461%" y="1199.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="5.4961%" y="1173" width="0.4283%" height="15" fill="rgb(206,27,48)" fg:x="77" fg:w="6"/><text x="5.7461%" y="1183.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="5.4961%" y="1157" width="0.4283%" height="15" fill="rgb(225,35,8)" fg:x="77" fg:w="6"/><text x="5.7461%" y="1167.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="5.4961%" y="1141" width="0.4283%" height="15" fill="rgb(250,213,24)" fg:x="77" fg:w="6"/><text x="5.7461%" y="1151.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="5.4961%" y="1125" width="0.4283%" height="15" fill="rgb(247,123,22)" fg:x="77" fg:w="6"/><text x="5.7461%" y="1135.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="5.4961%" y="1109" width="0.4283%" height="15" fill="rgb(231,138,38)" fg:x="77" fg:w="6"/><text x="5.7461%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.5675%" y="1093" width="0.3569%" height="15" fill="rgb(231,145,46)" fg:x="78" fg:w="5"/><text x="5.8175%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.5675%" y="1077" width="0.3569%" height="15" fill="rgb(251,118,11)" fg:x="78" fg:w="5"/><text x="5.8175%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.5675%" y="1061" width="0.3569%" height="15" fill="rgb(217,147,25)" fg:x="78" fg:w="5"/><text x="5.8175%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.5675%" y="1045" width="0.3569%" height="15" fill="rgb(247,81,37)" fg:x="78" fg:w="5"/><text x="5.8175%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.5675%" y="1029" width="0.3569%" height="15" fill="rgb(209,12,38)" fg:x="78" fg:w="5"/><text x="5.8175%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.5675%" y="1013" width="0.3569%" height="15" fill="rgb(227,1,9)" fg:x="78" fg:w="5"/><text x="5.8175%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.5675%" y="997" width="0.3569%" height="15" fill="rgb(248,47,43)" fg:x="78" fg:w="5"/><text x="5.8175%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="5.5675%" y="981" width="0.3569%" height="15" fill="rgb(221,10,30)" fg:x="78" fg:w="5"/><text x="5.8175%" y="991.50"></text></g><g><title>__malloc_arena_thread_freeres (1 samples, 0.07%)</title><rect x="5.9243%" y="1205" width="0.0714%" height="15" fill="rgb(210,229,1)" fg:x="83" fg:w="1"/><text x="6.1743%" y="1215.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (1 samples, 0.07%)</title><rect x="5.9957%" y="965" width="0.0714%" height="15" fill="rgb(222,148,37)" fg:x="84" fg:w="1"/><text x="6.2457%" y="975.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (1 samples, 0.07%)</title><rect x="5.9957%" y="949" width="0.0714%" height="15" fill="rgb(234,67,33)" fg:x="84" fg:w="1"/><text x="6.2457%" y="959.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.07%)</title><rect x="5.9957%" y="933" width="0.0714%" height="15" fill="rgb(247,98,35)" fg:x="84" fg:w="1"/><text x="6.2457%" y="943.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.07%)</title><rect x="5.9957%" y="917" width="0.0714%" height="15" fill="rgb(247,138,52)" fg:x="84" fg:w="1"/><text x="6.2457%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.07%)</title><rect x="5.9957%" y="901" width="0.0714%" height="15" fill="rgb(213,79,30)" fg:x="84" fg:w="1"/><text x="6.2457%" y="911.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (10 samples, 0.71%)</title><rect x="5.9957%" y="997" width="0.7138%" height="15" fill="rgb(246,177,23)" fg:x="84" fg:w="10"/><text x="6.2457%" y="1007.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (10 samples, 0.71%)</title><rect x="5.9957%" y="981" width="0.7138%" height="15" fill="rgb(230,62,27)" fg:x="84" fg:w="10"/><text x="6.2457%" y="991.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (9 samples, 0.64%)</title><rect x="6.0671%" y="965" width="0.6424%" height="15" fill="rgb(216,154,8)" fg:x="85" fg:w="9"/><text x="6.3171%" y="975.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (9 samples, 0.64%)</title><rect x="6.0671%" y="949" width="0.6424%" height="15" fill="rgb(244,35,45)" fg:x="85" fg:w="9"/><text x="6.3171%" y="959.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (9 samples, 0.64%)</title><rect x="6.0671%" y="933" width="0.6424%" height="15" fill="rgb(251,115,12)" fg:x="85" fg:w="9"/><text x="6.3171%" y="943.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (9 samples, 0.64%)</title><rect x="6.0671%" y="917" width="0.6424%" height="15" fill="rgb(240,54,50)" fg:x="85" fg:w="9"/><text x="6.3171%" y="927.50"></text></g><g><title>__GI___sched_yield (9 samples, 0.64%)</title><rect x="6.0671%" y="901" width="0.6424%" height="15" fill="rgb(233,84,52)" fg:x="85" fg:w="9"/><text x="6.3171%" y="911.50"></text></g><g><title>[unknown] (9 samples, 0.64%)</title><rect x="6.0671%" y="885" width="0.6424%" height="15" fill="rgb(207,117,47)" fg:x="85" fg:w="9"/><text x="6.3171%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="6.2812%" y="869" width="0.4283%" height="15" fill="rgb(249,43,39)" fg:x="88" fg:w="6"/><text x="6.5312%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="6.2812%" y="853" width="0.4283%" height="15" fill="rgb(209,38,44)" fg:x="88" fg:w="6"/><text x="6.5312%" y="863.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="6.4954%" y="837" width="0.2141%" height="15" fill="rgb(236,212,23)" fg:x="91" fg:w="3"/><text x="6.7454%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="6.4954%" y="821" width="0.2141%" height="15" fill="rgb(242,79,21)" fg:x="91" fg:w="3"/><text x="6.7454%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="6.4954%" y="805" width="0.2141%" height="15" fill="rgb(211,96,35)" fg:x="91" fg:w="3"/><text x="6.7454%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="6.5667%" y="789" width="0.1428%" height="15" fill="rgb(253,215,40)" fg:x="92" fg:w="2"/><text x="6.8167%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="6.6381%" y="773" width="0.0714%" height="15" fill="rgb(211,81,21)" fg:x="93" fg:w="1"/><text x="6.8881%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="6.6381%" y="757" width="0.0714%" height="15" fill="rgb(208,190,38)" fg:x="93" fg:w="1"/><text x="6.8881%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="6.6381%" y="741" width="0.0714%" height="15" fill="rgb(235,213,38)" fg:x="93" fg:w="1"/><text x="6.8881%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="6.6381%" y="725" width="0.0714%" height="15" fill="rgb(237,122,38)" fg:x="93" fg:w="1"/><text x="6.8881%" y="735.50"></text></g><g><title>lab4::checksum::Checksum::update (1 samples, 0.07%)</title><rect x="6.7095%" y="997" width="0.0714%" height="15" fill="rgb(244,218,35)" fg:x="94" fg:w="1"/><text x="6.9595%" y="1007.50"></text></g><g><title>hex::encode (1 samples, 0.07%)</title><rect x="6.7095%" y="981" width="0.0714%" height="15" fill="rgb(240,68,47)" fg:x="94" fg:w="1"/><text x="6.9595%" y="991.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (1 samples, 0.07%)</title><rect x="6.7095%" y="965" width="0.0714%" height="15" fill="rgb(210,16,53)" fg:x="94" fg:w="1"/><text x="6.9595%" y="975.50"></text></g><g><title>hex::encode_to_iter (1 samples, 0.07%)</title><rect x="6.7095%" y="949" width="0.0714%" height="15" fill="rgb(235,124,12)" fg:x="94" fg:w="1"/><text x="6.9595%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="6.7095%" y="933" width="0.0714%" height="15" fill="rgb(224,169,11)" fg:x="94" fg:w="1"/><text x="6.9595%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="6.7095%" y="917" width="0.0714%" height="15" fill="rgb(250,166,2)" fg:x="94" fg:w="1"/><text x="6.9595%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.07%)</title><rect x="6.7095%" y="901" width="0.0714%" height="15" fill="rgb(242,216,29)" fg:x="94" fg:w="1"/><text x="6.9595%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="6.7095%" y="885" width="0.0714%" height="15" fill="rgb(230,116,27)" fg:x="94" fg:w="1"/><text x="6.9595%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="6.7095%" y="869" width="0.0714%" height="15" fill="rgb(228,99,48)" fg:x="94" fg:w="1"/><text x="6.9595%" y="879.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="6.7095%" y="853" width="0.0714%" height="15" fill="rgb(253,11,6)" fg:x="94" fg:w="1"/><text x="6.9595%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="6.7095%" y="837" width="0.0714%" height="15" fill="rgb(247,143,39)" fg:x="94" fg:w="1"/><text x="6.9595%" y="847.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="6.7095%" y="821" width="0.0714%" height="15" fill="rgb(236,97,10)" fg:x="94" fg:w="1"/><text x="6.9595%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.29%)</title><rect x="6.7809%" y="965" width="0.2855%" height="15" fill="rgb(233,208,19)" fg:x="95" fg:w="4"/><text x="7.0309%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::string::String,alloc::string::String)]&gt; (4 samples, 0.29%)</title><rect x="6.7809%" y="949" width="0.2855%" height="15" fill="rgb(216,164,2)" fg:x="95" fg:w="4"/><text x="7.0309%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,alloc::string::String)&gt; (4 samples, 0.29%)</title><rect x="6.7809%" y="933" width="0.2855%" height="15" fill="rgb(220,129,5)" fg:x="95" fg:w="4"/><text x="7.0309%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.29%)</title><rect x="6.7809%" y="917" width="0.2855%" height="15" fill="rgb(242,17,10)" fg:x="95" fg:w="4"/><text x="7.0309%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.29%)</title><rect x="6.7809%" y="901" width="0.2855%" height="15" fill="rgb(242,107,0)" fg:x="95" fg:w="4"/><text x="7.0309%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.29%)</title><rect x="6.7809%" y="885" width="0.2855%" height="15" fill="rgb(251,28,31)" fg:x="95" fg:w="4"/><text x="7.0309%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.29%)</title><rect x="6.7809%" y="869" width="0.2855%" height="15" fill="rgb(233,223,10)" fg:x="95" fg:w="4"/><text x="7.0309%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.29%)</title><rect x="6.7809%" y="853" width="0.2855%" height="15" fill="rgb(215,21,27)" fg:x="95" fg:w="4"/><text x="7.0309%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.29%)</title><rect x="6.7809%" y="837" width="0.2855%" height="15" fill="rgb(232,23,21)" fg:x="95" fg:w="4"/><text x="7.0309%" y="847.50"></text></g><g><title>_int_free (4 samples, 0.29%)</title><rect x="6.7809%" y="821" width="0.2855%" height="15" fill="rgb(244,5,23)" fg:x="95" fg:w="4"/><text x="7.0309%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (5 samples, 0.36%)</title><rect x="6.7809%" y="981" width="0.3569%" height="15" fill="rgb(226,81,46)" fg:x="95" fg:w="5"/><text x="7.0309%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::string::String,alloc::string::String)&gt;&gt; (1 samples, 0.07%)</title><rect x="7.0664%" y="965" width="0.0714%" height="15" fill="rgb(247,70,30)" fg:x="99" fg:w="1"/><text x="7.3164%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="7.0664%" y="949" width="0.0714%" height="15" fill="rgb(212,68,19)" fg:x="99" fg:w="1"/><text x="7.3164%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="7.0664%" y="933" width="0.0714%" height="15" fill="rgb(240,187,13)" fg:x="99" fg:w="1"/><text x="7.3164%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="7.0664%" y="917" width="0.0714%" height="15" fill="rgb(223,113,26)" fg:x="99" fg:w="1"/><text x="7.3164%" y="927.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="7.0664%" y="901" width="0.0714%" height="15" fill="rgb(206,192,2)" fg:x="99" fg:w="1"/><text x="7.3164%" y="911.50"></text></g><g><title>malloc_consolidate (1 samples, 0.07%)</title><rect x="7.0664%" y="885" width="0.0714%" height="15" fill="rgb(241,108,4)" fg:x="99" fg:w="1"/><text x="7.3164%" y="895.50"></text></g><g><title>unlink_chunk.isra.0 (1 samples, 0.07%)</title><rect x="7.0664%" y="869" width="0.0714%" height="15" fill="rgb(247,173,49)" fg:x="99" fg:w="1"/><text x="7.3164%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.14%)</title><rect x="7.2091%" y="709" width="0.1428%" height="15" fill="rgb(224,114,35)" fg:x="101" fg:w="2"/><text x="7.4591%" y="719.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.14%)</title><rect x="7.2091%" y="693" width="0.1428%" height="15" fill="rgb(245,159,27)" fg:x="101" fg:w="2"/><text x="7.4591%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.14%)</title><rect x="7.2091%" y="677" width="0.1428%" height="15" fill="rgb(245,172,44)" fg:x="101" fg:w="2"/><text x="7.4591%" y="687.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.07%)</title><rect x="7.2805%" y="661" width="0.0714%" height="15" fill="rgb(236,23,11)" fg:x="102" fg:w="1"/><text x="7.5305%" y="671.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.36%)</title><rect x="7.1378%" y="757" width="0.3569%" height="15" fill="rgb(205,117,38)" fg:x="100" fg:w="5"/><text x="7.3878%" y="767.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (5 samples, 0.36%)</title><rect x="7.1378%" y="741" width="0.3569%" height="15" fill="rgb(237,72,25)" fg:x="100" fg:w="5"/><text x="7.3878%" y="751.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.36%)</title><rect x="7.1378%" y="725" width="0.3569%" height="15" fill="rgb(244,70,9)" fg:x="100" fg:w="5"/><text x="7.3878%" y="735.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.14%)</title><rect x="7.3519%" y="709" width="0.1428%" height="15" fill="rgb(217,125,39)" fg:x="103" fg:w="2"/><text x="7.6019%" y="719.50"></text></g><g><title>core::slice::memchr::memchr_aligned (2 samples, 0.14%)</title><rect x="7.3519%" y="693" width="0.1428%" height="15" fill="rgb(235,36,10)" fg:x="103" fg:w="2"/><text x="7.6019%" y="703.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.14%)</title><rect x="7.3519%" y="677" width="0.1428%" height="15" fill="rgb(251,123,47)" fg:x="103" fg:w="2"/><text x="7.6019%" y="687.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.50%)</title><rect x="7.1378%" y="789" width="0.4996%" height="15" fill="rgb(221,13,13)" fg:x="100" fg:w="7"/><text x="7.3878%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.50%)</title><rect x="7.1378%" y="773" width="0.4996%" height="15" fill="rgb(238,131,9)" fg:x="100" fg:w="7"/><text x="7.3878%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.14%)</title><rect x="7.4946%" y="757" width="0.1428%" height="15" fill="rgb(211,50,8)" fg:x="105" fg:w="2"/><text x="7.7446%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.14%)</title><rect x="7.4946%" y="741" width="0.1428%" height="15" fill="rgb(245,182,24)" fg:x="105" fg:w="2"/><text x="7.7446%" y="751.50"></text></g><g><title>&lt;core::str::LinesMap as core::ops::function::FnMut&lt;(&amp;str,)&gt;&gt;::call_mut (2 samples, 0.14%)</title><rect x="7.4946%" y="725" width="0.1428%" height="15" fill="rgb(242,14,37)" fg:x="105" fg:w="2"/><text x="7.7446%" y="735.50"></text></g><g><title>&lt;core::str::LinesMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (2 samples, 0.14%)</title><rect x="7.4946%" y="709" width="0.1428%" height="15" fill="rgb(246,228,12)" fg:x="105" fg:w="2"/><text x="7.7446%" y="719.50"></text></g><g><title>core::str::&lt;impl str&gt;::strip_suffix (1 samples, 0.07%)</title><rect x="7.5660%" y="693" width="0.0714%" height="15" fill="rgb(213,55,15)" fg:x="106" fg:w="1"/><text x="7.8160%" y="703.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::strip_suffix_of (1 samples, 0.07%)</title><rect x="7.5660%" y="677" width="0.0714%" height="15" fill="rgb(209,9,3)" fg:x="106" fg:w="1"/><text x="7.8160%" y="687.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::strip_suffix_of (1 samples, 0.07%)</title><rect x="7.5660%" y="661" width="0.0714%" height="15" fill="rgb(230,59,30)" fg:x="106" fg:w="1"/><text x="7.8160%" y="671.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_suffix_of (1 samples, 0.07%)</title><rect x="7.5660%" y="645" width="0.0714%" height="15" fill="rgb(209,121,21)" fg:x="106" fg:w="1"/><text x="7.8160%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (1 samples, 0.07%)</title><rect x="7.5660%" y="629" width="0.0714%" height="15" fill="rgb(220,109,13)" fg:x="106" fg:w="1"/><text x="7.8160%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="7.5660%" y="613" width="0.0714%" height="15" fill="rgb(232,18,1)" fg:x="106" fg:w="1"/><text x="7.8160%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="7.5660%" y="597" width="0.0714%" height="15" fill="rgb(215,41,42)" fg:x="106" fg:w="1"/><text x="7.8160%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="7.5660%" y="581" width="0.0714%" height="15" fill="rgb(224,123,36)" fg:x="106" fg:w="1"/><text x="7.8160%" y="591.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product (23 samples, 1.64%)</title><rect x="7.1378%" y="981" width="1.6417%" height="15" fill="rgb(240,125,3)" fg:x="100" fg:w="23"/><text x="7.3878%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 1.64%)</title><rect x="7.1378%" y="965" width="1.6417%" height="15" fill="rgb(205,98,50)" fg:x="100" fg:w="23"/><text x="7.3878%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (23 samples, 1.64%)</title><rect x="7.1378%" y="949" width="1.6417%" height="15" fill="rgb(205,185,37)" fg:x="100" fg:w="23"/><text x="7.3878%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 1.64%)</title><rect x="7.1378%" y="933" width="1.6417%" height="15" fill="rgb(238,207,15)" fg:x="100" fg:w="23"/><text x="7.3878%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (23 samples, 1.64%)</title><rect x="7.1378%" y="917" width="1.6417%" height="15" fill="rgb(213,199,42)" fg:x="100" fg:w="23"/><text x="7.3878%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (23 samples, 1.64%)</title><rect x="7.1378%" y="901" width="1.6417%" height="15" fill="rgb(235,201,11)" fg:x="100" fg:w="23"/><text x="7.3878%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (23 samples, 1.64%)</title><rect x="7.1378%" y="885" width="1.6417%" height="15" fill="rgb(207,46,11)" fg:x="100" fg:w="23"/><text x="7.3878%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 1.64%)</title><rect x="7.1378%" y="869" width="1.6417%" height="15" fill="rgb(241,35,35)" fg:x="100" fg:w="23"/><text x="7.3878%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 1.64%)</title><rect x="7.1378%" y="853" width="1.6417%" height="15" fill="rgb(243,32,47)" fg:x="100" fg:w="23"/><text x="7.3878%" y="863.50"></text></g><g><title>core::iter::adapters::flatten::and_then_or_clear (23 samples, 1.64%)</title><rect x="7.1378%" y="837" width="1.6417%" height="15" fill="rgb(247,202,23)" fg:x="100" fg:w="23"/><text x="7.3878%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (23 samples, 1.64%)</title><rect x="7.1378%" y="821" width="1.6417%" height="15" fill="rgb(219,102,11)" fg:x="100" fg:w="23"/><text x="7.3878%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 1.64%)</title><rect x="7.1378%" y="805" width="1.6417%" height="15" fill="rgb(243,110,44)" fg:x="100" fg:w="23"/><text x="7.3878%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 1.14%)</title><rect x="7.6374%" y="789" width="1.1420%" height="15" fill="rgb(222,74,54)" fg:x="107" fg:w="16"/><text x="7.8874%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (15 samples, 1.07%)</title><rect x="7.7088%" y="773" width="1.0707%" height="15" fill="rgb(216,99,12)" fg:x="108" fg:w="15"/><text x="7.9588%" y="783.50"></text></g><g><title>lab4::idea::IdeaGenerator::cross_product::{{closure}}::{{closure}} (15 samples, 1.07%)</title><rect x="7.7088%" y="757" width="1.0707%" height="15" fill="rgb(226,22,26)" fg:x="108" fg:w="15"/><text x="7.9588%" y="767.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (15 samples, 1.07%)</title><rect x="7.7088%" y="741" width="1.0707%" height="15" fill="rgb(217,163,10)" fg:x="108" fg:w="15"/><text x="7.9588%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (15 samples, 1.07%)</title><rect x="7.7088%" y="725" width="1.0707%" height="15" fill="rgb(213,25,53)" fg:x="108" fg:w="15"/><text x="7.9588%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (15 samples, 1.07%)</title><rect x="7.7088%" y="709" width="1.0707%" height="15" fill="rgb(252,105,26)" fg:x="108" fg:w="15"/><text x="7.9588%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 1.07%)</title><rect x="7.7088%" y="693" width="1.0707%" height="15" fill="rgb(220,39,43)" fg:x="108" fg:w="15"/><text x="7.9588%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 1.07%)</title><rect x="7.7088%" y="677" width="1.0707%" height="15" fill="rgb(229,68,48)" fg:x="108" fg:w="15"/><text x="7.9588%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 1.07%)</title><rect x="7.7088%" y="661" width="1.0707%" height="15" fill="rgb(252,8,32)" fg:x="108" fg:w="15"/><text x="7.9588%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 1.07%)</title><rect x="7.7088%" y="645" width="1.0707%" height="15" fill="rgb(223,20,43)" fg:x="108" fg:w="15"/><text x="7.9588%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 1.07%)</title><rect x="7.7088%" y="629" width="1.0707%" height="15" fill="rgb(229,81,49)" fg:x="108" fg:w="15"/><text x="7.9588%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 1.07%)</title><rect x="7.7088%" y="613" width="1.0707%" height="15" fill="rgb(236,28,36)" fg:x="108" fg:w="15"/><text x="7.9588%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 1.07%)</title><rect x="7.7088%" y="597" width="1.0707%" height="15" fill="rgb(249,185,26)" fg:x="108" fg:w="15"/><text x="7.9588%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 1.07%)</title><rect x="7.7088%" y="581" width="1.0707%" height="15" fill="rgb(249,174,33)" fg:x="108" fg:w="15"/><text x="7.9588%" y="591.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 1.07%)</title><rect x="7.7088%" y="565" width="1.0707%" height="15" fill="rgb(233,201,37)" fg:x="108" fg:w="15"/><text x="7.9588%" y="575.50"></text></g><g><title>__GI___libc_malloc (15 samples, 1.07%)</title><rect x="7.7088%" y="549" width="1.0707%" height="15" fill="rgb(221,78,26)" fg:x="108" fg:w="15"/><text x="7.9588%" y="559.50"></text></g><g><title>_int_malloc (9 samples, 0.64%)</title><rect x="8.1370%" y="533" width="0.6424%" height="15" fill="rgb(250,127,30)" fg:x="114" fg:w="9"/><text x="8.3870%" y="543.50"></text></g><g><title>std::fs::File::metadata (2 samples, 0.14%)</title><rect x="8.7794%" y="949" width="0.1428%" height="15" fill="rgb(230,49,44)" fg:x="123" fg:w="2"/><text x="9.0294%" y="959.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (2 samples, 0.14%)</title><rect x="8.7794%" y="933" width="0.1428%" height="15" fill="rgb(229,67,23)" fg:x="123" fg:w="2"/><text x="9.0294%" y="943.50"></text></g><g><title>std::sys::unix::fs::try_statx (2 samples, 0.14%)</title><rect x="8.7794%" y="917" width="0.1428%" height="15" fill="rgb(249,83,47)" fg:x="123" fg:w="2"/><text x="9.0294%" y="927.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (2 samples, 0.14%)</title><rect x="8.7794%" y="901" width="0.1428%" height="15" fill="rgb(215,43,3)" fg:x="123" fg:w="2"/><text x="9.0294%" y="911.50"></text></g><g><title>statx (2 samples, 0.14%)</title><rect x="8.7794%" y="885" width="0.1428%" height="15" fill="rgb(238,154,13)" fg:x="123" fg:w="2"/><text x="9.0294%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="8.7794%" y="869" width="0.1428%" height="15" fill="rgb(219,56,2)" fg:x="123" fg:w="2"/><text x="9.0294%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="8.7794%" y="853" width="0.1428%" height="15" fill="rgb(233,0,4)" fg:x="123" fg:w="2"/><text x="9.0294%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="8.7794%" y="837" width="0.1428%" height="15" fill="rgb(235,30,7)" fg:x="123" fg:w="2"/><text x="9.0294%" y="847.50"></text></g><g><title>lab4::idea::IdeaGenerator::run (51 samples, 3.64%)</title><rect x="5.9957%" y="1013" width="3.6403%" height="15" fill="rgb(250,79,13)" fg:x="84" fg:w="51"/><text x="6.2457%" y="1023.50">lab4..</text></g><g><title>lab4::idea::IdeaGenerator::get_next_idea_name (40 samples, 2.86%)</title><rect x="6.7809%" y="997" width="2.8551%" height="15" fill="rgb(211,146,34)" fg:x="95" fg:w="40"/><text x="7.0309%" y="1007.50">la..</text></g><g><title>std::fs::read_to_string (12 samples, 0.86%)</title><rect x="8.7794%" y="981" width="0.8565%" height="15" fill="rgb(228,22,38)" fg:x="123" fg:w="12"/><text x="9.0294%" y="991.50"></text></g><g><title>std::fs::read_to_string::inner (12 samples, 0.86%)</title><rect x="8.7794%" y="965" width="0.8565%" height="15" fill="rgb(235,168,5)" fg:x="123" fg:w="12"/><text x="9.0294%" y="975.50"></text></g><g><title>std::fs::File::open (10 samples, 0.71%)</title><rect x="8.9222%" y="949" width="0.7138%" height="15" fill="rgb(221,155,16)" fg:x="125" fg:w="10"/><text x="9.1722%" y="959.50"></text></g><g><title>std::fs::OpenOptions::open (10 samples, 0.71%)</title><rect x="8.9222%" y="933" width="0.7138%" height="15" fill="rgb(215,215,53)" fg:x="125" fg:w="10"/><text x="9.1722%" y="943.50"></text></g><g><title>std::fs::OpenOptions::_open (10 samples, 0.71%)</title><rect x="8.9222%" y="917" width="0.7138%" height="15" fill="rgb(223,4,10)" fg:x="125" fg:w="10"/><text x="9.1722%" y="927.50"></text></g><g><title>std::sys::unix::fs::File::open (10 samples, 0.71%)</title><rect x="8.9222%" y="901" width="0.7138%" height="15" fill="rgb(234,103,6)" fg:x="125" fg:w="10"/><text x="9.1722%" y="911.50"></text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (10 samples, 0.71%)</title><rect x="8.9222%" y="885" width="0.7138%" height="15" fill="rgb(227,97,0)" fg:x="125" fg:w="10"/><text x="9.1722%" y="895.50"></text></g><g><title>std::sys::common::small_c_string::run_with_cstr (10 samples, 0.71%)</title><rect x="8.9222%" y="869" width="0.7138%" height="15" fill="rgb(234,150,53)" fg:x="125" fg:w="10"/><text x="9.1722%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (10 samples, 0.71%)</title><rect x="8.9222%" y="853" width="0.7138%" height="15" fill="rgb(228,201,54)" fg:x="125" fg:w="10"/><text x="9.1722%" y="863.50"></text></g><g><title>std::sys::unix::fs::File::open_c (10 samples, 0.71%)</title><rect x="8.9222%" y="837" width="0.7138%" height="15" fill="rgb(222,22,37)" fg:x="125" fg:w="10"/><text x="9.1722%" y="847.50"></text></g><g><title>std::sys::unix::cvt_r (10 samples, 0.71%)</title><rect x="8.9222%" y="821" width="0.7138%" height="15" fill="rgb(237,53,32)" fg:x="125" fg:w="10"/><text x="9.1722%" y="831.50"></text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (10 samples, 0.71%)</title><rect x="8.9222%" y="805" width="0.7138%" height="15" fill="rgb(233,25,53)" fg:x="125" fg:w="10"/><text x="9.1722%" y="815.50"></text></g><g><title>__libc_open64 (10 samples, 0.71%)</title><rect x="8.9222%" y="789" width="0.7138%" height="15" fill="rgb(210,40,34)" fg:x="125" fg:w="10"/><text x="9.1722%" y="799.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="8.9222%" y="773" width="0.7138%" height="15" fill="rgb(241,220,44)" fg:x="125" fg:w="10"/><text x="9.1722%" y="783.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="8.9222%" y="757" width="0.7138%" height="15" fill="rgb(235,28,35)" fg:x="125" fg:w="10"/><text x="9.1722%" y="767.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="8.9222%" y="741" width="0.7138%" height="15" fill="rgb(210,56,17)" fg:x="125" fg:w="10"/><text x="9.1722%" y="751.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="8.9222%" y="725" width="0.7138%" height="15" fill="rgb(224,130,29)" fg:x="125" fg:w="10"/><text x="9.1722%" y="735.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="8.9222%" y="709" width="0.7138%" height="15" fill="rgb(235,212,8)" fg:x="125" fg:w="10"/><text x="9.1722%" y="719.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="8.9222%" y="693" width="0.7138%" height="15" fill="rgb(223,33,50)" fg:x="125" fg:w="10"/><text x="9.1722%" y="703.50"></text></g><g><title>[unknown] (8 samples, 0.57%)</title><rect x="9.0650%" y="677" width="0.5710%" height="15" fill="rgb(219,149,13)" fg:x="127" fg:w="8"/><text x="9.3150%" y="687.50"></text></g><g><title>[unknown] (8 samples, 0.57%)</title><rect x="9.0650%" y="661" width="0.5710%" height="15" fill="rgb(250,156,29)" fg:x="127" fg:w="8"/><text x="9.3150%" y="671.50"></text></g><g><title>[unknown] (8 samples, 0.57%)</title><rect x="9.0650%" y="645" width="0.5710%" height="15" fill="rgb(216,193,19)" fg:x="127" fg:w="8"/><text x="9.3150%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="9.1363%" y="629" width="0.4996%" height="15" fill="rgb(216,135,14)" fg:x="128" fg:w="7"/><text x="9.3863%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="9.1363%" y="613" width="0.4996%" height="15" fill="rgb(241,47,5)" fg:x="128" fg:w="7"/><text x="9.3863%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="9.1363%" y="597" width="0.4996%" height="15" fill="rgb(233,42,35)" fg:x="128" fg:w="7"/><text x="9.3863%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="9.1363%" y="581" width="0.4996%" height="15" fill="rgb(231,13,6)" fg:x="128" fg:w="7"/><text x="9.3863%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="9.1363%" y="565" width="0.4996%" height="15" fill="rgb(207,181,40)" fg:x="128" fg:w="7"/><text x="9.3863%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="9.1363%" y="549" width="0.4996%" height="15" fill="rgb(254,173,49)" fg:x="128" fg:w="7"/><text x="9.3863%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="9.1363%" y="533" width="0.4996%" height="15" fill="rgb(221,1,38)" fg:x="128" fg:w="7"/><text x="9.3863%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="9.2077%" y="517" width="0.4283%" height="15" fill="rgb(206,124,46)" fg:x="129" fg:w="6"/><text x="9.4577%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="9.2077%" y="501" width="0.4283%" height="15" fill="rgb(249,21,11)" fg:x="129" fg:w="6"/><text x="9.4577%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="9.2077%" y="485" width="0.4283%" height="15" fill="rgb(222,201,40)" fg:x="129" fg:w="6"/><text x="9.4577%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="9.2077%" y="469" width="0.4283%" height="15" fill="rgb(235,61,29)" fg:x="129" fg:w="6"/><text x="9.4577%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="9.2077%" y="453" width="0.4283%" height="15" fill="rgb(219,207,3)" fg:x="129" fg:w="6"/><text x="9.4577%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="9.2791%" y="437" width="0.3569%" height="15" fill="rgb(222,56,46)" fg:x="130" fg:w="5"/><text x="9.5291%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="9.2791%" y="421" width="0.3569%" height="15" fill="rgb(239,76,54)" fg:x="130" fg:w="5"/><text x="9.5291%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="9.2791%" y="405" width="0.3569%" height="15" fill="rgb(231,124,27)" fg:x="130" fg:w="5"/><text x="9.5291%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="9.2791%" y="389" width="0.3569%" height="15" fill="rgb(249,195,6)" fg:x="130" fg:w="5"/><text x="9.5291%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="9.2791%" y="373" width="0.3569%" height="15" fill="rgb(237,174,47)" fg:x="130" fg:w="5"/><text x="9.5291%" y="383.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (2 samples, 0.14%)</title><rect x="9.6360%" y="997" width="0.1428%" height="15" fill="rgb(206,201,31)" fg:x="135" fg:w="2"/><text x="9.8860%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (2 samples, 0.14%)</title><rect x="9.6360%" y="981" width="0.1428%" height="15" fill="rgb(231,57,52)" fg:x="135" fg:w="2"/><text x="9.8860%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (2 samples, 0.14%)</title><rect x="9.6360%" y="965" width="0.1428%" height="15" fill="rgb(248,177,22)" fg:x="135" fg:w="2"/><text x="9.8860%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.14%)</title><rect x="9.6360%" y="949" width="0.1428%" height="15" fill="rgb(215,211,37)" fg:x="135" fg:w="2"/><text x="9.8860%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="9.6360%" y="933" width="0.1428%" height="15" fill="rgb(241,128,51)" fg:x="135" fg:w="2"/><text x="9.8860%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.14%)</title><rect x="9.6360%" y="917" width="0.1428%" height="15" fill="rgb(227,165,31)" fg:x="135" fg:w="2"/><text x="9.8860%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="9.6360%" y="901" width="0.1428%" height="15" fill="rgb(228,167,24)" fg:x="135" fg:w="2"/><text x="9.8860%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="9.6360%" y="885" width="0.1428%" height="15" fill="rgb(228,143,12)" fg:x="135" fg:w="2"/><text x="9.8860%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="9.6360%" y="869" width="0.1428%" height="15" fill="rgb(249,149,8)" fg:x="135" fg:w="2"/><text x="9.8860%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.14%)</title><rect x="9.6360%" y="853" width="0.1428%" height="15" fill="rgb(243,35,44)" fg:x="135" fg:w="2"/><text x="9.8860%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="9.6360%" y="837" width="0.1428%" height="15" fill="rgb(246,89,9)" fg:x="135" fg:w="2"/><text x="9.8860%" y="847.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="9.6360%" y="821" width="0.1428%" height="15" fill="rgb(233,213,13)" fg:x="135" fg:w="2"/><text x="9.8860%" y="831.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="9.6360%" y="805" width="0.1428%" height="15" fill="rgb(233,141,41)" fg:x="135" fg:w="2"/><text x="9.8860%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="9.7074%" y="789" width="0.0714%" height="15" fill="rgb(239,167,4)" fg:x="136" fg:w="1"/><text x="9.9574%" y="799.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.07%)</title><rect x="14.1328%" y="869" width="0.0714%" height="15" fill="rgb(209,217,16)" fg:x="198" fg:w="1"/><text x="14.3828%" y="879.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.07%)</title><rect x="14.1328%" y="853" width="0.0714%" height="15" fill="rgb(219,88,35)" fg:x="198" fg:w="1"/><text x="14.3828%" y="863.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.07%)</title><rect x="14.1328%" y="837" width="0.0714%" height="15" fill="rgb(220,193,23)" fg:x="198" fg:w="1"/><text x="14.3828%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (39 samples, 2.78%)</title><rect x="14.2041%" y="869" width="2.7837%" height="15" fill="rgb(230,90,52)" fg:x="199" fg:w="39"/><text x="14.4541%" y="879.50">co..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (39 samples, 2.78%)</title><rect x="14.2041%" y="853" width="2.7837%" height="15" fill="rgb(252,106,19)" fg:x="199" fg:w="39"/><text x="14.4541%" y="863.50">co..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (39 samples, 2.78%)</title><rect x="14.2041%" y="837" width="2.7837%" height="15" fill="rgb(206,74,20)" fg:x="199" fg:w="39"/><text x="14.4541%" y="847.50">&lt;[..</text></g><g><title>__memcmp_avx2_movbe (38 samples, 2.71%)</title><rect x="14.2755%" y="821" width="2.7123%" height="15" fill="rgb(230,138,44)" fg:x="200" fg:w="38"/><text x="14.5255%" y="831.50">__..</text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="805" width="0.0714%" height="15" fill="rgb(235,182,43)" fg:x="237" fg:w="1"/><text x="17.1665%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="789" width="0.0714%" height="15" fill="rgb(242,16,51)" fg:x="237" fg:w="1"/><text x="17.1665%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="773" width="0.0714%" height="15" fill="rgb(248,9,4)" fg:x="237" fg:w="1"/><text x="17.1665%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="757" width="0.0714%" height="15" fill="rgb(210,31,22)" fg:x="237" fg:w="1"/><text x="17.1665%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="741" width="0.0714%" height="15" fill="rgb(239,54,39)" fg:x="237" fg:w="1"/><text x="17.1665%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="725" width="0.0714%" height="15" fill="rgb(230,99,41)" fg:x="237" fg:w="1"/><text x="17.1665%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="709" width="0.0714%" height="15" fill="rgb(253,106,12)" fg:x="237" fg:w="1"/><text x="17.1665%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="693" width="0.0714%" height="15" fill="rgb(213,46,41)" fg:x="237" fg:w="1"/><text x="17.1665%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="677" width="0.0714%" height="15" fill="rgb(215,133,35)" fg:x="237" fg:w="1"/><text x="17.1665%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="661" width="0.0714%" height="15" fill="rgb(213,28,5)" fg:x="237" fg:w="1"/><text x="17.1665%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="645" width="0.0714%" height="15" fill="rgb(215,77,49)" fg:x="237" fg:w="1"/><text x="17.1665%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="629" width="0.0714%" height="15" fill="rgb(248,100,22)" fg:x="237" fg:w="1"/><text x="17.1665%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="613" width="0.0714%" height="15" fill="rgb(208,67,9)" fg:x="237" fg:w="1"/><text x="17.1665%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="597" width="0.0714%" height="15" fill="rgb(219,133,21)" fg:x="237" fg:w="1"/><text x="17.1665%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="16.9165%" y="581" width="0.0714%" height="15" fill="rgb(246,46,29)" fg:x="237" fg:w="1"/><text x="17.1665%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (10 samples, 0.71%)</title><rect x="16.9879%" y="869" width="0.7138%" height="15" fill="rgb(246,185,52)" fg:x="238" fg:w="10"/><text x="17.2379%" y="879.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (10 samples, 0.71%)</title><rect x="16.9879%" y="853" width="0.7138%" height="15" fill="rgb(252,136,11)" fg:x="238" fg:w="10"/><text x="17.2379%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::repeat_u8 (5 samples, 0.36%)</title><rect x="21.3419%" y="837" width="0.3569%" height="15" fill="rgb(219,138,53)" fg:x="299" fg:w="5"/><text x="21.5919%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::align_offset (2 samples, 0.14%)</title><rect x="21.6988%" y="837" width="0.1428%" height="15" fill="rgb(211,51,23)" fg:x="304" fg:w="2"/><text x="21.9488%" y="847.50"></text></g><g><title>core::ptr::align_offset (2 samples, 0.14%)</title><rect x="21.6988%" y="821" width="0.1428%" height="15" fill="rgb(247,221,28)" fg:x="304" fg:w="2"/><text x="21.9488%" y="831.50"></text></g><g><title>core::slice::memchr::contains_zero_byte (22 samples, 1.57%)</title><rect x="21.8415%" y="837" width="1.5703%" height="15" fill="rgb(251,222,45)" fg:x="306" fg:w="22"/><text x="22.0915%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (11 samples, 0.79%)</title><rect x="22.6267%" y="821" width="0.7852%" height="15" fill="rgb(217,162,53)" fg:x="317" fg:w="11"/><text x="22.8767%" y="831.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (265 samples, 18.92%)</title><rect x="10.4925%" y="885" width="18.9151%" height="15" fill="rgb(229,93,14)" fg:x="147" fg:w="265"/><text x="10.7425%" y="895.50">&lt;core::str::pattern::CharSearc..</text></g><g><title>core::slice::memchr::memchr (164 samples, 11.71%)</title><rect x="17.7016%" y="869" width="11.7059%" height="15" fill="rgb(209,67,49)" fg:x="248" fg:w="164"/><text x="17.9516%" y="879.50">core::slice::memc..</text></g><g><title>core::slice::memchr::memchr_aligned (163 samples, 11.63%)</title><rect x="17.7730%" y="853" width="11.6345%" height="15" fill="rgb(213,87,29)" fg:x="249" fg:w="163"/><text x="18.0230%" y="863.50">core::slice::memc..</text></g><g><title>core::slice::memchr::memchr_naive (84 samples, 6.00%)</title><rect x="23.4118%" y="837" width="5.9957%" height="15" fill="rgb(205,151,52)" fg:x="328" fg:w="84"/><text x="23.6618%" y="847.50">core::sl..</text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="29.1934%" y="821" width="0.2141%" height="15" fill="rgb(253,215,39)" fg:x="409" fg:w="3"/><text x="29.4434%" y="831.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="29.1934%" y="805" width="0.2141%" height="15" fill="rgb(221,220,41)" fg:x="409" fg:w="3"/><text x="29.4434%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="29.1934%" y="789" width="0.2141%" height="15" fill="rgb(218,133,21)" fg:x="409" fg:w="3"/><text x="29.4434%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="29.1934%" y="773" width="0.2141%" height="15" fill="rgb(221,193,43)" fg:x="409" fg:w="3"/><text x="29.4434%" y="783.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="29.1934%" y="757" width="0.2141%" height="15" fill="rgb(240,128,52)" fg:x="409" fg:w="3"/><text x="29.4434%" y="767.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="29.1934%" y="741" width="0.2141%" height="15" fill="rgb(253,114,12)" fg:x="409" fg:w="3"/><text x="29.4434%" y="751.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="29.1934%" y="725" width="0.2141%" height="15" fill="rgb(215,223,47)" fg:x="409" fg:w="3"/><text x="29.4434%" y="735.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="29.1934%" y="709" width="0.2141%" height="15" fill="rgb(248,225,23)" fg:x="409" fg:w="3"/><text x="29.4434%" y="719.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="29.2648%" y="693" width="0.1428%" height="15" fill="rgb(250,108,0)" fg:x="410" fg:w="2"/><text x="29.5148%" y="703.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="29.2648%" y="677" width="0.1428%" height="15" fill="rgb(228,208,7)" fg:x="410" fg:w="2"/><text x="29.5148%" y="687.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (276 samples, 19.70%)</title><rect x="9.7787%" y="949" width="19.7002%" height="15" fill="rgb(244,45,10)" fg:x="137" fg:w="276"/><text x="10.0287%" y="959.50">&lt;core::str::iter::Lines as core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (276 samples, 19.70%)</title><rect x="9.7787%" y="933" width="19.7002%" height="15" fill="rgb(207,125,25)" fg:x="137" fg:w="276"/><text x="10.0287%" y="943.50">&lt;core::iter::adapters::map::Map..</text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (276 samples, 19.70%)</title><rect x="9.7787%" y="917" width="19.7002%" height="15" fill="rgb(210,195,18)" fg:x="137" fg:w="276"/><text x="10.0287%" y="927.50">&lt;core::str::iter::SplitInclusiv..</text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (276 samples, 19.70%)</title><rect x="9.7787%" y="901" width="19.7002%" height="15" fill="rgb(249,80,12)" fg:x="137" fg:w="276"/><text x="10.0287%" y="911.50">core::str::iter::SplitInternal&lt;..</text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.4076%" y="885" width="0.0714%" height="15" fill="rgb(221,65,9)" fg:x="412" fg:w="1"/><text x="29.6576%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.4076%" y="869" width="0.0714%" height="15" fill="rgb(235,49,36)" fg:x="412" fg:w="1"/><text x="29.6576%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.4076%" y="853" width="0.0714%" height="15" fill="rgb(225,32,20)" fg:x="412" fg:w="1"/><text x="29.6576%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.4076%" y="837" width="0.0714%" height="15" fill="rgb(215,141,46)" fg:x="412" fg:w="1"/><text x="29.6576%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.4076%" y="821" width="0.0714%" height="15" fill="rgb(250,160,47)" fg:x="412" fg:w="1"/><text x="29.6576%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.4076%" y="805" width="0.0714%" height="15" fill="rgb(216,222,40)" fg:x="412" fg:w="1"/><text x="29.6576%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.4076%" y="789" width="0.0714%" height="15" fill="rgb(234,217,39)" fg:x="412" fg:w="1"/><text x="29.6576%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.4076%" y="773" width="0.0714%" height="15" fill="rgb(207,178,40)" fg:x="412" fg:w="1"/><text x="29.6576%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (278 samples, 19.84%)</title><rect x="9.7787%" y="997" width="19.8430%" height="15" fill="rgb(221,136,13)" fg:x="137" fg:w="278"/><text x="10.0287%" y="1007.50">core::iter::traits::iterator::I..</text></g><g><title>&lt;core::iter::adapters::cycle::Cycle&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::advance_by (278 samples, 19.84%)</title><rect x="9.7787%" y="981" width="19.8430%" height="15" fill="rgb(249,199,10)" fg:x="137" fg:w="278"/><text x="10.0287%" y="991.50">&lt;core::iter::adapters::cycle::C..</text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (278 samples, 19.84%)</title><rect x="9.7787%" y="965" width="19.8430%" height="15" fill="rgb(249,222,13)" fg:x="137" fg:w="278"/><text x="10.0287%" y="975.50">core::iter::traits::iterator::I..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.14%)</title><rect x="29.4789%" y="949" width="0.1428%" height="15" fill="rgb(244,185,38)" fg:x="413" fg:w="2"/><text x="29.7289%" y="959.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.14%)</title><rect x="29.4789%" y="933" width="0.1428%" height="15" fill="rgb(236,202,9)" fg:x="413" fg:w="2"/><text x="29.7289%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.07%)</title><rect x="29.5503%" y="917" width="0.0714%" height="15" fill="rgb(250,229,37)" fg:x="414" fg:w="1"/><text x="29.8003%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.07%)</title><rect x="29.6217%" y="997" width="0.0714%" height="15" fill="rgb(206,174,23)" fg:x="415" fg:w="1"/><text x="29.8717%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="29.6217%" y="981" width="0.0714%" height="15" fill="rgb(211,33,43)" fg:x="415" fg:w="1"/><text x="29.8717%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="29.6217%" y="965" width="0.0714%" height="15" fill="rgb(245,58,50)" fg:x="415" fg:w="1"/><text x="29.8717%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="29.6217%" y="949" width="0.0714%" height="15" fill="rgb(244,68,36)" fg:x="415" fg:w="1"/><text x="29.8717%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="29.6217%" y="933" width="0.0714%" height="15" fill="rgb(232,229,15)" fg:x="415" fg:w="1"/><text x="29.8717%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="29.6217%" y="917" width="0.0714%" height="15" fill="rgb(254,30,23)" fg:x="415" fg:w="1"/><text x="29.8717%" y="927.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="29.6217%" y="901" width="0.0714%" height="15" fill="rgb(235,160,14)" fg:x="415" fg:w="1"/><text x="29.8717%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (1 samples, 0.07%)</title><rect x="29.6931%" y="997" width="0.0714%" height="15" fill="rgb(212,155,44)" fg:x="416" fg:w="1"/><text x="29.9431%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="29.6931%" y="981" width="0.0714%" height="15" fill="rgb(226,2,50)" fg:x="416" fg:w="1"/><text x="29.9431%" y="991.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (1 samples, 0.07%)</title><rect x="29.6931%" y="965" width="0.0714%" height="15" fill="rgb(234,177,6)" fg:x="416" fg:w="1"/><text x="29.9431%" y="975.50"></text></g><g><title>syscall (1 samples, 0.07%)</title><rect x="29.6931%" y="949" width="0.0714%" height="15" fill="rgb(217,24,9)" fg:x="416" fg:w="1"/><text x="29.9431%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.6931%" y="933" width="0.0714%" height="15" fill="rgb(220,13,46)" fg:x="416" fg:w="1"/><text x="29.9431%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.6931%" y="917" width="0.0714%" height="15" fill="rgb(239,221,27)" fg:x="416" fg:w="1"/><text x="29.9431%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.6931%" y="901" width="0.0714%" height="15" fill="rgb(222,198,25)" fg:x="416" fg:w="1"/><text x="29.9431%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.6931%" y="885" width="0.0714%" height="15" fill="rgb(211,99,13)" fg:x="416" fg:w="1"/><text x="29.9431%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.6931%" y="869" width="0.0714%" height="15" fill="rgb(232,111,31)" fg:x="416" fg:w="1"/><text x="29.9431%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.6931%" y="853" width="0.0714%" height="15" fill="rgb(245,82,37)" fg:x="416" fg:w="1"/><text x="29.9431%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.6931%" y="837" width="0.0714%" height="15" fill="rgb(227,149,46)" fg:x="416" fg:w="1"/><text x="29.9431%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="29.6931%" y="821" width="0.0714%" height="15" fill="rgb(218,36,50)" fg:x="416" fg:w="1"/><text x="29.9431%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.14%)</title><rect x="29.7645%" y="949" width="0.1428%" height="15" fill="rgb(226,80,48)" fg:x="417" fg:w="2"/><text x="30.0145%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.14%)</title><rect x="29.7645%" y="933" width="0.1428%" height="15" fill="rgb(238,224,15)" fg:x="417" fg:w="2"/><text x="30.0145%" y="943.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (20 samples, 1.43%)</title><rect x="29.9072%" y="949" width="1.4276%" height="15" fill="rgb(241,136,10)" fg:x="419" fg:w="20"/><text x="30.1572%" y="959.50"></text></g><g><title>__GI___sched_yield (20 samples, 1.43%)</title><rect x="29.9072%" y="933" width="1.4276%" height="15" fill="rgb(208,32,45)" fg:x="419" fg:w="20"/><text x="30.1572%" y="943.50"></text></g><g><title>[unknown] (20 samples, 1.43%)</title><rect x="29.9072%" y="917" width="1.4276%" height="15" fill="rgb(207,135,9)" fg:x="419" fg:w="20"/><text x="30.1572%" y="927.50"></text></g><g><title>[unknown] (16 samples, 1.14%)</title><rect x="30.1927%" y="901" width="1.1420%" height="15" fill="rgb(206,86,44)" fg:x="423" fg:w="16"/><text x="30.4427%" y="911.50"></text></g><g><title>[unknown] (15 samples, 1.07%)</title><rect x="30.2641%" y="885" width="1.0707%" height="15" fill="rgb(245,177,15)" fg:x="424" fg:w="15"/><text x="30.5141%" y="895.50"></text></g><g><title>[unknown] (15 samples, 1.07%)</title><rect x="30.2641%" y="869" width="1.0707%" height="15" fill="rgb(206,64,50)" fg:x="424" fg:w="15"/><text x="30.5141%" y="879.50"></text></g><g><title>[unknown] (15 samples, 1.07%)</title><rect x="30.2641%" y="853" width="1.0707%" height="15" fill="rgb(234,36,40)" fg:x="424" fg:w="15"/><text x="30.5141%" y="863.50"></text></g><g><title>[unknown] (15 samples, 1.07%)</title><rect x="30.2641%" y="837" width="1.0707%" height="15" fill="rgb(213,64,8)" fg:x="424" fg:w="15"/><text x="30.5141%" y="847.50"></text></g><g><title>[unknown] (14 samples, 1.00%)</title><rect x="30.3355%" y="821" width="0.9993%" height="15" fill="rgb(210,75,36)" fg:x="425" fg:w="14"/><text x="30.5855%" y="831.50"></text></g><g><title>[unknown] (13 samples, 0.93%)</title><rect x="30.4069%" y="805" width="0.9279%" height="15" fill="rgb(229,88,21)" fg:x="426" fg:w="13"/><text x="30.6569%" y="815.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="30.5496%" y="789" width="0.7852%" height="15" fill="rgb(252,204,47)" fg:x="428" fg:w="11"/><text x="30.7996%" y="799.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="30.5496%" y="773" width="0.7852%" height="15" fill="rgb(208,77,27)" fg:x="428" fg:w="11"/><text x="30.7996%" y="783.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="30.5496%" y="757" width="0.7852%" height="15" fill="rgb(221,76,26)" fg:x="428" fg:w="11"/><text x="30.7996%" y="767.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="30.6210%" y="741" width="0.7138%" height="15" fill="rgb(225,139,18)" fg:x="429" fg:w="10"/><text x="30.8710%" y="751.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.57%)</title><rect x="31.3348%" y="933" width="0.5710%" height="15" fill="rgb(230,137,11)" fg:x="439" fg:w="8"/><text x="31.5848%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.57%)</title><rect x="31.3348%" y="917" width="0.5710%" height="15" fill="rgb(212,28,1)" fg:x="439" fg:w="8"/><text x="31.5848%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (8 samples, 0.57%)</title><rect x="31.3348%" y="901" width="0.5710%" height="15" fill="rgb(248,164,17)" fg:x="439" fg:w="8"/><text x="31.5848%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="885" width="0.0714%" height="15" fill="rgb(222,171,42)" fg:x="446" fg:w="1"/><text x="32.0844%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="869" width="0.0714%" height="15" fill="rgb(243,84,45)" fg:x="446" fg:w="1"/><text x="32.0844%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="853" width="0.0714%" height="15" fill="rgb(252,49,23)" fg:x="446" fg:w="1"/><text x="32.0844%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="837" width="0.0714%" height="15" fill="rgb(215,19,7)" fg:x="446" fg:w="1"/><text x="32.0844%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="821" width="0.0714%" height="15" fill="rgb(238,81,41)" fg:x="446" fg:w="1"/><text x="32.0844%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="805" width="0.0714%" height="15" fill="rgb(210,199,37)" fg:x="446" fg:w="1"/><text x="32.0844%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="789" width="0.0714%" height="15" fill="rgb(244,192,49)" fg:x="446" fg:w="1"/><text x="32.0844%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="773" width="0.0714%" height="15" fill="rgb(226,211,11)" fg:x="446" fg:w="1"/><text x="32.0844%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="757" width="0.0714%" height="15" fill="rgb(236,162,54)" fg:x="446" fg:w="1"/><text x="32.0844%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="741" width="0.0714%" height="15" fill="rgb(220,229,9)" fg:x="446" fg:w="1"/><text x="32.0844%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="725" width="0.0714%" height="15" fill="rgb(250,87,22)" fg:x="446" fg:w="1"/><text x="32.0844%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="709" width="0.0714%" height="15" fill="rgb(239,43,17)" fg:x="446" fg:w="1"/><text x="32.0844%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="31.8344%" y="693" width="0.0714%" height="15" fill="rgb(231,177,25)" fg:x="446" fg:w="1"/><text x="32.0844%" y="703.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (50 samples, 3.57%)</title><rect x="29.7645%" y="965" width="3.5689%" height="15" fill="rgb(219,179,1)" fg:x="417" fg:w="50"/><text x="30.0145%" y="975.50">cros..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (28 samples, 2.00%)</title><rect x="31.3348%" y="949" width="1.9986%" height="15" fill="rgb(238,219,53)" fg:x="439" fg:w="28"/><text x="31.5848%" y="959.50">c..</text></g><g><title>core::sync::atomic::spin_loop_hint (20 samples, 1.43%)</title><rect x="31.9058%" y="933" width="1.4276%" height="15" fill="rgb(232,167,36)" fg:x="447" fg:w="20"/><text x="32.1558%" y="943.50"></text></g><g><title>core::hint::spin_loop (20 samples, 1.43%)</title><rect x="31.9058%" y="917" width="1.4276%" height="15" fill="rgb(244,19,51)" fg:x="447" fg:w="20"/><text x="32.1558%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (20 samples, 1.43%)</title><rect x="31.9058%" y="901" width="1.4276%" height="15" fill="rgb(224,6,22)" fg:x="447" fg:w="20"/><text x="32.1558%" y="911.50"></text></g><g><title>__GI___sched_yield (22 samples, 1.57%)</title><rect x="33.3333%" y="901" width="1.5703%" height="15" fill="rgb(224,145,5)" fg:x="467" fg:w="22"/><text x="33.5833%" y="911.50"></text></g><g><title>[unknown] (22 samples, 1.57%)</title><rect x="33.3333%" y="885" width="1.5703%" height="15" fill="rgb(234,130,49)" fg:x="467" fg:w="22"/><text x="33.5833%" y="895.50"></text></g><g><title>[unknown] (16 samples, 1.14%)</title><rect x="33.7616%" y="869" width="1.1420%" height="15" fill="rgb(254,6,2)" fg:x="473" fg:w="16"/><text x="34.0116%" y="879.50"></text></g><g><title>[unknown] (16 samples, 1.14%)</title><rect x="33.7616%" y="853" width="1.1420%" height="15" fill="rgb(208,96,46)" fg:x="473" fg:w="16"/><text x="34.0116%" y="863.50"></text></g><g><title>[unknown] (14 samples, 1.00%)</title><rect x="33.9044%" y="837" width="0.9993%" height="15" fill="rgb(239,3,39)" fg:x="475" fg:w="14"/><text x="34.1544%" y="847.50"></text></g><g><title>[unknown] (14 samples, 1.00%)</title><rect x="33.9044%" y="821" width="0.9993%" height="15" fill="rgb(233,210,1)" fg:x="475" fg:w="14"/><text x="34.1544%" y="831.50"></text></g><g><title>[unknown] (14 samples, 1.00%)</title><rect x="33.9044%" y="805" width="0.9993%" height="15" fill="rgb(244,137,37)" fg:x="475" fg:w="14"/><text x="34.1544%" y="815.50"></text></g><g><title>[unknown] (14 samples, 1.00%)</title><rect x="33.9044%" y="789" width="0.9993%" height="15" fill="rgb(240,136,2)" fg:x="475" fg:w="14"/><text x="34.1544%" y="799.50"></text></g><g><title>[unknown] (12 samples, 0.86%)</title><rect x="34.0471%" y="773" width="0.8565%" height="15" fill="rgb(239,18,37)" fg:x="477" fg:w="12"/><text x="34.2971%" y="783.50"></text></g><g><title>[unknown] (9 samples, 0.64%)</title><rect x="34.2612%" y="757" width="0.6424%" height="15" fill="rgb(218,185,22)" fg:x="480" fg:w="9"/><text x="34.5112%" y="767.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="34.4040%" y="741" width="0.4996%" height="15" fill="rgb(225,218,4)" fg:x="482" fg:w="7"/><text x="34.6540%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="34.4754%" y="725" width="0.4283%" height="15" fill="rgb(230,182,32)" fg:x="483" fg:w="6"/><text x="34.7254%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="34.5468%" y="709" width="0.3569%" height="15" fill="rgb(242,56,43)" fg:x="484" fg:w="5"/><text x="34.7968%" y="719.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (73 samples, 5.21%)</title><rect x="29.7645%" y="997" width="5.2106%" height="15" fill="rgb(233,99,24)" fg:x="417" fg:w="73"/><text x="30.0145%" y="1007.50">crossb..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (73 samples, 5.21%)</title><rect x="29.7645%" y="981" width="5.2106%" height="15" fill="rgb(234,209,42)" fg:x="417" fg:w="73"/><text x="30.0145%" y="991.50">crossb..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (23 samples, 1.64%)</title><rect x="33.3333%" y="965" width="1.6417%" height="15" fill="rgb(227,7,12)" fg:x="467" fg:w="23"/><text x="33.5833%" y="975.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (23 samples, 1.64%)</title><rect x="33.3333%" y="949" width="1.6417%" height="15" fill="rgb(245,203,43)" fg:x="467" fg:w="23"/><text x="33.5833%" y="959.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (23 samples, 1.64%)</title><rect x="33.3333%" y="933" width="1.6417%" height="15" fill="rgb(238,205,33)" fg:x="467" fg:w="23"/><text x="33.5833%" y="943.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (23 samples, 1.64%)</title><rect x="33.3333%" y="917" width="1.6417%" height="15" fill="rgb(231,56,7)" fg:x="467" fg:w="23"/><text x="33.5833%" y="927.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.07%)</title><rect x="34.9036%" y="901" width="0.0714%" height="15" fill="rgb(244,186,29)" fg:x="489" fg:w="1"/><text x="35.1536%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.07%)</title><rect x="34.9036%" y="885" width="0.0714%" height="15" fill="rgb(234,111,31)" fg:x="489" fg:w="1"/><text x="35.1536%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.07%)</title><rect x="34.9036%" y="869" width="0.0714%" height="15" fill="rgb(241,149,10)" fg:x="489" fg:w="1"/><text x="35.1536%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (6 samples, 0.43%)</title><rect x="34.9750%" y="693" width="0.4283%" height="15" fill="rgb(249,206,44)" fg:x="490" fg:w="6"/><text x="35.2250%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.29%)</title><rect x="35.1178%" y="677" width="0.2855%" height="15" fill="rgb(251,153,30)" fg:x="492" fg:w="4"/><text x="35.3678%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (4 samples, 0.29%)</title><rect x="35.1178%" y="661" width="0.2855%" height="15" fill="rgb(239,152,38)" fg:x="492" fg:w="4"/><text x="35.3678%" y="671.50"></text></g><g><title>hex::val (3 samples, 0.21%)</title><rect x="35.1892%" y="645" width="0.2141%" height="15" fill="rgb(249,139,47)" fg:x="493" fg:w="3"/><text x="35.4392%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="35.3319%" y="629" width="0.0714%" height="15" fill="rgb(244,64,35)" fg:x="495" fg:w="1"/><text x="35.5819%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="35.3319%" y="613" width="0.0714%" height="15" fill="rgb(216,46,15)" fg:x="495" fg:w="1"/><text x="35.5819%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="35.3319%" y="597" width="0.0714%" height="15" fill="rgb(250,74,19)" fg:x="495" fg:w="1"/><text x="35.5819%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="35.3319%" y="581" width="0.0714%" height="15" fill="rgb(249,42,33)" fg:x="495" fg:w="1"/><text x="35.5819%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="35.3319%" y="565" width="0.0714%" height="15" fill="rgb(242,149,17)" fg:x="495" fg:w="1"/><text x="35.5819%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="35.3319%" y="549" width="0.0714%" height="15" fill="rgb(244,29,21)" fg:x="495" fg:w="1"/><text x="35.5819%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="35.3319%" y="533" width="0.0714%" height="15" fill="rgb(220,130,37)" fg:x="495" fg:w="1"/><text x="35.5819%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="35.3319%" y="517" width="0.0714%" height="15" fill="rgb(211,67,2)" fg:x="495" fg:w="1"/><text x="35.5819%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="35.3319%" y="501" width="0.0714%" height="15" fill="rgb(235,68,52)" fg:x="495" fg:w="1"/><text x="35.5819%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.50%)</title><rect x="34.9750%" y="789" width="0.4996%" height="15" fill="rgb(246,142,3)" fg:x="490" fg:w="7"/><text x="35.2250%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (7 samples, 0.50%)</title><rect x="34.9750%" y="773" width="0.4996%" height="15" fill="rgb(241,25,7)" fg:x="490" fg:w="7"/><text x="35.2250%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.50%)</title><rect x="34.9750%" y="757" width="0.4996%" height="15" fill="rgb(242,119,39)" fg:x="490" fg:w="7"/><text x="35.2250%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.50%)</title><rect x="34.9750%" y="741" width="0.4996%" height="15" fill="rgb(241,98,45)" fg:x="490" fg:w="7"/><text x="35.2250%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.50%)</title><rect x="34.9750%" y="725" width="0.4996%" height="15" fill="rgb(254,28,30)" fg:x="490" fg:w="7"/><text x="35.2250%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.50%)</title><rect x="34.9750%" y="709" width="0.4996%" height="15" fill="rgb(241,142,54)" fg:x="490" fg:w="7"/><text x="35.2250%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Chunks&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="35.4033%" y="693" width="0.0714%" height="15" fill="rgb(222,85,15)" fg:x="496" fg:w="1"/><text x="35.6533%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.64%)</title><rect x="34.9750%" y="821" width="0.6424%" height="15" fill="rgb(210,85,47)" fg:x="490" fg:w="9"/><text x="35.2250%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9 samples, 0.64%)</title><rect x="34.9750%" y="805" width="0.6424%" height="15" fill="rgb(224,206,25)" fg:x="490" fg:w="9"/><text x="35.2250%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="35.4747%" y="789" width="0.1428%" height="15" fill="rgb(243,201,19)" fg:x="497" fg:w="2"/><text x="35.7247%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="35.4747%" y="773" width="0.1428%" height="15" fill="rgb(236,59,4)" fg:x="497" fg:w="2"/><text x="35.7247%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.14%)</title><rect x="35.4747%" y="757" width="0.1428%" height="15" fill="rgb(254,179,45)" fg:x="497" fg:w="2"/><text x="35.7247%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.14%)</title><rect x="35.4747%" y="741" width="0.1428%" height="15" fill="rgb(226,14,10)" fg:x="497" fg:w="2"/><text x="35.7247%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.14%)</title><rect x="35.4747%" y="725" width="0.1428%" height="15" fill="rgb(244,27,41)" fg:x="497" fg:w="2"/><text x="35.7247%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.14%)</title><rect x="35.4747%" y="709" width="0.1428%" height="15" fill="rgb(235,35,32)" fg:x="497" fg:w="2"/><text x="35.7247%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.14%)</title><rect x="35.4747%" y="693" width="0.1428%" height="15" fill="rgb(218,68,31)" fg:x="497" fg:w="2"/><text x="35.7247%" y="703.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.14%)</title><rect x="35.4747%" y="677" width="0.1428%" height="15" fill="rgb(207,120,37)" fg:x="497" fg:w="2"/><text x="35.7247%" y="687.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="35.4747%" y="661" width="0.1428%" height="15" fill="rgb(227,98,0)" fg:x="497" fg:w="2"/><text x="35.7247%" y="671.50"></text></g><g><title>hex::decode (10 samples, 0.71%)</title><rect x="34.9750%" y="981" width="0.7138%" height="15" fill="rgb(207,7,3)" fg:x="490" fg:w="10"/><text x="35.2250%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (10 samples, 0.71%)</title><rect x="34.9750%" y="965" width="0.7138%" height="15" fill="rgb(206,98,19)" fg:x="490" fg:w="10"/><text x="35.2250%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.71%)</title><rect x="34.9750%" y="949" width="0.7138%" height="15" fill="rgb(217,5,26)" fg:x="490" fg:w="10"/><text x="35.2250%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (10 samples, 0.71%)</title><rect x="34.9750%" y="933" width="0.7138%" height="15" fill="rgb(235,190,38)" fg:x="490" fg:w="10"/><text x="35.2250%" y="943.50"></text></g><g><title>core::iter::adapters::try_process (10 samples, 0.71%)</title><rect x="34.9750%" y="917" width="0.7138%" height="15" fill="rgb(247,86,24)" fg:x="490" fg:w="10"/><text x="35.2250%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (10 samples, 0.71%)</title><rect x="34.9750%" y="901" width="0.7138%" height="15" fill="rgb(205,101,16)" fg:x="490" fg:w="10"/><text x="35.2250%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.71%)</title><rect x="34.9750%" y="885" width="0.7138%" height="15" fill="rgb(246,168,33)" fg:x="490" fg:w="10"/><text x="35.2250%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (10 samples, 0.71%)</title><rect x="34.9750%" y="869" width="0.7138%" height="15" fill="rgb(231,114,1)" fg:x="490" fg:w="10"/><text x="35.2250%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.71%)</title><rect x="34.9750%" y="853" width="0.7138%" height="15" fill="rgb(207,184,53)" fg:x="490" fg:w="10"/><text x="35.2250%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (10 samples, 0.71%)</title><rect x="34.9750%" y="837" width="0.7138%" height="15" fill="rgb(224,95,51)" fg:x="490" fg:w="10"/><text x="35.2250%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.07%)</title><rect x="35.6174%" y="821" width="0.0714%" height="15" fill="rgb(212,188,45)" fg:x="499" fg:w="1"/><text x="35.8674%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="35.6174%" y="805" width="0.0714%" height="15" fill="rgb(223,154,38)" fg:x="499" fg:w="1"/><text x="35.8674%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="35.6174%" y="789" width="0.0714%" height="15" fill="rgb(251,22,52)" fg:x="499" fg:w="1"/><text x="35.8674%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="35.6174%" y="773" width="0.0714%" height="15" fill="rgb(229,209,22)" fg:x="499" fg:w="1"/><text x="35.8674%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="35.6174%" y="757" width="0.0714%" height="15" fill="rgb(234,138,34)" fg:x="499" fg:w="1"/><text x="35.8674%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="35.6174%" y="741" width="0.0714%" height="15" fill="rgb(212,95,11)" fg:x="499" fg:w="1"/><text x="35.8674%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="35.6174%" y="725" width="0.0714%" height="15" fill="rgb(240,179,47)" fg:x="499" fg:w="1"/><text x="35.8674%" y="735.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="35.6174%" y="709" width="0.0714%" height="15" fill="rgb(240,163,11)" fg:x="499" fg:w="1"/><text x="35.8674%" y="719.50"></text></g><g><title>alloc::string::String::reserve (1 samples, 0.07%)</title><rect x="35.6888%" y="885" width="0.0714%" height="15" fill="rgb(236,37,12)" fg:x="500" fg:w="1"/><text x="35.9388%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="35.6888%" y="869" width="0.0714%" height="15" fill="rgb(232,164,16)" fg:x="500" fg:w="1"/><text x="35.9388%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="35.6888%" y="853" width="0.0714%" height="15" fill="rgb(244,205,15)" fg:x="500" fg:w="1"/><text x="35.9388%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="35.6888%" y="837" width="0.0714%" height="15" fill="rgb(223,117,47)" fg:x="500" fg:w="1"/><text x="35.9388%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="35.6888%" y="821" width="0.0714%" height="15" fill="rgb(244,107,35)" fg:x="500" fg:w="1"/><text x="35.9388%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="35.6888%" y="805" width="0.0714%" height="15" fill="rgb(205,140,8)" fg:x="500" fg:w="1"/><text x="35.9388%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="35.6888%" y="789" width="0.0714%" height="15" fill="rgb(228,84,46)" fg:x="500" fg:w="1"/><text x="35.9388%" y="799.50"></text></g><g><title>lab4::checksum::Checksum::update (13 samples, 0.93%)</title><rect x="34.9750%" y="997" width="0.9279%" height="15" fill="rgb(254,188,9)" fg:x="490" fg:w="13"/><text x="35.2250%" y="1007.50"></text></g><g><title>hex::encode (3 samples, 0.21%)</title><rect x="35.6888%" y="981" width="0.2141%" height="15" fill="rgb(206,112,54)" fg:x="500" fg:w="3"/><text x="35.9388%" y="991.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (3 samples, 0.21%)</title><rect x="35.6888%" y="965" width="0.2141%" height="15" fill="rgb(216,84,49)" fg:x="500" fg:w="3"/><text x="35.9388%" y="975.50"></text></g><g><title>hex::encode_to_iter (3 samples, 0.21%)</title><rect x="35.6888%" y="949" width="0.2141%" height="15" fill="rgb(214,194,35)" fg:x="500" fg:w="3"/><text x="35.9388%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.21%)</title><rect x="35.6888%" y="933" width="0.2141%" height="15" fill="rgb(249,28,3)" fg:x="500" fg:w="3"/><text x="35.9388%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="35.6888%" y="917" width="0.2141%" height="15" fill="rgb(222,56,52)" fg:x="500" fg:w="3"/><text x="35.9388%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (3 samples, 0.21%)</title><rect x="35.6888%" y="901" width="0.2141%" height="15" fill="rgb(245,217,50)" fg:x="500" fg:w="3"/><text x="35.9388%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.14%)</title><rect x="35.7602%" y="885" width="0.1428%" height="15" fill="rgb(213,201,24)" fg:x="501" fg:w="2"/><text x="36.0102%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="35.7602%" y="869" width="0.1428%" height="15" fill="rgb(248,116,28)" fg:x="501" fg:w="2"/><text x="36.0102%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.14%)</title><rect x="35.7602%" y="853" width="0.1428%" height="15" fill="rgb(219,72,43)" fg:x="501" fg:w="2"/><text x="36.0102%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (2 samples, 0.14%)</title><rect x="35.7602%" y="837" width="0.1428%" height="15" fill="rgb(209,138,14)" fg:x="501" fg:w="2"/><text x="36.0102%" y="847.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.14%)</title><rect x="35.7602%" y="821" width="0.1428%" height="15" fill="rgb(222,18,33)" fg:x="501" fg:w="2"/><text x="36.0102%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.14%)</title><rect x="35.7602%" y="805" width="0.1428%" height="15" fill="rgb(213,199,7)" fg:x="501" fg:w="2"/><text x="36.0102%" y="815.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="35.8315%" y="789" width="0.0714%" height="15" fill="rgb(250,110,10)" fg:x="502" fg:w="1"/><text x="36.0815%" y="799.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (2 samples, 0.14%)</title><rect x="35.9029%" y="997" width="0.1428%" height="15" fill="rgb(248,123,6)" fg:x="503" fg:w="2"/><text x="36.1529%" y="1007.50"></text></g><g><title>hex::encode (2 samples, 0.14%)</title><rect x="35.9029%" y="981" width="0.1428%" height="15" fill="rgb(206,91,31)" fg:x="503" fg:w="2"/><text x="36.1529%" y="991.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (2 samples, 0.14%)</title><rect x="35.9029%" y="965" width="0.1428%" height="15" fill="rgb(211,154,13)" fg:x="503" fg:w="2"/><text x="36.1529%" y="975.50"></text></g><g><title>hex::encode_to_iter (2 samples, 0.14%)</title><rect x="35.9029%" y="949" width="0.1428%" height="15" fill="rgb(225,148,7)" fg:x="503" fg:w="2"/><text x="36.1529%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="35.9029%" y="933" width="0.1428%" height="15" fill="rgb(220,160,43)" fg:x="503" fg:w="2"/><text x="36.1529%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="35.9029%" y="917" width="0.1428%" height="15" fill="rgb(213,52,39)" fg:x="503" fg:w="2"/><text x="36.1529%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (2 samples, 0.14%)</title><rect x="35.9029%" y="901" width="0.1428%" height="15" fill="rgb(243,137,7)" fg:x="503" fg:w="2"/><text x="36.1529%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.14%)</title><rect x="35.9029%" y="885" width="0.1428%" height="15" fill="rgb(230,79,13)" fg:x="503" fg:w="2"/><text x="36.1529%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="35.9029%" y="869" width="0.1428%" height="15" fill="rgb(247,105,23)" fg:x="503" fg:w="2"/><text x="36.1529%" y="879.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="35.9029%" y="853" width="0.1428%" height="15" fill="rgb(223,179,41)" fg:x="503" fg:w="2"/><text x="36.1529%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="35.9743%" y="837" width="0.0714%" height="15" fill="rgb(218,9,34)" fg:x="504" fg:w="1"/><text x="36.2243%" y="847.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.07%)</title><rect x="35.9743%" y="821" width="0.0714%" height="15" fill="rgb(222,106,8)" fg:x="504" fg:w="1"/><text x="36.2243%" y="831.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.36%)</title><rect x="36.0457%" y="837" width="0.3569%" height="15" fill="rgb(211,220,0)" fg:x="505" fg:w="5"/><text x="36.2957%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="36.3312%" y="821" width="0.0714%" height="15" fill="rgb(229,52,16)" fg:x="509" fg:w="1"/><text x="36.5812%" y="831.50"></text></g><g><title>malloc_consolidate (1 samples, 0.07%)</title><rect x="36.3312%" y="805" width="0.0714%" height="15" fill="rgb(212,155,18)" fg:x="509" fg:w="1"/><text x="36.5812%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="36.3312%" y="789" width="0.0714%" height="15" fill="rgb(242,21,14)" fg:x="509" fg:w="1"/><text x="36.5812%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="36.3312%" y="773" width="0.0714%" height="15" fill="rgb(222,19,48)" fg:x="509" fg:w="1"/><text x="36.5812%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="36.3312%" y="757" width="0.0714%" height="15" fill="rgb(232,45,27)" fg:x="509" fg:w="1"/><text x="36.5812%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="36.3312%" y="741" width="0.0714%" height="15" fill="rgb(249,103,42)" fg:x="509" fg:w="1"/><text x="36.5812%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="36.3312%" y="725" width="0.0714%" height="15" fill="rgb(246,81,33)" fg:x="509" fg:w="1"/><text x="36.5812%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="36.3312%" y="709" width="0.0714%" height="15" fill="rgb(252,33,42)" fg:x="509" fg:w="1"/><text x="36.5812%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="36.3312%" y="693" width="0.0714%" height="15" fill="rgb(209,212,41)" fg:x="509" fg:w="1"/><text x="36.5812%" y="703.50"></text></g><g><title>alloc::string::String::with_capacity (6 samples, 0.43%)</title><rect x="36.0457%" y="965" width="0.4283%" height="15" fill="rgb(207,154,6)" fg:x="505" fg:w="6"/><text x="36.2957%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 0.43%)</title><rect x="36.0457%" y="949" width="0.4283%" height="15" fill="rgb(223,64,47)" fg:x="505" fg:w="6"/><text x="36.2957%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.43%)</title><rect x="36.0457%" y="933" width="0.4283%" height="15" fill="rgb(211,161,38)" fg:x="505" fg:w="6"/><text x="36.2957%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.43%)</title><rect x="36.0457%" y="917" width="0.4283%" height="15" fill="rgb(219,138,40)" fg:x="505" fg:w="6"/><text x="36.2957%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.43%)</title><rect x="36.0457%" y="901" width="0.4283%" height="15" fill="rgb(241,228,46)" fg:x="505" fg:w="6"/><text x="36.2957%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.43%)</title><rect x="36.0457%" y="885" width="0.4283%" height="15" fill="rgb(223,209,38)" fg:x="505" fg:w="6"/><text x="36.2957%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.43%)</title><rect x="36.0457%" y="869" width="0.4283%" height="15" fill="rgb(236,164,45)" fg:x="505" fg:w="6"/><text x="36.2957%" y="879.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.43%)</title><rect x="36.0457%" y="853" width="0.4283%" height="15" fill="rgb(231,15,5)" fg:x="505" fg:w="6"/><text x="36.2957%" y="863.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="36.4026%" y="837" width="0.0714%" height="15" fill="rgb(252,35,15)" fg:x="510" fg:w="1"/><text x="36.6526%" y="847.50"></text></g><g><title>__close (22 samples, 1.57%)</title><rect x="36.4739%" y="885" width="1.5703%" height="15" fill="rgb(248,181,18)" fg:x="511" fg:w="22"/><text x="36.7239%" y="895.50"></text></g><g><title>[unknown] (20 samples, 1.43%)</title><rect x="36.6167%" y="869" width="1.4276%" height="15" fill="rgb(233,39,42)" fg:x="513" fg:w="20"/><text x="36.8667%" y="879.50"></text></g><g><title>[unknown] (18 samples, 1.28%)</title><rect x="36.7595%" y="853" width="1.2848%" height="15" fill="rgb(238,110,33)" fg:x="515" fg:w="18"/><text x="37.0095%" y="863.50"></text></g><g><title>[unknown] (18 samples, 1.28%)</title><rect x="36.7595%" y="837" width="1.2848%" height="15" fill="rgb(233,195,10)" fg:x="515" fg:w="18"/><text x="37.0095%" y="847.50"></text></g><g><title>[unknown] (17 samples, 1.21%)</title><rect x="36.8308%" y="821" width="1.2134%" height="15" fill="rgb(254,105,3)" fg:x="516" fg:w="17"/><text x="37.0808%" y="831.50"></text></g><g><title>[unknown] (17 samples, 1.21%)</title><rect x="36.8308%" y="805" width="1.2134%" height="15" fill="rgb(221,225,9)" fg:x="516" fg:w="17"/><text x="37.0808%" y="815.50"></text></g><g><title>[unknown] (16 samples, 1.14%)</title><rect x="36.9022%" y="789" width="1.1420%" height="15" fill="rgb(224,227,45)" fg:x="517" fg:w="16"/><text x="37.1522%" y="799.50"></text></g><g><title>[unknown] (16 samples, 1.14%)</title><rect x="36.9022%" y="773" width="1.1420%" height="15" fill="rgb(229,198,43)" fg:x="517" fg:w="16"/><text x="37.1522%" y="783.50"></text></g><g><title>[unknown] (15 samples, 1.07%)</title><rect x="36.9736%" y="757" width="1.0707%" height="15" fill="rgb(206,209,35)" fg:x="518" fg:w="15"/><text x="37.2236%" y="767.50"></text></g><g><title>[unknown] (14 samples, 1.00%)</title><rect x="37.0450%" y="741" width="0.9993%" height="15" fill="rgb(245,195,53)" fg:x="519" fg:w="14"/><text x="37.2950%" y="751.50"></text></g><g><title>[unknown] (13 samples, 0.93%)</title><rect x="37.1163%" y="725" width="0.9279%" height="15" fill="rgb(240,92,26)" fg:x="520" fg:w="13"/><text x="37.3663%" y="735.50"></text></g><g><title>[unknown] (12 samples, 0.86%)</title><rect x="37.1877%" y="709" width="0.8565%" height="15" fill="rgb(207,40,23)" fg:x="521" fg:w="12"/><text x="37.4377%" y="719.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="37.2591%" y="693" width="0.7852%" height="15" fill="rgb(223,111,35)" fg:x="522" fg:w="11"/><text x="37.5091%" y="703.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="37.3305%" y="677" width="0.7138%" height="15" fill="rgb(229,147,28)" fg:x="523" fg:w="10"/><text x="37.5805%" y="687.50"></text></g><g><title>[unknown] (8 samples, 0.57%)</title><rect x="37.4732%" y="661" width="0.5710%" height="15" fill="rgb(211,29,28)" fg:x="525" fg:w="8"/><text x="37.7232%" y="671.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="37.5446%" y="645" width="0.4996%" height="15" fill="rgb(228,72,33)" fg:x="526" fg:w="7"/><text x="37.7946%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="37.5446%" y="629" width="0.4996%" height="15" fill="rgb(205,214,31)" fg:x="526" fg:w="7"/><text x="37.7946%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="37.5446%" y="613" width="0.4996%" height="15" fill="rgb(224,111,15)" fg:x="526" fg:w="7"/><text x="37.7946%" y="623.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="37.5446%" y="597" width="0.4996%" height="15" fill="rgb(253,21,26)" fg:x="526" fg:w="7"/><text x="37.7946%" y="607.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="37.5446%" y="581" width="0.4996%" height="15" fill="rgb(245,139,43)" fg:x="526" fg:w="7"/><text x="37.7946%" y="591.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="37.5446%" y="565" width="0.4996%" height="15" fill="rgb(252,170,7)" fg:x="526" fg:w="7"/><text x="37.7946%" y="575.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="37.5446%" y="549" width="0.4996%" height="15" fill="rgb(231,118,14)" fg:x="526" fg:w="7"/><text x="37.7946%" y="559.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="37.5446%" y="533" width="0.4996%" height="15" fill="rgb(238,83,0)" fg:x="526" fg:w="7"/><text x="37.7946%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="37.6160%" y="517" width="0.4283%" height="15" fill="rgb(221,39,39)" fg:x="527" fg:w="6"/><text x="37.8660%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="37.6160%" y="501" width="0.4283%" height="15" fill="rgb(222,119,46)" fg:x="527" fg:w="6"/><text x="37.8660%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="37.6160%" y="485" width="0.4283%" height="15" fill="rgb(222,165,49)" fg:x="527" fg:w="6"/><text x="37.8660%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="37.6160%" y="469" width="0.4283%" height="15" fill="rgb(219,113,52)" fg:x="527" fg:w="6"/><text x="37.8660%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="453" width="0.0714%" height="15" fill="rgb(214,7,15)" fg:x="532" fg:w="1"/><text x="38.2229%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="437" width="0.0714%" height="15" fill="rgb(235,32,4)" fg:x="532" fg:w="1"/><text x="38.2229%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="421" width="0.0714%" height="15" fill="rgb(238,90,54)" fg:x="532" fg:w="1"/><text x="38.2229%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="405" width="0.0714%" height="15" fill="rgb(213,208,19)" fg:x="532" fg:w="1"/><text x="38.2229%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="389" width="0.0714%" height="15" fill="rgb(233,156,4)" fg:x="532" fg:w="1"/><text x="38.2229%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="373" width="0.0714%" height="15" fill="rgb(207,194,5)" fg:x="532" fg:w="1"/><text x="38.2229%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="357" width="0.0714%" height="15" fill="rgb(206,111,30)" fg:x="532" fg:w="1"/><text x="38.2229%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="341" width="0.0714%" height="15" fill="rgb(243,70,54)" fg:x="532" fg:w="1"/><text x="38.2229%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="325" width="0.0714%" height="15" fill="rgb(242,28,8)" fg:x="532" fg:w="1"/><text x="38.2229%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="309" width="0.0714%" height="15" fill="rgb(219,106,18)" fg:x="532" fg:w="1"/><text x="38.2229%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="293" width="0.0714%" height="15" fill="rgb(244,222,10)" fg:x="532" fg:w="1"/><text x="38.2229%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="277" width="0.0714%" height="15" fill="rgb(236,179,52)" fg:x="532" fg:w="1"/><text x="38.2229%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="261" width="0.0714%" height="15" fill="rgb(213,23,39)" fg:x="532" fg:w="1"/><text x="38.2229%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="245" width="0.0714%" height="15" fill="rgb(238,48,10)" fg:x="532" fg:w="1"/><text x="38.2229%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="229" width="0.0714%" height="15" fill="rgb(251,196,23)" fg:x="532" fg:w="1"/><text x="38.2229%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="213" width="0.0714%" height="15" fill="rgb(250,152,24)" fg:x="532" fg:w="1"/><text x="38.2229%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="197" width="0.0714%" height="15" fill="rgb(209,150,17)" fg:x="532" fg:w="1"/><text x="38.2229%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="181" width="0.0714%" height="15" fill="rgb(234,202,34)" fg:x="532" fg:w="1"/><text x="38.2229%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="165" width="0.0714%" height="15" fill="rgb(253,148,53)" fg:x="532" fg:w="1"/><text x="38.2229%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="149" width="0.0714%" height="15" fill="rgb(218,129,16)" fg:x="532" fg:w="1"/><text x="38.2229%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="133" width="0.0714%" height="15" fill="rgb(216,85,19)" fg:x="532" fg:w="1"/><text x="38.2229%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="117" width="0.0714%" height="15" fill="rgb(235,228,7)" fg:x="532" fg:w="1"/><text x="38.2229%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="101" width="0.0714%" height="15" fill="rgb(245,175,0)" fg:x="532" fg:w="1"/><text x="38.2229%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="85" width="0.0714%" height="15" fill="rgb(208,168,36)" fg:x="532" fg:w="1"/><text x="38.2229%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="69" width="0.0714%" height="15" fill="rgb(246,171,24)" fg:x="532" fg:w="1"/><text x="38.2229%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="53" width="0.0714%" height="15" fill="rgb(215,142,24)" fg:x="532" fg:w="1"/><text x="38.2229%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="37.9729%" y="37" width="0.0714%" height="15" fill="rgb(250,187,7)" fg:x="532" fg:w="1"/><text x="38.2229%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::fs::File&gt; (23 samples, 1.64%)</title><rect x="36.4739%" y="965" width="1.6417%" height="15" fill="rgb(228,66,33)" fg:x="511" fg:w="23"/><text x="36.7239%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fs::File&gt; (23 samples, 1.64%)</title><rect x="36.4739%" y="949" width="1.6417%" height="15" fill="rgb(234,215,21)" fg:x="511" fg:w="23"/><text x="36.7239%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::fd::FileDesc&gt; (23 samples, 1.64%)</title><rect x="36.4739%" y="933" width="1.6417%" height="15" fill="rgb(222,191,20)" fg:x="511" fg:w="23"/><text x="36.7239%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::os::fd::owned::OwnedFd&gt; (23 samples, 1.64%)</title><rect x="36.4739%" y="917" width="1.6417%" height="15" fill="rgb(245,79,54)" fg:x="511" fg:w="23"/><text x="36.7239%" y="927.50"></text></g><g><title>&lt;std::os::fd::owned::OwnedFd as core::ops::drop::Drop&gt;::drop (23 samples, 1.64%)</title><rect x="36.4739%" y="901" width="1.6417%" height="15" fill="rgb(240,10,37)" fg:x="511" fg:w="23"/><text x="36.7239%" y="911.50"></text></g><g><title>std::io::default_read_to_end (1 samples, 0.07%)</title><rect x="38.0443%" y="885" width="0.0714%" height="15" fill="rgb(214,192,32)" fg:x="533" fg:w="1"/><text x="38.2943%" y="895.50"></text></g><g><title>std::io::default_read_to_end::small_probe_read (1 samples, 0.07%)</title><rect x="38.0443%" y="869" width="0.0714%" height="15" fill="rgb(209,36,54)" fg:x="533" fg:w="1"/><text x="38.2943%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="38.0443%" y="853" width="0.0714%" height="15" fill="rgb(220,10,11)" fg:x="533" fg:w="1"/><text x="38.2943%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="38.0443%" y="837" width="0.0714%" height="15" fill="rgb(221,106,17)" fg:x="533" fg:w="1"/><text x="38.2943%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="38.0443%" y="821" width="0.0714%" height="15" fill="rgb(251,142,44)" fg:x="533" fg:w="1"/><text x="38.2943%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="38.0443%" y="805" width="0.0714%" height="15" fill="rgb(238,13,15)" fg:x="533" fg:w="1"/><text x="38.2943%" y="815.50"></text></g><g><title>__libc_read (1 samples, 0.07%)</title><rect x="38.0443%" y="789" width="0.0714%" height="15" fill="rgb(208,107,27)" fg:x="533" fg:w="1"/><text x="38.2943%" y="799.50"></text></g><g><title>__libc_read (1 samples, 0.07%)</title><rect x="38.0443%" y="773" width="0.0714%" height="15" fill="rgb(205,136,37)" fg:x="533" fg:w="1"/><text x="38.2943%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="38.0443%" y="757" width="0.0714%" height="15" fill="rgb(250,205,27)" fg:x="533" fg:w="1"/><text x="38.2943%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.07%)</title><rect x="38.1156%" y="917" width="0.0714%" height="15" fill="rgb(210,80,43)" fg:x="534" fg:w="1"/><text x="38.3656%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="38.1156%" y="901" width="0.0714%" height="15" fill="rgb(247,160,36)" fg:x="534" fg:w="1"/><text x="38.3656%" y="911.50"></text></g><g><title>std::fs::File::metadata (19 samples, 1.36%)</title><rect x="38.1156%" y="965" width="1.3562%" height="15" fill="rgb(234,13,49)" fg:x="534" fg:w="19"/><text x="38.3656%" y="975.50"></text></g><g><title>std::sys::unix::fs::File::file_attr (19 samples, 1.36%)</title><rect x="38.1156%" y="949" width="1.3562%" height="15" fill="rgb(234,122,0)" fg:x="534" fg:w="19"/><text x="38.3656%" y="959.50"></text></g><g><title>std::sys::unix::fs::try_statx (19 samples, 1.36%)</title><rect x="38.1156%" y="933" width="1.3562%" height="15" fill="rgb(207,146,38)" fg:x="534" fg:w="19"/><text x="38.3656%" y="943.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (18 samples, 1.28%)</title><rect x="38.1870%" y="917" width="1.2848%" height="15" fill="rgb(207,177,25)" fg:x="535" fg:w="18"/><text x="38.4370%" y="927.50"></text></g><g><title>statx (18 samples, 1.28%)</title><rect x="38.1870%" y="901" width="1.2848%" height="15" fill="rgb(211,178,42)" fg:x="535" fg:w="18"/><text x="38.4370%" y="911.50"></text></g><g><title>[unknown] (18 samples, 1.28%)</title><rect x="38.1870%" y="885" width="1.2848%" height="15" fill="rgb(230,69,54)" fg:x="535" fg:w="18"/><text x="38.4370%" y="895.50"></text></g><g><title>[unknown] (15 samples, 1.07%)</title><rect x="38.4011%" y="869" width="1.0707%" height="15" fill="rgb(214,135,41)" fg:x="538" fg:w="15"/><text x="38.6511%" y="879.50"></text></g><g><title>[unknown] (14 samples, 1.00%)</title><rect x="38.4725%" y="853" width="0.9993%" height="15" fill="rgb(237,67,25)" fg:x="539" fg:w="14"/><text x="38.7225%" y="863.50"></text></g><g><title>[unknown] (14 samples, 1.00%)</title><rect x="38.4725%" y="837" width="0.9993%" height="15" fill="rgb(222,189,50)" fg:x="539" fg:w="14"/><text x="38.7225%" y="847.50"></text></g><g><title>[unknown] (14 samples, 1.00%)</title><rect x="38.4725%" y="821" width="0.9993%" height="15" fill="rgb(245,148,34)" fg:x="539" fg:w="14"/><text x="38.7225%" y="831.50"></text></g><g><title>[unknown] (12 samples, 0.86%)</title><rect x="38.6153%" y="805" width="0.8565%" height="15" fill="rgb(222,29,6)" fg:x="541" fg:w="12"/><text x="38.8653%" y="815.50"></text></g><g><title>[unknown] (12 samples, 0.86%)</title><rect x="38.6153%" y="789" width="0.8565%" height="15" fill="rgb(221,189,43)" fg:x="541" fg:w="12"/><text x="38.8653%" y="799.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="38.6867%" y="773" width="0.7852%" height="15" fill="rgb(207,36,27)" fg:x="542" fg:w="11"/><text x="38.9367%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="39.0435%" y="757" width="0.4283%" height="15" fill="rgb(217,90,24)" fg:x="547" fg:w="6"/><text x="39.2935%" y="767.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="39.1863%" y="741" width="0.2855%" height="15" fill="rgb(224,66,35)" fg:x="549" fg:w="4"/><text x="39.4363%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="39.4004%" y="725" width="0.0714%" height="15" fill="rgb(221,13,50)" fg:x="552" fg:w="1"/><text x="39.6504%" y="735.50"></text></g><g><title>std::fs::File::open (278 samples, 19.84%)</title><rect x="39.4718%" y="965" width="19.8430%" height="15" fill="rgb(236,68,49)" fg:x="553" fg:w="278"/><text x="39.7218%" y="975.50">std::fs::File::open</text></g><g><title>std::fs::OpenOptions::open (278 samples, 19.84%)</title><rect x="39.4718%" y="949" width="19.8430%" height="15" fill="rgb(229,146,28)" fg:x="553" fg:w="278"/><text x="39.7218%" y="959.50">std::fs::OpenOptions::open</text></g><g><title>std::fs::OpenOptions::_open (278 samples, 19.84%)</title><rect x="39.4718%" y="933" width="19.8430%" height="15" fill="rgb(225,31,38)" fg:x="553" fg:w="278"/><text x="39.7218%" y="943.50">std::fs::OpenOptions::_open</text></g><g><title>std::sys::unix::fs::File::open (278 samples, 19.84%)</title><rect x="39.4718%" y="917" width="19.8430%" height="15" fill="rgb(250,208,3)" fg:x="553" fg:w="278"/><text x="39.7218%" y="927.50">std::sys::unix::fs::File::open</text></g><g><title>std::sys::common::small_c_string::run_path_with_cstr (278 samples, 19.84%)</title><rect x="39.4718%" y="901" width="19.8430%" height="15" fill="rgb(246,54,23)" fg:x="553" fg:w="278"/><text x="39.7218%" y="911.50">std::sys::common::small_c_strin..</text></g><g><title>std::sys::common::small_c_string::run_with_cstr (278 samples, 19.84%)</title><rect x="39.4718%" y="885" width="19.8430%" height="15" fill="rgb(243,76,11)" fg:x="553" fg:w="278"/><text x="39.7218%" y="895.50">std::sys::common::small_c_strin..</text></g><g><title>std::sys::unix::fs::File::open::{{closure}} (278 samples, 19.84%)</title><rect x="39.4718%" y="869" width="19.8430%" height="15" fill="rgb(245,21,50)" fg:x="553" fg:w="278"/><text x="39.7218%" y="879.50">std::sys::unix::fs::File::open:..</text></g><g><title>std::sys::unix::fs::File::open_c (278 samples, 19.84%)</title><rect x="39.4718%" y="853" width="19.8430%" height="15" fill="rgb(228,9,43)" fg:x="553" fg:w="278"/><text x="39.7218%" y="863.50">std::sys::unix::fs::File::open_c</text></g><g><title>std::sys::unix::cvt_r (278 samples, 19.84%)</title><rect x="39.4718%" y="837" width="19.8430%" height="15" fill="rgb(208,100,47)" fg:x="553" fg:w="278"/><text x="39.7218%" y="847.50">std::sys::unix::cvt_r</text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (278 samples, 19.84%)</title><rect x="39.4718%" y="821" width="19.8430%" height="15" fill="rgb(232,26,8)" fg:x="553" fg:w="278"/><text x="39.7218%" y="831.50">std::sys::unix::fs::File::open_..</text></g><g><title>__libc_open64 (278 samples, 19.84%)</title><rect x="39.4718%" y="805" width="19.8430%" height="15" fill="rgb(216,166,38)" fg:x="553" fg:w="278"/><text x="39.7218%" y="815.50">__libc_open64</text></g><g><title>[unknown] (278 samples, 19.84%)</title><rect x="39.4718%" y="789" width="19.8430%" height="15" fill="rgb(251,202,51)" fg:x="553" fg:w="278"/><text x="39.7218%" y="799.50">[unknown]</text></g><g><title>[unknown] (277 samples, 19.77%)</title><rect x="39.5432%" y="773" width="19.7716%" height="15" fill="rgb(254,216,34)" fg:x="554" fg:w="277"/><text x="39.7932%" y="783.50">[unknown]</text></g><g><title>[unknown] (277 samples, 19.77%)</title><rect x="39.5432%" y="757" width="19.7716%" height="15" fill="rgb(251,32,27)" fg:x="554" fg:w="277"/><text x="39.7932%" y="767.50">[unknown]</text></g><g><title>[unknown] (277 samples, 19.77%)</title><rect x="39.5432%" y="741" width="19.7716%" height="15" fill="rgb(208,127,28)" fg:x="554" fg:w="277"/><text x="39.7932%" y="751.50">[unknown]</text></g><g><title>[unknown] (276 samples, 19.70%)</title><rect x="39.6146%" y="725" width="19.7002%" height="15" fill="rgb(224,137,22)" fg:x="555" fg:w="276"/><text x="39.8646%" y="735.50">[unknown]</text></g><g><title>[unknown] (275 samples, 19.63%)</title><rect x="39.6859%" y="709" width="19.6288%" height="15" fill="rgb(254,70,32)" fg:x="556" fg:w="275"/><text x="39.9359%" y="719.50">[unknown]</text></g><g><title>[unknown] (273 samples, 19.49%)</title><rect x="39.8287%" y="693" width="19.4861%" height="15" fill="rgb(229,75,37)" fg:x="558" fg:w="273"/><text x="40.0787%" y="703.50">[unknown]</text></g><g><title>[unknown] (272 samples, 19.41%)</title><rect x="39.9001%" y="677" width="19.4147%" height="15" fill="rgb(252,64,23)" fg:x="559" fg:w="272"/><text x="40.1501%" y="687.50">[unknown]</text></g><g><title>[unknown] (267 samples, 19.06%)</title><rect x="40.2570%" y="661" width="19.0578%" height="15" fill="rgb(232,162,48)" fg:x="564" fg:w="267"/><text x="40.5070%" y="671.50">[unknown]</text></g><g><title>[unknown] (267 samples, 19.06%)</title><rect x="40.2570%" y="645" width="19.0578%" height="15" fill="rgb(246,160,12)" fg:x="564" fg:w="267"/><text x="40.5070%" y="655.50">[unknown]</text></g><g><title>[unknown] (264 samples, 18.84%)</title><rect x="40.4711%" y="629" width="18.8437%" height="15" fill="rgb(247,166,0)" fg:x="567" fg:w="264"/><text x="40.7211%" y="639.50">[unknown]</text></g><g><title>[unknown] (257 samples, 18.34%)</title><rect x="40.9707%" y="613" width="18.3440%" height="15" fill="rgb(249,219,21)" fg:x="574" fg:w="257"/><text x="41.2207%" y="623.50">[unknown]</text></g><g><title>[unknown] (255 samples, 18.20%)</title><rect x="41.1135%" y="597" width="18.2013%" height="15" fill="rgb(205,209,3)" fg:x="576" fg:w="255"/><text x="41.3635%" y="607.50">[unknown]</text></g><g><title>[unknown] (253 samples, 18.06%)</title><rect x="41.2562%" y="581" width="18.0585%" height="15" fill="rgb(243,44,1)" fg:x="578" fg:w="253"/><text x="41.5062%" y="591.50">[unknown]</text></g><g><title>[unknown] (249 samples, 17.77%)</title><rect x="41.5418%" y="565" width="17.7730%" height="15" fill="rgb(206,159,16)" fg:x="582" fg:w="249"/><text x="41.7918%" y="575.50">[unknown]</text></g><g><title>[unknown] (247 samples, 17.63%)</title><rect x="41.6845%" y="549" width="17.6303%" height="15" fill="rgb(244,77,30)" fg:x="584" fg:w="247"/><text x="41.9345%" y="559.50">[unknown]</text></g><g><title>[unknown] (247 samples, 17.63%)</title><rect x="41.6845%" y="533" width="17.6303%" height="15" fill="rgb(218,69,12)" fg:x="584" fg:w="247"/><text x="41.9345%" y="543.50">[unknown]</text></g><g><title>[unknown] (242 samples, 17.27%)</title><rect x="42.0414%" y="517" width="17.2734%" height="15" fill="rgb(212,87,7)" fg:x="589" fg:w="242"/><text x="42.2914%" y="527.50">[unknown]</text></g><g><title>[unknown] (238 samples, 16.99%)</title><rect x="42.3269%" y="501" width="16.9879%" height="15" fill="rgb(245,114,25)" fg:x="593" fg:w="238"/><text x="42.5769%" y="511.50">[unknown]</text></g><g><title>[unknown] (237 samples, 16.92%)</title><rect x="42.3983%" y="485" width="16.9165%" height="15" fill="rgb(210,61,42)" fg:x="594" fg:w="237"/><text x="42.6483%" y="495.50">[unknown]</text></g><g><title>[unknown] (237 samples, 16.92%)</title><rect x="42.3983%" y="469" width="16.9165%" height="15" fill="rgb(211,52,33)" fg:x="594" fg:w="237"/><text x="42.6483%" y="479.50">[unknown]</text></g><g><title>[unknown] (232 samples, 16.56%)</title><rect x="42.7552%" y="453" width="16.5596%" height="15" fill="rgb(234,58,33)" fg:x="599" fg:w="232"/><text x="43.0052%" y="463.50">[unknown]</text></g><g><title>[unknown] (226 samples, 16.13%)</title><rect x="43.1834%" y="437" width="16.1313%" height="15" fill="rgb(220,115,36)" fg:x="605" fg:w="226"/><text x="43.4334%" y="447.50">[unknown]</text></g><g><title>[unknown] (224 samples, 15.99%)</title><rect x="43.3262%" y="421" width="15.9886%" height="15" fill="rgb(243,153,54)" fg:x="607" fg:w="224"/><text x="43.5762%" y="431.50">[unknown]</text></g><g><title>[unknown] (218 samples, 15.56%)</title><rect x="43.7545%" y="405" width="15.5603%" height="15" fill="rgb(251,47,18)" fg:x="613" fg:w="218"/><text x="44.0045%" y="415.50">[unknown]</text></g><g><title>[unknown] (215 samples, 15.35%)</title><rect x="43.9686%" y="389" width="15.3462%" height="15" fill="rgb(242,102,42)" fg:x="616" fg:w="215"/><text x="44.2186%" y="399.50">[unknown]</text></g><g><title>[unknown] (17 samples, 1.21%)</title><rect x="58.1014%" y="373" width="1.2134%" height="15" fill="rgb(234,31,38)" fg:x="814" fg:w="17"/><text x="58.3514%" y="383.50"></text></g><g><title>[unknown] (17 samples, 1.21%)</title><rect x="58.1014%" y="357" width="1.2134%" height="15" fill="rgb(221,117,51)" fg:x="814" fg:w="17"/><text x="58.3514%" y="367.50"></text></g><g><title>[unknown] (17 samples, 1.21%)</title><rect x="58.1014%" y="341" width="1.2134%" height="15" fill="rgb(212,20,18)" fg:x="814" fg:w="17"/><text x="58.3514%" y="351.50"></text></g><g><title>[unknown] (16 samples, 1.14%)</title><rect x="58.1727%" y="325" width="1.1420%" height="15" fill="rgb(245,133,36)" fg:x="815" fg:w="16"/><text x="58.4227%" y="335.50"></text></g><g><title>[unknown] (16 samples, 1.14%)</title><rect x="58.1727%" y="309" width="1.1420%" height="15" fill="rgb(212,6,19)" fg:x="815" fg:w="16"/><text x="58.4227%" y="319.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="59.0293%" y="293" width="0.2855%" height="15" fill="rgb(218,1,36)" fg:x="827" fg:w="4"/><text x="59.2793%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="59.0293%" y="277" width="0.2855%" height="15" fill="rgb(246,84,54)" fg:x="827" fg:w="4"/><text x="59.2793%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="59.0293%" y="261" width="0.2855%" height="15" fill="rgb(242,110,6)" fg:x="827" fg:w="4"/><text x="59.2793%" y="271.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="59.0293%" y="245" width="0.2855%" height="15" fill="rgb(214,47,5)" fg:x="827" fg:w="4"/><text x="59.2793%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="59.0293%" y="229" width="0.2855%" height="15" fill="rgb(218,159,25)" fg:x="827" fg:w="4"/><text x="59.2793%" y="239.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="59.1006%" y="213" width="0.2141%" height="15" fill="rgb(215,211,28)" fg:x="828" fg:w="3"/><text x="59.3506%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="59.1006%" y="197" width="0.2141%" height="15" fill="rgb(238,59,32)" fg:x="828" fg:w="3"/><text x="59.3506%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="59.1006%" y="181" width="0.2141%" height="15" fill="rgb(226,82,3)" fg:x="828" fg:w="3"/><text x="59.3506%" y="191.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="59.1006%" y="165" width="0.2141%" height="15" fill="rgb(240,164,32)" fg:x="828" fg:w="3"/><text x="59.3506%" y="175.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="59.1006%" y="149" width="0.2141%" height="15" fill="rgb(232,46,7)" fg:x="828" fg:w="3"/><text x="59.3506%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="59.1006%" y="133" width="0.2141%" height="15" fill="rgb(229,129,53)" fg:x="828" fg:w="3"/><text x="59.3506%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="59.1006%" y="117" width="0.2141%" height="15" fill="rgb(234,188,29)" fg:x="828" fg:w="3"/><text x="59.3506%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="59.2434%" y="101" width="0.0714%" height="15" fill="rgb(246,141,4)" fg:x="830" fg:w="1"/><text x="59.4934%" y="111.50"></text></g><g><title>core::str::converts::from_utf8 (5 samples, 0.36%)</title><rect x="59.3148%" y="933" width="0.3569%" height="15" fill="rgb(229,23,39)" fg:x="831" fg:w="5"/><text x="59.5648%" y="943.50"></text></g><g><title>core::str::validations::run_utf8_validation (4 samples, 0.29%)</title><rect x="59.3862%" y="917" width="0.2855%" height="15" fill="rgb(206,12,3)" fg:x="832" fg:w="4"/><text x="59.6362%" y="927.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (14 samples, 1.00%)</title><rect x="59.6717%" y="901" width="0.9993%" height="15" fill="rgb(252,226,20)" fg:x="836" fg:w="14"/><text x="59.9217%" y="911.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read_buf (14 samples, 1.00%)</title><rect x="59.6717%" y="885" width="0.9993%" height="15" fill="rgb(216,123,35)" fg:x="836" fg:w="14"/><text x="59.9217%" y="895.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (14 samples, 1.00%)</title><rect x="59.6717%" y="869" width="0.9993%" height="15" fill="rgb(212,68,40)" fg:x="836" fg:w="14"/><text x="59.9217%" y="879.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (14 samples, 1.00%)</title><rect x="59.6717%" y="853" width="0.9993%" height="15" fill="rgb(254,125,32)" fg:x="836" fg:w="14"/><text x="59.9217%" y="863.50"></text></g><g><title>__libc_read (14 samples, 1.00%)</title><rect x="59.6717%" y="837" width="0.9993%" height="15" fill="rgb(253,97,22)" fg:x="836" fg:w="14"/><text x="59.9217%" y="847.50"></text></g><g><title>__libc_read (14 samples, 1.00%)</title><rect x="59.6717%" y="821" width="0.9993%" height="15" fill="rgb(241,101,14)" fg:x="836" fg:w="14"/><text x="59.9217%" y="831.50"></text></g><g><title>[unknown] (14 samples, 1.00%)</title><rect x="59.6717%" y="805" width="0.9993%" height="15" fill="rgb(238,103,29)" fg:x="836" fg:w="14"/><text x="59.9217%" y="815.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="59.8858%" y="789" width="0.7852%" height="15" fill="rgb(233,195,47)" fg:x="839" fg:w="11"/><text x="60.1358%" y="799.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="59.8858%" y="773" width="0.7852%" height="15" fill="rgb(246,218,30)" fg:x="839" fg:w="11"/><text x="60.1358%" y="783.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="59.9572%" y="757" width="0.7138%" height="15" fill="rgb(219,145,47)" fg:x="840" fg:w="10"/><text x="60.2072%" y="767.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="59.9572%" y="741" width="0.7138%" height="15" fill="rgb(243,12,26)" fg:x="840" fg:w="10"/><text x="60.2072%" y="751.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="59.9572%" y="725" width="0.7138%" height="15" fill="rgb(214,87,16)" fg:x="840" fg:w="10"/><text x="60.2072%" y="735.50"></text></g><g><title>[unknown] (9 samples, 0.64%)</title><rect x="60.0286%" y="709" width="0.6424%" height="15" fill="rgb(208,99,42)" fg:x="841" fg:w="9"/><text x="60.2786%" y="719.50"></text></g><g><title>[unknown] (9 samples, 0.64%)</title><rect x="60.0286%" y="693" width="0.6424%" height="15" fill="rgb(253,99,2)" fg:x="841" fg:w="9"/><text x="60.2786%" y="703.50"></text></g><g><title>[unknown] (9 samples, 0.64%)</title><rect x="60.0286%" y="677" width="0.6424%" height="15" fill="rgb(220,168,23)" fg:x="841" fg:w="9"/><text x="60.2786%" y="687.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="60.1713%" y="661" width="0.4996%" height="15" fill="rgb(242,38,24)" fg:x="843" fg:w="7"/><text x="60.4213%" y="671.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="60.1713%" y="645" width="0.4996%" height="15" fill="rgb(225,182,9)" fg:x="843" fg:w="7"/><text x="60.4213%" y="655.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (3 samples, 0.21%)</title><rect x="60.6709%" y="885" width="0.2141%" height="15" fill="rgb(243,178,37)" fg:x="850" fg:w="3"/><text x="60.9209%" y="895.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Read&gt;::read (3 samples, 0.21%)</title><rect x="60.6709%" y="869" width="0.2141%" height="15" fill="rgb(232,139,19)" fg:x="850" fg:w="3"/><text x="60.9209%" y="879.50"></text></g><g><title>std::sys::unix::fs::File::read (3 samples, 0.21%)</title><rect x="60.6709%" y="853" width="0.2141%" height="15" fill="rgb(225,201,24)" fg:x="850" fg:w="3"/><text x="60.9209%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (3 samples, 0.21%)</title><rect x="60.6709%" y="837" width="0.2141%" height="15" fill="rgb(221,47,46)" fg:x="850" fg:w="3"/><text x="60.9209%" y="847.50"></text></g><g><title>__libc_read (3 samples, 0.21%)</title><rect x="60.6709%" y="821" width="0.2141%" height="15" fill="rgb(249,23,13)" fg:x="850" fg:w="3"/><text x="60.9209%" y="831.50"></text></g><g><title>__libc_read (3 samples, 0.21%)</title><rect x="60.6709%" y="805" width="0.2141%" height="15" fill="rgb(219,9,5)" fg:x="850" fg:w="3"/><text x="60.9209%" y="815.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="60.6709%" y="789" width="0.2141%" height="15" fill="rgb(254,171,16)" fg:x="850" fg:w="3"/><text x="60.9209%" y="799.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="60.7423%" y="773" width="0.1428%" height="15" fill="rgb(230,171,20)" fg:x="851" fg:w="2"/><text x="60.9923%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="60.7423%" y="757" width="0.1428%" height="15" fill="rgb(210,71,41)" fg:x="851" fg:w="2"/><text x="60.9923%" y="767.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="60.7423%" y="741" width="0.1428%" height="15" fill="rgb(206,173,20)" fg:x="851" fg:w="2"/><text x="60.9923%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="60.8137%" y="725" width="0.0714%" height="15" fill="rgb(233,88,34)" fg:x="852" fg:w="1"/><text x="61.0637%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="60.8137%" y="709" width="0.0714%" height="15" fill="rgb(223,209,46)" fg:x="852" fg:w="1"/><text x="61.0637%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="60.8137%" y="693" width="0.0714%" height="15" fill="rgb(250,43,18)" fg:x="852" fg:w="1"/><text x="61.0637%" y="703.50"></text></g><g><title>std::fs::read_to_string (349 samples, 24.91%)</title><rect x="36.0457%" y="997" width="24.9108%" height="15" fill="rgb(208,13,10)" fg:x="505" fg:w="349"/><text x="36.2957%" y="1007.50">std::fs::read_to_string</text></g><g><title>std::fs::read_to_string::inner (349 samples, 24.91%)</title><rect x="36.0457%" y="981" width="24.9108%" height="15" fill="rgb(212,200,36)" fg:x="505" fg:w="349"/><text x="36.2957%" y="991.50">std::fs::read_to_string::inner</text></g><g><title>std::io::default_read_to_string (23 samples, 1.64%)</title><rect x="59.3148%" y="965" width="1.6417%" height="15" fill="rgb(225,90,30)" fg:x="831" fg:w="23"/><text x="59.5648%" y="975.50"></text></g><g><title>std::io::append_to_string (23 samples, 1.64%)</title><rect x="59.3148%" y="949" width="1.6417%" height="15" fill="rgb(236,182,39)" fg:x="831" fg:w="23"/><text x="59.5648%" y="959.50"></text></g><g><title>std::io::default_read_to_string::{{closure}} (18 samples, 1.28%)</title><rect x="59.6717%" y="933" width="1.2848%" height="15" fill="rgb(212,144,35)" fg:x="836" fg:w="18"/><text x="59.9217%" y="943.50"></text></g><g><title>std::io::default_read_to_end (18 samples, 1.28%)</title><rect x="59.6717%" y="917" width="1.2848%" height="15" fill="rgb(228,63,44)" fg:x="836" fg:w="18"/><text x="59.9217%" y="927.50"></text></g><g><title>std::io::default_read_to_end::small_probe_read (4 samples, 0.29%)</title><rect x="60.6709%" y="901" width="0.2855%" height="15" fill="rgb(228,109,6)" fg:x="850" fg:w="4"/><text x="60.9209%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="60.8851%" y="885" width="0.0714%" height="15" fill="rgb(238,117,24)" fg:x="853" fg:w="1"/><text x="61.1351%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="60.8851%" y="869" width="0.0714%" height="15" fill="rgb(242,26,26)" fg:x="853" fg:w="1"/><text x="61.1351%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="60.8851%" y="853" width="0.0714%" height="15" fill="rgb(221,92,48)" fg:x="853" fg:w="1"/><text x="61.1351%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="60.8851%" y="837" width="0.0714%" height="15" fill="rgb(209,209,32)" fg:x="853" fg:w="1"/><text x="61.1351%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="60.8851%" y="821" width="0.0714%" height="15" fill="rgb(221,70,22)" fg:x="853" fg:w="1"/><text x="61.1351%" y="831.50"></text></g><g><title>std::sys::unix::futex::futex_wait (6 samples, 0.43%)</title><rect x="60.9565%" y="949" width="0.4283%" height="15" fill="rgb(248,145,5)" fg:x="854" fg:w="6"/><text x="61.2065%" y="959.50"></text></g><g><title>syscall (6 samples, 0.43%)</title><rect x="60.9565%" y="933" width="0.4283%" height="15" fill="rgb(226,116,26)" fg:x="854" fg:w="6"/><text x="61.2065%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="60.9565%" y="917" width="0.4283%" height="15" fill="rgb(244,5,17)" fg:x="854" fg:w="6"/><text x="61.2065%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="60.9565%" y="901" width="0.4283%" height="15" fill="rgb(252,159,33)" fg:x="854" fg:w="6"/><text x="61.2065%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="60.9565%" y="885" width="0.4283%" height="15" fill="rgb(206,71,0)" fg:x="854" fg:w="6"/><text x="61.2065%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="60.9565%" y="869" width="0.4283%" height="15" fill="rgb(233,118,54)" fg:x="854" fg:w="6"/><text x="61.2065%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="60.9565%" y="853" width="0.4283%" height="15" fill="rgb(234,83,48)" fg:x="854" fg:w="6"/><text x="61.2065%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="60.9565%" y="837" width="0.4283%" height="15" fill="rgb(228,3,54)" fg:x="854" fg:w="6"/><text x="61.2065%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="60.9565%" y="821" width="0.4283%" height="15" fill="rgb(226,155,13)" fg:x="854" fg:w="6"/><text x="61.2065%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="60.9565%" y="805" width="0.4283%" height="15" fill="rgb(241,28,37)" fg:x="854" fg:w="6"/><text x="61.2065%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="60.9565%" y="789" width="0.4283%" height="15" fill="rgb(233,93,10)" fg:x="854" fg:w="6"/><text x="61.2065%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="61.0278%" y="773" width="0.3569%" height="15" fill="rgb(225,113,19)" fg:x="855" fg:w="5"/><text x="61.2778%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="61.0278%" y="757" width="0.3569%" height="15" fill="rgb(241,2,18)" fg:x="855" fg:w="5"/><text x="61.2778%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="61.0278%" y="741" width="0.3569%" height="15" fill="rgb(228,207,21)" fg:x="855" fg:w="5"/><text x="61.2778%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="61.0278%" y="725" width="0.3569%" height="15" fill="rgb(213,211,35)" fg:x="855" fg:w="5"/><text x="61.2778%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="61.0278%" y="709" width="0.3569%" height="15" fill="rgb(209,83,10)" fg:x="855" fg:w="5"/><text x="61.2778%" y="719.50"></text></g><g><title>lab4::package::PackageDownloader::run (726 samples, 51.82%)</title><rect x="9.6360%" y="1013" width="51.8201%" height="15" fill="rgb(209,164,1)" fg:x="135" fg:w="726"/><text x="9.8860%" y="1023.50">lab4::package::PackageDownloader::run</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.50%)</title><rect x="60.9565%" y="997" width="0.4996%" height="15" fill="rgb(213,184,43)" fg:x="854" fg:w="7"/><text x="61.2065%" y="1007.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (7 samples, 0.50%)</title><rect x="60.9565%" y="981" width="0.4996%" height="15" fill="rgb(231,61,34)" fg:x="854" fg:w="7"/><text x="61.2065%" y="991.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (7 samples, 0.50%)</title><rect x="60.9565%" y="965" width="0.4996%" height="15" fill="rgb(235,75,3)" fg:x="854" fg:w="7"/><text x="61.2065%" y="975.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::spin (1 samples, 0.07%)</title><rect x="61.3847%" y="949" width="0.0714%" height="15" fill="rgb(220,106,47)" fg:x="860" fg:w="1"/><text x="61.6347%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.07%)</title><rect x="61.3847%" y="933" width="0.0714%" height="15" fill="rgb(210,196,33)" fg:x="860" fg:w="1"/><text x="61.6347%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="61.3847%" y="917" width="0.0714%" height="15" fill="rgb(229,154,42)" fg:x="860" fg:w="1"/><text x="61.6347%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (4 samples, 0.29%)</title><rect x="62.5268%" y="997" width="0.2855%" height="15" fill="rgb(228,114,26)" fg:x="876" fg:w="4"/><text x="62.7768%" y="1007.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.50%)</title><rect x="62.9550%" y="981" width="0.4996%" height="15" fill="rgb(208,144,1)" fg:x="882" fg:w="7"/><text x="63.2050%" y="991.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (7 samples, 0.50%)</title><rect x="62.9550%" y="965" width="0.4996%" height="15" fill="rgb(239,112,37)" fg:x="882" fg:w="7"/><text x="63.2050%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (25 samples, 1.78%)</title><rect x="63.4547%" y="981" width="1.7844%" height="15" fill="rgb(210,96,50)" fg:x="889" fg:w="25"/><text x="63.7047%" y="991.50">c..</text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="64.8108%" y="965" width="0.4283%" height="15" fill="rgb(222,178,2)" fg:x="908" fg:w="6"/><text x="65.0608%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="64.8108%" y="949" width="0.4283%" height="15" fill="rgb(226,74,18)" fg:x="908" fg:w="6"/><text x="65.0608%" y="959.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="64.8108%" y="933" width="0.4283%" height="15" fill="rgb(225,67,54)" fg:x="908" fg:w="6"/><text x="65.0608%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="64.8108%" y="917" width="0.4283%" height="15" fill="rgb(251,92,32)" fg:x="908" fg:w="6"/><text x="65.0608%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="64.8108%" y="901" width="0.4283%" height="15" fill="rgb(228,149,22)" fg:x="908" fg:w="6"/><text x="65.0608%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="64.8108%" y="885" width="0.4283%" height="15" fill="rgb(243,54,13)" fg:x="908" fg:w="6"/><text x="65.0608%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="64.8822%" y="869" width="0.3569%" height="15" fill="rgb(243,180,28)" fg:x="909" fg:w="5"/><text x="65.1322%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="64.8822%" y="853" width="0.3569%" height="15" fill="rgb(208,167,24)" fg:x="909" fg:w="5"/><text x="65.1322%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="64.8822%" y="837" width="0.3569%" height="15" fill="rgb(245,73,45)" fg:x="909" fg:w="5"/><text x="65.1322%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="64.8822%" y="821" width="0.3569%" height="15" fill="rgb(237,203,48)" fg:x="909" fg:w="5"/><text x="65.1322%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="64.8822%" y="805" width="0.3569%" height="15" fill="rgb(211,197,16)" fg:x="909" fg:w="5"/><text x="65.1322%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="64.8822%" y="789" width="0.3569%" height="15" fill="rgb(243,99,51)" fg:x="909" fg:w="5"/><text x="65.1322%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="64.8822%" y="773" width="0.3569%" height="15" fill="rgb(215,123,29)" fg:x="909" fg:w="5"/><text x="65.1322%" y="783.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (2 samples, 0.14%)</title><rect x="66.0956%" y="965" width="0.1428%" height="15" fill="rgb(239,186,37)" fg:x="926" fg:w="2"/><text x="66.3456%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.14%)</title><rect x="66.2384%" y="965" width="0.1428%" height="15" fill="rgb(252,136,39)" fg:x="928" fg:w="2"/><text x="66.4884%" y="975.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (2 samples, 0.14%)</title><rect x="66.3812%" y="869" width="0.1428%" height="15" fill="rgb(223,213,32)" fg:x="930" fg:w="2"/><text x="66.6312%" y="879.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (2 samples, 0.14%)</title><rect x="66.3812%" y="853" width="0.1428%" height="15" fill="rgb(233,115,5)" fg:x="930" fg:w="2"/><text x="66.6312%" y="863.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.14%)</title><rect x="66.3812%" y="837" width="0.1428%" height="15" fill="rgb(207,226,44)" fg:x="930" fg:w="2"/><text x="66.6312%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.14%)</title><rect x="66.3812%" y="821" width="0.1428%" height="15" fill="rgb(208,126,0)" fg:x="930" fg:w="2"/><text x="66.6312%" y="831.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (26 samples, 1.86%)</title><rect x="66.3812%" y="885" width="1.8558%" height="15" fill="rgb(244,66,21)" fg:x="930" fg:w="26"/><text x="66.6312%" y="895.50">c..</text></g><g><title>std::thread::park (24 samples, 1.71%)</title><rect x="66.5239%" y="869" width="1.7131%" height="15" fill="rgb(222,97,12)" fg:x="932" fg:w="24"/><text x="66.7739%" y="879.50"></text></g><g><title>std::sys_common::thread_parking::futex::Parker::park (24 samples, 1.71%)</title><rect x="66.5239%" y="853" width="1.7131%" height="15" fill="rgb(219,213,19)" fg:x="932" fg:w="24"/><text x="66.7739%" y="863.50"></text></g><g><title>std::sys::unix::futex::futex_wait (24 samples, 1.71%)</title><rect x="66.5239%" y="837" width="1.7131%" height="15" fill="rgb(252,169,30)" fg:x="932" fg:w="24"/><text x="66.7739%" y="847.50"></text></g><g><title>syscall (24 samples, 1.71%)</title><rect x="66.5239%" y="821" width="1.7131%" height="15" fill="rgb(206,32,51)" fg:x="932" fg:w="24"/><text x="66.7739%" y="831.50"></text></g><g><title>[unknown] (24 samples, 1.71%)</title><rect x="66.5239%" y="805" width="1.7131%" height="15" fill="rgb(250,172,42)" fg:x="932" fg:w="24"/><text x="66.7739%" y="815.50"></text></g><g><title>[unknown] (23 samples, 1.64%)</title><rect x="66.5953%" y="789" width="1.6417%" height="15" fill="rgb(209,34,43)" fg:x="933" fg:w="23"/><text x="66.8453%" y="799.50"></text></g><g><title>[unknown] (23 samples, 1.64%)</title><rect x="66.5953%" y="773" width="1.6417%" height="15" fill="rgb(223,11,35)" fg:x="933" fg:w="23"/><text x="66.8453%" y="783.50"></text></g><g><title>[unknown] (23 samples, 1.64%)</title><rect x="66.5953%" y="757" width="1.6417%" height="15" fill="rgb(251,219,26)" fg:x="933" fg:w="23"/><text x="66.8453%" y="767.50"></text></g><g><title>[unknown] (23 samples, 1.64%)</title><rect x="66.5953%" y="741" width="1.6417%" height="15" fill="rgb(231,119,3)" fg:x="933" fg:w="23"/><text x="66.8453%" y="751.50"></text></g><g><title>[unknown] (22 samples, 1.57%)</title><rect x="66.6667%" y="725" width="1.5703%" height="15" fill="rgb(216,97,11)" fg:x="934" fg:w="22"/><text x="66.9167%" y="735.50"></text></g><g><title>[unknown] (20 samples, 1.43%)</title><rect x="66.8094%" y="709" width="1.4276%" height="15" fill="rgb(223,59,9)" fg:x="936" fg:w="20"/><text x="67.0594%" y="719.50"></text></g><g><title>[unknown] (20 samples, 1.43%)</title><rect x="66.8094%" y="693" width="1.4276%" height="15" fill="rgb(233,93,31)" fg:x="936" fg:w="20"/><text x="67.0594%" y="703.50"></text></g><g><title>[unknown] (20 samples, 1.43%)</title><rect x="66.8094%" y="677" width="1.4276%" height="15" fill="rgb(239,81,33)" fg:x="936" fg:w="20"/><text x="67.0594%" y="687.50"></text></g><g><title>[unknown] (20 samples, 1.43%)</title><rect x="66.8094%" y="661" width="1.4276%" height="15" fill="rgb(213,120,34)" fg:x="936" fg:w="20"/><text x="67.0594%" y="671.50"></text></g><g><title>[unknown] (20 samples, 1.43%)</title><rect x="66.8094%" y="645" width="1.4276%" height="15" fill="rgb(243,49,53)" fg:x="936" fg:w="20"/><text x="67.0594%" y="655.50"></text></g><g><title>[unknown] (20 samples, 1.43%)</title><rect x="66.8094%" y="629" width="1.4276%" height="15" fill="rgb(247,216,33)" fg:x="936" fg:w="20"/><text x="67.0594%" y="639.50"></text></g><g><title>[unknown] (20 samples, 1.43%)</title><rect x="66.8094%" y="613" width="1.4276%" height="15" fill="rgb(226,26,14)" fg:x="936" fg:w="20"/><text x="67.0594%" y="623.50"></text></g><g><title>[unknown] (20 samples, 1.43%)</title><rect x="66.8094%" y="597" width="1.4276%" height="15" fill="rgb(215,49,53)" fg:x="936" fg:w="20"/><text x="67.0594%" y="607.50"></text></g><g><title>crossbeam_channel::context::Context::with (81 samples, 5.78%)</title><rect x="66.3812%" y="965" width="5.7816%" height="15" fill="rgb(245,162,40)" fg:x="930" fg:w="81"/><text x="66.6312%" y="975.50">crossbe..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (81 samples, 5.78%)</title><rect x="66.3812%" y="949" width="5.7816%" height="15" fill="rgb(229,68,17)" fg:x="930" fg:w="81"/><text x="66.6312%" y="959.50">std::th..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (81 samples, 5.78%)</title><rect x="66.3812%" y="933" width="5.7816%" height="15" fill="rgb(213,182,10)" fg:x="930" fg:w="81"/><text x="66.6312%" y="943.50">crossbe..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (81 samples, 5.78%)</title><rect x="66.3812%" y="917" width="5.7816%" height="15" fill="rgb(245,125,30)" fg:x="930" fg:w="81"/><text x="66.6312%" y="927.50">crossbe..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (81 samples, 5.78%)</title><rect x="66.3812%" y="901" width="5.7816%" height="15" fill="rgb(232,202,2)" fg:x="930" fg:w="81"/><text x="66.6312%" y="911.50">crossbe..</text></g><g><title>crossbeam_channel::waker::SyncWaker::register (55 samples, 3.93%)</title><rect x="68.2370%" y="885" width="3.9258%" height="15" fill="rgb(237,140,51)" fg:x="956" fg:w="55"/><text x="68.4870%" y="895.50">cros..</text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (55 samples, 3.93%)</title><rect x="68.2370%" y="869" width="3.9258%" height="15" fill="rgb(236,157,25)" fg:x="956" fg:w="55"/><text x="68.4870%" y="879.50">cros..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (55 samples, 3.93%)</title><rect x="68.2370%" y="853" width="3.9258%" height="15" fill="rgb(219,209,0)" fg:x="956" fg:w="55"/><text x="68.4870%" y="863.50">cros..</text></g><g><title>__GI___sched_yield (55 samples, 3.93%)</title><rect x="68.2370%" y="837" width="3.9258%" height="15" fill="rgb(240,116,54)" fg:x="956" fg:w="55"/><text x="68.4870%" y="847.50">__GI..</text></g><g><title>[unknown] (55 samples, 3.93%)</title><rect x="68.2370%" y="821" width="3.9258%" height="15" fill="rgb(216,10,36)" fg:x="956" fg:w="55"/><text x="68.4870%" y="831.50">[unk..</text></g><g><title>[unknown] (44 samples, 3.14%)</title><rect x="69.0221%" y="805" width="3.1406%" height="15" fill="rgb(222,72,44)" fg:x="967" fg:w="44"/><text x="69.2721%" y="815.50">[un..</text></g><g><title>[unknown] (43 samples, 3.07%)</title><rect x="69.0935%" y="789" width="3.0692%" height="15" fill="rgb(232,159,9)" fg:x="968" fg:w="43"/><text x="69.3435%" y="799.50">[un..</text></g><g><title>[unknown] (37 samples, 2.64%)</title><rect x="69.5218%" y="773" width="2.6410%" height="15" fill="rgb(210,39,32)" fg:x="974" fg:w="37"/><text x="69.7718%" y="783.50">[u..</text></g><g><title>[unknown] (35 samples, 2.50%)</title><rect x="69.6645%" y="757" width="2.4982%" height="15" fill="rgb(216,194,45)" fg:x="976" fg:w="35"/><text x="69.9145%" y="767.50">[u..</text></g><g><title>[unknown] (35 samples, 2.50%)</title><rect x="69.6645%" y="741" width="2.4982%" height="15" fill="rgb(218,18,35)" fg:x="976" fg:w="35"/><text x="69.9145%" y="751.50">[u..</text></g><g><title>[unknown] (31 samples, 2.21%)</title><rect x="69.9500%" y="725" width="2.2127%" height="15" fill="rgb(207,83,51)" fg:x="980" fg:w="31"/><text x="70.2000%" y="735.50">[..</text></g><g><title>[unknown] (28 samples, 2.00%)</title><rect x="70.1642%" y="709" width="1.9986%" height="15" fill="rgb(225,63,43)" fg:x="983" fg:w="28"/><text x="70.4142%" y="719.50">[..</text></g><g><title>[unknown] (25 samples, 1.78%)</title><rect x="70.3783%" y="693" width="1.7844%" height="15" fill="rgb(207,57,36)" fg:x="986" fg:w="25"/><text x="70.6283%" y="703.50">[..</text></g><g><title>[unknown] (21 samples, 1.50%)</title><rect x="70.6638%" y="677" width="1.4989%" height="15" fill="rgb(216,99,33)" fg:x="990" fg:w="21"/><text x="70.9138%" y="687.50"></text></g><g><title>[unknown] (19 samples, 1.36%)</title><rect x="70.8066%" y="661" width="1.3562%" height="15" fill="rgb(225,42,16)" fg:x="992" fg:w="19"/><text x="71.0566%" y="671.50"></text></g><g><title>[unknown] (17 samples, 1.21%)</title><rect x="70.9493%" y="645" width="1.2134%" height="15" fill="rgb(220,201,45)" fg:x="994" fg:w="17"/><text x="71.1993%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (2 samples, 0.14%)</title><rect x="72.3055%" y="949" width="0.1428%" height="15" fill="rgb(225,33,4)" fg:x="1013" fg:w="2"/><text x="72.5555%" y="959.50"></text></g><g><title>core::ptr::read (2 samples, 0.14%)</title><rect x="72.3055%" y="933" width="0.1428%" height="15" fill="rgb(224,33,50)" fg:x="1013" fg:w="2"/><text x="72.5555%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (3 samples, 0.21%)</title><rect x="72.4483%" y="949" width="0.2141%" height="15" fill="rgb(246,198,51)" fg:x="1015" fg:w="3"/><text x="72.6983%" y="959.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.21%)</title><rect x="72.4483%" y="933" width="0.2141%" height="15" fill="rgb(205,22,4)" fg:x="1015" fg:w="3"/><text x="72.6983%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.21%)</title><rect x="72.4483%" y="917" width="0.2141%" height="15" fill="rgb(206,3,8)" fg:x="1015" fg:w="3"/><text x="72.6983%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (27 samples, 1.93%)</title><rect x="72.6624%" y="949" width="1.9272%" height="15" fill="rgb(251,23,15)" fg:x="1018" fg:w="27"/><text x="72.9124%" y="959.50">c..</text></g><g><title>core::sync::atomic::atomic_or (27 samples, 1.93%)</title><rect x="72.6624%" y="933" width="1.9272%" height="15" fill="rgb(252,88,28)" fg:x="1018" fg:w="27"/><text x="72.9124%" y="943.50">c..</text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="917" width="0.3569%" height="15" fill="rgb(212,127,14)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="901" width="0.3569%" height="15" fill="rgb(247,145,37)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="885" width="0.3569%" height="15" fill="rgb(209,117,53)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="869" width="0.3569%" height="15" fill="rgb(212,90,42)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="853" width="0.3569%" height="15" fill="rgb(218,164,37)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="837" width="0.3569%" height="15" fill="rgb(246,65,34)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="821" width="0.3569%" height="15" fill="rgb(231,100,33)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="805" width="0.3569%" height="15" fill="rgb(228,126,14)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="815.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="789" width="0.3569%" height="15" fill="rgb(215,173,21)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="773" width="0.3569%" height="15" fill="rgb(210,6,40)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="783.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="757" width="0.3569%" height="15" fill="rgb(212,48,18)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="767.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="741" width="0.3569%" height="15" fill="rgb(230,214,11)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="74.2327%" y="725" width="0.3569%" height="15" fill="rgb(254,105,39)" fg:x="1040" fg:w="5"/><text x="74.4827%" y="735.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="74.6610%" y="853" width="0.0714%" height="15" fill="rgb(245,158,5)" fg:x="1046" fg:w="1"/><text x="74.9110%" y="863.50"></text></g><g><title>core::mem::drop (4 samples, 0.29%)</title><rect x="74.6610%" y="933" width="0.2855%" height="15" fill="rgb(249,208,11)" fg:x="1046" fg:w="4"/><text x="74.9110%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;lab4::Event&gt;&gt;&gt; (4 samples, 0.29%)</title><rect x="74.6610%" y="917" width="0.2855%" height="15" fill="rgb(210,39,28)" fg:x="1046" fg:w="4"/><text x="74.9110%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.29%)</title><rect x="74.6610%" y="901" width="0.2855%" height="15" fill="rgb(211,56,53)" fg:x="1046" fg:w="4"/><text x="74.9110%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.29%)</title><rect x="74.6610%" y="885" width="0.2855%" height="15" fill="rgb(226,201,30)" fg:x="1046" fg:w="4"/><text x="74.9110%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.29%)</title><rect x="74.6610%" y="869" width="0.2855%" height="15" fill="rgb(239,101,34)" fg:x="1046" fg:w="4"/><text x="74.9110%" y="879.50"></text></g><g><title>_int_free (3 samples, 0.21%)</title><rect x="74.7323%" y="853" width="0.2141%" height="15" fill="rgb(226,209,5)" fg:x="1047" fg:w="3"/><text x="74.9823%" y="863.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="74.9465%" y="917" width="0.0714%" height="15" fill="rgb(250,105,47)" fg:x="1050" fg:w="1"/><text x="75.1965%" y="927.50"></text></g><g><title>crossbeam_channel::flavors::list::Block&lt;T&gt;::destroy (9 samples, 0.64%)</title><rect x="74.5896%" y="949" width="0.6424%" height="15" fill="rgb(230,72,3)" fg:x="1045" fg:w="9"/><text x="74.8396%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.29%)</title><rect x="74.9465%" y="933" width="0.2855%" height="15" fill="rgb(232,218,39)" fg:x="1050" fg:w="4"/><text x="75.1965%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.21%)</title><rect x="75.0178%" y="917" width="0.2141%" height="15" fill="rgb(248,166,6)" fg:x="1051" fg:w="3"/><text x="75.2678%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.14%)</title><rect x="75.2320%" y="933" width="0.1428%" height="15" fill="rgb(247,89,20)" fg:x="1054" fg:w="2"/><text x="75.4820%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.14%)</title><rect x="75.2320%" y="917" width="0.1428%" height="15" fill="rgb(248,130,54)" fg:x="1054" fg:w="2"/><text x="75.4820%" y="927.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (49 samples, 3.50%)</title><rect x="72.1627%" y="965" width="3.4975%" height="15" fill="rgb(234,196,4)" fg:x="1011" fg:w="49"/><text x="72.4127%" y="975.50">cro..</text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (6 samples, 0.43%)</title><rect x="75.2320%" y="949" width="0.4283%" height="15" fill="rgb(250,143,31)" fg:x="1054" fg:w="6"/><text x="75.4820%" y="959.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (4 samples, 0.29%)</title><rect x="75.3747%" y="933" width="0.2855%" height="15" fill="rgb(211,110,34)" fg:x="1056" fg:w="4"/><text x="75.6247%" y="943.50"></text></g><g><title>__GI___sched_yield (4 samples, 0.29%)</title><rect x="75.3747%" y="917" width="0.2855%" height="15" fill="rgb(215,124,48)" fg:x="1056" fg:w="4"/><text x="75.6247%" y="927.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="75.3747%" y="901" width="0.2855%" height="15" fill="rgb(216,46,13)" fg:x="1056" fg:w="4"/><text x="75.6247%" y="911.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="75.4461%" y="885" width="0.2141%" height="15" fill="rgb(205,184,25)" fg:x="1057" fg:w="3"/><text x="75.6961%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="75.4461%" y="869" width="0.2141%" height="15" fill="rgb(228,1,10)" fg:x="1057" fg:w="3"/><text x="75.6961%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="75.5889%" y="853" width="0.0714%" height="15" fill="rgb(213,116,27)" fg:x="1059" fg:w="1"/><text x="75.8389%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="75.5889%" y="837" width="0.0714%" height="15" fill="rgb(241,95,50)" fg:x="1059" fg:w="1"/><text x="75.8389%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="75.5889%" y="821" width="0.0714%" height="15" fill="rgb(238,48,32)" fg:x="1059" fg:w="1"/><text x="75.8389%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.07%)</title><rect x="77.7302%" y="949" width="0.0714%" height="15" fill="rgb(235,113,49)" fg:x="1089" fg:w="1"/><text x="77.9802%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.07%)</title><rect x="77.7302%" y="933" width="0.0714%" height="15" fill="rgb(205,127,43)" fg:x="1089" fg:w="1"/><text x="77.9802%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 1.36%)</title><rect x="77.8016%" y="949" width="1.3562%" height="15" fill="rgb(250,162,2)" fg:x="1090" fg:w="19"/><text x="78.0516%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 1.36%)</title><rect x="77.8016%" y="933" width="1.3562%" height="15" fill="rgb(220,13,41)" fg:x="1090" fg:w="19"/><text x="78.0516%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 1.07%)</title><rect x="79.1577%" y="949" width="1.0707%" height="15" fill="rgb(249,221,25)" fg:x="1109" fg:w="15"/><text x="79.4077%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 1.07%)</title><rect x="79.1577%" y="933" width="1.0707%" height="15" fill="rgb(215,208,19)" fg:x="1109" fg:w="15"/><text x="79.4077%" y="943.50"></text></g><g><title>core::sync::atomic::fence (28 samples, 2.00%)</title><rect x="80.2284%" y="949" width="1.9986%" height="15" fill="rgb(236,175,2)" fg:x="1124" fg:w="28"/><text x="80.4784%" y="959.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.43%)</title><rect x="82.2270%" y="933" width="0.4283%" height="15" fill="rgb(241,52,2)" fg:x="1152" fg:w="6"/><text x="82.4770%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.43%)</title><rect x="82.2270%" y="917" width="0.4283%" height="15" fill="rgb(248,140,14)" fg:x="1152" fg:w="6"/><text x="82.4770%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (6 samples, 0.43%)</title><rect x="82.2270%" y="901" width="0.4283%" height="15" fill="rgb(253,22,42)" fg:x="1152" fg:w="6"/><text x="82.4770%" y="911.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (108 samples, 7.71%)</title><rect x="75.6602%" y="965" width="7.7088%" height="15" fill="rgb(234,61,47)" fg:x="1060" fg:w="108"/><text x="75.9102%" y="975.50">crossbeam_c..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (16 samples, 1.14%)</title><rect x="82.2270%" y="949" width="1.1420%" height="15" fill="rgb(208,226,15)" fg:x="1152" fg:w="16"/><text x="82.4770%" y="959.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (10 samples, 0.71%)</title><rect x="82.6552%" y="933" width="0.7138%" height="15" fill="rgb(217,221,4)" fg:x="1158" fg:w="10"/><text x="82.9052%" y="943.50"></text></g><g><title>core::hint::spin_loop (10 samples, 0.71%)</title><rect x="82.6552%" y="917" width="0.7138%" height="15" fill="rgb(212,174,34)" fg:x="1158" fg:w="10"/><text x="82.9052%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (10 samples, 0.71%)</title><rect x="82.6552%" y="901" width="0.7138%" height="15" fill="rgb(253,83,4)" fg:x="1158" fg:w="10"/><text x="82.9052%" y="911.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::new (1 samples, 0.07%)</title><rect x="83.3690%" y="965" width="0.0714%" height="15" fill="rgb(250,195,49)" fg:x="1168" fg:w="1"/><text x="83.6190%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="83.3690%" y="949" width="0.0714%" height="15" fill="rgb(241,192,25)" fg:x="1168" fg:w="1"/><text x="83.6190%" y="959.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="83.3690%" y="933" width="0.0714%" height="15" fill="rgb(208,124,10)" fg:x="1168" fg:w="1"/><text x="83.6190%" y="943.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (313 samples, 22.34%)</title><rect x="62.8123%" y="997" width="22.3412%" height="15" fill="rgb(222,33,0)" fg:x="880" fg:w="313"/><text x="63.0623%" y="1007.50">crossbeam_channel::channel::Receive..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (279 samples, 19.91%)</title><rect x="65.2391%" y="981" width="19.9143%" height="15" fill="rgb(234,209,28)" fg:x="914" fg:w="279"/><text x="65.4891%" y="991.50">crossbeam_channel::flavors::lis..</text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (24 samples, 1.71%)</title><rect x="83.4404%" y="965" width="1.7131%" height="15" fill="rgb(224,11,23)" fg:x="1169" fg:w="24"/><text x="83.6904%" y="975.50"></text></g><g><title>__GI___sched_yield (24 samples, 1.71%)</title><rect x="83.4404%" y="949" width="1.7131%" height="15" fill="rgb(232,99,1)" fg:x="1169" fg:w="24"/><text x="83.6904%" y="959.50"></text></g><g><title>[unknown] (24 samples, 1.71%)</title><rect x="83.4404%" y="933" width="1.7131%" height="15" fill="rgb(237,95,45)" fg:x="1169" fg:w="24"/><text x="83.6904%" y="943.50"></text></g><g><title>[unknown] (24 samples, 1.71%)</title><rect x="83.4404%" y="917" width="1.7131%" height="15" fill="rgb(208,109,11)" fg:x="1169" fg:w="24"/><text x="83.6904%" y="927.50"></text></g><g><title>[unknown] (24 samples, 1.71%)</title><rect x="83.4404%" y="901" width="1.7131%" height="15" fill="rgb(216,190,48)" fg:x="1169" fg:w="24"/><text x="83.6904%" y="911.50"></text></g><g><title>[unknown] (24 samples, 1.71%)</title><rect x="83.4404%" y="885" width="1.7131%" height="15" fill="rgb(251,171,36)" fg:x="1169" fg:w="24"/><text x="83.6904%" y="895.50"></text></g><g><title>[unknown] (24 samples, 1.71%)</title><rect x="83.4404%" y="869" width="1.7131%" height="15" fill="rgb(230,62,22)" fg:x="1169" fg:w="24"/><text x="83.6904%" y="879.50"></text></g><g><title>[unknown] (23 samples, 1.64%)</title><rect x="83.5118%" y="853" width="1.6417%" height="15" fill="rgb(225,114,35)" fg:x="1170" fg:w="23"/><text x="83.7618%" y="863.50"></text></g><g><title>[unknown] (23 samples, 1.64%)</title><rect x="83.5118%" y="837" width="1.6417%" height="15" fill="rgb(215,118,42)" fg:x="1170" fg:w="23"/><text x="83.7618%" y="847.50"></text></g><g><title>[unknown] (22 samples, 1.57%)</title><rect x="83.5832%" y="821" width="1.5703%" height="15" fill="rgb(243,119,21)" fg:x="1171" fg:w="22"/><text x="83.8332%" y="831.50"></text></g><g><title>[unknown] (22 samples, 1.57%)</title><rect x="83.5832%" y="805" width="1.5703%" height="15" fill="rgb(252,177,53)" fg:x="1171" fg:w="22"/><text x="83.8332%" y="815.50"></text></g><g><title>[unknown] (22 samples, 1.57%)</title><rect x="83.5832%" y="789" width="1.5703%" height="15" fill="rgb(237,209,29)" fg:x="1171" fg:w="22"/><text x="83.8332%" y="799.50"></text></g><g><title>[unknown] (22 samples, 1.57%)</title><rect x="83.5832%" y="773" width="1.5703%" height="15" fill="rgb(212,65,23)" fg:x="1171" fg:w="22"/><text x="83.8332%" y="783.50"></text></g><g><title>[unknown] (22 samples, 1.57%)</title><rect x="83.5832%" y="757" width="1.5703%" height="15" fill="rgb(230,222,46)" fg:x="1171" fg:w="22"/><text x="83.8332%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.07%)</title><rect x="86.2241%" y="965" width="0.0714%" height="15" fill="rgb(215,135,32)" fg:x="1208" fg:w="1"/><text x="86.4741%" y="975.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="87.3662%" y="949" width="0.7852%" height="15" fill="rgb(246,101,22)" fg:x="1224" fg:w="11"/><text x="87.6162%" y="959.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="87.3662%" y="933" width="0.7852%" height="15" fill="rgb(206,107,13)" fg:x="1224" fg:w="11"/><text x="87.6162%" y="943.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="87.3662%" y="917" width="0.7852%" height="15" fill="rgb(250,100,44)" fg:x="1224" fg:w="11"/><text x="87.6162%" y="927.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="87.3662%" y="901" width="0.7852%" height="15" fill="rgb(231,147,38)" fg:x="1224" fg:w="11"/><text x="87.6162%" y="911.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="87.3662%" y="885" width="0.7852%" height="15" fill="rgb(229,8,40)" fg:x="1224" fg:w="11"/><text x="87.6162%" y="895.50"></text></g><g><title>[unknown] (11 samples, 0.79%)</title><rect x="87.3662%" y="869" width="0.7852%" height="15" fill="rgb(221,135,30)" fg:x="1224" fg:w="11"/><text x="87.6162%" y="879.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="87.4375%" y="853" width="0.7138%" height="15" fill="rgb(249,193,18)" fg:x="1225" fg:w="10"/><text x="87.6875%" y="863.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="87.4375%" y="837" width="0.7138%" height="15" fill="rgb(209,133,39)" fg:x="1225" fg:w="10"/><text x="87.6875%" y="847.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="87.4375%" y="821" width="0.7138%" height="15" fill="rgb(232,100,14)" fg:x="1225" fg:w="10"/><text x="87.6875%" y="831.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="87.4375%" y="805" width="0.7138%" height="15" fill="rgb(224,185,1)" fg:x="1225" fg:w="10"/><text x="87.6875%" y="815.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="87.4375%" y="789" width="0.7138%" height="15" fill="rgb(223,139,8)" fg:x="1225" fg:w="10"/><text x="87.6875%" y="799.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="87.4375%" y="773" width="0.7138%" height="15" fill="rgb(232,213,38)" fg:x="1225" fg:w="10"/><text x="87.6875%" y="783.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="87.4375%" y="757" width="0.7138%" height="15" fill="rgb(207,94,22)" fg:x="1225" fg:w="10"/><text x="87.6875%" y="767.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.21%)</title><rect x="88.1513%" y="933" width="0.2141%" height="15" fill="rgb(219,183,54)" fg:x="1235" fg:w="3"/><text x="88.4013%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.57%)</title><rect x="88.1513%" y="949" width="0.5710%" height="15" fill="rgb(216,185,54)" fg:x="1235" fg:w="8"/><text x="88.4013%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.36%)</title><rect x="88.3655%" y="933" width="0.3569%" height="15" fill="rgb(254,217,39)" fg:x="1238" fg:w="5"/><text x="88.6155%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.36%)</title><rect x="88.3655%" y="917" width="0.3569%" height="15" fill="rgb(240,178,23)" fg:x="1238" fg:w="5"/><text x="88.6155%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.36%)</title><rect x="88.3655%" y="901" width="0.3569%" height="15" fill="rgb(218,11,47)" fg:x="1238" fg:w="5"/><text x="88.6155%" y="911.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.36%)</title><rect x="88.3655%" y="885" width="0.3569%" height="15" fill="rgb(218,51,51)" fg:x="1238" fg:w="5"/><text x="88.6155%" y="895.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.36%)</title><rect x="88.3655%" y="869" width="0.3569%" height="15" fill="rgb(238,126,27)" fg:x="1238" fg:w="5"/><text x="88.6155%" y="879.50"></text></g><g><title>_int_malloc (3 samples, 0.21%)</title><rect x="88.5082%" y="853" width="0.2141%" height="15" fill="rgb(249,202,22)" fg:x="1240" fg:w="3"/><text x="88.7582%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (3 samples, 0.21%)</title><rect x="88.7223%" y="949" width="0.2141%" height="15" fill="rgb(254,195,49)" fg:x="1243" fg:w="3"/><text x="88.9723%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.21%)</title><rect x="88.7223%" y="933" width="0.2141%" height="15" fill="rgb(208,123,14)" fg:x="1243" fg:w="3"/><text x="88.9723%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (1 samples, 0.07%)</title><rect x="88.9365%" y="949" width="0.0714%" height="15" fill="rgb(224,200,8)" fg:x="1246" fg:w="1"/><text x="89.1865%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.07%)</title><rect x="88.9365%" y="933" width="0.0714%" height="15" fill="rgb(217,61,36)" fg:x="1246" fg:w="1"/><text x="89.1865%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (25 samples, 1.78%)</title><rect x="89.0079%" y="949" width="1.7844%" height="15" fill="rgb(206,35,45)" fg:x="1247" fg:w="25"/><text x="89.2579%" y="959.50">c..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 1.78%)</title><rect x="89.0079%" y="933" width="1.7844%" height="15" fill="rgb(217,65,33)" fg:x="1247" fg:w="25"/><text x="89.2579%" y="943.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.14%)</title><rect x="90.7923%" y="933" width="0.1428%" height="15" fill="rgb(222,158,48)" fg:x="1272" fg:w="2"/><text x="91.0423%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.14%)</title><rect x="90.7923%" y="917" width="0.1428%" height="15" fill="rgb(254,2,54)" fg:x="1272" fg:w="2"/><text x="91.0423%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (2 samples, 0.14%)</title><rect x="90.7923%" y="901" width="0.1428%" height="15" fill="rgb(250,143,38)" fg:x="1272" fg:w="2"/><text x="91.0423%" y="911.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (71 samples, 5.07%)</title><rect x="86.2955%" y="965" width="5.0678%" height="15" fill="rgb(248,25,0)" fg:x="1209" fg:w="71"/><text x="86.5455%" y="975.50">crossb..</text></g><g><title>crossbeam_utils::backoff::Backoff::spin (8 samples, 0.57%)</title><rect x="90.7923%" y="949" width="0.5710%" height="15" fill="rgb(206,152,27)" fg:x="1272" fg:w="8"/><text x="91.0423%" y="959.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (6 samples, 0.43%)</title><rect x="90.9350%" y="933" width="0.4283%" height="15" fill="rgb(240,77,30)" fg:x="1274" fg:w="6"/><text x="91.1850%" y="943.50"></text></g><g><title>core::hint::spin_loop (6 samples, 0.43%)</title><rect x="90.9350%" y="917" width="0.4283%" height="15" fill="rgb(231,5,3)" fg:x="1274" fg:w="6"/><text x="91.1850%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (6 samples, 0.43%)</title><rect x="90.9350%" y="901" width="0.4283%" height="15" fill="rgb(207,226,32)" fg:x="1274" fg:w="6"/><text x="91.1850%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.07%)</title><rect x="91.3633%" y="949" width="0.0714%" height="15" fill="rgb(222,207,47)" fg:x="1280" fg:w="1"/><text x="91.6133%" y="959.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="91.3633%" y="933" width="0.0714%" height="15" fill="rgb(229,115,45)" fg:x="1280" fg:w="1"/><text x="91.6133%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (27 samples, 1.93%)</title><rect x="91.4347%" y="949" width="1.9272%" height="15" fill="rgb(224,191,6)" fg:x="1281" fg:w="27"/><text x="91.6847%" y="959.50">c..</text></g><g><title>core::sync::atomic::atomic_or (27 samples, 1.93%)</title><rect x="91.4347%" y="933" width="1.9272%" height="15" fill="rgb(230,227,24)" fg:x="1281" fg:w="27"/><text x="91.6847%" y="943.50">c..</text></g><g><title>core::sync::atomic::AtomicBool::load (3 samples, 0.21%)</title><rect x="93.3619%" y="933" width="0.2141%" height="15" fill="rgb(228,80,19)" fg:x="1308" fg:w="3"/><text x="93.6119%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.21%)</title><rect x="93.3619%" y="917" width="0.2141%" height="15" fill="rgb(247,229,0)" fg:x="1308" fg:w="3"/><text x="93.6119%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (1 samples, 0.07%)</title><rect x="93.5760%" y="917" width="0.0714%" height="15" fill="rgb(237,194,15)" fg:x="1311" fg:w="1"/><text x="93.8260%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.07%)</title><rect x="93.5760%" y="901" width="0.0714%" height="15" fill="rgb(219,203,20)" fg:x="1311" fg:w="1"/><text x="93.8260%" y="911.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (132 samples, 9.42%)</title><rect x="85.1535%" y="997" width="9.4218%" height="15" fill="rgb(234,128,8)" fg:x="1193" fg:w="132"/><text x="85.4035%" y="1007.50">crossbeam_cha..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (119 samples, 8.49%)</title><rect x="86.0814%" y="981" width="8.4939%" height="15" fill="rgb(248,202,8)" fg:x="1206" fg:w="119"/><text x="86.3314%" y="991.50">crossbeam_ch..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (45 samples, 3.21%)</title><rect x="91.3633%" y="965" width="3.2120%" height="15" fill="rgb(206,104,37)" fg:x="1280" fg:w="45"/><text x="91.6133%" y="975.50">cro..</text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (17 samples, 1.21%)</title><rect x="93.3619%" y="949" width="1.2134%" height="15" fill="rgb(223,8,27)" fg:x="1308" fg:w="17"/><text x="93.6119%" y="959.50"></text></g><g><title>crossbeam_channel::utils::Spinlock&lt;T&gt;::lock (14 samples, 1.00%)</title><rect x="93.5760%" y="933" width="0.9993%" height="15" fill="rgb(216,217,28)" fg:x="1311" fg:w="14"/><text x="93.8260%" y="943.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::snooze (13 samples, 0.93%)</title><rect x="93.6474%" y="917" width="0.9279%" height="15" fill="rgb(249,199,1)" fg:x="1312" fg:w="13"/><text x="93.8974%" y="927.50"></text></g><g><title>__GI___sched_yield (13 samples, 0.93%)</title><rect x="93.6474%" y="901" width="0.9279%" height="15" fill="rgb(240,85,17)" fg:x="1312" fg:w="13"/><text x="93.8974%" y="911.50"></text></g><g><title>[unknown] (13 samples, 0.93%)</title><rect x="93.6474%" y="885" width="0.9279%" height="15" fill="rgb(206,108,45)" fg:x="1312" fg:w="13"/><text x="93.8974%" y="895.50"></text></g><g><title>[unknown] (8 samples, 0.57%)</title><rect x="94.0043%" y="869" width="0.5710%" height="15" fill="rgb(245,210,41)" fg:x="1317" fg:w="8"/><text x="94.2543%" y="879.50"></text></g><g><title>[unknown] (8 samples, 0.57%)</title><rect x="94.0043%" y="853" width="0.5710%" height="15" fill="rgb(206,13,37)" fg:x="1317" fg:w="8"/><text x="94.2543%" y="863.50"></text></g><g><title>[unknown] (7 samples, 0.50%)</title><rect x="94.0757%" y="837" width="0.4996%" height="15" fill="rgb(250,61,18)" fg:x="1318" fg:w="7"/><text x="94.3257%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.1470%" y="821" width="0.4283%" height="15" fill="rgb(235,172,48)" fg:x="1319" fg:w="6"/><text x="94.3970%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="94.2184%" y="805" width="0.3569%" height="15" fill="rgb(249,201,17)" fg:x="1320" fg:w="5"/><text x="94.4684%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="94.2898%" y="789" width="0.2855%" height="15" fill="rgb(219,208,6)" fg:x="1321" fg:w="4"/><text x="94.5398%" y="799.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="94.3612%" y="773" width="0.2141%" height="15" fill="rgb(248,31,23)" fg:x="1322" fg:w="3"/><text x="94.6112%" y="783.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="94.4325%" y="757" width="0.1428%" height="15" fill="rgb(245,15,42)" fg:x="1323" fg:w="2"/><text x="94.6825%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.5039%" y="741" width="0.0714%" height="15" fill="rgb(222,217,39)" fg:x="1324" fg:w="1"/><text x="94.7539%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.5039%" y="725" width="0.0714%" height="15" fill="rgb(210,219,27)" fg:x="1324" fg:w="1"/><text x="94.7539%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;lab4::checksum::Checksum&gt;&gt; (6 samples, 0.43%)</title><rect x="94.5753%" y="981" width="0.4283%" height="15" fill="rgb(252,166,36)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.43%)</title><rect x="94.5753%" y="965" width="0.4283%" height="15" fill="rgb(245,132,34)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="975.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::unlock (6 samples, 0.43%)</title><rect x="94.5753%" y="949" width="0.4283%" height="15" fill="rgb(236,54,3)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="959.50"></text></g><g><title>syscall (6 samples, 0.43%)</title><rect x="94.5753%" y="933" width="0.4283%" height="15" fill="rgb(241,173,43)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="943.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="917" width="0.4283%" height="15" fill="rgb(215,190,9)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="927.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="901" width="0.4283%" height="15" fill="rgb(242,101,16)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="885" width="0.4283%" height="15" fill="rgb(223,190,21)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="895.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="869" width="0.4283%" height="15" fill="rgb(215,228,25)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="853" width="0.4283%" height="15" fill="rgb(225,36,22)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="837" width="0.4283%" height="15" fill="rgb(251,106,46)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="821" width="0.4283%" height="15" fill="rgb(208,90,1)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="805" width="0.4283%" height="15" fill="rgb(243,10,4)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="789" width="0.4283%" height="15" fill="rgb(212,137,27)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="773" width="0.4283%" height="15" fill="rgb(231,220,49)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="757" width="0.4283%" height="15" fill="rgb(237,96,20)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="94.5753%" y="741" width="0.4283%" height="15" fill="rgb(239,229,30)" fg:x="1325" fg:w="6"/><text x="94.8253%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.9322%" y="725" width="0.0714%" height="15" fill="rgb(219,65,33)" fg:x="1330" fg:w="1"/><text x="95.1822%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.9322%" y="709" width="0.0714%" height="15" fill="rgb(243,134,7)" fg:x="1330" fg:w="1"/><text x="95.1822%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.9322%" y="693" width="0.0714%" height="15" fill="rgb(216,177,54)" fg:x="1330" fg:w="1"/><text x="95.1822%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.9322%" y="677" width="0.0714%" height="15" fill="rgb(211,160,20)" fg:x="1330" fg:w="1"/><text x="95.1822%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.9322%" y="661" width="0.0714%" height="15" fill="rgb(239,85,39)" fg:x="1330" fg:w="1"/><text x="95.1822%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.9322%" y="645" width="0.0714%" height="15" fill="rgb(232,125,22)" fg:x="1330" fg:w="1"/><text x="95.1822%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.9322%" y="629" width="0.0714%" height="15" fill="rgb(244,57,34)" fg:x="1330" fg:w="1"/><text x="95.1822%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.9322%" y="613" width="0.0714%" height="15" fill="rgb(214,203,32)" fg:x="1330" fg:w="1"/><text x="95.1822%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.9322%" y="597" width="0.0714%" height="15" fill="rgb(207,58,43)" fg:x="1330" fg:w="1"/><text x="95.1822%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.9322%" y="581" width="0.0714%" height="15" fill="rgb(215,193,15)" fg:x="1330" fg:w="1"/><text x="95.1822%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="94.9322%" y="565" width="0.0714%" height="15" fill="rgb(232,15,44)" fg:x="1330" fg:w="1"/><text x="95.1822%" y="575.50"></text></g><g><title>hex::decode (5 samples, 0.36%)</title><rect x="95.0036%" y="965" width="0.3569%" height="15" fill="rgb(212,3,48)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex (5 samples, 0.36%)</title><rect x="95.0036%" y="949" width="0.3569%" height="15" fill="rgb(218,128,7)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.36%)</title><rect x="95.0036%" y="933" width="0.3569%" height="15" fill="rgb(226,216,39)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (5 samples, 0.36%)</title><rect x="95.0036%" y="917" width="0.3569%" height="15" fill="rgb(243,47,51)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="927.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.36%)</title><rect x="95.0036%" y="901" width="0.3569%" height="15" fill="rgb(241,183,40)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (5 samples, 0.36%)</title><rect x="95.0036%" y="885" width="0.3569%" height="15" fill="rgb(231,217,32)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.36%)</title><rect x="95.0036%" y="869" width="0.3569%" height="15" fill="rgb(229,61,38)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.36%)</title><rect x="95.0036%" y="853" width="0.3569%" height="15" fill="rgb(225,210,5)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.36%)</title><rect x="95.0036%" y="837" width="0.3569%" height="15" fill="rgb(231,79,45)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.36%)</title><rect x="95.0036%" y="821" width="0.3569%" height="15" fill="rgb(224,100,7)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.36%)</title><rect x="95.0036%" y="805" width="0.3569%" height="15" fill="rgb(241,198,18)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (5 samples, 0.36%)</title><rect x="95.0036%" y="789" width="0.3569%" height="15" fill="rgb(252,97,53)" fg:x="1331" fg:w="5"/><text x="95.2536%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.29%)</title><rect x="95.0749%" y="773" width="0.2855%" height="15" fill="rgb(220,88,7)" fg:x="1332" fg:w="4"/><text x="95.3249%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.29%)</title><rect x="95.0749%" y="757" width="0.2855%" height="15" fill="rgb(213,176,14)" fg:x="1332" fg:w="4"/><text x="95.3249%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.29%)</title><rect x="95.0749%" y="741" width="0.2855%" height="15" fill="rgb(246,73,7)" fg:x="1332" fg:w="4"/><text x="95.3249%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.29%)</title><rect x="95.0749%" y="725" width="0.2855%" height="15" fill="rgb(245,64,36)" fg:x="1332" fg:w="4"/><text x="95.3249%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.29%)</title><rect x="95.0749%" y="709" width="0.2855%" height="15" fill="rgb(245,80,10)" fg:x="1332" fg:w="4"/><text x="95.3249%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.29%)</title><rect x="95.0749%" y="693" width="0.2855%" height="15" fill="rgb(232,107,50)" fg:x="1332" fg:w="4"/><text x="95.3249%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (4 samples, 0.29%)</title><rect x="95.0749%" y="677" width="0.2855%" height="15" fill="rgb(253,3,0)" fg:x="1332" fg:w="4"/><text x="95.3249%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (2 samples, 0.14%)</title><rect x="95.2177%" y="661" width="0.1428%" height="15" fill="rgb(212,99,53)" fg:x="1334" fg:w="2"/><text x="95.4677%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as hex::FromHex&gt;::from_hex::{{closure}} (2 samples, 0.14%)</title><rect x="95.2177%" y="645" width="0.1428%" height="15" fill="rgb(249,111,54)" fg:x="1334" fg:w="2"/><text x="95.4677%" y="655.50"></text></g><g><title>hex::val (2 samples, 0.14%)</title><rect x="95.2177%" y="629" width="0.1428%" height="15" fill="rgb(249,55,30)" fg:x="1334" fg:w="2"/><text x="95.4677%" y="639.50"></text></g><g><title>lab4::checksum::Checksum::update (6 samples, 0.43%)</title><rect x="95.0036%" y="981" width="0.4283%" height="15" fill="rgb(237,47,42)" fg:x="1331" fg:w="6"/><text x="95.2536%" y="991.50"></text></g><g><title>hex::encode (1 samples, 0.07%)</title><rect x="95.3605%" y="965" width="0.0714%" height="15" fill="rgb(211,20,18)" fg:x="1336" fg:w="1"/><text x="95.6105%" y="975.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (1 samples, 0.07%)</title><rect x="95.3605%" y="949" width="0.0714%" height="15" fill="rgb(231,203,46)" fg:x="1336" fg:w="1"/><text x="95.6105%" y="959.50"></text></g><g><title>hex::encode_to_iter (1 samples, 0.07%)</title><rect x="95.3605%" y="933" width="0.0714%" height="15" fill="rgb(237,142,3)" fg:x="1336" fg:w="1"/><text x="95.6105%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="95.3605%" y="917" width="0.0714%" height="15" fill="rgb(241,107,1)" fg:x="1336" fg:w="1"/><text x="95.6105%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="95.3605%" y="901" width="0.0714%" height="15" fill="rgb(229,83,13)" fg:x="1336" fg:w="1"/><text x="95.6105%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (1 samples, 0.07%)</title><rect x="95.3605%" y="885" width="0.0714%" height="15" fill="rgb(241,91,40)" fg:x="1336" fg:w="1"/><text x="95.6105%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="95.3605%" y="869" width="0.0714%" height="15" fill="rgb(225,3,45)" fg:x="1336" fg:w="1"/><text x="95.6105%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="95.3605%" y="853" width="0.0714%" height="15" fill="rgb(244,223,14)" fg:x="1336" fg:w="1"/><text x="95.6105%" y="863.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="95.3605%" y="837" width="0.0714%" height="15" fill="rgb(224,124,37)" fg:x="1336" fg:w="1"/><text x="95.6105%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="95.3605%" y="821" width="0.0714%" height="15" fill="rgb(251,171,30)" fg:x="1336" fg:w="1"/><text x="95.6105%" y="831.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.07%)</title><rect x="95.3605%" y="805" width="0.0714%" height="15" fill="rgb(236,46,54)" fg:x="1336" fg:w="1"/><text x="95.6105%" y="815.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::Update&gt;::update (1 samples, 0.07%)</title><rect x="95.4318%" y="949" width="0.0714%" height="15" fill="rgb(245,213,5)" fg:x="1337" fg:w="1"/><text x="95.6818%" y="959.50"></text></g><g><title>sha2::sha256::Engine256::update (1 samples, 0.07%)</title><rect x="95.4318%" y="933" width="0.0714%" height="15" fill="rgb(230,144,27)" fg:x="1337" fg:w="1"/><text x="95.6818%" y="943.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::input_blocks (1 samples, 0.07%)</title><rect x="95.4318%" y="917" width="0.0714%" height="15" fill="rgb(220,86,6)" fg:x="1337" fg:w="1"/><text x="95.6818%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.07%)</title><rect x="95.4318%" y="901" width="0.0714%" height="15" fill="rgb(240,20,13)" fg:x="1337" fg:w="1"/><text x="95.6818%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="95.4318%" y="885" width="0.0714%" height="15" fill="rgb(217,89,34)" fg:x="1337" fg:w="1"/><text x="95.6818%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.07%)</title><rect x="95.4318%" y="869" width="0.0714%" height="15" fill="rgb(229,13,5)" fg:x="1337" fg:w="1"/><text x="95.6818%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be_bytes (1 samples, 0.07%)</title><rect x="95.5032%" y="901" width="0.0714%" height="15" fill="rgb(244,67,35)" fg:x="1338" fg:w="1"/><text x="95.7532%" y="911.50"></text></g><g><title>core::num::&lt;impl u32&gt;::to_be (1 samples, 0.07%)</title><rect x="95.5032%" y="885" width="0.0714%" height="15" fill="rgb(221,40,2)" fg:x="1338" fg:w="1"/><text x="95.7532%" y="895.50"></text></g><g><title>core::num::&lt;impl u32&gt;::swap_bytes (1 samples, 0.07%)</title><rect x="95.5032%" y="869" width="0.0714%" height="15" fill="rgb(237,157,21)" fg:x="1338" fg:w="1"/><text x="95.7532%" y="879.50"></text></g><g><title>sha2::sha256::soft::schedule (1 samples, 0.07%)</title><rect x="95.5746%" y="789" width="0.0714%" height="15" fill="rgb(222,94,11)" fg:x="1339" fg:w="1"/><text x="95.8246%" y="799.50"></text></g><g><title>sha2::sha256::soft::sha256msg2 (1 samples, 0.07%)</title><rect x="95.5746%" y="773" width="0.0714%" height="15" fill="rgb(249,113,6)" fg:x="1339" fg:w="1"/><text x="95.8246%" y="783.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="95.5746%" y="757" width="0.0714%" height="15" fill="rgb(238,137,36)" fg:x="1339" fg:w="1"/><text x="95.8246%" y="767.50"></text></g><g><title>&lt;D as digest::digest::Digest&gt;::digest (5 samples, 0.36%)</title><rect x="95.4318%" y="965" width="0.3569%" height="15" fill="rgb(210,102,26)" fg:x="1337" fg:w="5"/><text x="95.6818%" y="975.50"></text></g><g><title>digest::fixed::FixedOutput::finalize_fixed (4 samples, 0.29%)</title><rect x="95.5032%" y="949" width="0.2855%" height="15" fill="rgb(218,30,30)" fg:x="1338" fg:w="4"/><text x="95.7532%" y="959.50"></text></g><g><title>&lt;D as digest::fixed::FixedOutput&gt;::finalize_into (4 samples, 0.29%)</title><rect x="95.5032%" y="933" width="0.2855%" height="15" fill="rgb(214,67,26)" fg:x="1338" fg:w="4"/><text x="95.7532%" y="943.50"></text></g><g><title>&lt;sha2::sha256::Sha256 as digest::fixed::FixedOutputDirty&gt;::finalize_into_dirty (4 samples, 0.29%)</title><rect x="95.5032%" y="917" width="0.2855%" height="15" fill="rgb(251,9,53)" fg:x="1338" fg:w="4"/><text x="95.7532%" y="927.50"></text></g><g><title>sha2::sha256::Engine256::finish (3 samples, 0.21%)</title><rect x="95.5746%" y="901" width="0.2141%" height="15" fill="rgb(228,204,25)" fg:x="1339" fg:w="3"/><text x="95.8246%" y="911.50"></text></g><g><title>block_buffer::BlockBuffer&lt;BlockSize&gt;::len64_padding_be (3 samples, 0.21%)</title><rect x="95.5746%" y="885" width="0.2141%" height="15" fill="rgb(207,153,8)" fg:x="1339" fg:w="3"/><text x="95.8246%" y="895.50"></text></g><g><title>sha2::sha256::Engine256::finish::{{closure}} (3 samples, 0.21%)</title><rect x="95.5746%" y="869" width="0.2141%" height="15" fill="rgb(242,9,16)" fg:x="1339" fg:w="3"/><text x="95.8246%" y="879.50"></text></g><g><title>sha2::sha256::compress256 (3 samples, 0.21%)</title><rect x="95.5746%" y="853" width="0.2141%" height="15" fill="rgb(217,211,10)" fg:x="1339" fg:w="3"/><text x="95.8246%" y="863.50"></text></g><g><title>sha2::sha256::x86::compress (3 samples, 0.21%)</title><rect x="95.5746%" y="837" width="0.2141%" height="15" fill="rgb(219,228,52)" fg:x="1339" fg:w="3"/><text x="95.8246%" y="847.50"></text></g><g><title>sha2::sha256::soft::compress (3 samples, 0.21%)</title><rect x="95.5746%" y="821" width="0.2141%" height="15" fill="rgb(231,92,29)" fg:x="1339" fg:w="3"/><text x="95.8246%" y="831.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_block_u32 (3 samples, 0.21%)</title><rect x="95.5746%" y="805" width="0.2141%" height="15" fill="rgb(232,8,23)" fg:x="1339" fg:w="3"/><text x="95.8246%" y="815.50"></text></g><g><title>sha2::sha256::soft::sha256_digest_round_x2 (2 samples, 0.14%)</title><rect x="95.6460%" y="789" width="0.1428%" height="15" fill="rgb(216,211,34)" fg:x="1340" fg:w="2"/><text x="95.8960%" y="799.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.07%)</title><rect x="95.7173%" y="773" width="0.0714%" height="15" fill="rgb(236,151,0)" fg:x="1341" fg:w="1"/><text x="95.9673%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.07%)</title><rect x="95.8601%" y="773" width="0.0714%" height="15" fill="rgb(209,168,3)" fg:x="1343" fg:w="1"/><text x="96.1101%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.07%)</title><rect x="95.8601%" y="757" width="0.0714%" height="15" fill="rgb(208,129,28)" fg:x="1343" fg:w="1"/><text x="96.1101%" y="767.50"></text></g><g><title>lab4::checksum::Checksum::with_sha256 (8 samples, 0.57%)</title><rect x="95.4318%" y="981" width="0.5710%" height="15" fill="rgb(229,78,22)" fg:x="1337" fg:w="8"/><text x="95.6818%" y="991.50"></text></g><g><title>hex::encode (3 samples, 0.21%)</title><rect x="95.7887%" y="965" width="0.2141%" height="15" fill="rgb(228,187,13)" fg:x="1342" fg:w="3"/><text x="96.0387%" y="975.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (3 samples, 0.21%)</title><rect x="95.7887%" y="949" width="0.2141%" height="15" fill="rgb(240,119,24)" fg:x="1342" fg:w="3"/><text x="96.0387%" y="959.50"></text></g><g><title>hex::encode_to_iter (3 samples, 0.21%)</title><rect x="95.7887%" y="933" width="0.2141%" height="15" fill="rgb(209,194,42)" fg:x="1342" fg:w="3"/><text x="96.0387%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.21%)</title><rect x="95.7887%" y="917" width="0.2141%" height="15" fill="rgb(247,200,46)" fg:x="1342" fg:w="3"/><text x="96.0387%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="95.7887%" y="901" width="0.2141%" height="15" fill="rgb(218,76,16)" fg:x="1342" fg:w="3"/><text x="96.0387%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (3 samples, 0.21%)</title><rect x="95.7887%" y="885" width="0.2141%" height="15" fill="rgb(225,21,48)" fg:x="1342" fg:w="3"/><text x="96.0387%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.21%)</title><rect x="95.7887%" y="869" width="0.2141%" height="15" fill="rgb(239,223,50)" fg:x="1342" fg:w="3"/><text x="96.0387%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.21%)</title><rect x="95.7887%" y="853" width="0.2141%" height="15" fill="rgb(244,45,21)" fg:x="1342" fg:w="3"/><text x="96.0387%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.14%)</title><rect x="95.8601%" y="837" width="0.1428%" height="15" fill="rgb(232,33,43)" fg:x="1343" fg:w="2"/><text x="96.1101%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (2 samples, 0.14%)</title><rect x="95.8601%" y="821" width="0.1428%" height="15" fill="rgb(209,8,3)" fg:x="1343" fg:w="2"/><text x="96.1101%" y="831.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.14%)</title><rect x="95.8601%" y="805" width="0.1428%" height="15" fill="rgb(214,25,53)" fg:x="1343" fg:w="2"/><text x="96.1101%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.14%)</title><rect x="95.8601%" y="789" width="0.1428%" height="15" fill="rgb(254,186,54)" fg:x="1343" fg:w="2"/><text x="96.1101%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="95.9315%" y="773" width="0.0714%" height="15" fill="rgb(208,174,49)" fg:x="1344" fg:w="1"/><text x="96.1815%" y="783.50"></text></g><g><title>std::io::Write::write_fmt (14 samples, 1.00%)</title><rect x="96.0029%" y="981" width="0.9993%" height="15" fill="rgb(233,191,51)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="991.50"></text></g><g><title>core::fmt::write (14 samples, 1.00%)</title><rect x="96.0029%" y="965" width="0.9993%" height="15" fill="rgb(222,134,10)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="975.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (14 samples, 1.00%)</title><rect x="96.0029%" y="949" width="0.9993%" height="15" fill="rgb(230,226,20)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="959.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (14 samples, 1.00%)</title><rect x="96.0029%" y="933" width="0.9993%" height="15" fill="rgb(251,111,25)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="943.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (14 samples, 1.00%)</title><rect x="96.0029%" y="917" width="0.9993%" height="15" fill="rgb(224,40,46)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="927.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (14 samples, 1.00%)</title><rect x="96.0029%" y="901" width="0.9993%" height="15" fill="rgb(236,108,47)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="911.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (14 samples, 1.00%)</title><rect x="96.0029%" y="885" width="0.9993%" height="15" fill="rgb(234,93,0)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="895.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (14 samples, 1.00%)</title><rect x="96.0029%" y="869" width="0.9993%" height="15" fill="rgb(224,213,32)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="879.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (14 samples, 1.00%)</title><rect x="96.0029%" y="853" width="0.9993%" height="15" fill="rgb(251,11,48)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="863.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (14 samples, 1.00%)</title><rect x="96.0029%" y="837" width="0.9993%" height="15" fill="rgb(236,173,5)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="847.50"></text></g><g><title>__libc_write (14 samples, 1.00%)</title><rect x="96.0029%" y="821" width="0.9993%" height="15" fill="rgb(230,95,12)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="831.50"></text></g><g><title>__libc_write (14 samples, 1.00%)</title><rect x="96.0029%" y="805" width="0.9993%" height="15" fill="rgb(232,209,1)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="815.50"></text></g><g><title>[unknown] (14 samples, 1.00%)</title><rect x="96.0029%" y="789" width="0.9993%" height="15" fill="rgb(232,6,1)" fg:x="1345" fg:w="14"/><text x="96.2529%" y="799.50"></text></g><g><title>[unknown] (12 samples, 0.86%)</title><rect x="96.1456%" y="773" width="0.8565%" height="15" fill="rgb(210,224,50)" fg:x="1347" fg:w="12"/><text x="96.3956%" y="783.50"></text></g><g><title>[unknown] (12 samples, 0.86%)</title><rect x="96.1456%" y="757" width="0.8565%" height="15" fill="rgb(228,127,35)" fg:x="1347" fg:w="12"/><text x="96.3956%" y="767.50"></text></g><g><title>[unknown] (12 samples, 0.86%)</title><rect x="96.1456%" y="741" width="0.8565%" height="15" fill="rgb(245,102,45)" fg:x="1347" fg:w="12"/><text x="96.3956%" y="751.50"></text></g><g><title>[unknown] (12 samples, 0.86%)</title><rect x="96.1456%" y="725" width="0.8565%" height="15" fill="rgb(214,1,49)" fg:x="1347" fg:w="12"/><text x="96.3956%" y="735.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="96.2884%" y="709" width="0.7138%" height="15" fill="rgb(226,163,40)" fg:x="1349" fg:w="10"/><text x="96.5384%" y="719.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="96.2884%" y="693" width="0.7138%" height="15" fill="rgb(239,212,28)" fg:x="1349" fg:w="10"/><text x="96.5384%" y="703.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="96.2884%" y="677" width="0.7138%" height="15" fill="rgb(220,20,13)" fg:x="1349" fg:w="10"/><text x="96.5384%" y="687.50"></text></g><g><title>[unknown] (10 samples, 0.71%)</title><rect x="96.2884%" y="661" width="0.7138%" height="15" fill="rgb(210,164,35)" fg:x="1349" fg:w="10"/><text x="96.5384%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="96.5739%" y="645" width="0.4283%" height="15" fill="rgb(248,109,41)" fg:x="1353" fg:w="6"/><text x="96.8239%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="96.5739%" y="629" width="0.4283%" height="15" fill="rgb(238,23,50)" fg:x="1353" fg:w="6"/><text x="96.8239%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="96.6453%" y="613" width="0.3569%" height="15" fill="rgb(211,48,49)" fg:x="1354" fg:w="5"/><text x="96.8953%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="96.6453%" y="597" width="0.3569%" height="15" fill="rgb(223,36,21)" fg:x="1354" fg:w="5"/><text x="96.8953%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="96.7166%" y="581" width="0.2855%" height="15" fill="rgb(207,123,46)" fg:x="1355" fg:w="4"/><text x="96.9666%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="96.7166%" y="565" width="0.2855%" height="15" fill="rgb(240,218,32)" fg:x="1355" fg:w="4"/><text x="96.9666%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="96.7166%" y="549" width="0.2855%" height="15" fill="rgb(252,5,43)" fg:x="1355" fg:w="4"/><text x="96.9666%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.29%)</title><rect x="96.7166%" y="533" width="0.2855%" height="15" fill="rgb(252,84,19)" fg:x="1355" fg:w="4"/><text x="96.9666%" y="543.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="96.7880%" y="517" width="0.2141%" height="15" fill="rgb(243,152,39)" fg:x="1356" fg:w="3"/><text x="97.0380%" y="527.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="96.7880%" y="501" width="0.2141%" height="15" fill="rgb(234,160,15)" fg:x="1356" fg:w="3"/><text x="97.0380%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="96.8594%" y="485" width="0.1428%" height="15" fill="rgb(237,34,20)" fg:x="1357" fg:w="2"/><text x="97.1094%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="96.9308%" y="469" width="0.0714%" height="15" fill="rgb(229,97,13)" fg:x="1358" fg:w="1"/><text x="97.1808%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,293 samples, 92.29%)</title><rect x="5.9957%" y="1189" width="92.2912%" height="15" fill="rgb(234,71,50)" fg:x="84" fg:w="1293"/><text x="6.2457%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,293 samples, 92.29%)</title><rect x="5.9957%" y="1173" width="92.2912%" height="15" fill="rgb(253,155,4)" fg:x="84" fg:w="1293"/><text x="6.2457%" y="1183.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,293 samples, 92.29%)</title><rect x="5.9957%" y="1157" width="92.2912%" height="15" fill="rgb(222,185,37)" fg:x="84" fg:w="1293"/><text x="6.2457%" y="1167.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (1,293 samples, 92.29%)</title><rect x="5.9957%" y="1141" width="92.2912%" height="15" fill="rgb(251,177,13)" fg:x="84" fg:w="1293"/><text x="6.2457%" y="1151.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,293 samples, 92.29%)</title><rect x="5.9957%" y="1125" width="92.2912%" height="15" fill="rgb(250,179,40)" fg:x="84" fg:w="1293"/><text x="6.2457%" y="1135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,293 samples, 92.29%)</title><rect x="5.9957%" y="1109" width="92.2912%" height="15" fill="rgb(242,44,2)" fg:x="84" fg:w="1293"/><text x="6.2457%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,293 samples, 92.29%)</title><rect x="5.9957%" y="1093" width="92.2912%" height="15" fill="rgb(216,177,13)" fg:x="84" fg:w="1293"/><text x="6.2457%" y="1103.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,293 samples, 92.29%)</title><rect x="5.9957%" y="1077" width="92.2912%" height="15" fill="rgb(216,106,43)" fg:x="84" fg:w="1293"/><text x="6.2457%" y="1087.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (1,293 samples, 92.29%)</title><rect x="5.9957%" y="1061" width="92.2912%" height="15" fill="rgb(216,183,2)" fg:x="84" fg:w="1293"/><text x="6.2457%" y="1071.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,293 samples, 92.29%)</title><rect x="5.9957%" y="1045" width="92.2912%" height="15" fill="rgb(249,75,3)" fg:x="84" fg:w="1293"/><text x="6.2457%" y="1055.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>lab4::hackathon::{{closure}} (1,293 samples, 92.29%)</title><rect x="5.9957%" y="1029" width="92.2912%" height="15" fill="rgb(219,67,39)" fg:x="84" fg:w="1293"/><text x="6.2457%" y="1039.50">lab4::hackathon::{{closure}}</text></g><g><title>lab4::student::Student::run (516 samples, 36.83%)</title><rect x="61.4561%" y="1013" width="36.8308%" height="15" fill="rgb(253,228,2)" fg:x="861" fg:w="516"/><text x="61.7061%" y="1023.50">lab4::student::Student::run</text></g><g><title>lab4::student::Student::build_idea (52 samples, 3.71%)</title><rect x="94.5753%" y="997" width="3.7116%" height="15" fill="rgb(235,138,27)" fg:x="1325" fg:w="52"/><text x="94.8253%" y="1007.50">lab4..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 1.28%)</title><rect x="97.0021%" y="981" width="1.2848%" height="15" fill="rgb(236,97,51)" fg:x="1359" fg:w="18"/><text x="97.2521%" y="991.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock (18 samples, 1.28%)</title><rect x="97.0021%" y="965" width="1.2848%" height="15" fill="rgb(240,80,30)" fg:x="1359" fg:w="18"/><text x="97.2521%" y="975.50"></text></g><g><title>std::sys::unix::locks::futex_mutex::Mutex::lock_contended (18 samples, 1.28%)</title><rect x="97.0021%" y="949" width="1.2848%" height="15" fill="rgb(230,178,19)" fg:x="1359" fg:w="18"/><text x="97.2521%" y="959.50"></text></g><g><title>std::sys::unix::futex::futex_wait (18 samples, 1.28%)</title><rect x="97.0021%" y="933" width="1.2848%" height="15" fill="rgb(210,190,27)" fg:x="1359" fg:w="18"/><text x="97.2521%" y="943.50"></text></g><g><title>syscall (18 samples, 1.28%)</title><rect x="97.0021%" y="917" width="1.2848%" height="15" fill="rgb(222,107,31)" fg:x="1359" fg:w="18"/><text x="97.2521%" y="927.50"></text></g><g><title>[unknown] (18 samples, 1.28%)</title><rect x="97.0021%" y="901" width="1.2848%" height="15" fill="rgb(216,127,34)" fg:x="1359" fg:w="18"/><text x="97.2521%" y="911.50"></text></g><g><title>[unknown] (18 samples, 1.28%)</title><rect x="97.0021%" y="885" width="1.2848%" height="15" fill="rgb(234,116,52)" fg:x="1359" fg:w="18"/><text x="97.2521%" y="895.50"></text></g><g><title>[unknown] (18 samples, 1.28%)</title><rect x="97.0021%" y="869" width="1.2848%" height="15" fill="rgb(222,124,15)" fg:x="1359" fg:w="18"/><text x="97.2521%" y="879.50"></text></g><g><title>[unknown] (18 samples, 1.28%)</title><rect x="97.0021%" y="853" width="1.2848%" height="15" fill="rgb(231,179,28)" fg:x="1359" fg:w="18"/><text x="97.2521%" y="863.50"></text></g><g><title>[unknown] (18 samples, 1.28%)</title><rect x="97.0021%" y="837" width="1.2848%" height="15" fill="rgb(226,93,45)" fg:x="1359" fg:w="18"/><text x="97.2521%" y="847.50"></text></g><g><title>[unknown] (17 samples, 1.21%)</title><rect x="97.0735%" y="821" width="1.2134%" height="15" fill="rgb(215,8,51)" fg:x="1360" fg:w="17"/><text x="97.3235%" y="831.50"></text></g><g><title>[unknown] (16 samples, 1.14%)</title><rect x="97.1449%" y="805" width="1.1420%" height="15" fill="rgb(223,106,5)" fg:x="1361" fg:w="16"/><text x="97.3949%" y="815.50"></text></g><g><title>[unknown] (16 samples, 1.14%)</title><rect x="97.1449%" y="789" width="1.1420%" height="15" fill="rgb(250,191,5)" fg:x="1361" fg:w="16"/><text x="97.3949%" y="799.50"></text></g><g><title>[unknown] (16 samples, 1.14%)</title><rect x="97.1449%" y="773" width="1.1420%" height="15" fill="rgb(242,132,44)" fg:x="1361" fg:w="16"/><text x="97.3949%" y="783.50"></text></g><g><title>[unknown] (16 samples, 1.14%)</title><rect x="97.1449%" y="757" width="1.1420%" height="15" fill="rgb(251,152,29)" fg:x="1361" fg:w="16"/><text x="97.3949%" y="767.50"></text></g><g><title>[unknown] (15 samples, 1.07%)</title><rect x="97.2163%" y="741" width="1.0707%" height="15" fill="rgb(218,179,5)" fg:x="1362" fg:w="15"/><text x="97.4663%" y="751.50"></text></g><g><title>[unknown] (15 samples, 1.07%)</title><rect x="97.2163%" y="725" width="1.0707%" height="15" fill="rgb(227,67,19)" fg:x="1362" fg:w="15"/><text x="97.4663%" y="735.50"></text></g><g><title>[unknown] (15 samples, 1.07%)</title><rect x="97.2163%" y="709" width="1.0707%" height="15" fill="rgb(233,119,31)" fg:x="1362" fg:w="15"/><text x="97.4663%" y="719.50"></text></g><g><title>[unknown] (15 samples, 1.07%)</title><rect x="97.2163%" y="693" width="1.0707%" height="15" fill="rgb(241,120,22)" fg:x="1362" fg:w="15"/><text x="97.4663%" y="703.50"></text></g><g><title>__GI___clone (1,306 samples, 93.22%)</title><rect x="5.1392%" y="1237" width="93.2191%" height="15" fill="rgb(224,102,30)" fg:x="72" fg:w="1306"/><text x="5.3892%" y="1247.50">__GI___clone</text></g><g><title>start_thread (1,301 samples, 92.86%)</title><rect x="5.4961%" y="1221" width="92.8622%" height="15" fill="rgb(210,164,37)" fg:x="77" fg:w="1301"/><text x="5.7461%" y="1231.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,294 samples, 92.36%)</title><rect x="5.9957%" y="1205" width="92.3626%" height="15" fill="rgb(226,191,16)" fg:x="84" fg:w="1294"/><text x="6.2457%" y="1215.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.07%)</title><rect x="98.2869%" y="1189" width="0.0714%" height="15" fill="rgb(214,40,45)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1199.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.07%)</title><rect x="98.2869%" y="1173" width="0.0714%" height="15" fill="rgb(244,29,26)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.07%)</title><rect x="98.2869%" y="1157" width="0.0714%" height="15" fill="rgb(216,16,5)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1167.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.07%)</title><rect x="98.2869%" y="1141" width="0.0714%" height="15" fill="rgb(249,76,35)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1151.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.07%)</title><rect x="98.2869%" y="1125" width="0.0714%" height="15" fill="rgb(207,11,44)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.2869%" y="1109" width="0.0714%" height="15" fill="rgb(228,190,49)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.2869%" y="1093" width="0.0714%" height="15" fill="rgb(214,173,12)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.2869%" y="1077" width="0.0714%" height="15" fill="rgb(218,26,35)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.2869%" y="1061" width="0.0714%" height="15" fill="rgb(220,200,19)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.2869%" y="1045" width="0.0714%" height="15" fill="rgb(239,95,49)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.2869%" y="1029" width="0.0714%" height="15" fill="rgb(235,85,53)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.2869%" y="1013" width="0.0714%" height="15" fill="rgb(233,133,31)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.2869%" y="997" width="0.0714%" height="15" fill="rgb(218,25,20)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.2869%" y="981" width="0.0714%" height="15" fill="rgb(252,210,38)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="98.2869%" y="965" width="0.0714%" height="15" fill="rgb(242,134,21)" fg:x="1377" fg:w="1"/><text x="98.5369%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.79%)</title><rect x="98.4297%" y="1093" width="0.7852%" height="15" fill="rgb(213,28,48)" fg:x="1379" fg:w="11"/><text x="98.6797%" y="1103.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (11 samples, 0.79%)</title><rect x="98.4297%" y="1077" width="0.7852%" height="15" fill="rgb(250,196,2)" fg:x="1379" fg:w="11"/><text x="98.6797%" y="1087.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (11 samples, 0.79%)</title><rect x="98.4297%" y="1061" width="0.7852%" height="15" fill="rgb(227,5,17)" fg:x="1379" fg:w="11"/><text x="98.6797%" y="1071.50"></text></g><g><title>lab4::package::PackageDownloader::run (16 samples, 1.14%)</title><rect x="98.3583%" y="1237" width="1.1420%" height="15" fill="rgb(221,226,24)" fg:x="1378" fg:w="16"/><text x="98.6083%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (15 samples, 1.07%)</title><rect x="98.4297%" y="1221" width="1.0707%" height="15" fill="rgb(211,5,48)" fg:x="1379" fg:w="15"/><text x="98.6797%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::cycle::Cycle&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::advance_by (15 samples, 1.07%)</title><rect x="98.4297%" y="1205" width="1.0707%" height="15" fill="rgb(219,150,6)" fg:x="1379" fg:w="15"/><text x="98.6797%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (15 samples, 1.07%)</title><rect x="98.4297%" y="1189" width="1.0707%" height="15" fill="rgb(251,46,16)" fg:x="1379" fg:w="15"/><text x="98.6797%" y="1199.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.07%)</title><rect x="98.4297%" y="1173" width="1.0707%" height="15" fill="rgb(220,204,40)" fg:x="1379" fg:w="15"/><text x="98.6797%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.07%)</title><rect x="98.4297%" y="1157" width="1.0707%" height="15" fill="rgb(211,85,2)" fg:x="1379" fg:w="15"/><text x="98.6797%" y="1167.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 1.07%)</title><rect x="98.4297%" y="1141" width="1.0707%" height="15" fill="rgb(229,17,7)" fg:x="1379" fg:w="15"/><text x="98.6797%" y="1151.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (15 samples, 1.07%)</title><rect x="98.4297%" y="1125" width="1.0707%" height="15" fill="rgb(239,72,28)" fg:x="1379" fg:w="15"/><text x="98.6797%" y="1135.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (15 samples, 1.07%)</title><rect x="98.4297%" y="1109" width="1.0707%" height="15" fill="rgb(230,47,54)" fg:x="1379" fg:w="15"/><text x="98.6797%" y="1119.50"></text></g><g><title>core::slice::memchr::memchr (4 samples, 0.29%)</title><rect x="99.2148%" y="1093" width="0.2855%" height="15" fill="rgb(214,50,8)" fg:x="1390" fg:w="4"/><text x="99.4648%" y="1103.50"></text></g><g><title>lab4 (1,395 samples, 99.57%)</title><rect x="0.0000%" y="1253" width="99.5717%" height="15" fill="rgb(216,198,43)" fg:x="0" fg:w="1395"/><text x="0.2500%" y="1263.50">lab4</text></g><g><title>lab4::student::Student::run (1 samples, 0.07%)</title><rect x="99.5004%" y="1237" width="0.0714%" height="15" fill="rgb(234,20,35)" fg:x="1394" fg:w="1"/><text x="99.7504%" y="1247.50"></text></g><g><title>all (1,401 samples, 100%)</title><rect x="0.0000%" y="1269" width="100.0000%" height="15" fill="rgb(254,45,19)" fg:x="0" fg:w="1401"/><text x="0.2500%" y="1279.50"></text></g><g><title>perf-exec (6 samples, 0.43%)</title><rect x="99.5717%" y="1253" width="0.4283%" height="15" fill="rgb(219,14,44)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1263.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="99.5717%" y="1237" width="0.4283%" height="15" fill="rgb(217,220,26)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1247.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="99.5717%" y="1221" width="0.4283%" height="15" fill="rgb(213,158,28)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1231.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="99.5717%" y="1205" width="0.4283%" height="15" fill="rgb(252,51,52)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1215.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="99.5717%" y="1189" width="0.4283%" height="15" fill="rgb(246,89,16)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1199.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="99.5717%" y="1173" width="0.4283%" height="15" fill="rgb(216,158,49)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1183.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="99.5717%" y="1157" width="0.4283%" height="15" fill="rgb(236,107,19)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1167.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="99.5717%" y="1141" width="0.4283%" height="15" fill="rgb(228,185,30)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1151.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="99.5717%" y="1125" width="0.4283%" height="15" fill="rgb(246,134,8)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1135.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="99.5717%" y="1109" width="0.4283%" height="15" fill="rgb(214,143,50)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1119.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="99.5717%" y="1093" width="0.4283%" height="15" fill="rgb(228,75,8)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1103.50"></text></g><g><title>[unknown] (6 samples, 0.43%)</title><rect x="99.5717%" y="1077" width="0.4283%" height="15" fill="rgb(207,175,4)" fg:x="1395" fg:w="6"/><text x="99.8217%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="99.6431%" y="1061" width="0.3569%" height="15" fill="rgb(205,108,24)" fg:x="1396" fg:w="5"/><text x="99.8931%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="99.6431%" y="1045" width="0.3569%" height="15" fill="rgb(244,120,49)" fg:x="1396" fg:w="5"/><text x="99.8931%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.36%)</title><rect x="99.6431%" y="1029" width="0.3569%" height="15" fill="rgb(223,47,38)" fg:x="1396" fg:w="5"/><text x="99.8931%" y="1039.50"></text></g></svg></svg>